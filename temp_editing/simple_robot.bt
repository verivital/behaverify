variables {
	variable {
		battery_reading
		VAR
		[0, 10]
	} end_variable
	variable {
		battery_threshold
		FROZENVAR
		[0, 10]
	} end_variable
} end_variables

local_variables {} end_local_variables

environment_variables {
	variable {
		battery
		VAR
		[0, 10]
	} end_variable
	variable {
		reading_successful
		VAR
		BOOLEAN
	} end_variable
} end_environment_variables

environment {
	initial_values {} end_initial_values
	update_values {
			variable_statement {
				battery
				result { (subtraction, battery, 2), (subtraction, battery, 1) } end_result
			} end_variable_statement
			variable_statement {
				reading_successful
				result { True, False } end_result
			} end_variable_statement
	} end_update_values
} end_environment

checks {
	check {
		safe_battery
		condition { (greater_than_or_equal, battery_reading, battery_threshold) } end_condition
	} end_check
} end_checks

actions {
	action {
		read_battery
		init {
			variable_statement {
				battery_reading
				result { 10 } end_result
			} end_variable_statement
		} end_init
		update {
			variable_statement {
				battery_reading
				case { reading_successful } end_case
				result { battery } end_result
				result { battery_reading } end_result
			} end_variable_statement
			return_statement {
				case { reading_successful } end_case
				result { success True failure False running False } end_result
				result { success False failure True running False } end_result
			} end_return_statement
		} end_update
	} end_action
	action {
		execute
		init {} end_init
		update {
			return_statement { result { success True failure False running False } end_result } end_return_statement
		} end_update
	} end_action
} end_actions

root_node composite {
	robot sequence memory False
	children {
		read_battery
		safe_battery
		execute
	} end_children
} end_composite