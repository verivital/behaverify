configuration {
    #{ Here you specify various configuration options, such as Hypersafety }#
}
enumerations {
    #{ here you specify the enumerations used in the model}#
}
constants {
    'x_min' := 0, 'y_min' := 0, 'x_max' := 10, 'y_max' := 10, 'tree_count' := 2, 'vision_range' := 4, 'tree_range' := 2, 'y_change' := 2, 'movement_cooldown' := 10
} end_constants

variables {
    variable {bl prev_dest_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl prev_dest_y VAR ['y_min', 'y_max'] assign {result {(addition, 'y_min', 1)}}}
    variable {bl cur_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl cur_y VAR ['y_min', 'y_max'] assign {result {'y_min'}}}
    variable {bl dest_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl dest_y VAR ['y_min', 'y_max'] assign {result {'y_min'}}}
    variable {bl dir VAR {-1, 1} assign {result {1}}}
    variable {bl victory VAR BOOLEAN assign {result {False}}}
    #{variable {env tree_locs array 'tree_count' FROZENVAR [0, 960] range assign {result{range, 0, 960, True}}}}#
    #{variable {env tree_x array 'tree_count' FROZENVAR ['x_min', 'x_max'] range assign {result{range, 'x_min', 'x_max', True}}}
    variable {env tree_y array 'tree_count' FROZENVAR ['y_min', 'y_max'] range assign {result{range, 'y_min', 'y_max', True}}}}#
    variable {env tree_x array 'tree_count' DEFINE INT per_index assign {result{2}} assign {result{5}}}
    variable {env tree_y array 'tree_count' DEFINE INT per_index assign {result{2}} assign {result{5}}}
    variable {env tar_x VAR ['x_min', 'x_max'] assign {result {range, 'x_min', 'x_max', True}}}
    variable {env tar_y VAR ['y_min', 'y_max'] assign {result {range, 'y_min', 'y_max', True}}}
    variable {env timer VAR [0, 'movement_cooldown'] assign {result{'movement_cooldown'}}}
    #{START OF X_NET}#
    variable {bl x_net_weight_from_0_0 array 10 DEFINE INT per_index assign{result{82}}assign{result{93}}assign{result{125}}assign{result{23}}assign{result{-69}}assign{result{-1}}assign{result{41}}assign{result{87}}assign{result{-8}}assign{result{67}}}
variable {bl x_net_weight_from_0_1 array 10 DEFINE INT per_index assign{result{3}}assign{result{39}}assign{result{25}}assign{result{-31}}assign{result{-31}}assign{result{88}}assign{result{98}}assign{result{-88}}assign{result{-49}}assign{result{-67}}}
variable {bl x_net_bias_from_0 array 10 DEFINE INT per_index assign{result{-84}}assign{result{-46}}assign{result{-65}}assign{result{151}}assign{result{0}}assign{result{126}}assign{result{154}}assign{result{0}}assign{result{0}}assign{result{-1}}}
variable {bl x_net_weight_from_1_0 array 10 DEFINE INT per_index assign{result{87}}assign{result{82}}assign{result{-3}}assign{result{13}}assign{result{49}}assign{result{-411}}assign{result{20}}assign{result{-29}}assign{result{48}}assign{result{-29}}}
variable {bl x_net_weight_from_1_1 array 10 DEFINE INT per_index assign{result{36}}assign{result{40}}assign{result{-33}}assign{result{67}}assign{result{-16}}assign{result{-141}}assign{result{-29}}assign{result{36}}assign{result{-51}}assign{result{1}}}
variable {bl x_net_weight_from_1_2 array 10 DEFINE INT per_index assign{result{83}}assign{result{55}}assign{result{18}}assign{result{72}}assign{result{38}}assign{result{-305}}assign{result{-17}}assign{result{40}}assign{result{-43}}assign{result{-141}}}
variable {bl x_net_weight_from_1_3 array 10 DEFINE INT per_index assign{result{-58}}assign{result{141}}assign{result{127}}assign{result{-149}}assign{result{-114}}assign{result{-119}}assign{result{18}}assign{result{82}}assign{result{-22}}assign{result{-35}}}
variable {bl x_net_weight_from_1_4 array 10 DEFINE INT per_index assign{result{7}}assign{result{45}}assign{result{-41}}assign{result{1}}assign{result{3}}assign{result{44}}assign{result{19}}assign{result{-30}}assign{result{-39}}assign{result{23}}}
variable {bl x_net_weight_from_1_5 array 10 DEFINE INT per_index assign{result{-28}}assign{result{-73}}assign{result{72}}assign{result{-28}}assign{result{21}}assign{result{89}}assign{result{-33}}assign{result{89}}assign{result{-29}}assign{result{13}}}
variable {bl x_net_weight_from_1_6 array 10 DEFINE INT per_index assign{result{0}}assign{result{3}}assign{result{70}}assign{result{63}}assign{result{4}}assign{result{103}}assign{result{-19}}assign{result{45}}assign{result{-3}}assign{result{58}}}
variable {bl x_net_weight_from_1_7 array 10 DEFINE INT per_index assign{result{-43}}assign{result{-78}}assign{result{-68}}assign{result{18}}assign{result{49}}assign{result{-199}}assign{result{23}}assign{result{88}}assign{result{27}}assign{result{-84}}}
variable {bl x_net_weight_from_1_8 array 10 DEFINE INT per_index assign{result{-35}}assign{result{54}}assign{result{7}}assign{result{0}}assign{result{10}}assign{result{40}}assign{result{-39}}assign{result{3}}assign{result{49}}assign{result{-36}}}
variable {bl x_net_weight_from_1_9 array 10 DEFINE INT per_index assign{result{34}}assign{result{-20}}assign{result{-64}}assign{result{53}}assign{result{10}}assign{result{-126}}assign{result{3}}assign{result{103}}assign{result{10}}assign{result{-62}}}
variable {bl x_net_bias_from_1 array 10 DEFINE INT per_index assign{result{-81}}assign{result{-47}}assign{result{123}}assign{result{-99}}assign{result{-158}}assign{result{-10}}assign{result{-3}}assign{result{174}}assign{result{-1}}assign{result{-30}}}
variable {bl x_net_weight_from_2_0 array 10 DEFINE INT per_index assign{result{104}}assign{result{-48}}assign{result{81}}assign{result{88}}assign{result{33}}assign{result{-50}}assign{result{-135}}assign{result{43}}assign{result{-7}}assign{result{-53}}}
variable {bl x_net_weight_from_2_1 array 10 DEFINE INT per_index assign{result{70}}assign{result{-18}}assign{result{-46}}assign{result{97}}assign{result{-29}}assign{result{-24}}assign{result{-17}}assign{result{-29}}assign{result{69}}assign{result{-73}}}
variable {bl x_net_weight_from_2_2 array 10 DEFINE INT per_index assign{result{-19}}assign{result{-25}}assign{result{-15}}assign{result{9}}assign{result{14}}assign{result{15}}assign{result{-22}}assign{result{-93}}assign{result{-81}}assign{result{70}}}
variable {bl x_net_weight_from_2_3 array 10 DEFINE INT per_index assign{result{72}}assign{result{-54}}assign{result{68}}assign{result{-29}}assign{result{-45}}assign{result{-21}}assign{result{-60}}assign{result{62}}assign{result{-33}}assign{result{7}}}
variable {bl x_net_weight_from_2_4 array 10 DEFINE INT per_index assign{result{31}}assign{result{3}}assign{result{23}}assign{result{-134}}assign{result{-35}}assign{result{-64}}assign{result{105}}assign{result{117}}assign{result{3}}assign{result{-105}}}
variable {bl x_net_weight_from_2_5 array 10 DEFINE INT per_index assign{result{-296}}assign{result{45}}assign{result{-233}}assign{result{213}}assign{result{6}}assign{result{-218}}assign{result{96}}assign{result{-53}}assign{result{-51}}assign{result{419}}}
variable {bl x_net_weight_from_2_6 array 10 DEFINE INT per_index assign{result{-33}}assign{result{-38}}assign{result{-1}}assign{result{-38}}assign{result{1}}assign{result{12}}assign{result{16}}assign{result{-20}}assign{result{-36}}assign{result{-26}}}
variable {bl x_net_weight_from_2_7 array 10 DEFINE INT per_index assign{result{17}}assign{result{-16}}assign{result{75}}assign{result{26}}assign{result{-27}}assign{result{72}}assign{result{27}}assign{result{-15}}assign{result{53}}assign{result{71}}}
variable {bl x_net_weight_from_2_8 array 10 DEFINE INT per_index assign{result{46}}assign{result{-31}}assign{result{-37}}assign{result{53}}assign{result{45}}assign{result{-38}}assign{result{-52}}assign{result{-32}}assign{result{21}}assign{result{0}}}
variable {bl x_net_weight_from_2_9 array 10 DEFINE INT per_index assign{result{-19}}assign{result{22}}assign{result{8}}assign{result{-51}}assign{result{31}}assign{result{-12}}assign{result{199}}assign{result{-44}}assign{result{19}}assign{result{171}}}
variable {bl x_net_bias_from_2 array 10 DEFINE INT per_index assign{result{-74}}assign{result{-4}}assign{result{-51}}assign{result{82}}assign{result{-16}}assign{result{159}}assign{result{19}}assign{result{-117}}assign{result{64}}assign{result{184}}}
variable {bl x_net_weight_from_3_0 array 10 DEFINE INT per_index assign{result{59}}assign{result{-31}}assign{result{-47}}assign{result{-92}}assign{result{44}}assign{result{-38}}assign{result{26}}assign{result{3}}assign{result{90}}assign{result{-66}}}
variable {bl x_net_weight_from_3_1 array 10 DEFINE INT per_index assign{result{-5}}assign{result{-7}}assign{result{-29}}assign{result{0}}assign{result{-7}}assign{result{53}}assign{result{47}}assign{result{-5}}assign{result{-54}}assign{result{41}}}
variable {bl x_net_weight_from_3_2 array 10 DEFINE INT per_index assign{result{22}}assign{result{-5}}assign{result{-9}}assign{result{-66}}assign{result{-40}}assign{result{64}}assign{result{-8}}assign{result{41}}assign{result{44}}assign{result{35}}}
variable {bl x_net_weight_from_3_3 array 10 DEFINE INT per_index assign{result{21}}assign{result{11}}assign{result{-48}}assign{result{69}}assign{result{-48}}assign{result{-12}}assign{result{-35}}assign{result{-69}}assign{result{94}}assign{result{16}}}
variable {bl x_net_weight_from_3_4 array 10 DEFINE INT per_index assign{result{30}}assign{result{-4}}assign{result{-32}}assign{result{-19}}assign{result{-6}}assign{result{39}}assign{result{22}}assign{result{18}}assign{result{-2}}assign{result{41}}}
variable {bl x_net_weight_from_3_5 array 10 DEFINE INT per_index assign{result{37}}assign{result{-11}}assign{result{11}}assign{result{83}}assign{result{-45}}assign{result{27}}assign{result{-31}}assign{result{79}}assign{result{-86}}assign{result{191}}}
variable {bl x_net_weight_from_3_6 array 10 DEFINE INT per_index assign{result{-95}}assign{result{14}}assign{result{-16}}assign{result{58}}assign{result{-37}}assign{result{119}}assign{result{-45}}assign{result{35}}assign{result{23}}assign{result{-192}}}
variable {bl x_net_weight_from_3_7 array 10 DEFINE INT per_index assign{result{65}}assign{result{39}}assign{result{-26}}assign{result{72}}assign{result{25}}assign{result{-200}}assign{result{-49}}assign{result{35}}assign{result{17}}assign{result{-165}}}
variable {bl x_net_weight_from_3_8 array 10 DEFINE INT per_index assign{result{71}}assign{result{-40}}assign{result{10}}assign{result{-110}}assign{result{13}}assign{result{136}}assign{result{4}}assign{result{203}}assign{result{-47}}assign{result{74}}}
variable {bl x_net_weight_from_3_9 array 10 DEFINE INT per_index assign{result{-6}}assign{result{-28}}assign{result{-40}}assign{result{130}}assign{result{-21}}assign{result{92}}assign{result{-33}}assign{result{14}}assign{result{-72}}assign{result{123}}}
variable {bl x_net_bias_from_3 array 10 DEFINE INT per_index assign{result{27}}assign{result{-1}}assign{result{0}}assign{result{151}}assign{result{-1}}assign{result{-23}}assign{result{0}}assign{result{6}}assign{result{7}}assign{result{118}}}
variable {bl x_net_weight_from_4_0 array 11 DEFINE INT per_index assign{result{-74}}assign{result{-181}}assign{result{13}}assign{result{4}}assign{result{-33}}assign{result{-28}}assign{result{-14}}assign{result{-32}}assign{result{-26}}assign{result{57}}assign{result{21}}}
variable {bl x_net_weight_from_4_1 array 11 DEFINE INT per_index assign{result{-13}}assign{result{51}}assign{result{48}}assign{result{18}}assign{result{46}}assign{result{46}}assign{result{-13}}assign{result{-15}}assign{result{50}}assign{result{20}}assign{result{41}}}
variable {bl x_net_weight_from_4_2 array 11 DEFINE INT per_index assign{result{-28}}assign{result{24}}assign{result{1}}assign{result{-10}}assign{result{-29}}assign{result{32}}assign{result{12}}assign{result{51}}assign{result{16}}assign{result{-19}}assign{result{-49}}}
variable {bl x_net_weight_from_4_3 array 11 DEFINE INT per_index assign{result{70}}assign{result{-8}}assign{result{-84}}assign{result{-76}}assign{result{-273}}assign{result{-806}}assign{result{-398}}assign{result{-263}}assign{result{-174}}assign{result{-154}}assign{result{122}}}
variable {bl x_net_weight_from_4_4 array 11 DEFINE INT per_index assign{result{-55}}assign{result{-57}}assign{result{16}}assign{result{-16}}assign{result{-32}}assign{result{-53}}assign{result{39}}assign{result{10}}assign{result{-51}}assign{result{-50}}assign{result{-49}}}
variable {bl x_net_weight_from_4_5 array 11 DEFINE INT per_index assign{result{-88}}assign{result{-19}}assign{result{-22}}assign{result{41}}assign{result{0}}assign{result{14}}assign{result{26}}assign{result{-34}}assign{result{21}}assign{result{7}}assign{result{-205}}}
variable {bl x_net_weight_from_4_6 array 11 DEFINE INT per_index assign{result{-41}}assign{result{2}}assign{result{-10}}assign{result{-45}}assign{result{27}}assign{result{-31}}assign{result{-5}}assign{result{22}}assign{result{-43}}assign{result{-16}}assign{result{-24}}}
variable {bl x_net_weight_from_4_7 array 11 DEFINE INT per_index assign{result{-93}}assign{result{88}}assign{result{77}}assign{result{46}}assign{result{8}}assign{result{24}}assign{result{23}}assign{result{43}}assign{result{44}}assign{result{6}}assign{result{39}}}
variable {bl x_net_weight_from_4_8 array 11 DEFINE INT per_index assign{result{90}}assign{result{-251}}assign{result{-589}}assign{result{-148}}assign{result{-114}}assign{result{-60}}assign{result{5}}assign{result{37}}assign{result{34}}assign{result{-6}}assign{result{14}}}
variable {bl x_net_weight_from_4_9 array 11 DEFINE INT per_index assign{result{-10}}assign{result{31}}assign{result{48}}assign{result{8}}assign{result{95}}assign{result{41}}assign{result{-67}}assign{result{-75}}assign{result{-189}}assign{result{-625}}assign{result{12}}}
variable {bl x_net_bias_from_4 array 11 DEFINE INT per_index assign{result{-15}}assign{result{-39}}assign{result{-17}}assign{result{24}}assign{result{42}}assign{result{6}}assign{result{-33}}assign{result{-23}}assign{result{7}}assign{result{-8}}assign{result{23}}}
variable {bl x_net_node_0_0 DEFINE INT assign{result{dest_x}}}
variable {bl x_net_node_0_1 DEFINE INT assign{result{prev_dest_x}}}
variable {bl x_net_node_1_0 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 0)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 0)),(index, x_net_bias_from_0, 0)), 0)}}}
variable {bl x_net_node_1_1 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 1)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 1)),(index, x_net_bias_from_0, 1)), 0)}}}
variable {bl x_net_node_1_2 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 2)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 2)),(index, x_net_bias_from_0, 2)), 0)}}}
variable {bl x_net_node_1_3 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 3)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 3)),(index, x_net_bias_from_0, 3)), 0)}}}
variable {bl x_net_node_1_4 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 4)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 4)),(index, x_net_bias_from_0, 4)), 0)}}}
variable {bl x_net_node_1_5 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 5)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 5)),(index, x_net_bias_from_0, 5)), 0)}}}
variable {bl x_net_node_1_6 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 6)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 6)),(index, x_net_bias_from_0, 6)), 0)}}}
variable {bl x_net_node_1_7 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 7)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 7)),(index, x_net_bias_from_0, 7)), 0)}}}
variable {bl x_net_node_1_8 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 8)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 8)),(index, x_net_bias_from_0, 8)), 0)}}}
variable {bl x_net_node_1_9 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_0_0, (index, x_net_weight_from_0_0, 9)),(multiplication, x_net_node_0_1, (index, x_net_weight_from_0_1, 9)),(index, x_net_bias_from_0, 9)), 0)}}}
variable {bl x_net_node_2_0 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 0)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 0)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 0)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 0)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 0)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 0)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 0)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 0)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 0)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 0)),(index, x_net_bias_from_1, 0)), 0)}}}
variable {bl x_net_node_2_1 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 1)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 1)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 1)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 1)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 1)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 1)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 1)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 1)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 1)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 1)),(index, x_net_bias_from_1, 1)), 0)}}}
variable {bl x_net_node_2_2 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 2)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 2)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 2)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 2)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 2)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 2)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 2)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 2)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 2)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 2)),(index, x_net_bias_from_1, 2)), 0)}}}
variable {bl x_net_node_2_3 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 3)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 3)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 3)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 3)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 3)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 3)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 3)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 3)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 3)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 3)),(index, x_net_bias_from_1, 3)), 0)}}}
variable {bl x_net_node_2_4 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 4)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 4)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 4)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 4)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 4)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 4)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 4)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 4)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 4)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 4)),(index, x_net_bias_from_1, 4)), 0)}}}
variable {bl x_net_node_2_5 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 5)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 5)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 5)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 5)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 5)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 5)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 5)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 5)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 5)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 5)),(index, x_net_bias_from_1, 5)), 0)}}}
variable {bl x_net_node_2_6 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 6)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 6)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 6)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 6)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 6)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 6)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 6)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 6)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 6)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 6)),(index, x_net_bias_from_1, 6)), 0)}}}
variable {bl x_net_node_2_7 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 7)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 7)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 7)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 7)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 7)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 7)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 7)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 7)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 7)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 7)),(index, x_net_bias_from_1, 7)), 0)}}}
variable {bl x_net_node_2_8 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 8)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 8)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 8)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 8)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 8)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 8)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 8)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 8)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 8)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 8)),(index, x_net_bias_from_1, 8)), 0)}}}
variable {bl x_net_node_2_9 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_1_0, (index, x_net_weight_from_1_0, 9)),(multiplication, x_net_node_1_1, (index, x_net_weight_from_1_1, 9)),(multiplication, x_net_node_1_2, (index, x_net_weight_from_1_2, 9)),(multiplication, x_net_node_1_3, (index, x_net_weight_from_1_3, 9)),(multiplication, x_net_node_1_4, (index, x_net_weight_from_1_4, 9)),(multiplication, x_net_node_1_5, (index, x_net_weight_from_1_5, 9)),(multiplication, x_net_node_1_6, (index, x_net_weight_from_1_6, 9)),(multiplication, x_net_node_1_7, (index, x_net_weight_from_1_7, 9)),(multiplication, x_net_node_1_8, (index, x_net_weight_from_1_8, 9)),(multiplication, x_net_node_1_9, (index, x_net_weight_from_1_9, 9)),(index, x_net_bias_from_1, 9)), 0)}}}
variable {bl x_net_node_3_0 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 0)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 0)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 0)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 0)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 0)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 0)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 0)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 0)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 0)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 0)),(index, x_net_bias_from_2, 0)), 0)}}}
variable {bl x_net_node_3_1 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 1)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 1)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 1)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 1)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 1)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 1)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 1)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 1)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 1)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 1)),(index, x_net_bias_from_2, 1)), 0)}}}
variable {bl x_net_node_3_2 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 2)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 2)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 2)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 2)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 2)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 2)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 2)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 2)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 2)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 2)),(index, x_net_bias_from_2, 2)), 0)}}}
variable {bl x_net_node_3_3 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 3)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 3)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 3)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 3)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 3)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 3)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 3)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 3)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 3)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 3)),(index, x_net_bias_from_2, 3)), 0)}}}
variable {bl x_net_node_3_4 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 4)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 4)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 4)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 4)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 4)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 4)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 4)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 4)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 4)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 4)),(index, x_net_bias_from_2, 4)), 0)}}}
variable {bl x_net_node_3_5 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 5)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 5)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 5)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 5)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 5)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 5)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 5)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 5)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 5)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 5)),(index, x_net_bias_from_2, 5)), 0)}}}
variable {bl x_net_node_3_6 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 6)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 6)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 6)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 6)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 6)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 6)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 6)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 6)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 6)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 6)),(index, x_net_bias_from_2, 6)), 0)}}}
variable {bl x_net_node_3_7 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 7)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 7)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 7)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 7)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 7)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 7)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 7)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 7)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 7)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 7)),(index, x_net_bias_from_2, 7)), 0)}}}
variable {bl x_net_node_3_8 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 8)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 8)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 8)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 8)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 8)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 8)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 8)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 8)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 8)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 8)),(index, x_net_bias_from_2, 8)), 0)}}}
variable {bl x_net_node_3_9 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_2_0, (index, x_net_weight_from_2_0, 9)),(multiplication, x_net_node_2_1, (index, x_net_weight_from_2_1, 9)),(multiplication, x_net_node_2_2, (index, x_net_weight_from_2_2, 9)),(multiplication, x_net_node_2_3, (index, x_net_weight_from_2_3, 9)),(multiplication, x_net_node_2_4, (index, x_net_weight_from_2_4, 9)),(multiplication, x_net_node_2_5, (index, x_net_weight_from_2_5, 9)),(multiplication, x_net_node_2_6, (index, x_net_weight_from_2_6, 9)),(multiplication, x_net_node_2_7, (index, x_net_weight_from_2_7, 9)),(multiplication, x_net_node_2_8, (index, x_net_weight_from_2_8, 9)),(multiplication, x_net_node_2_9, (index, x_net_weight_from_2_9, 9)),(index, x_net_bias_from_2, 9)), 0)}}}
variable {bl x_net_node_4_0 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 0)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 0)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 0)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 0)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 0)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 0)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 0)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 0)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 0)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 0)),(index, x_net_bias_from_3, 0)), 0)}}}
variable {bl x_net_node_4_1 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 1)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 1)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 1)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 1)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 1)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 1)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 1)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 1)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 1)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 1)),(index, x_net_bias_from_3, 1)), 0)}}}
variable {bl x_net_node_4_2 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 2)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 2)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 2)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 2)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 2)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 2)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 2)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 2)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 2)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 2)),(index, x_net_bias_from_3, 2)), 0)}}}
variable {bl x_net_node_4_3 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 3)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 3)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 3)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 3)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 3)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 3)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 3)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 3)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 3)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 3)),(index, x_net_bias_from_3, 3)), 0)}}}
variable {bl x_net_node_4_4 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 4)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 4)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 4)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 4)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 4)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 4)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 4)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 4)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 4)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 4)),(index, x_net_bias_from_3, 4)), 0)}}}
variable {bl x_net_node_4_5 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 5)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 5)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 5)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 5)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 5)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 5)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 5)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 5)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 5)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 5)),(index, x_net_bias_from_3, 5)), 0)}}}
variable {bl x_net_node_4_6 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 6)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 6)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 6)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 6)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 6)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 6)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 6)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 6)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 6)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 6)),(index, x_net_bias_from_3, 6)), 0)}}}
variable {bl x_net_node_4_7 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 7)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 7)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 7)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 7)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 7)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 7)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 7)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 7)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 7)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 7)),(index, x_net_bias_from_3, 7)), 0)}}}
variable {bl x_net_node_4_8 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 8)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 8)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 8)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 8)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 8)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 8)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 8)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 8)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 8)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 8)),(index, x_net_bias_from_3, 8)), 0)}}}
variable {bl x_net_node_4_9 DEFINE INT assign{result{(max, (addition, (multiplication, x_net_node_3_0, (index, x_net_weight_from_3_0, 9)),(multiplication, x_net_node_3_1, (index, x_net_weight_from_3_1, 9)),(multiplication, x_net_node_3_2, (index, x_net_weight_from_3_2, 9)),(multiplication, x_net_node_3_3, (index, x_net_weight_from_3_3, 9)),(multiplication, x_net_node_3_4, (index, x_net_weight_from_3_4, 9)),(multiplication, x_net_node_3_5, (index, x_net_weight_from_3_5, 9)),(multiplication, x_net_node_3_6, (index, x_net_weight_from_3_6, 9)),(multiplication, x_net_node_3_7, (index, x_net_weight_from_3_7, 9)),(multiplication, x_net_node_3_8, (index, x_net_weight_from_3_8, 9)),(multiplication, x_net_node_3_9, (index, x_net_weight_from_3_9, 9)),(index, x_net_bias_from_3, 9)), 0)}}}
variable {bl x_net_node_5_0 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 0)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 0)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 0)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 0)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 0)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 0)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 0)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 0)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 0)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 0)),(index, x_net_bias_from_4, 0))}}}
variable {bl x_net_node_5_1 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 1)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 1)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 1)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 1)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 1)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 1)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 1)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 1)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 1)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 1)),(index, x_net_bias_from_4, 1))}}}
variable {bl x_net_node_5_2 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 2)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 2)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 2)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 2)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 2)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 2)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 2)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 2)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 2)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 2)),(index, x_net_bias_from_4, 2))}}}
variable {bl x_net_node_5_3 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 3)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 3)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 3)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 3)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 3)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 3)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 3)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 3)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 3)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 3)),(index, x_net_bias_from_4, 3))}}}
variable {bl x_net_node_5_4 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 4)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 4)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 4)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 4)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 4)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 4)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 4)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 4)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 4)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 4)),(index, x_net_bias_from_4, 4))}}}
variable {bl x_net_node_5_5 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 5)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 5)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 5)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 5)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 5)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 5)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 5)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 5)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 5)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 5)),(index, x_net_bias_from_4, 5))}}}
variable {bl x_net_node_5_6 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 6)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 6)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 6)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 6)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 6)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 6)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 6)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 6)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 6)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 6)),(index, x_net_bias_from_4, 6))}}}
variable {bl x_net_node_5_7 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 7)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 7)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 7)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 7)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 7)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 7)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 7)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 7)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 7)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 7)),(index, x_net_bias_from_4, 7))}}}
variable {bl x_net_node_5_8 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 8)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 8)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 8)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 8)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 8)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 8)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 8)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 8)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 8)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 8)),(index, x_net_bias_from_4, 8))}}}
variable {bl x_net_node_5_9 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 9)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 9)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 9)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 9)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 9)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 9)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 9)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 9)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 9)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 9)),(index, x_net_bias_from_4, 9))}}}
variable {bl x_net_node_5_10 DEFINE INT assign{result{(addition, (multiplication, x_net_node_4_0, (index, x_net_weight_from_4_0, 10)),(multiplication, x_net_node_4_1, (index, x_net_weight_from_4_1, 10)),(multiplication, x_net_node_4_2, (index, x_net_weight_from_4_2, 10)),(multiplication, x_net_node_4_3, (index, x_net_weight_from_4_3, 10)),(multiplication, x_net_node_4_4, (index, x_net_weight_from_4_4, 10)),(multiplication, x_net_node_4_5, (index, x_net_weight_from_4_5, 10)),(multiplication, x_net_node_4_6, (index, x_net_weight_from_4_6, 10)),(multiplication, x_net_node_4_7, (index, x_net_weight_from_4_7, 10)),(multiplication, x_net_node_4_8, (index, x_net_weight_from_4_8, 10)),(multiplication, x_net_node_4_9, (index, x_net_weight_from_4_9, 10)),(index, x_net_bias_from_4, 10))}}}
variable {bl x_net_output_max DEFINE INT assign{result{(max, x_net_node_5_10, (max, x_net_node_5_9, (max, x_net_node_5_8, (max, x_net_node_5_7, (max, x_net_node_5_6, (max, x_net_node_5_5, (max, x_net_node_5_4, (max, x_net_node_5_3, (max, x_net_node_5_2, (max, x_net_node_5_1, x_net_node_5_0))))))))))}}}
variable {bl x_net_output DEFINE INT assign{case{(equal, x_net_output_max, x_net_node_5_0)}result{0}case{(equal, x_net_output_max, x_net_node_5_1)}result{1}case{(equal, x_net_output_max, x_net_node_5_2)}result{2}case{(equal, x_net_output_max, x_net_node_5_3)}result{3}case{(equal, x_net_output_max, x_net_node_5_4)}result{4}case{(equal, x_net_output_max, x_net_node_5_5)}result{5}case{(equal, x_net_output_max, x_net_node_5_6)}result{6}case{(equal, x_net_output_max, x_net_node_5_7)}result{7}case{(equal, x_net_output_max, x_net_node_5_8)}result{8}case{(equal, x_net_output_max, x_net_node_5_9)}result{9}case{(equal, x_net_output_max, x_net_node_5_10)}result{10}result{-1}}}

    #{START OF Y_NET}#
    variable {bl y_net_1_1 DEFINE INT assign {result{ (max, dest_y, 0)}}}
    variable {bl y_net_1_2 DEFINE INT assign {result{ (max, (subtraction, dest_y, prev_dest_y), 0)}}}
    variable {bl y_net_1_3 DEFINE INT assign {result{ (max, (subtraction, prev_dest_y, dest_y), 0)}}}
    variable {bl y_net_1_4 DEFINE INT assign {result{ (max, dir, 0)}}}
    variable {bl y_net_1_5 DEFINE INT assign {result{ (max, (negative, dir), 0)}}}
    
    variable {bl y_net_2_1 DEFINE INT assign {result{ (max, y_net_1_1, 0)}}}
    variable {bl y_net_2_2 DEFINE INT assign {result{ (max, (addition, (negative, y_net_1_2), (negative, y_net_1_3), 1), 0)}}}
    variable {bl y_net_2_3 DEFINE INT assign {result{ (max, y_net_1_4, 0)}}}
    variable {bl y_net_2_4 DEFINE INT assign {result{ (max, y_net_1_5, 0)}}}

    variable {bl y_net_3_1 DEFINE INT assign {result{ (max, y_net_2_1, 0)}}}
    variable {bl y_net_3_2 DEFINE INT assign {result{ (max, (addition, y_net_2_2, y_net_2_3, -1), 0)}}}
    variable {bl y_net_3_3 DEFINE INT assign {result{ (max, (addition, y_net_2_2, y_net_2_4, -1), 0)}}}

    variable {bl y_net_output DEFINE INT assign {result{ (max, (addition, y_net_3_1, (multiplication, 'y_change', y_net_3_2), (multiplication, -1, 'y_change', y_net_3_3)), 0)}}}
} end_variables

environment_update {
    #{}#
    variable_statement {
	tar_x
	assign {
	    case { (equal, timer, 0) } end_case result {tar_x, (min, 'x_max', (addition, tar_x, 1)), (max, 'x_min', (subtraction, tar_x, 1))} end_result
	    result { tar_x } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	tar_y
	assign {
	    case { (equal, timer, 0) } end_case result {tar_y, (min, 'x_max', (addition, tar_y, 1)), (max, 'x_min', (subtraction, tar_y, 1))} end_result
	    result { tar_y } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	timer
	assign {
	    case {(equal, timer, 0) } result {'movement_cooldown'}
	    result {(max, 0, (subtraction, timer, 1))}
	}
    }
    #{}#
} end_environment_update

checks {
    check {
	not_at_destination
	arguments {}
	read_variables {cur_x, cur_y, dest_x, dest_y}
	condition { (not, (and, (equal, cur_x, dest_x), (equal, cur_y, dest_y)))}
    }
    check {
	y_too_small
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (less_than, cur_y, dest_y)}
    }
    check {
	y_too_big
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (greater_than, cur_y, dest_y)}
    }
    check {
	x_too_small
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (less_than, cur_x, dest_x)}
    }
    check {
	x_too_big
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (greater_than, cur_x, dest_x)}
    }
} end_checks

environment_checks {
    #{This currently only checks one tree}#
    environment_check {
	target_in_sight
	arguments{}
	read_variables {cur_x, cur_y} end_read_variables
	condition {
	    (and,
	    (less_than_or_equal, (addition, (abs, (subtraction, cur_x, tar_x)), (abs, (subtraction, cur_y, tar_y))), 'vision_range'),
	    (or,
	    (greater_than, (addition, (abs, (subtraction, (index, tree_x, 0), tar_x)), (abs, (subtraction, (index, tree_y, 0), tar_y))), 'tree_range'),
	    (and, (equal, (index, tree_x, 0), cur_x), (equal, (index, tree_y, 0), cur_y)),
	    (and, (equal, (index, tree_x, 0), tar_x), (equal, (index, tree_y, 0), tar_y)),
	    (and, (less_than, (index, tree_x, 0), cur_x), (less_than, (index, tree_x, 0), tar_x)),
	    (and, (less_than, (index, tree_y, 0), cur_y), (less_than, (index, tree_y, 0), tar_y)),
	    (and, (greater_than, (index, tree_x, 0), cur_x), (greater_than, (index, tree_x, 0), tar_x)),
	    (and, (greater_than, (index, tree_y, 0), cur_y), (greater_than, (index, tree_y, 0), tar_y))
	    ),
	    (or,
	    (greater_than, (addition, (abs, (subtraction, (index, tree_x, 1), tar_x)), (abs, (subtraction, (index, tree_y, 1), tar_y))), 'tree_range'),
	    (and, (equal, (index, tree_x, 1), cur_x), (equal, (index, tree_y, 1), cur_y)),
	    (and, (equal, (index, tree_x, 1), tar_x), (equal, (index, tree_y, 1), tar_y)),
	    (and, (less_than, (index, tree_x, 1), cur_x), (less_than, (index, tree_x, 1), tar_x)),
	    (and, (less_than, (index, tree_y, 1), cur_y), (less_than, (index, tree_y, 1), tar_y)),
	    (and, (greater_than, (index, tree_x, 1), cur_x), (greater_than, (index, tree_x, 1), tar_x)),
	    (and, (greater_than, (index, tree_y, 1), cur_y), (greater_than, (index, tree_y, 1), tar_y))
	    )
	    )
	} end_condition
    } end_environment_check
    
} end_environment_checks

actions {
    #{ action nodes are defined here }#
    action {
	call_xy_net
	arguments{}
	local_variables {} end_local_variables
	read_variables {x_net_output, y_net_output} end_read_variables
	write_variables {dest_x, dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dest_x
		assign {
		    result {(max, 'x_min', (min, 'x_max', x_net_output))}
		}
	    }
	    variable_statement {
		dest_y
		assign {
		    result {(max, 'y_min', (min, 'y_max', y_net_output))}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	move
	arguments{'delta_x' := INT, 'delta_y' := INT}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {cur_x, cur_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		cur_x assign {result {(max, 'x_min', (min, 'x_max', (addition, 'delta_x', cur_x)))}}
	    }
	    variable_statement {
		cur_y assign {result {(max, 'y_min', (min, 'y_max', (addition, 'delta_y', cur_y)))}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	send_victory
	arguments{}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {victory} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		victory assign {result {True}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	update_direction
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_y} end_read_variables
	write_variables {dir} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dir
		assign {
		    case { (equal, cur_y, 'y_max')}
		    result {-1}
		    case { (equal, cur_y, 'y_min')}
		    result {1}
		    result {dir}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    }
    action {
	update_previous_destination
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_x, cur_y} end_read_variables
	write_variables {prev_dest_x, prev_dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		prev_dest_x assign {result {cur_x}}
	    }
	    variable_statement {
		prev_dest_y assign {result {cur_y}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
} end_actions

sub_trees {
    sub_tree {
	DESTINATION_SUBTREE
	composite {
	    destination selector
	    children {
		not_at_destination {} #{Checks destination}#
		composite {
		    new_destination sequence
		    children {
			update_direction {} #{Updates the direction we're going in.}#
			call_xy_net {} #{Calls the neural networks}#
			update_previous_destination {} #{sets the current location to the previous destination.}#
		    }
		}
	    }
	}
    }
    sub_tree {
	MOVEMENT_SUBTREE
	composite {
	    destination_and_movement sequence
	    children {
		insert {DESTINATION_SUBTREE}
		composite {
		    movement selector
		    children {
			composite {
			    try_up sequence
			    children {
				y_too_small {}
				move {0, 1}
			    }
			}
			composite {
			    try_down sequence
			    children {
				y_too_big {}
				move {0, -1}
			    }
			}
			composite {
			    try_left sequence
			    children {
				x_too_big {}
				move {-1, 0}
			    }
			}
			composite {
			    try_right sequence
			    children {
				x_too_small {}
				move {1, 0}
			    }
			}
		    }
		}
	    }
	}
    }
} end_sub_trees

tree {
    composite {
	drone_control selector
	children {
	    composite {
		vision sequence
		children {
		    target_in_sight {}
		    send_victory {}
		    
		}
	    }
	    insert {MOVEMENT_SUBTREE}
	}
    }
} end_tree




tick_prerequisite { (not, victory) } end_tick_prerequisite
#{tick_prerequisite { True } end_tick_prerequisite}#
#{ if the condition is True, the tree ticks.
    If it is false, everything is done }#

specifications { #{ INVAR, LTL, and CTL specs go here }#
    CTLSPEC {(always_finally, victory -1)}
    #{CTLSPEC {(implies, (and, (equal, (index, tree_x 0, 0), 2), (equal, (index, tree_x 0, 1), 5), (equal, (index, tree_y 0, 0), 2), (equal, (index, tree_y 0, 1), 5)), (always_finally, victory -1))}}#
} end_specifications