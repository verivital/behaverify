MODULE main
	VAR
		sel_root : bt_fallback(sel14, sel13);
		sel14 : bt_fallback(sel12, sel11);
		sel12 : bt_fallback(sel8, sel7);
		sel8 : bt_fallback(leaf0, leaf1);
		leaf0 : bt_skill;
		leaf1 : bt_skill;
		sel7 : bt_fallback(leaf2, leaf3);
		leaf2 : bt_skill;
		leaf3 : bt_skill;
		sel11 : bt_fallback(sel6, sel5);
		sel6 : bt_fallback(leaf4, leaf5);
		leaf4 : bt_skill;
		leaf5 : bt_skill;
		sel5 : bt_fallback(leaf6, leaf7);
		leaf6 : bt_skill;
		leaf7 : bt_skill;
		sel13 : bt_fallback(sel10, sel9);
		sel10 : bt_fallback(sel4, sel3);
		sel4 : bt_fallback(leaf8, leaf9);
		leaf8 : bt_skill;
		leaf9 : bt_skill;
		sel3 : bt_fallback(leaf10, leaf11);
		leaf10 : bt_skill;
		leaf11 : bt_skill;
		sel9 : bt_fallback(sel2, sel1);
		sel2 : bt_fallback(leaf12, leaf13);
		leaf12 : bt_skill;
		leaf13 : bt_skill;
		sel1 : bt_fallback(leaf14, leaf15);
		leaf14 : bt_skill;
		leaf15 : bt_skill;
		tick_generator : bt_tick_generator(sel_root);
MODULE fake_node()
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status := error;
MODULE bt_fallback(left_bt, right_bt)
	VAR
		enable : boolean;
	ASSIGN
		left_bt.enable := enable;
		right_bt.enable := (left_bt.output = bt_output_false);
	DEFINE
		output :=
			case
				left_bt.output in { bt_output_running, bt_output_true } : left_bt.output;
				TRUE : right_bt.output;
			esac;
MODULE bt_skill
	IVAR
		input : { bt_input_running, bt_input_false, bt_input_true };
	VAR
		output : { bt_output_none, bt_output_running, bt_output_false, bt_output_true};
		enable : boolean;
	ASSIGN
		init(output) := bt_output_none;
		next(output) :=
			case
				! enable : bt_output_none;
				input = bt_input_running : bt_output_running;
				input = bt_input_false : bt_output_false;
				input = bt_input_true : bt_output_true;
			esac;
MODULE bt_tick_generator(top_level_bt)
	ASSIGN
		init(top_level_bt.enable) := TRUE;
		next(top_level_bt.enable) := (top_level_bt.output != bt_output_none);
MODULE bt_single_tick_generator(top_level_bt)
	ASSIGN
		init(top_level_bt.enable) := TRUE;
		next(top_level_bt.enable) := FALSE;
