MODULE main
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		statuses := [root.status, seq1.status, seq11.status, leaf2.status, leaf3.status, sel1.status, leaf4.status, leaf5.status, seq12.status, leaf0.status, leaf1.status];
		trace_running_source_4 := (statuses[4] = running) ? 4 : -2;
		trace_running_source_2 := 
			case
				!(trace_running_source_4 = -2) : trace_running_source_4;
				TRUE : -2;
			esac;
		trace_running_source_5 := (statuses[5] = running) ? 5 : -2;
		trace_running_source_1 := 
			case
				!(trace_running_source_2 = -2) : trace_running_source_2;
				!(trace_running_source_5 = -2) : trace_running_source_5;
				TRUE : -2;
			esac;
		trace_running_source_9 := (statuses[9] = running) ? 9 : -2;
		trace_running_source_10 := (statuses[10] = running) ? 10 : -2;
		trace_running_source_8 := 
			case
				!(trace_running_source_9 = -2) : trace_running_source_9;
				!(trace_running_source_10 = -2) : trace_running_source_10;
				TRUE : -2;
			esac;
		trace_running_source_0 := 
			case
				!(trace_running_source_1 = -2) : trace_running_source_1;
				!(trace_running_source_8 = -2) : trace_running_source_8;
				TRUE : -2;
			esac;
		resume_point_0 := 
			case
				(resume_from_node_0 in {4}) : 0;
				(resume_from_node_0 in {10}) : 1;
				TRUE : -2;
			esac;
		resume_point_1 := 
			case
				(resume_from_node_0 in {4}) : 0;
				TRUE : -2;
			esac;
		resume_point_2 := 
			case
				(resume_from_node_0 in {4}) : 1;
				TRUE : -2;
			esac;
		resume_point_8 := 
			case
				(resume_from_node_0 in {9}) : 0;
				(resume_from_node_0 in {10}) : 1;
				TRUE : -2;
			esac;
		root.active := TRUE;
	VAR
		node_names : define_nodes;
		resume_from_node_0 : {0, 4, 5, 9, 10};
		root : node_sequence(1, seq1, seq12, resume_point_0);
		seq1 : node_sequence(1, seq11, sel1, resume_point_1);
		seq11 : node_sequence(1, leaf2, leaf3, resume_point_2);
		leaf2 : node_default();
		leaf3 : node_default();
		sel1 : node_selector(1, leaf4, leaf5);
		leaf4 : node_default();
		leaf5 : node_default();
		seq12 : node_sequence(1, leaf0, leaf1, resume_point_8);
		leaf0 : node_default();
		leaf1 : node_default();
	ASSIGN
		init(resume_from_node_0) := 0;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				TRUE : max(trace_running_source_0, 0);
			esac;
MODULE fake_node()
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status := error;
MODULE node_default()
	CONSTANTS
		success, failure, running, invalid, error;
	IVAR
		input_status : {success, running, failure};
	DEFINE
		status := active ? input_status : invalid;
MODULE node_sequence(last_child, child_0, child_1, resume_point)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : success;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = failure) : failure;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = running) : running;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = invalid) : error;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = failure) : failure;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = running) : running;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : success;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				(0 < resume_point) : FALSE;
				(0 = resume_point) : TRUE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				(1 < resume_point) : FALSE;
				(1 = resume_point) : TRUE;
				!(child_0.active) : FALSE;
				!(child_0.status = success) : FALSE;
				TRUE: TRUE;
			esac;
MODULE node_selector(last_child, child_0, child_1)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : failure;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 <= last_child) & (child_0.status = success) : success;
				(0 <= last_child) & (child_0.status = running) : running;
				(0 <= last_child) & (child_0.status = invalid) : error;
				(1 <= last_child) & (child_1.status = success) : success;
				(1 <= last_child) & (child_1.status = running) : running;
				(1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : failure;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				!(child_0.active) : FALSE;
				!(child_0.status = failure) : FALSE;
				TRUE: TRUE;
			esac;
MODULE define_nodes
	DEFINE
		root := 0;
		seq1 := 1;
		seq11 := 2;
		leaf2 := 3;
		leaf3 := 4;
		sel1 := 5;
		leaf4 := 6;
		leaf5 := 7;
		seq12 := 8;
		leaf0 := 9;
		leaf1 := 10;
