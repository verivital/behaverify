MODULE main
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		statuses := [root.status, sel11.status, sel9.status, sel5.status, leaf2.status, leaf3.status, sel4.status, leaf4.status, leaf5.status, sel8.status, sel3.status, leaf6.status, leaf7.status, sel2.status, leaf8.status, leaf9.status, sel10.status, sel7.status, seq1.status, leaf10.status, leaf11.status, sel1.status, leaf12.status, leaf13.status, sel6.status, leaf0.status, leaf1.status];
		trace_running_source_20 := (statuses[20] = running) ? 20 : -2;
		trace_running_source_18 := 
			case
				!(trace_running_source_20 = -2) : trace_running_source_20;
				TRUE : -2;
			esac;
		trace_running_source_17 := 
			case
				!(trace_running_source_18 = -2) : trace_running_source_18;
				TRUE : -2;
			esac;
		trace_running_source_16 := 
			case
				!(trace_running_source_17 = -2) : trace_running_source_17;
				TRUE : -2;
			esac;
		trace_running_source_0 := 
			case
				!(trace_running_source_16 = -2) : trace_running_source_16;
				TRUE : -2;
			esac;
		resume_point_18 := 
			case
				(resume_from_node_0 in {20}) : 1;
				TRUE : -2;
			esac;
		root.active := TRUE;
	VAR
		node_names : define_nodes;
		resume_from_node_0 : {0, 20};
		root : node_selector(1, sel11, sel10);
		sel11 : node_selector(1, sel9, sel8);
		sel9 : node_selector(1, sel5, sel4);
		sel5 : node_selector(1, leaf2, leaf3);
		leaf2 : node_default();
		leaf3 : node_default();
		sel4 : node_selector(1, leaf4, leaf5);
		leaf4 : node_default();
		leaf5 : node_default();
		sel8 : node_selector(1, sel3, sel2);
		sel3 : node_selector(1, leaf6, leaf7);
		leaf6 : node_default();
		leaf7 : node_default();
		sel2 : node_selector(1, leaf8, leaf9);
		leaf8 : node_default();
		leaf9 : node_default();
		sel10 : node_selector(1, sel7, sel6);
		sel7 : node_selector(1, seq1, sel1);
		seq1 : node_sequence(1, leaf10, leaf11, resume_point_18);
		leaf10 : node_default();
		leaf11 : node_default();
		sel1 : node_selector(1, leaf12, leaf13);
		leaf12 : node_default();
		leaf13 : node_default();
		sel6 : node_selector(1, leaf0, leaf1);
		leaf0 : node_default();
		leaf1 : node_default();
	ASSIGN
		init(resume_from_node_0) := 0;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				TRUE : max(trace_running_source_0, 0);
			esac;
MODULE fake_node()
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status := error;
MODULE node_selector(last_child, child_0, child_1)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : failure;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 <= last_child) & (child_0.status = success) : success;
				(0 <= last_child) & (child_0.status = running) : running;
				(0 <= last_child) & (child_0.status = invalid) : error;
				(1 <= last_child) & (child_1.status = success) : success;
				(1 <= last_child) & (child_1.status = running) : running;
				(1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : failure;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				!(child_0.active) : FALSE;
				!(child_0.status = failure) : FALSE;
				TRUE: TRUE;
			esac;
MODULE node_default()
	CONSTANTS
		success, failure, running, invalid, error;
	IVAR
		input_status : {success, running, failure};
	DEFINE
		status := active ? input_status : invalid;
MODULE node_sequence(last_child, child_0, child_1, resume_point)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : success;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = failure) : failure;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = running) : running;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = invalid) : error;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = failure) : failure;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = running) : running;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : success;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				(0 < resume_point) : FALSE;
				(0 = resume_point) : TRUE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				(1 < resume_point) : FALSE;
				(1 = resume_point) : TRUE;
				!(child_0.active) : FALSE;
				!(child_0.status = success) : FALSE;
				TRUE: TRUE;
			esac;
MODULE define_nodes
	DEFINE
		root := 0;
		sel11 := 1;
		sel9 := 2;
		sel5 := 3;
		leaf2 := 4;
		leaf3 := 5;
		sel4 := 6;
		leaf4 := 7;
		leaf5 := 8;
		sel8 := 9;
		sel3 := 10;
		leaf6 := 11;
		leaf7 := 12;
		sel2 := 13;
		leaf8 := 14;
		leaf9 := 15;
		sel10 := 16;
		sel7 := 17;
		seq1 := 18;
		leaf10 := 19;
		leaf11 := 20;
		sel1 := 21;
		leaf12 := 22;
		leaf13 := 23;
		sel6 := 24;
		leaf0 := 25;
		leaf1 := 26;
