{   'nodes': {   'BlueROV': {   'additional_arguments': None,
                                'category': 'composite',
                                'children': [   'topics2bb',
                                                'dd_tasks',
                                                'mission_server',
                                                'obstacle_avoidance',
                                                'priorities'],
                                'internal_status_module_code': None,
                                'internal_status_module_name': None,
                                'name': 'BlueROV',
                                'parent': None,
                                'return_possibilities': {   'failure': True,
                                                            'running': True,
                                                            'success': True},
                                'type': 'parallel_success_on_all_without_memory'},
                 'battery2bb': {   'additional_arguments': None,
                                   'category': 'leaf',
                                   'children': [],
                                   'internal_status_module_code': 'MODULE '
                                                                  'battery2bb_module(blackboard)\n'
                                                                  '\t'
                                                                  'CONSTANTS\n'
                                                                  '\t\t'
                                                                  'success, '
                                                                  'failure, '
                                                                  'running, '
                                                                  'invalid;\n'
                                                                  '\tDEFINE\n'
                                                                  '\t\tstatus '
                                                                  ':= active ? '
                                                                  'internal_status '
                                                                  ': invalid;\n'
                                                                  '\t\t'
                                                                  'internal_status '
                                                                  ':= '
                                                                  'blackboard.battery2bb_update_success '
                                                                  '? success : '
                                                                  'running;\n',
                                   'internal_status_module_name': 'battery2bb_module',
                                   'name': 'battery2bb',
                                   'parent': 'topics2bb',
                                   'return_possibilities': {   'failure': False,
                                                               'running': True,
                                                               'success': True},
                                   'type': 'read_action'},
                 'battery_check': {   'additional_arguments': [   'success',
                                                                  'failure'],
                                      'category': 'decorator',
                                      'children': ['battery_check_1'],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'battery_check',
                                      'parent': 'priorities',
                                      'return_possibilities': {   'failure': True,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'X_is_Y'},
                 'battery_check_1': {   'additional_arguments': None,
                                        'category': 'composite',
                                        'children': [   'battery_low_fs',
                                                        'surface_task'],
                                        'internal_status_module_code': None,
                                        'internal_status_module_name': None,
                                        'name': 'battery_check_1',
                                        'parent': 'battery_check',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': True,
                                                                    'success': True},
                                        'type': 'selector_without_memory'},
                 'battery_low_fs': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': 'MODULE '
                                                                      'battery_low_fs_module(blackboard)\n'
                                                                      '\t'
                                                                      'CONSTANTS\n'
                                                                      '\t\t'
                                                                      'success, '
                                                                      'failure, '
                                                                      'running, '
                                                                      'invalid;\n'
                                                                      '\t'
                                                                      'DEFINE\n'
                                                                      '\t\t'
                                                                      'status '
                                                                      ':= '
                                                                      'active '
                                                                      '? '
                                                                      'internal_status '
                                                                      ': '
                                                                      'invalid;\n'
                                                                      '\t\t'
                                                                      'internal_status '
                                                                      ':= '
                                                                      '(blackboard.battery_low_warning_stage_1 '
                                                                      '= '
                                                                      'FALSE) '
                                                                      '? '
                                                                      'success '
                                                                      ': '
                                                                      'failure;\n',
                                       'internal_status_module_name': 'battery_low_fs_module',
                                       'name': 'battery_low_fs',
                                       'parent': 'battery_check_1',
                                       'return_possibilities': {   'failure': True,
                                                                   'running': False,
                                                                   'success': True},
                                       'type': 'check'},
                 'check_geofence': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': 'MODULE '
                                                                      'check_geofence_module(blackboard)\n'
                                                                      '\t'
                                                                      'CONSTANTS\n'
                                                                      '\t\t'
                                                                      'success, '
                                                                      'failure, '
                                                                      'running, '
                                                                      'invalid;\n'
                                                                      '\t'
                                                                      'DEFINE\n'
                                                                      '\t\t'
                                                                      'status '
                                                                      ':= '
                                                                      'active '
                                                                      '? '
                                                                      'internal_status '
                                                                      ': '
                                                                      'invalid;\n'
                                                                      '\t\t'
                                                                      'internal_status '
                                                                      ':= '
                                                                      '(blackboard.bb_geofence_warning_stage_1 '
                                                                      '= '
                                                                      'FALSE) '
                                                                      '? '
                                                                      'success '
                                                                      ': '
                                                                      'failure;\n',
                                       'internal_status_module_name': 'check_geofence_module',
                                       'name': 'check_geofence',
                                       'parent': 'geofence_selector_1',
                                       'return_possibilities': {   'failure': True,
                                                                   'running': False,
                                                                   'success': True},
                                       'type': 'check'},
                 'check_lec2am_lp': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': 'MODULE '
                                                                       'check_lec2am_lp_module(blackboard)\n'
                                                                       '\t'
                                                                       'CONSTANTS\n'
                                                                       '\t\t'
                                                                       'success, '
                                                                       'failure, '
                                                                       'running, '
                                                                       'invalid;\n'
                                                                       '\t'
                                                                       'DEFINE\n'
                                                                       '\t\t'
                                                                       'status '
                                                                       ':= '
                                                                       'active '
                                                                       '? '
                                                                       'internal_status '
                                                                       ': '
                                                                       'invalid;\n'
                                                                       '\t\t'
                                                                       'internal_status '
                                                                       ':= '
                                                                       '(blackboard.lec2_am_l_pipe_warning_stage_1 '
                                                                       '= '
                                                                       'FALSE) '
                                                                       '? '
                                                                       'success '
                                                                       ': '
                                                                       'failure;\n',
                                        'internal_status_module_name': 'check_lec2am_lp_module',
                                        'name': 'check_lec2am_lp',
                                        'parent': 'lec2am_l_mapping_check_1',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': False,
                                                                    'success': True},
                                        'type': 'check'},
                 'check_lec2am_ls': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': 'MODULE '
                                                                       'check_lec2am_ls_module(blackboard)\n'
                                                                       '\t'
                                                                       'CONSTANTS\n'
                                                                       '\t\t'
                                                                       'success, '
                                                                       'failure, '
                                                                       'running, '
                                                                       'invalid;\n'
                                                                       '\t'
                                                                       'DEFINE\n'
                                                                       '\t\t'
                                                                       'status '
                                                                       ':= '
                                                                       'active '
                                                                       '? '
                                                                       'internal_status '
                                                                       ': '
                                                                       'invalid;\n'
                                                                       '\t\t'
                                                                       'internal_status '
                                                                       ':= '
                                                                       '(blackboard.lec2_am_l_speed_warning_stage_1 '
                                                                       '= '
                                                                       'FALSE) '
                                                                       '? '
                                                                       'success '
                                                                       ': '
                                                                       'failure;\n',
                                        'internal_status_module_name': 'check_lec2am_ls_module',
                                        'name': 'check_lec2am_ls',
                                        'parent': 'lec2am_l_speed_check_1',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': False,
                                                                    'success': True},
                                        'type': 'check'},
                 'check_lec2am_rp': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': 'MODULE '
                                                                       'check_lec2am_rp_module(blackboard)\n'
                                                                       '\t'
                                                                       'CONSTANTS\n'
                                                                       '\t\t'
                                                                       'success, '
                                                                       'failure, '
                                                                       'running, '
                                                                       'invalid;\n'
                                                                       '\t'
                                                                       'DEFINE\n'
                                                                       '\t\t'
                                                                       'status '
                                                                       ':= '
                                                                       'active '
                                                                       '? '
                                                                       'internal_status '
                                                                       ': '
                                                                       'invalid;\n'
                                                                       '\t\t'
                                                                       'internal_status '
                                                                       ':= '
                                                                       '(blackboard.lec2_am_r_pipe_warning_stage_1 '
                                                                       '= '
                                                                       'FALSE) '
                                                                       '? '
                                                                       'success '
                                                                       ': '
                                                                       'failure;\n',
                                        'internal_status_module_name': 'check_lec2am_rp_module',
                                        'name': 'check_lec2am_rp',
                                        'parent': 'lec2am_r_mapping_check_1',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': False,
                                                                    'success': True},
                                        'type': 'check'},
                 'check_lec2am_rs': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': 'MODULE '
                                                                       'check_lec2am_rs_module(blackboard)\n'
                                                                       '\t'
                                                                       'CONSTANTS\n'
                                                                       '\t\t'
                                                                       'success, '
                                                                       'failure, '
                                                                       'running, '
                                                                       'invalid;\n'
                                                                       '\t'
                                                                       'DEFINE\n'
                                                                       '\t\t'
                                                                       'status '
                                                                       ':= '
                                                                       'active '
                                                                       '? '
                                                                       'internal_status '
                                                                       ': '
                                                                       'invalid;\n'
                                                                       '\t\t'
                                                                       'internal_status '
                                                                       ':= '
                                                                       '(blackboard.lec2_am_r_speed_warning_stage_1 '
                                                                       '= '
                                                                       'FALSE) '
                                                                       '? '
                                                                       'success '
                                                                       ': '
                                                                       'failure;\n',
                                        'internal_status_module_name': 'check_lec2am_rs_module',
                                        'name': 'check_lec2am_rs',
                                        'parent': 'lec2am_r_speed_check_1',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': False,
                                                                    'success': True},
                                        'type': 'check'},
                 'check_pipe_post': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': 'MODULE '
                                                                       'check_pipe_post_module(blackboard)\n'
                                                                       '\t'
                                                                       'CONSTANTS\n'
                                                                       '\t\t'
                                                                       'success, '
                                                                       'failure, '
                                                                       'running, '
                                                                       'invalid;\n'
                                                                       '\t'
                                                                       'DEFINE\n'
                                                                       '\t\t'
                                                                       'status '
                                                                       ':= '
                                                                       'active '
                                                                       '? '
                                                                       'internal_status '
                                                                       ': '
                                                                       'invalid;\n'
                                                                       '\t\t'
                                                                       'internal_status '
                                                                       ':= '
                                                                       '(blackboard.bb_pipe_lost_warning_stage_1 '
                                                                       '= '
                                                                       'FALSE) '
                                                                       '? '
                                                                       'success '
                                                                       ': '
                                                                       'failure;\n',
                                        'internal_status_module_name': 'check_pipe_post_module',
                                        'name': 'check_pipe_post',
                                        'parent': 'pipe_lost_selector_1',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': False,
                                                                    'success': True},
                                        'type': 'check'},
                 'check_rth': {   'additional_arguments': None,
                                  'category': 'leaf',
                                  'children': [],
                                  'internal_status_module_code': 'MODULE '
                                                                 'check_rth_module(blackboard)\n'
                                                                 '\tCONSTANTS\n'
                                                                 '\t\tsuccess, '
                                                                 'failure, '
                                                                 'running, '
                                                                 'invalid;\n'
                                                                 '\tDEFINE\n'
                                                                 '\t\tstatus '
                                                                 ':= active ? '
                                                                 'internal_status '
                                                                 ': invalid;\n'
                                                                 '\t\t'
                                                                 'internal_status '
                                                                 ':= '
                                                                 '(blackboard.bb_rth_warning_stage_2 '
                                                                 '= FALSE) ? '
                                                                 'success : '
                                                                 'failure;\n',
                                  'internal_status_module_name': 'check_rth_module',
                                  'name': 'check_rth',
                                  'parent': 'rth_selector_1',
                                  'return_possibilities': {   'failure': True,
                                                              'running': False,
                                                              'success': True},
                                  'type': 'check'},
                 'check_sensor_failure': {   'additional_arguments': None,
                                             'category': 'leaf',
                                             'children': [],
                                             'internal_status_module_code': 'MODULE '
                                                                            'check_sensor_failure_module(blackboard)\n'
                                                                            '\t'
                                                                            'CONSTANTS\n'
                                                                            '\t\t'
                                                                            'success, '
                                                                            'failure, '
                                                                            'running, '
                                                                            'invalid;\n'
                                                                            '\t'
                                                                            'DEFINE\n'
                                                                            '\t\t'
                                                                            'status '
                                                                            ':= '
                                                                            'active '
                                                                            '? '
                                                                            'internal_status '
                                                                            ': '
                                                                            'invalid;\n'
                                                                            '\t\t'
                                                                            'internal_status '
                                                                            ':= '
                                                                            '(blackboard.bb_sensor_failure_warning_stage_1 '
                                                                            '= '
                                                                            'FALSE) '
                                                                            '? '
                                                                            'success '
                                                                            ': '
                                                                            'failure;\n',
                                             'internal_status_module_name': 'check_sensor_failure_module',
                                             'name': 'check_sensor_failure',
                                             'parent': 'sensor_failure_selector_1',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': False,
                                                                         'success': True},
                                             'type': 'check'},
                 'check_surface': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': 'MODULE '
                                                                     'check_surface_module(blackboard)\n'
                                                                     '\t'
                                                                     'CONSTANTS\n'
                                                                     '\t\t'
                                                                     'success, '
                                                                     'failure, '
                                                                     'running, '
                                                                     'invalid;\n'
                                                                     '\t'
                                                                     'DEFINE\n'
                                                                     '\t\t'
                                                                     'status '
                                                                     ':= '
                                                                     'active ? '
                                                                     'internal_status '
                                                                     ': '
                                                                     'invalid;\n'
                                                                     '\t\t'
                                                                     'internal_status '
                                                                     ':= '
                                                                     '(blackboard.bb_home_reached '
                                                                     '= FALSE) '
                                                                     '? '
                                                                     'success '
                                                                     ': '
                                                                     'failure;\n',
                                      'internal_status_module_name': 'check_surface_module',
                                      'name': 'check_surface',
                                      'parent': 'home_reached_selector_1',
                                      'return_possibilities': {   'failure': True,
                                                                  'running': False,
                                                                  'success': True},
                                      'type': 'check'},
                 'check_waypoints_completed': {   'additional_arguments': None,
                                                  'category': 'leaf',
                                                  'children': [],
                                                  'internal_status_module_code': 'MODULE '
                                                                                 'check_waypoints_completed_module(blackboard)\n'
                                                                                 '\t'
                                                                                 'CONSTANTS\n'
                                                                                 '\t\t'
                                                                                 'success, '
                                                                                 'failure, '
                                                                                 'running, '
                                                                                 'invalid;\n'
                                                                                 '\t'
                                                                                 'DEFINE\n'
                                                                                 '\t\t'
                                                                                 'status '
                                                                                 ':= '
                                                                                 'active '
                                                                                 '? '
                                                                                 'internal_status '
                                                                                 ': '
                                                                                 'invalid;\n'
                                                                                 '\t\t'
                                                                                 'internal_status '
                                                                                 ':= '
                                                                                 '(blackboard.bb_waypoints_completed_stage_1 '
                                                                                 '= '
                                                                                 'FALSE) '
                                                                                 '? '
                                                                                 'success '
                                                                                 ': '
                                                                                 'failure;\n',
                                                  'internal_status_module_name': 'check_waypoints_completed_module',
                                                  'name': 'check_waypoints_completed',
                                                  'parent': 'waypoints_sif_1',
                                                  'return_possibilities': {   'failure': True,
                                                                              'running': False,
                                                                              'success': True},
                                                  'type': 'check'},
                 'dd_lec_task': {   'additional_arguments': None,
                                    'category': 'leaf',
                                    'children': [],
                                    'internal_status_module_code': None,
                                    'internal_status_module_name': None,
                                    'name': 'dd_lec_task',
                                    'parent': 'dd_tasks',
                                    'return_possibilities': {   'failure': False,
                                                                'running': True,
                                                                'success': False},
                                    'type': 'action'},
                 'dd_tasks': {   'additional_arguments': None,
                                 'category': 'composite',
                                 'children': [   'reallocate_check',
                                                 'dd_lec_task'],
                                 'internal_status_module_code': None,
                                 'internal_status_module_name': None,
                                 'name': 'dd_tasks',
                                 'parent': 'BlueROV',
                                 'return_possibilities': {   'failure': True,
                                                             'running': True,
                                                             'success': True},
                                 'type': 'selector_without_memory'},
                 'ddlec2bb': {   'additional_arguments': None,
                                 'category': 'leaf',
                                 'children': [],
                                 'internal_status_module_code': 'MODULE '
                                                                'ddlec2bb_module(blackboard)\n'
                                                                '\tCONSTANTS\n'
                                                                '\t\tsuccess, '
                                                                'failure, '
                                                                'running, '
                                                                'invalid;\n'
                                                                '\tDEFINE\n'
                                                                '\t\tstatus := '
                                                                'active ? '
                                                                'internal_status '
                                                                ': invalid;\n'
                                                                '\t\t'
                                                                'internal_status '
                                                                ':= '
                                                                'blackboard.ddlec2bb_update_success '
                                                                '? success : '
                                                                'running;\n',
                                 'internal_status_module_name': 'ddlec2bb_module',
                                 'name': 'ddlec2bb',
                                 'parent': 'topics2bb',
                                 'return_possibilities': {   'failure': False,
                                                             'running': True,
                                                             'success': True},
                                 'type': 'read_action'},
                 'emergency_stop_check': {   'additional_arguments': [   'success',
                                                                         'failure'],
                                             'category': 'decorator',
                                             'children': [   'emergency_stop_check_1'],
                                             'internal_status_module_code': None,
                                             'internal_status_module_name': None,
                                             'name': 'emergency_stop_check',
                                             'parent': 'priorities',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': True,
                                                                         'success': False},
                                             'type': 'X_is_Y'},
                 'emergency_stop_check_1': {   'additional_arguments': None,
                                               'category': 'composite',
                                               'children': [   'emergency_stop_fs',
                                                               'emergency_stop_tasks'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'emergency_stop_check_1',
                                               'parent': 'emergency_stop_check',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': True},
                                               'type': 'selector_without_memory'},
                 'emergency_stop_fs': {   'additional_arguments': None,
                                          'category': 'leaf',
                                          'children': [],
                                          'internal_status_module_code': 'MODULE '
                                                                         'emergency_stop_fs_module(blackboard)\n'
                                                                         '\t'
                                                                         'CONSTANTS\n'
                                                                         '\t\t'
                                                                         'success, '
                                                                         'failure, '
                                                                         'running, '
                                                                         'invalid;\n'
                                                                         '\t'
                                                                         'DEFINE\n'
                                                                         '\t\t'
                                                                         'status '
                                                                         ':= '
                                                                         'active '
                                                                         '? '
                                                                         'internal_status '
                                                                         ': '
                                                                         'invalid;\n'
                                                                         '\t\t'
                                                                         'internal_status '
                                                                         ':= '
                                                                         '(blackboard.emergency_stop_warning_stage_1 '
                                                                         '= '
                                                                         'FALSE) '
                                                                         '? '
                                                                         'success '
                                                                         ': '
                                                                         'failure;\n',
                                          'internal_status_module_name': 'emergency_stop_fs_module',
                                          'name': 'emergency_stop_fs',
                                          'parent': 'emergency_stop_check_1',
                                          'return_possibilities': {   'failure': True,
                                                                      'running': False,
                                                                      'success': True},
                                          'type': 'check'},
                 'emergency_stop_task': {   'additional_arguments': None,
                                            'category': 'leaf',
                                            'children': [],
                                            'internal_status_module_code': None,
                                            'internal_status_module_name': None,
                                            'name': 'emergency_stop_task',
                                            'parent': 'emergency_stop_tasks',
                                            'return_possibilities': {   'failure': False,
                                                                        'running': False,
                                                                        'success': True},
                                            'type': 'action'},
                 'emergency_stop_tasks': {   'additional_arguments': None,
                                             'category': 'composite',
                                             'children': [   'emergency_stop_task',
                                                             'surface_task_2'],
                                             'internal_status_module_code': None,
                                             'internal_status_module_name': None,
                                             'name': 'emergency_stop_tasks',
                                             'parent': 'emergency_stop_check_1',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': True,
                                                                         'success': True},
                                             'type': 'sequence_with_memory'},
                 'evaluate': {   'additional_arguments': None,
                                 'category': 'leaf',
                                 'children': [],
                                 'internal_status_module_code': None,
                                 'internal_status_module_name': None,
                                 'name': 'evaluate',
                                 'parent': 'track_pipe_mission_end',
                                 'return_possibilities': {   'failure': False,
                                                             'running': True,
                                                             'success': True},
                                 'type': 'action'},
                 'fls2bb': {   'additional_arguments': None,
                               'category': 'leaf',
                               'children': [],
                               'internal_status_module_code': 'MODULE '
                                                              'fls2bb_module(blackboard)\n'
                                                              '\tCONSTANTS\n'
                                                              '\t\tsuccess, '
                                                              'failure, '
                                                              'running, '
                                                              'invalid;\n'
                                                              '\tDEFINE\n'
                                                              '\t\tstatus := '
                                                              'active ? '
                                                              'internal_status '
                                                              ': invalid;\n'
                                                              '\t\t'
                                                              'internal_status '
                                                              ':= '
                                                              'blackboard.fls2bb_update_success '
                                                              '? success : '
                                                              'running;\n',
                               'internal_status_module_name': 'fls2bb_module',
                               'name': 'fls2bb',
                               'parent': 'topics2bb',
                               'return_possibilities': {   'failure': False,
                                                           'running': True,
                                                           'success': True},
                               'type': 'read_action'},
                 'fls_warning2bb': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': 'MODULE '
                                                                      'fls_warning2bb_module(blackboard)\n'
                                                                      '\t'
                                                                      'CONSTANTS\n'
                                                                      '\t\t'
                                                                      'success, '
                                                                      'failure, '
                                                                      'running, '
                                                                      'invalid;\n'
                                                                      '\t'
                                                                      'DEFINE\n'
                                                                      '\t\t'
                                                                      'status '
                                                                      ':= '
                                                                      'active '
                                                                      '? '
                                                                      'internal_status '
                                                                      ': '
                                                                      'invalid;\n'
                                                                      '\t\t'
                                                                      'internal_status '
                                                                      ':= '
                                                                      'blackboard.fls_warning2bb_update_success '
                                                                      '? '
                                                                      'success '
                                                                      ': '
                                                                      'running;\n',
                                       'internal_status_module_name': 'fls_warning2bb_module',
                                       'name': 'fls_warning2bb',
                                       'parent': 'topics2bb',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': True},
                                       'type': 'read_action'},
                 'geofence2bb': {   'additional_arguments': None,
                                    'category': 'leaf',
                                    'children': [],
                                    'internal_status_module_code': 'MODULE '
                                                                   'geofence2bb_module(blackboard)\n'
                                                                   '\t'
                                                                   'CONSTANTS\n'
                                                                   '\t\t'
                                                                   'success, '
                                                                   'failure, '
                                                                   'running, '
                                                                   'invalid;\n'
                                                                   '\tDEFINE\n'
                                                                   '\t\tstatus '
                                                                   ':= active '
                                                                   '? '
                                                                   'internal_status '
                                                                   ': '
                                                                   'invalid;\n'
                                                                   '\t\t'
                                                                   'internal_status '
                                                                   ':= '
                                                                   'blackboard.geofence2bb_update_success '
                                                                   '? success '
                                                                   ': '
                                                                   'running;\n',
                                    'internal_status_module_name': 'geofence2bb_module',
                                    'name': 'geofence2bb',
                                    'parent': 'topics2bb',
                                    'return_possibilities': {   'failure': False,
                                                                'running': True,
                                                                'success': True},
                                    'type': 'read_action'},
                 'geofence_selector': {   'additional_arguments': [   'success',
                                                                      'failure'],
                                          'category': 'decorator',
                                          'children': ['geofence_selector_1'],
                                          'internal_status_module_code': None,
                                          'internal_status_module_name': None,
                                          'name': 'geofence_selector',
                                          'parent': 'priorities',
                                          'return_possibilities': {   'failure': True,
                                                                      'running': True,
                                                                      'success': False},
                                          'type': 'X_is_Y'},
                 'geofence_selector_1': {   'additional_arguments': None,
                                            'category': 'composite',
                                            'children': [   'check_geofence',
                                                            'rth_par_1'],
                                            'internal_status_module_code': None,
                                            'internal_status_module_name': None,
                                            'name': 'geofence_selector_1',
                                            'parent': 'geofence_selector',
                                            'return_possibilities': {   'failure': True,
                                                                        'running': True,
                                                                        'success': True},
                                            'type': 'selector_without_memory'},
                 'home2bb': {   'additional_arguments': None,
                                'category': 'leaf',
                                'children': [],
                                'internal_status_module_code': 'MODULE '
                                                               'home2bb_module(blackboard)\n'
                                                               '\tCONSTANTS\n'
                                                               '\t\tsuccess, '
                                                               'failure, '
                                                               'running, '
                                                               'invalid;\n'
                                                               '\tDEFINE\n'
                                                               '\t\tstatus := '
                                                               'active ? '
                                                               'internal_status '
                                                               ': invalid;\n'
                                                               '\t\t'
                                                               'internal_status '
                                                               ':= '
                                                               'blackboard.home2bb_update_success '
                                                               '? success : '
                                                               'running;\n',
                                'internal_status_module_name': 'home2bb_module',
                                'name': 'home2bb',
                                'parent': 'rth_par',
                                'return_possibilities': {   'failure': False,
                                                            'running': True,
                                                            'success': True},
                                'type': 'read_action'},
                 'home2bb_1': {   'additional_arguments': None,
                                  'category': 'leaf',
                                  'children': [],
                                  'internal_status_module_code': 'MODULE '
                                                                 'home2bb_1_module(blackboard)\n'
                                                                 '\tCONSTANTS\n'
                                                                 '\t\tsuccess, '
                                                                 'failure, '
                                                                 'running, '
                                                                 'invalid;\n'
                                                                 '\tDEFINE\n'
                                                                 '\t\tstatus '
                                                                 ':= active ? '
                                                                 'internal_status '
                                                                 ': invalid;\n'
                                                                 '\t\t'
                                                                 'internal_status '
                                                                 ':= '
                                                                 'blackboard.home2bb_1_update_success '
                                                                 '? success : '
                                                                 'running;\n',
                                  'internal_status_module_name': 'home2bb_1_module',
                                  'name': 'home2bb_1',
                                  'parent': 'rth_par_1',
                                  'return_possibilities': {   'failure': False,
                                                              'running': True,
                                                              'success': True},
                                  'type': 'read_action'},
                 'home_reached_selector': {   'additional_arguments': [   'success',
                                                                          'failure'],
                                              'category': 'decorator',
                                              'children': [   'home_reached_selector_1'],
                                              'internal_status_module_code': None,
                                              'internal_status_module_name': None,
                                              'name': 'home_reached_selector',
                                              'parent': 'priorities',
                                              'return_possibilities': {   'failure': True,
                                                                          'running': True,
                                                                          'success': False},
                                              'type': 'X_is_Y'},
                 'home_reached_selector_1': {   'additional_arguments': None,
                                                'category': 'composite',
                                                'children': [   'check_surface',
                                                                'surface_task_3'],
                                                'internal_status_module_code': None,
                                                'internal_status_module_name': None,
                                                'name': 'home_reached_selector_1',
                                                'parent': 'home_reached_selector',
                                                'return_possibilities': {   'failure': True,
                                                                            'running': True,
                                                                            'success': True},
                                                'type': 'selector_without_memory'},
                 'hsd_pipe2bb': {   'additional_arguments': None,
                                    'category': 'leaf',
                                    'children': [],
                                    'internal_status_module_code': 'MODULE '
                                                                   'hsd_pipe2bb_module(blackboard)\n'
                                                                   '\t'
                                                                   'CONSTANTS\n'
                                                                   '\t\t'
                                                                   'success, '
                                                                   'failure, '
                                                                   'running, '
                                                                   'invalid;\n'
                                                                   '\tDEFINE\n'
                                                                   '\t\tstatus '
                                                                   ':= active '
                                                                   '? '
                                                                   'internal_status '
                                                                   ': '
                                                                   'invalid;\n'
                                                                   '\t\t'
                                                                   'internal_status '
                                                                   ':= '
                                                                   'blackboard.hsd_pipe2bb_update_success '
                                                                   '? success '
                                                                   ': '
                                                                   'running;\n',
                                    'internal_status_module_name': 'hsd_pipe2bb_module',
                                    'name': 'hsd_pipe2bb',
                                    'parent': 'topics2bb',
                                    'return_possibilities': {   'failure': False,
                                                                'running': True,
                                                                'success': True},
                                    'type': 'read_action'},
                 'hsd_rth2bb': {   'additional_arguments': None,
                                   'category': 'leaf',
                                   'children': [],
                                   'internal_status_module_code': 'MODULE '
                                                                  'hsd_rth2bb_module(blackboard)\n'
                                                                  '\t'
                                                                  'CONSTANTS\n'
                                                                  '\t\t'
                                                                  'success, '
                                                                  'failure, '
                                                                  'running, '
                                                                  'invalid;\n'
                                                                  '\tDEFINE\n'
                                                                  '\t\tstatus '
                                                                  ':= active ? '
                                                                  'internal_status '
                                                                  ': invalid;\n'
                                                                  '\t\t'
                                                                  'internal_status '
                                                                  ':= '
                                                                  'blackboard.hsd_rth2bb_update_success '
                                                                  '? success : '
                                                                  'running;\n',
                                   'internal_status_module_name': 'hsd_rth2bb_module',
                                   'name': 'hsd_rth2bb',
                                   'parent': 'topics2bb',
                                   'return_possibilities': {   'failure': False,
                                                               'running': True,
                                                               'success': True},
                                   'type': 'read_action'},
                 'hsd_surface2bb': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': 'MODULE '
                                                                      'hsd_surface2bb_module(blackboard)\n'
                                                                      '\t'
                                                                      'CONSTANTS\n'
                                                                      '\t\t'
                                                                      'success, '
                                                                      'failure, '
                                                                      'running, '
                                                                      'invalid;\n'
                                                                      '\t'
                                                                      'DEFINE\n'
                                                                      '\t\t'
                                                                      'status '
                                                                      ':= '
                                                                      'active '
                                                                      '? '
                                                                      'internal_status '
                                                                      ': '
                                                                      'invalid;\n'
                                                                      '\t\t'
                                                                      'internal_status '
                                                                      ':= '
                                                                      'blackboard.hsd_surface2bb_update_success '
                                                                      '? '
                                                                      'success '
                                                                      ': '
                                                                      'running;\n',
                                       'internal_status_module_name': 'hsd_surface2bb_module',
                                       'name': 'hsd_surface2bb',
                                       'parent': 'topics2bb',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': True},
                                       'type': 'read_action'},
                 'hsd_wp2bb': {   'additional_arguments': None,
                                  'category': 'leaf',
                                  'children': [],
                                  'internal_status_module_code': 'MODULE '
                                                                 'hsd_wp2bb_module(blackboard)\n'
                                                                 '\tCONSTANTS\n'
                                                                 '\t\tsuccess, '
                                                                 'failure, '
                                                                 'running, '
                                                                 'invalid;\n'
                                                                 '\tDEFINE\n'
                                                                 '\t\tstatus '
                                                                 ':= active ? '
                                                                 'internal_status '
                                                                 ': invalid;\n'
                                                                 '\t\t'
                                                                 'internal_status '
                                                                 ':= '
                                                                 'blackboard.hsd_wp2bb_update_success '
                                                                 '? success : '
                                                                 'running;\n',
                                  'internal_status_module_name': 'hsd_wp2bb_module',
                                  'name': 'hsd_wp2bb',
                                  'parent': 'topics2bb',
                                  'return_possibilities': {   'failure': False,
                                                              'running': True,
                                                              'success': True},
                                  'type': 'read_action'},
                 'is_reallocation_requested': {   'additional_arguments': None,
                                                  'category': 'leaf',
                                                  'children': [],
                                                  'internal_status_module_code': 'MODULE '
                                                                                 'is_reallocation_requested_module(blackboard)\n'
                                                                                 '\t'
                                                                                 'CONSTANTS\n'
                                                                                 '\t\t'
                                                                                 'success, '
                                                                                 'failure, '
                                                                                 'running, '
                                                                                 'invalid;\n'
                                                                                 '\t'
                                                                                 'DEFINE\n'
                                                                                 '\t\t'
                                                                                 'status '
                                                                                 ':= '
                                                                                 'active '
                                                                                 '? '
                                                                                 'internal_status '
                                                                                 ': '
                                                                                 'invalid;\n'
                                                                                 '\t\t'
                                                                                 'internal_status '
                                                                                 ':= '
                                                                                 '(blackboard.dd_xy_axis_degradation_stage_1 '
                                                                                 '= '
                                                                                 'FALSE) '
                                                                                 '? '
                                                                                 'success '
                                                                                 ': '
                                                                                 'failure;\n',
                                                  'internal_status_module_name': 'is_reallocation_requested_module',
                                                  'name': 'is_reallocation_requested',
                                                  'parent': 'reallocate_check_1',
                                                  'return_possibilities': {   'failure': True,
                                                                              'running': False,
                                                                              'success': True},
                                                  'type': 'check'},
                 'is_track_pipe_mission_requested': {   'additional_arguments': None,
                                                        'category': 'leaf',
                                                        'children': [],
                                                        'internal_status_module_code': 'MODULE '
                                                                                       'is_track_pipe_mission_requested_module(blackboard)\n'
                                                                                       '\t'
                                                                                       'CONSTANTS\n'
                                                                                       '\t\t'
                                                                                       'success, '
                                                                                       'failure, '
                                                                                       'running, '
                                                                                       'invalid;\n'
                                                                                       '\t'
                                                                                       'DEFINE\n'
                                                                                       '\t\t'
                                                                                       'status '
                                                                                       ':= '
                                                                                       'active '
                                                                                       '? '
                                                                                       'internal_status '
                                                                                       ': '
                                                                                       'invalid;\n'
                                                                                       '\t\t'
                                                                                       'internal_status '
                                                                                       ':= '
                                                                                       '(blackboard.bb_mission_stage_1 '
                                                                                       '= '
                                                                                       'pipe_following) '
                                                                                       '? '
                                                                                       'success '
                                                                                       ': '
                                                                                       'failure;\n',
                                                        'internal_status_module_name': 'is_track_pipe_mission_requested_module',
                                                        'name': 'is_track_pipe_mission_requested',
                                                        'parent': 'track_pipe_mission',
                                                        'return_possibilities': {   'failure': True,
                                                                                    'running': False,
                                                                                    'success': True},
                                                        'type': 'check'},
                 'is_waypoint_requested': {   'additional_arguments': None,
                                              'category': 'leaf',
                                              'children': [],
                                              'internal_status_module_code': 'MODULE '
                                                                             'is_waypoint_requested_module(blackboard)\n'
                                                                             '\t'
                                                                             'CONSTANTS\n'
                                                                             '\t\t'
                                                                             'success, '
                                                                             'failure, '
                                                                             'running, '
                                                                             'invalid;\n'
                                                                             '\t'
                                                                             'DEFINE\n'
                                                                             '\t\t'
                                                                             'status '
                                                                             ':= '
                                                                             'active '
                                                                             '? '
                                                                             'internal_status '
                                                                             ': '
                                                                             'invalid;\n'
                                                                             '\t\t'
                                                                             'internal_status '
                                                                             ':= '
                                                                             '(blackboard.bb_mission_stage_1 '
                                                                             '= '
                                                                             'waypoint_following) '
                                                                             '? '
                                                                             'success '
                                                                             ': '
                                                                             'failure;\n',
                                              'internal_status_module_name': 'is_waypoint_requested_module',
                                              'name': 'is_waypoint_requested',
                                              'parent': 'waypoint_mission',
                                              'return_possibilities': {   'failure': True,
                                                                          'running': False,
                                                                          'success': True},
                                              'type': 'check'},
                 'lec2_am_l_2bb': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': 'MODULE '
                                                                     'lec2_am_l_2bb_module(blackboard)\n'
                                                                     '\t'
                                                                     'CONSTANTS\n'
                                                                     '\t\t'
                                                                     'success, '
                                                                     'failure, '
                                                                     'running, '
                                                                     'invalid;\n'
                                                                     '\t'
                                                                     'DEFINE\n'
                                                                     '\t\t'
                                                                     'status '
                                                                     ':= '
                                                                     'active ? '
                                                                     'internal_status '
                                                                     ': '
                                                                     'invalid;\n'
                                                                     '\t\t'
                                                                     'internal_status '
                                                                     ':= '
                                                                     'blackboard.lec2_am_l_2bb_update_success '
                                                                     '? '
                                                                     'success '
                                                                     ': '
                                                                     'running;\n',
                                      'internal_status_module_name': 'lec2_am_l_2bb_module',
                                      'name': 'lec2_am_l_2bb',
                                      'parent': 'topics2bb',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': True},
                                      'type': 'read_action'},
                 'lec2_am_r_2bb': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': 'MODULE '
                                                                     'lec2_am_r_2bb_module(blackboard)\n'
                                                                     '\t'
                                                                     'CONSTANTS\n'
                                                                     '\t\t'
                                                                     'success, '
                                                                     'failure, '
                                                                     'running, '
                                                                     'invalid;\n'
                                                                     '\t'
                                                                     'DEFINE\n'
                                                                     '\t\t'
                                                                     'status '
                                                                     ':= '
                                                                     'active ? '
                                                                     'internal_status '
                                                                     ': '
                                                                     'invalid;\n'
                                                                     '\t\t'
                                                                     'internal_status '
                                                                     ':= '
                                                                     'blackboard.lec2_am_r_2bb_update_success '
                                                                     '? '
                                                                     'success '
                                                                     ': '
                                                                     'running;\n',
                                      'internal_status_module_name': 'lec2_am_r_2bb_module',
                                      'name': 'lec2_am_r_2bb',
                                      'parent': 'topics2bb',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': True},
                                      'type': 'read_action'},
                 'lec2am_l_mapping_check': {   'additional_arguments': [   'success',
                                                                           'failure'],
                                               'category': 'decorator',
                                               'children': [   'lec2am_l_mapping_check_1'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'lec2am_l_mapping_check',
                                               'parent': 'lec2am_mapping_cmd',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': False},
                                               'type': 'X_is_Y'},
                 'lec2am_l_mapping_check_1': {   'additional_arguments': None,
                                                 'category': 'composite',
                                                 'children': [   'check_lec2am_lp',
                                                                 'pipe_mapping_disable_task'],
                                                 'internal_status_module_code': None,
                                                 'internal_status_module_name': None,
                                                 'name': 'lec2am_l_mapping_check_1',
                                                 'parent': 'lec2am_l_mapping_check',
                                                 'return_possibilities': {   'failure': True,
                                                                             'running': True,
                                                                             'success': True},
                                                 'type': 'selector_without_memory'},
                 'lec2am_l_speed_check': {   'additional_arguments': [   'success',
                                                                         'failure'],
                                             'category': 'decorator',
                                             'children': [   'lec2am_l_speed_check_1'],
                                             'internal_status_module_code': None,
                                             'internal_status_module_name': None,
                                             'name': 'lec2am_l_speed_check',
                                             'parent': 'lec2am_speed_cmd',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': True,
                                                                         'success': False},
                                             'type': 'X_is_Y'},
                 'lec2am_l_speed_check_1': {   'additional_arguments': None,
                                               'category': 'composite',
                                               'children': [   'check_lec2am_ls',
                                                               'speed_min_task'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'lec2am_l_speed_check_1',
                                               'parent': 'lec2am_l_speed_check',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': True},
                                               'type': 'selector_without_memory'},
                 'lec2am_mapping_cmd': {   'additional_arguments': None,
                                           'category': 'composite',
                                           'children': [   'lec2am_l_mapping_check',
                                                           'lec2am_r_mapping_check',
                                                           'pipe_mapping_enable_task'],
                                           'internal_status_module_code': None,
                                           'internal_status_module_name': None,
                                           'name': 'lec2am_mapping_cmd',
                                           'parent': 'tracking',
                                           'return_possibilities': {   'failure': True,
                                                                       'running': True,
                                                                       'success': True},
                                           'type': 'selector_without_memory'},
                 'lec2am_r_mapping_check': {   'additional_arguments': [   'success',
                                                                           'failure'],
                                               'category': 'decorator',
                                               'children': [   'lec2am_r_mapping_check_1'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'lec2am_r_mapping_check',
                                               'parent': 'lec2am_mapping_cmd',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': False},
                                               'type': 'X_is_Y'},
                 'lec2am_r_mapping_check_1': {   'additional_arguments': None,
                                                 'category': 'composite',
                                                 'children': [   'check_lec2am_rp',
                                                                 'pipe_mapping_disable_task_1'],
                                                 'internal_status_module_code': None,
                                                 'internal_status_module_name': None,
                                                 'name': 'lec2am_r_mapping_check_1',
                                                 'parent': 'lec2am_r_mapping_check',
                                                 'return_possibilities': {   'failure': True,
                                                                             'running': True,
                                                                             'success': True},
                                                 'type': 'selector_without_memory'},
                 'lec2am_r_speed_check': {   'additional_arguments': [   'success',
                                                                         'failure'],
                                             'category': 'decorator',
                                             'children': [   'lec2am_r_speed_check_1'],
                                             'internal_status_module_code': None,
                                             'internal_status_module_name': None,
                                             'name': 'lec2am_r_speed_check',
                                             'parent': 'lec2am_speed_cmd',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': True,
                                                                         'success': False},
                                             'type': 'X_is_Y'},
                 'lec2am_r_speed_check_1': {   'additional_arguments': None,
                                               'category': 'composite',
                                               'children': [   'check_lec2am_rs',
                                                               'speed_min_task_1'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'lec2am_r_speed_check_1',
                                               'parent': 'lec2am_r_speed_check',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': True},
                                               'type': 'selector_without_memory'},
                 'lec2am_speed_cmd': {   'additional_arguments': None,
                                         'category': 'composite',
                                         'children': [   'lec2am_l_speed_check',
                                                         'lec2am_r_speed_check',
                                                         'speed_max_task'],
                                         'internal_status_module_code': None,
                                         'internal_status_module_name': None,
                                         'name': 'lec2am_speed_cmd',
                                         'parent': 'tracking',
                                         'return_possibilities': {   'failure': True,
                                                                     'running': True,
                                                                     'success': True},
                                         'type': 'selector_without_memory'},
                 'loiter_task': {   'additional_arguments': None,
                                    'category': 'leaf',
                                    'children': [],
                                    'internal_status_module_code': None,
                                    'internal_status_module_name': None,
                                    'name': 'loiter_task',
                                    'parent': 'pipe_lost_selector_1',
                                    'return_possibilities': {   'failure': False,
                                                                'running': True,
                                                                'success': False},
                                    'type': 'action'},
                 'loiter_task_1': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'loiter_task_1',
                                      'parent': 'waypoint_end',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'action'},
                 'loiter_task_2': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'loiter_task_2',
                                      'parent': 'priorities',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'action'},
                 'mission2bb': {   'additional_arguments': None,
                                   'category': 'leaf',
                                   'children': [],
                                   'internal_status_module_code': 'MODULE '
                                                                  'mission2bb_module(blackboard)\n'
                                                                  '\t'
                                                                  'CONSTANTS\n'
                                                                  '\t\t'
                                                                  'success, '
                                                                  'failure, '
                                                                  'running, '
                                                                  'invalid;\n'
                                                                  '\tDEFINE\n'
                                                                  '\t\tstatus '
                                                                  ':= active ? '
                                                                  'internal_status '
                                                                  ': invalid;\n'
                                                                  '\t\t'
                                                                  'internal_status '
                                                                  ':= '
                                                                  'blackboard.mission2bb_update_success '
                                                                  '? success : '
                                                                  'running;\n',
                                   'internal_status_module_name': 'mission2bb_module',
                                   'name': 'mission2bb',
                                   'parent': 'topics2bb',
                                   'return_possibilities': {   'failure': False,
                                                               'running': True,
                                                               'success': True},
                                   'type': 'read_action'},
                 'mission_server': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'mission_server',
                                       'parent': 'BlueROV',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'next_mission': {   'additional_arguments': None,
                                     'category': 'leaf',
                                     'children': [],
                                     'internal_status_module_code': None,
                                     'internal_status_module_name': None,
                                     'name': 'next_mission',
                                     'parent': 'waypoint_end',
                                     'return_possibilities': {   'failure': False,
                                                                 'running': False,
                                                                 'success': True},
                                     'type': 'action'},
                 'obstacle_avoidance': {   'additional_arguments': None,
                                           'category': 'leaf',
                                           'children': [],
                                           'internal_status_module_code': None,
                                           'internal_status_module_name': None,
                                           'name': 'obstacle_avoidance',
                                           'parent': 'BlueROV',
                                           'return_possibilities': {   'failure': False,
                                                                       'running': True,
                                                                       'success': False},
                                           'type': 'action'},
                 'obstacle_standoff_check': {   'additional_arguments': [   'success',
                                                                            'failure'],
                                                'category': 'decorator',
                                                'children': [   'obstacle_standoff_check_1'],
                                                'internal_status_module_code': None,
                                                'internal_status_module_name': None,
                                                'name': 'obstacle_standoff_check',
                                                'parent': 'priorities',
                                                'return_possibilities': {   'failure': True,
                                                                            'running': True,
                                                                            'success': False},
                                                'type': 'X_is_Y'},
                 'obstacle_standoff_check_1': {   'additional_arguments': None,
                                                  'category': 'composite',
                                                  'children': [   'obstacle_standoff_fs',
                                                                  'surface_task_4'],
                                                  'internal_status_module_code': None,
                                                  'internal_status_module_name': None,
                                                  'name': 'obstacle_standoff_check_1',
                                                  'parent': 'obstacle_standoff_check',
                                                  'return_possibilities': {   'failure': True,
                                                                              'running': True,
                                                                              'success': True},
                                                  'type': 'selector_without_memory'},
                 'obstacle_standoff_fs': {   'additional_arguments': None,
                                             'category': 'leaf',
                                             'children': [],
                                             'internal_status_module_code': 'MODULE '
                                                                            'obstacle_standoff_fs_module(blackboard)\n'
                                                                            '\t'
                                                                            'CONSTANTS\n'
                                                                            '\t\t'
                                                                            'success, '
                                                                            'failure, '
                                                                            'running, '
                                                                            'invalid;\n'
                                                                            '\t'
                                                                            'DEFINE\n'
                                                                            '\t\t'
                                                                            'status '
                                                                            ':= '
                                                                            'active '
                                                                            '? '
                                                                            'internal_status '
                                                                            ': '
                                                                            'invalid;\n'
                                                                            '\t\t'
                                                                            'internal_status '
                                                                            ':= '
                                                                            '(blackboard.obstacle_standoff_warning_stage_1 '
                                                                            '= '
                                                                            'FALSE) '
                                                                            '? '
                                                                            'success '
                                                                            ': '
                                                                            'failure;\n',
                                             'internal_status_module_name': 'obstacle_standoff_fs_module',
                                             'name': 'obstacle_standoff_fs',
                                             'parent': 'obstacle_standoff_check_1',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': False,
                                                                         'success': True},
                                             'type': 'check'},
                 'pipe_lost2bb': {   'additional_arguments': None,
                                     'category': 'leaf',
                                     'children': [],
                                     'internal_status_module_code': 'MODULE '
                                                                    'pipe_lost2bb_module(blackboard)\n'
                                                                    '\t'
                                                                    'CONSTANTS\n'
                                                                    '\t\t'
                                                                    'success, '
                                                                    'failure, '
                                                                    'running, '
                                                                    'invalid;\n'
                                                                    '\tDEFINE\n'
                                                                    '\t\t'
                                                                    'status := '
                                                                    'active ? '
                                                                    'internal_status '
                                                                    ': '
                                                                    'invalid;\n'
                                                                    '\t\t'
                                                                    'internal_status '
                                                                    ':= '
                                                                    'blackboard.pipe_lost2bb_update_success '
                                                                    '? success '
                                                                    ': '
                                                                    'running;\n',
                                     'internal_status_module_name': 'pipe_lost2bb_module',
                                     'name': 'pipe_lost2bb',
                                     'parent': 'topics2bb',
                                     'return_possibilities': {   'failure': False,
                                                                 'running': True,
                                                                 'success': True},
                                     'type': 'read_action'},
                 'pipe_lost_selector': {   'additional_arguments': [   'success',
                                                                       'failure'],
                                           'category': 'decorator',
                                           'children': ['pipe_lost_selector_1'],
                                           'internal_status_module_code': None,
                                           'internal_status_module_name': None,
                                           'name': 'pipe_lost_selector',
                                           'parent': 'priorities',
                                           'return_possibilities': {   'failure': True,
                                                                       'running': True,
                                                                       'success': False},
                                           'type': 'X_is_Y'},
                 'pipe_lost_selector_1': {   'additional_arguments': None,
                                             'category': 'composite',
                                             'children': [   'check_pipe_post',
                                                             'loiter_task'],
                                             'internal_status_module_code': None,
                                             'internal_status_module_name': None,
                                             'name': 'pipe_lost_selector_1',
                                             'parent': 'pipe_lost_selector',
                                             'return_possibilities': {   'failure': True,
                                                                         'running': True,
                                                                         'success': True},
                                             'type': 'selector_without_memory'},
                 'pipe_mapping_disable_task': {   'additional_arguments': None,
                                                  'category': 'leaf',
                                                  'children': [],
                                                  'internal_status_module_code': None,
                                                  'internal_status_module_name': None,
                                                  'name': 'pipe_mapping_disable_task',
                                                  'parent': 'lec2am_l_mapping_check_1',
                                                  'return_possibilities': {   'failure': False,
                                                                              'running': True,
                                                                              'success': False},
                                                  'type': 'action'},
                 'pipe_mapping_disable_task_1': {   'additional_arguments': None,
                                                    'category': 'leaf',
                                                    'children': [],
                                                    'internal_status_module_code': None,
                                                    'internal_status_module_name': None,
                                                    'name': 'pipe_mapping_disable_task_1',
                                                    'parent': 'lec2am_r_mapping_check_1',
                                                    'return_possibilities': {   'failure': False,
                                                                                'running': True,
                                                                                'success': False},
                                                    'type': 'action'},
                 'pipe_mapping_enable_task': {   'additional_arguments': None,
                                                 'category': 'leaf',
                                                 'children': [],
                                                 'internal_status_module_code': None,
                                                 'internal_status_module_name': None,
                                                 'name': 'pipe_mapping_enable_task',
                                                 'parent': 'lec2am_mapping_cmd',
                                                 'return_possibilities': {   'failure': False,
                                                                             'running': False,
                                                                             'success': True},
                                                 'type': 'action'},
                 'priorities': {   'additional_arguments': None,
                                   'category': 'composite',
                                   'children': [   'battery_check',
                                                   'sensor_failure_selector',
                                                   'emergency_stop_check',
                                                   'home_reached_selector',
                                                   'obstacle_standoff_check',
                                                   'rth_selector',
                                                   'geofence_selector',
                                                   'pipe_lost_selector',
                                                   'track_pipe_mission',
                                                   'waypoint_mission',
                                                   'loiter_task_2'],
                                   'internal_status_module_code': None,
                                   'internal_status_module_name': None,
                                   'name': 'priorities',
                                   'parent': 'BlueROV',
                                   'return_possibilities': {   'failure': True,
                                                               'running': True,
                                                               'success': True},
                                   'type': 'selector_without_memory'},
                 'reallocate_check': {   'additional_arguments': [   'success',
                                                                     'failure'],
                                         'category': 'decorator',
                                         'children': ['reallocate_check_1'],
                                         'internal_status_module_code': None,
                                         'internal_status_module_name': None,
                                         'name': 'reallocate_check',
                                         'parent': 'dd_tasks',
                                         'return_possibilities': {   'failure': True,
                                                                     'running': True,
                                                                     'success': False},
                                         'type': 'X_is_Y'},
                 'reallocate_check_1': {   'additional_arguments': None,
                                           'category': 'composite',
                                           'children': [   'is_reallocation_requested',
                                                           'reallocate_task'],
                                           'internal_status_module_code': None,
                                           'internal_status_module_name': None,
                                           'name': 'reallocate_check_1',
                                           'parent': 'reallocate_check',
                                           'return_possibilities': {   'failure': True,
                                                                       'running': True,
                                                                       'success': True},
                                           'type': 'selector_without_memory'},
                 'reallocate_task': {   'additional_arguments': None,
                                        'category': 'leaf',
                                        'children': [],
                                        'internal_status_module_code': None,
                                        'internal_status_module_name': None,
                                        'name': 'reallocate_task',
                                        'parent': 'reallocate_check_1',
                                        'return_possibilities': {   'failure': False,
                                                                    'running': True,
                                                                    'success': False},
                                        'type': 'action'},
                 'rth2bb': {   'additional_arguments': None,
                               'category': 'leaf',
                               'children': [],
                               'internal_status_module_code': 'MODULE '
                                                              'rth2bb_module(blackboard)\n'
                                                              '\tCONSTANTS\n'
                                                              '\t\tsuccess, '
                                                              'failure, '
                                                              'running, '
                                                              'invalid;\n'
                                                              '\tDEFINE\n'
                                                              '\t\tstatus := '
                                                              'active ? '
                                                              'internal_status '
                                                              ': invalid;\n'
                                                              '\t\t'
                                                              'internal_status '
                                                              ':= '
                                                              'blackboard.rth2bb_update_success '
                                                              '? success : '
                                                              'running;\n',
                               'internal_status_module_name': 'rth2bb_module',
                               'name': 'rth2bb',
                               'parent': 'topics2bb',
                               'return_possibilities': {   'failure': False,
                                                           'running': True,
                                                           'success': True},
                               'type': 'read_action'},
                 'rth_par': {   'additional_arguments': None,
                                'category': 'composite',
                                'children': ['rth_task', 'home2bb'],
                                'internal_status_module_code': None,
                                'internal_status_module_name': None,
                                'name': 'rth_par',
                                'parent': 'rth_selector_1',
                                'return_possibilities': {   'failure': True,
                                                            'running': True,
                                                            'success': True},
                                'type': 'parallel_success_on_all_without_memory'},
                 'rth_par_1': {   'additional_arguments': None,
                                  'category': 'composite',
                                  'children': ['rth_task_1', 'home2bb_1'],
                                  'internal_status_module_code': None,
                                  'internal_status_module_name': None,
                                  'name': 'rth_par_1',
                                  'parent': 'geofence_selector_1',
                                  'return_possibilities': {   'failure': True,
                                                              'running': True,
                                                              'success': True},
                                  'type': 'parallel_success_on_all_without_memory'},
                 'rth_selector': {   'additional_arguments': [   'success',
                                                                 'failure'],
                                     'category': 'decorator',
                                     'children': ['rth_selector_1'],
                                     'internal_status_module_code': None,
                                     'internal_status_module_name': None,
                                     'name': 'rth_selector',
                                     'parent': 'priorities',
                                     'return_possibilities': {   'failure': True,
                                                                 'running': True,
                                                                 'success': False},
                                     'type': 'X_is_Y'},
                 'rth_selector_1': {   'additional_arguments': None,
                                       'category': 'composite',
                                       'children': ['check_rth', 'rth_par'],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'rth_selector_1',
                                       'parent': 'rth_selector',
                                       'return_possibilities': {   'failure': True,
                                                                   'running': True,
                                                                   'success': True},
                                       'type': 'selector_without_memory'},
                 'rth_task': {   'additional_arguments': None,
                                 'category': 'leaf',
                                 'children': [],
                                 'internal_status_module_code': None,
                                 'internal_status_module_name': None,
                                 'name': 'rth_task',
                                 'parent': 'rth_par',
                                 'return_possibilities': {   'failure': False,
                                                             'running': True,
                                                             'success': False},
                                 'type': 'action'},
                 'rth_task_1': {   'additional_arguments': None,
                                   'category': 'leaf',
                                   'children': [],
                                   'internal_status_module_code': None,
                                   'internal_status_module_name': None,
                                   'name': 'rth_task_1',
                                   'parent': 'rth_par_1',
                                   'return_possibilities': {   'failure': False,
                                                               'running': True,
                                                               'success': False},
                                   'type': 'action'},
                 'rtreach2bb': {   'additional_arguments': None,
                                   'category': 'leaf',
                                   'children': [],
                                   'internal_status_module_code': 'MODULE '
                                                                  'rtreach2bb_module(blackboard)\n'
                                                                  '\t'
                                                                  'CONSTANTS\n'
                                                                  '\t\t'
                                                                  'success, '
                                                                  'failure, '
                                                                  'running, '
                                                                  'invalid;\n'
                                                                  '\tDEFINE\n'
                                                                  '\t\tstatus '
                                                                  ':= active ? '
                                                                  'internal_status '
                                                                  ': invalid;\n'
                                                                  '\t\t'
                                                                  'internal_status '
                                                                  ':= '
                                                                  'blackboard.rtreach2bb_update_success '
                                                                  '? success : '
                                                                  'running;\n',
                                   'internal_status_module_name': 'rtreach2bb_module',
                                   'name': 'rtreach2bb',
                                   'parent': 'topics2bb',
                                   'return_possibilities': {   'failure': False,
                                                               'running': True,
                                                               'success': True},
                                   'type': 'read_action'},
                 'rtreach_index2bb': {   'additional_arguments': None,
                                         'category': 'leaf',
                                         'children': [],
                                         'internal_status_module_code': 'MODULE '
                                                                        'rtreach_index2bb_module(blackboard)\n'
                                                                        '\t'
                                                                        'CONSTANTS\n'
                                                                        '\t\t'
                                                                        'success, '
                                                                        'failure, '
                                                                        'running, '
                                                                        'invalid;\n'
                                                                        '\t'
                                                                        'DEFINE\n'
                                                                        '\t\t'
                                                                        'status '
                                                                        ':= '
                                                                        'active '
                                                                        '? '
                                                                        'internal_status '
                                                                        ': '
                                                                        'invalid;\n'
                                                                        '\t\t'
                                                                        'internal_status '
                                                                        ':= '
                                                                        'blackboard.rtreach_index2bb_update_success '
                                                                        '? '
                                                                        'success '
                                                                        ': '
                                                                        'running;\n',
                                         'internal_status_module_name': 'rtreach_index2bb_module',
                                         'name': 'rtreach_index2bb',
                                         'parent': 'topics2bb',
                                         'return_possibilities': {   'failure': False,
                                                                     'running': True,
                                                                     'success': True},
                                         'type': 'read_action'},
                 'rtreach_unsafe_value2bb': {   'additional_arguments': None,
                                                'category': 'leaf',
                                                'children': [],
                                                'internal_status_module_code': 'MODULE '
                                                                               'rtreach_unsafe_value2bb_module(blackboard)\n'
                                                                               '\t'
                                                                               'CONSTANTS\n'
                                                                               '\t\t'
                                                                               'success, '
                                                                               'failure, '
                                                                               'running, '
                                                                               'invalid;\n'
                                                                               '\t'
                                                                               'DEFINE\n'
                                                                               '\t\t'
                                                                               'status '
                                                                               ':= '
                                                                               'active '
                                                                               '? '
                                                                               'internal_status '
                                                                               ': '
                                                                               'invalid;\n'
                                                                               '\t\t'
                                                                               'internal_status '
                                                                               ':= '
                                                                               'blackboard.rtreach_unsafe_value2bb_update_success '
                                                                               '? '
                                                                               'success '
                                                                               ': '
                                                                               'running;\n',
                                                'internal_status_module_name': 'rtreach_unsafe_value2bb_module',
                                                'name': 'rtreach_unsafe_value2bb',
                                                'parent': 'topics2bb',
                                                'return_possibilities': {   'failure': False,
                                                                            'running': True,
                                                                            'success': True},
                                                'type': 'read_action'},
                 'sensor_failure2bb': {   'additional_arguments': None,
                                          'category': 'leaf',
                                          'children': [],
                                          'internal_status_module_code': 'MODULE '
                                                                         'sensor_failure2bb_module(blackboard)\n'
                                                                         '\t'
                                                                         'CONSTANTS\n'
                                                                         '\t\t'
                                                                         'success, '
                                                                         'failure, '
                                                                         'running, '
                                                                         'invalid;\n'
                                                                         '\t'
                                                                         'DEFINE\n'
                                                                         '\t\t'
                                                                         'status '
                                                                         ':= '
                                                                         'active '
                                                                         '? '
                                                                         'internal_status '
                                                                         ': '
                                                                         'invalid;\n'
                                                                         '\t\t'
                                                                         'internal_status '
                                                                         ':= '
                                                                         'blackboard.sensor_failure2bb_update_success '
                                                                         '? '
                                                                         'success '
                                                                         ': '
                                                                         'running;\n',
                                          'internal_status_module_name': 'sensor_failure2bb_module',
                                          'name': 'sensor_failure2bb',
                                          'parent': 'topics2bb',
                                          'return_possibilities': {   'failure': False,
                                                                      'running': True,
                                                                      'success': True},
                                          'type': 'read_action'},
                 'sensor_failure_selector': {   'additional_arguments': [   'success',
                                                                            'failure'],
                                                'category': 'decorator',
                                                'children': [   'sensor_failure_selector_1'],
                                                'internal_status_module_code': None,
                                                'internal_status_module_name': None,
                                                'name': 'sensor_failure_selector',
                                                'parent': 'priorities',
                                                'return_possibilities': {   'failure': True,
                                                                            'running': True,
                                                                            'success': False},
                                                'type': 'X_is_Y'},
                 'sensor_failure_selector_1': {   'additional_arguments': None,
                                                  'category': 'composite',
                                                  'children': [   'check_sensor_failure',
                                                                  'surface_task_1'],
                                                  'internal_status_module_code': None,
                                                  'internal_status_module_name': None,
                                                  'name': 'sensor_failure_selector_1',
                                                  'parent': 'sensor_failure_selector',
                                                  'return_possibilities': {   'failure': True,
                                                                              'running': True,
                                                                              'success': True},
                                                  'type': 'selector_without_memory'},
                 'speed_max_task': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'speed_max_task',
                                       'parent': 'lec2am_speed_cmd',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'speed_min_task': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'speed_min_task',
                                       'parent': 'lec2am_l_speed_check_1',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'speed_min_task_1': {   'additional_arguments': None,
                                         'category': 'leaf',
                                         'children': [],
                                         'internal_status_module_code': None,
                                         'internal_status_module_name': None,
                                         'name': 'speed_min_task_1',
                                         'parent': 'lec2am_r_speed_check_1',
                                         'return_possibilities': {   'failure': False,
                                                                     'running': True,
                                                                     'success': False},
                                         'type': 'action'},
                 'surface_task': {   'additional_arguments': None,
                                     'category': 'leaf',
                                     'children': [],
                                     'internal_status_module_code': None,
                                     'internal_status_module_name': None,
                                     'name': 'surface_task',
                                     'parent': 'battery_check_1',
                                     'return_possibilities': {   'failure': False,
                                                                 'running': True,
                                                                 'success': False},
                                     'type': 'action'},
                 'surface_task_1': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'surface_task_1',
                                       'parent': 'sensor_failure_selector_1',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'surface_task_2': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'surface_task_2',
                                       'parent': 'emergency_stop_tasks',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'surface_task_3': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'surface_task_3',
                                       'parent': 'home_reached_selector_1',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'surface_task_4': {   'additional_arguments': None,
                                       'category': 'leaf',
                                       'children': [],
                                       'internal_status_module_code': None,
                                       'internal_status_module_name': None,
                                       'name': 'surface_task_4',
                                       'parent': 'obstacle_standoff_check_1',
                                       'return_possibilities': {   'failure': False,
                                                                   'running': True,
                                                                   'success': False},
                                       'type': 'action'},
                 'topics2bb': {   'additional_arguments': None,
                                  'category': 'composite',
                                  'children': [   'battery2bb',
                                                  'rth2bb',
                                                  'geofence2bb',
                                                  'lec2_am_r_2bb',
                                                  'lec2_am_l_2bb',
                                                  'pipe_lost2bb',
                                                  'sensor_failure2bb',
                                                  'waypoints_completed2bb',
                                                  'mission2bb',
                                                  'ddlec2bb',
                                                  'fls2bb',
                                                  'fls_warning2bb',
                                                  'hsd_pipe2bb',
                                                  'hsd_wp2bb',
                                                  'hsd_rth2bb',
                                                  'hsd_surface2bb',
                                                  'rtreach2bb',
                                                  'rtreach_unsafe_value2bb',
                                                  'rtreach_index2bb'],
                                  'internal_status_module_code': None,
                                  'internal_status_module_name': None,
                                  'name': 'topics2bb',
                                  'parent': 'BlueROV',
                                  'return_possibilities': {   'failure': True,
                                                              'running': True,
                                                              'success': True},
                                  'type': 'parallel_success_on_all_without_memory'},
                 'track_pipe_mission': {   'additional_arguments': None,
                                           'category': 'composite',
                                           'children': [   'is_track_pipe_mission_requested',
                                                           'tracking',
                                                           'track_pipe_mission_end'],
                                           'internal_status_module_code': None,
                                           'internal_status_module_name': None,
                                           'name': 'track_pipe_mission',
                                           'parent': 'priorities',
                                           'return_possibilities': {   'failure': True,
                                                                       'running': True,
                                                                       'success': True},
                                           'type': 'sequence_with_memory'},
                 'track_pipe_mission_end': {   'additional_arguments': None,
                                               'category': 'composite',
                                               'children': ['evaluate'],
                                               'internal_status_module_code': None,
                                               'internal_status_module_name': None,
                                               'name': 'track_pipe_mission_end',
                                               'parent': 'track_pipe_mission',
                                               'return_possibilities': {   'failure': True,
                                                                           'running': True,
                                                                           'success': True},
                                               'type': 'sequence_with_memory'},
                 'tracking': {   'additional_arguments': None,
                                 'category': 'composite',
                                 'children': [   'tracking_task',
                                                 'lec2am_speed_cmd',
                                                 'lec2am_mapping_cmd'],
                                 'internal_status_module_code': None,
                                 'internal_status_module_name': None,
                                 'name': 'tracking',
                                 'parent': 'track_pipe_mission',
                                 'return_possibilities': {   'failure': True,
                                                             'running': True,
                                                             'success': True},
                                 'type': 'parallel_success_on_all_without_memory'},
                 'tracking_task': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'tracking_task',
                                      'parent': 'tracking',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'action'},
                 'waypoint_end': {   'additional_arguments': None,
                                     'category': 'composite',
                                     'children': [   'next_mission',
                                                     'loiter_task_1'],
                                     'internal_status_module_code': None,
                                     'internal_status_module_name': None,
                                     'name': 'waypoint_end',
                                     'parent': 'waypoints_sif_1',
                                     'return_possibilities': {   'failure': True,
                                                                 'running': True,
                                                                 'success': True},
                                     'type': 'sequence_with_memory'},
                 'waypoint_mission': {   'additional_arguments': None,
                                         'category': 'composite',
                                         'children': [   'is_waypoint_requested',
                                                         'waypoint_selector'],
                                         'internal_status_module_code': None,
                                         'internal_status_module_name': None,
                                         'name': 'waypoint_mission',
                                         'parent': 'priorities',
                                         'return_possibilities': {   'failure': True,
                                                                     'running': True,
                                                                     'success': True},
                                         'type': 'sequence_with_memory'},
                 'waypoint_selector': {   'additional_arguments': None,
                                          'category': 'composite',
                                          'children': [   'waypoints_sif',
                                                          'waypoint_task'],
                                          'internal_status_module_code': None,
                                          'internal_status_module_name': None,
                                          'name': 'waypoint_selector',
                                          'parent': 'waypoint_mission',
                                          'return_possibilities': {   'failure': True,
                                                                      'running': True,
                                                                      'success': True},
                                          'type': 'selector_without_memory'},
                 'waypoint_task': {   'additional_arguments': None,
                                      'category': 'leaf',
                                      'children': [],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'waypoint_task',
                                      'parent': 'waypoint_selector',
                                      'return_possibilities': {   'failure': False,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'action'},
                 'waypoints_completed2bb': {   'additional_arguments': None,
                                               'category': 'leaf',
                                               'children': [],
                                               'internal_status_module_code': 'MODULE '
                                                                              'waypoints_completed2bb_module(blackboard)\n'
                                                                              '\t'
                                                                              'CONSTANTS\n'
                                                                              '\t\t'
                                                                              'success, '
                                                                              'failure, '
                                                                              'running, '
                                                                              'invalid;\n'
                                                                              '\t'
                                                                              'DEFINE\n'
                                                                              '\t\t'
                                                                              'status '
                                                                              ':= '
                                                                              'active '
                                                                              '? '
                                                                              'internal_status '
                                                                              ': '
                                                                              'invalid;\n'
                                                                              '\t\t'
                                                                              'internal_status '
                                                                              ':= '
                                                                              'blackboard.waypoints_completed2bb_update_success '
                                                                              '? '
                                                                              'success '
                                                                              ': '
                                                                              'running;\n',
                                               'internal_status_module_name': 'waypoints_completed2bb_module',
                                               'name': 'waypoints_completed2bb',
                                               'parent': 'topics2bb',
                                               'return_possibilities': {   'failure': False,
                                                                           'running': True,
                                                                           'success': True},
                                               'type': 'read_action'},
                 'waypoints_sif': {   'additional_arguments': [   'success',
                                                                  'failure'],
                                      'category': 'decorator',
                                      'children': ['waypoints_sif_1'],
                                      'internal_status_module_code': None,
                                      'internal_status_module_name': None,
                                      'name': 'waypoints_sif',
                                      'parent': 'waypoint_selector',
                                      'return_possibilities': {   'failure': True,
                                                                  'running': True,
                                                                  'success': False},
                                      'type': 'X_is_Y'},
                 'waypoints_sif_1': {   'additional_arguments': None,
                                        'category': 'composite',
                                        'children': [   'check_waypoints_completed',
                                                        'waypoint_end'],
                                        'internal_status_module_code': None,
                                        'internal_status_module_name': None,
                                        'name': 'waypoints_sif_1',
                                        'parent': 'waypoints_sif',
                                        'return_possibilities': {   'failure': True,
                                                                    'running': True,
                                                                    'success': True},
                                        'type': 'selector_without_memory'}},
    'variables': {   'HSD_out': {   'custom_value_range': '{uuv_min_speed, '
                                                          'uuv_max_speed}',
                                    'environment_update': None,
                                    'init_value': [('TRUE', 'uuv_min_speed')],
                                    'max_value': 1,
                                    'min_value': 0,
                                    'mode': 'VAR',
                                    'name': 'HSD_out',
                                    'next_value': [   (   'speed_min_task',
                                                          [   (   'TRUE',
                                                                  'uuv_min_speed')]),
                                                      (   'speed_min_task_1',
                                                          [   (   'TRUE',
                                                                  'uuv_min_speed')]),
                                                      (   'speed_max_task',
                                                          [   (   'TRUE',
                                                                  'uuv_max_speed')])]},
                     'battery': {   'custom_value_range': None,
                                    'environment_update': None,
                                    'init_value': [('TRUE', '1')],
                                    'max_value': 1,
                                    'min_value': 0,
                                    'mode': 'VAR',
                                    'name': 'battery',
                                    'next_value': [   (   'battery2bb',
                                                          [   (   'TRUE',
                                                                  '{0, 1}')])]},
                     'battery2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': [   (   'TRUE',
                                                                                    '{TRUE, '
                                                                                    'FALSE}')],
                                                      'init_value': None,
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'battery2bb_update_success',
                                                      'next_value': [],
                                                      'read_by': [True]},
                     'battery_low_warning': {   'custom_value_range': '{TRUE, '
                                                                      'FALSE}',
                                                'environment_update': None,
                                                'init_value': [   (   'TRUE',
                                                                      'FALSE')],
                                                'max_value': 1,
                                                'min_value': 0,
                                                'mode': 'VAR',
                                                'name': 'battery_low_warning',
                                                'next_value': [   (   'battery2bb',
                                                                      [   (   '(battery2bb_update_success '
                                                                              '= '
                                                                              'FALSE)',
                                                                              'battery_low_warning'),
                                                                          (   'TRUE',
                                                                              'next(battery_stage_1) '
                                                                              '<= '
                                                                              '0')])]},
                     'bb_fls_warning': {   'custom_value_range': '{TRUE, '
                                                                 'FALSE}',
                                           'environment_update': None,
                                           'init_value': [('TRUE', 'FALSE')],
                                           'max_value': 1,
                                           'min_value': 0,
                                           'mode': 'VAR',
                                           'name': 'bb_fls_warning',
                                           'next_value': [   (   'fls_warning2bb',
                                                                 [   (   '(fls_warning2bb_update_success '
                                                                         '= '
                                                                         'FALSE)',
                                                                         'bb_fls_warning'),
                                                                     (   'TRUE',
                                                                         'bb_fls_warning '
                                                                         '| '
                                                                         'next(obstacle_in_view_stage_1)')])]},
                     'bb_geofence': {   'custom_value_range': '{TRUE, FALSE}',
                                        'environment_update': None,
                                        'init_value': [('TRUE', 'FALSE')],
                                        'max_value': 1,
                                        'min_value': 0,
                                        'mode': 'VAR',
                                        'name': 'bb_geofence',
                                        'next_value': [   (   'geofence2bb',
                                                              [   (   'TRUE',
                                                                      '{TRUE, '
                                                                      'FALSE}')])]},
                     'bb_geofence_warning': {   'custom_value_range': '{TRUE, '
                                                                      'FALSE}',
                                                'environment_update': None,
                                                'init_value': [   (   'TRUE',
                                                                      'FALSE')],
                                                'max_value': 1,
                                                'min_value': 0,
                                                'mode': 'VAR',
                                                'name': 'bb_geofence_warning',
                                                'next_value': [   (   'geofence2bb',
                                                                      [   (   '(geofence2bb_update_success '
                                                                              '= '
                                                                              'FALSE)',
                                                                              'bb_geofence_warning'),
                                                                          (   'TRUE',
                                                                              'bb_geofence_warning '
                                                                              '| '
                                                                              'next(bb_geofence_stage_1)')])]},
                     'bb_home_dist': {   'custom_value_range': '{10, 100}',
                                         'environment_update': None,
                                         'init_value': [('TRUE', '10')],
                                         'max_value': 1,
                                         'min_value': 0,
                                         'mode': 'VAR',
                                         'name': 'bb_home_dist',
                                         'next_value': [   (   'home2bb',
                                                               [   (   'TRUE',
                                                                       '{10, '
                                                                       '100}')]),
                                                           (   'home2bb_1',
                                                               [   (   'TRUE',
                                                                       '{10, '
                                                                       '100}')])]},
                     'bb_home_reached': {   'custom_value_range': '{TRUE, '
                                                                  'FALSE}',
                                            'environment_update': None,
                                            'init_value': [('TRUE', 'FALSE')],
                                            'max_value': 1,
                                            'min_value': 0,
                                            'mode': 'VAR',
                                            'name': 'bb_home_reached',
                                            'next_value': [   (   'home2bb',
                                                                  [   (   '(home2bb_update_success '
                                                                          '= '
                                                                          'FALSE)',
                                                                          'bb_home_reached'),
                                                                      (   'TRUE',
                                                                          'bb_home_reached '
                                                                          '| '
                                                                          'next(bb_home_dist_stage_1) '
                                                                          '< '
                                                                          '15')]),
                                                              (   'home2bb_1',
                                                                  [   (   '(home2bb_1_update_success '
                                                                          '= '
                                                                          'FALSE)',
                                                                          'bb_home_reached_stage_1'),
                                                                      (   'TRUE',
                                                                          'next(bb_home_reached_stage_1) '
                                                                          '| '
                                                                          'next(bb_home_dist_stage_2) '
                                                                          '< '
                                                                          '15')])]},
                     'bb_mission': {   'custom_value_range': '{unknown, '
                                                             'loitering, '
                                                             'pipe_following, '
                                                             'waypoint_following, '
                                                             'path_following, '
                                                             'collision_avoidance, '
                                                             'assurance, '
                                                             'terminal, '
                                                             'e_stop}',
                                       'environment_update': None,
                                       'init_value': [('TRUE', 'unknown')],
                                       'max_value': 1,
                                       'min_value': 0,
                                       'mode': 'VAR',
                                       'name': 'bb_mission',
                                       'next_value': [   (   'mission2bb',
                                                             [   (   'TRUE',
                                                                     '{unknown, '
                                                                     'loitering, '
                                                                     'pipe_following, '
                                                                     'waypoint_following, '
                                                                     'path_following, '
                                                                     'collision_avoidance, '
                                                                     'assurance, '
                                                                     'terminal, '
                                                                     'e_stop}')])]},
                     'bb_obstacle_warning': {   'custom_value_range': '{TRUE, '
                                                                      'FALSE}',
                                                'environment_update': None,
                                                'init_value': [   (   'TRUE',
                                                                      'FALSE')],
                                                'max_value': 1,
                                                'min_value': 0,
                                                'mode': 'VAR',
                                                'name': 'bb_obstacle_warning',
                                                'next_value': [   (   'obstacle_avoidance',
                                                                      [   (   'TRUE',
                                                                              '{TRUE, '
                                                                              'FALSE}')])]},
                     'bb_pipe_lost_warning': {   'custom_value_range': '{TRUE, '
                                                                       'FALSE}',
                                                 'environment_update': None,
                                                 'init_value': [   (   'TRUE',
                                                                       'FALSE')],
                                                 'max_value': 1,
                                                 'min_value': 0,
                                                 'mode': 'VAR',
                                                 'name': 'bb_pipe_lost_warning',
                                                 'next_value': [   (   'pipe_lost2bb',
                                                                       [   (   '(pipe_lost2bb_update_success '
                                                                               '= '
                                                                               'FALSE)',
                                                                               'bb_pipe_lost_warning'),
                                                                           (   'TRUE',
                                                                               'next(bb_pipelost_stage_1) '
                                                                               '& '
                                                                               'bb_mission '
                                                                               '= '
                                                                               'pipe_following')])]},
                     'bb_pipe_mapping_enable': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'bb_pipe_mapping_enable',
                                                   'next_value': []},
                     'bb_pipelost': {   'custom_value_range': '{TRUE, FALSE}',
                                        'environment_update': None,
                                        'init_value': [('TRUE', 'FALSE')],
                                        'max_value': 1,
                                        'min_value': 0,
                                        'mode': 'VAR',
                                        'name': 'bb_pipelost',
                                        'next_value': [   (   'pipe_lost2bb',
                                                              [   (   'TRUE',
                                                                      '{TRUE, '
                                                                      'FALSE}')])]},
                     'bb_rth': {   'custom_value_range': '{TRUE, FALSE}',
                                   'environment_update': None,
                                   'init_value': [('TRUE', 'FALSE')],
                                   'max_value': 1,
                                   'min_value': 0,
                                   'mode': 'VAR',
                                   'name': 'bb_rth',
                                   'next_value': [   (   'rth2bb',
                                                         [   (   'TRUE',
                                                                 '{TRUE, '
                                                                 'FALSE}')])]},
                     'bb_rth_warning': {   'custom_value_range': '{TRUE, '
                                                                 'FALSE}',
                                           'environment_update': None,
                                           'init_value': [('TRUE', 'FALSE')],
                                           'max_value': 1,
                                           'min_value': 0,
                                           'mode': 'VAR',
                                           'name': 'bb_rth_warning',
                                           'next_value': [   (   'rth2bb',
                                                                 [   (   '(rth2bb_update_success '
                                                                         '= '
                                                                         'FALSE)',
                                                                         'bb_rth_warning'),
                                                                     (   'TRUE',
                                                                         'bb_rth_warning '
                                                                         '| '
                                                                         'next(bb_rth_stage_1)')]),
                                                             (   'mission_server',
                                                                 [   (   'next_mission',
                                                                         'next(mission_idx_stage_1) '
                                                                         '= '
                                                                         'max_mission'),
                                                                     (   'TRUE',
                                                                         'next(bb_rth_warning_stage_1)')])]},
                     'bb_sensor_failure': {   'custom_value_range': '{TRUE, '
                                                                    'FALSE}',
                                              'environment_update': None,
                                              'init_value': [('TRUE', 'FALSE')],
                                              'max_value': 1,
                                              'min_value': 0,
                                              'mode': 'VAR',
                                              'name': 'bb_sensor_failure',
                                              'next_value': [   (   'sensor_failure2bb',
                                                                    [   (   'TRUE',
                                                                            '{TRUE, '
                                                                            'FALSE}')])]},
                     'bb_sensor_failure_warning': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': None,
                                                      'init_value': [   (   'TRUE',
                                                                            'FALSE')],
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'bb_sensor_failure_warning',
                                                      'next_value': [   (   'sensor_failure2bb',
                                                                            [   (   '(sensor_failure2bb_update_success '
                                                                                    '= '
                                                                                    'FALSE)',
                                                                                    'bb_sensor_failure_warning'),
                                                                                (   'TRUE',
                                                                                    'bb_sensor_failure_warning '
                                                                                    '| '
                                                                                    'next(bb_sensor_failure_stage_1)')])]},
                     'bb_waypoints_completed': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'bb_waypoints_completed',
                                                   'next_value': [   (   'waypoints_completed2bb',
                                                                         [   (   'TRUE',
                                                                                 '{TRUE, '
                                                                                 'FALSE}')])]},
                     'dd_output': {   'custom_value_range': '{safe, xy_warn, '
                                                            'z_warn}',
                                      'environment_update': None,
                                      'init_value': [('TRUE', 'safe')],
                                      'max_value': 1,
                                      'min_value': 0,
                                      'mode': 'VAR',
                                      'name': 'dd_output',
                                      'next_value': [   (   'ddlec2bb',
                                                            [   (   'TRUE',
                                                                    '{safe, '
                                                                    'xy_warn, '
                                                                    'z_warn}')])]},
                     'dd_xy_axis_degradation': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'dd_xy_axis_degradation',
                                                   'next_value': [   (   'ddlec2bb',
                                                                         [   (   '(ddlec2bb_update_success '
                                                                                 '= '
                                                                                 'FALSE)',
                                                                                 'dd_xy_axis_degradation'),
                                                                             (   'TRUE',
                                                                                 'next(dd_output_stage_1) '
                                                                                 '= '
                                                                                 'xy_warn '
                                                                                 '| '
                                                                                 'dd_xy_axis_degradation '
                                                                                 '& '
                                                                                 '!(next(dd_output_stage_1) '
                                                                                 '= '
                                                                                 'safe)')])]},
                     'dd_z_axis_warning': {   'custom_value_range': '{TRUE, '
                                                                    'FALSE}',
                                              'environment_update': None,
                                              'init_value': [('TRUE', 'FALSE')],
                                              'max_value': 1,
                                              'min_value': 0,
                                              'mode': 'VAR',
                                              'name': 'dd_z_axis_warning',
                                              'next_value': [   (   'ddlec2bb',
                                                                    [   (   '(ddlec2bb_update_success '
                                                                            '= '
                                                                            'FALSE)',
                                                                            'dd_z_axis_warning'),
                                                                        (   'TRUE',
                                                                            'next(dd_output_stage_1) '
                                                                            '= '
                                                                            'z_warn '
                                                                            '| '
                                                                            'dd_z_axis_warning '
                                                                            '& '
                                                                            '!(next(dd_output_stage_1) '
                                                                            '= '
                                                                            'safe)')])]},
                     'ddlec2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                          'FALSE}',
                                                    'environment_update': [   (   'TRUE',
                                                                                  '{TRUE, '
                                                                                  'FALSE}')],
                                                    'init_value': None,
                                                    'max_value': 1,
                                                    'min_value': 0,
                                                    'mode': 'VAR',
                                                    'name': 'ddlec2bb_update_success',
                                                    'next_value': [],
                                                    'read_by': [True]},
                     'emergency_stop_warning': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'emergency_stop_warning',
                                                   'next_value': [   (   'fls_warning2bb',
                                                                         [   (   '(fls_warning2bb_update_success '
                                                                                 '= '
                                                                                 'FALSE)',
                                                                                 'emergency_stop_warning'),
                                                                             (   'TRUE',
                                                                                 'emergency_stop_warning '
                                                                                 '| '
                                                                                 'next(obstacle_in_view_stage_1)')])]},
                     'fls2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                        'FALSE}',
                                                  'environment_update': [   (   'TRUE',
                                                                                '{TRUE, '
                                                                                'FALSE}')],
                                                  'init_value': None,
                                                  'max_value': 1,
                                                  'min_value': 0,
                                                  'mode': 'VAR',
                                                  'name': 'fls2bb_update_success',
                                                  'next_value': [],
                                                  'read_by': [True]},
                     'fls_range': {   'custom_value_range': '{danger_zone, '
                                                            'safe}',
                                      'environment_update': None,
                                      'init_value': [('TRUE', 'safe')],
                                      'max_value': 1,
                                      'min_value': 0,
                                      'mode': 'VAR',
                                      'name': 'fls_range',
                                      'next_value': [   (   'fls2bb',
                                                            [   (   'TRUE',
                                                                    '{danger_zone, '
                                                                    'safe}')])]},
                     'fls_warning2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                'FALSE}',
                                                          'environment_update': [   (   'TRUE',
                                                                                        '{TRUE, '
                                                                                        'FALSE}')],
                                                          'init_value': None,
                                                          'max_value': 1,
                                                          'min_value': 0,
                                                          'mode': 'VAR',
                                                          'name': 'fls_warning2bb_update_success',
                                                          'next_value': [],
                                                          'read_by': [True]},
                     'geofence2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                             'FALSE}',
                                                       'environment_update': [   (   'TRUE',
                                                                                     '{TRUE, '
                                                                                     'FALSE}')],
                                                       'init_value': None,
                                                       'max_value': 1,
                                                       'min_value': 0,
                                                       'mode': 'VAR',
                                                       'name': 'geofence2bb_update_success',
                                                       'next_value': [],
                                                       'read_by': [True]},
                     'home2bb_1_update_success': {   'custom_value_range': '{TRUE, '
                                                                           'FALSE}',
                                                     'environment_update': [   (   'TRUE',
                                                                                   '{TRUE, '
                                                                                   'FALSE}')],
                                                     'init_value': None,
                                                     'max_value': 1,
                                                     'min_value': 0,
                                                     'mode': 'VAR',
                                                     'name': 'home2bb_1_update_success',
                                                     'next_value': [],
                                                     'read_by': [True]},
                     'home2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': [   (   'TRUE',
                                                                                 '{TRUE, '
                                                                                 'FALSE}')],
                                                   'init_value': None,
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'home2bb_update_success',
                                                   'next_value': [],
                                                   'read_by': [True]},
                     'hsd_pipe2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                             'FALSE}',
                                                       'environment_update': [   (   'TRUE',
                                                                                     '{TRUE, '
                                                                                     'FALSE}')],
                                                       'init_value': None,
                                                       'max_value': 1,
                                                       'min_value': 0,
                                                       'mode': 'VAR',
                                                       'name': 'hsd_pipe2bb_update_success',
                                                       'next_value': [],
                                                       'read_by': [True]},
                     'hsd_pipeline_mapping': {   'custom_value_range': '{uuv_min_speed, '
                                                                       'uuv_max_speed}',
                                                 'environment_update': None,
                                                 'init_value': [   (   'TRUE',
                                                                       'uuv_min_speed')],
                                                 'max_value': 1,
                                                 'min_value': 0,
                                                 'mode': 'VAR',
                                                 'name': 'hsd_pipeline_mapping',
                                                 'next_value': [   (   'hsd_pipe2bb',
                                                                       [   (   'TRUE',
                                                                               '{uuv_min_speed, '
                                                                               'uuv_max_speed}')])]},
                     'hsd_rth2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': [   (   'TRUE',
                                                                                    '{TRUE, '
                                                                                    'FALSE}')],
                                                      'init_value': None,
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'hsd_rth2bb_update_success',
                                                      'next_value': [],
                                                      'read_by': [True]},
                     'hsd_surface2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                'FALSE}',
                                                          'environment_update': [   (   'TRUE',
                                                                                        '{TRUE, '
                                                                                        'FALSE}')],
                                                          'init_value': None,
                                                          'max_value': 1,
                                                          'min_value': 0,
                                                          'mode': 'VAR',
                                                          'name': 'hsd_surface2bb_update_success',
                                                          'next_value': [],
                                                          'read_by': [True]},
                     'hsd_wp2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                           'FALSE}',
                                                     'environment_update': [   (   'TRUE',
                                                                                   '{TRUE, '
                                                                                   'FALSE}')],
                                                     'init_value': None,
                                                     'max_value': 1,
                                                     'min_value': 0,
                                                     'mode': 'VAR',
                                                     'name': 'hsd_wp2bb_update_success',
                                                     'next_value': [],
                                                     'read_by': [True]},
                     'lec2_am_l': {   'custom_value_range': '{safe, speed, '
                                                            'pipe, speed_pipe}',
                                      'environment_update': None,
                                      'init_value': [('TRUE', 'safe')],
                                      'max_value': 1,
                                      'min_value': 0,
                                      'mode': 'VAR',
                                      'name': 'lec2_am_l',
                                      'next_value': [   (   'lec2_am_l_2bb',
                                                            [   (   'TRUE',
                                                                    '{safe, '
                                                                    'speed, '
                                                                    'pipe, '
                                                                    'speed_pipe}')])]},
                     'lec2_am_l_2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                               'FALSE}',
                                                         'environment_update': [   (   'TRUE',
                                                                                       '{TRUE, '
                                                                                       'FALSE}')],
                                                         'init_value': None,
                                                         'max_value': 1,
                                                         'min_value': 0,
                                                         'mode': 'VAR',
                                                         'name': 'lec2_am_l_2bb_update_success',
                                                         'next_value': [],
                                                         'read_by': [True]},
                     'lec2_am_l_pipe_warning': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'lec2_am_l_pipe_warning',
                                                   'next_value': [   (   'lec2_am_l_2bb',
                                                                         [   (   '(lec2_am_l_2bb_update_success '
                                                                                 '= '
                                                                                 'FALSE)',
                                                                                 'lec2_am_l_pipe_warning'),
                                                                             (   'TRUE',
                                                                                 'next(lec2_am_l_stage_1) '
                                                                                 '= '
                                                                                 'pipe '
                                                                                 '| '
                                                                                 'next(lec2_am_l_stage_1) '
                                                                                 '= '
                                                                                 'speed_pipe')])]},
                     'lec2_am_l_speed_warning': {   'custom_value_range': '{TRUE, '
                                                                          'FALSE}',
                                                    'environment_update': None,
                                                    'init_value': [   (   'TRUE',
                                                                          'FALSE')],
                                                    'max_value': 1,
                                                    'min_value': 0,
                                                    'mode': 'VAR',
                                                    'name': 'lec2_am_l_speed_warning',
                                                    'next_value': [   (   'lec2_am_l_2bb',
                                                                          [   (   '(lec2_am_l_2bb_update_success '
                                                                                  '= '
                                                                                  'FALSE)',
                                                                                  'lec2_am_l_speed_warning'),
                                                                              (   'TRUE',
                                                                                  'next(lec2_am_l_stage_1) '
                                                                                  '= '
                                                                                  'speed '
                                                                                  '| '
                                                                                  'next(lec2_am_l_stage_1) '
                                                                                  '= '
                                                                                  'speed_pipe')])]},
                     'lec2_am_r': {   'custom_value_range': '{safe, speed, '
                                                            'pipe, speed_pipe}',
                                      'environment_update': None,
                                      'init_value': [('TRUE', 'safe')],
                                      'max_value': 1,
                                      'min_value': 0,
                                      'mode': 'VAR',
                                      'name': 'lec2_am_r',
                                      'next_value': [   (   'lec2_am_r_2bb',
                                                            [   (   'TRUE',
                                                                    '{safe, '
                                                                    'speed, '
                                                                    'pipe, '
                                                                    'speed_pipe}')])]},
                     'lec2_am_r_2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                               'FALSE}',
                                                         'environment_update': [   (   'TRUE',
                                                                                       '{TRUE, '
                                                                                       'FALSE}')],
                                                         'init_value': None,
                                                         'max_value': 1,
                                                         'min_value': 0,
                                                         'mode': 'VAR',
                                                         'name': 'lec2_am_r_2bb_update_success',
                                                         'next_value': [],
                                                         'read_by': [True]},
                     'lec2_am_r_pipe_warning': {   'custom_value_range': '{TRUE, '
                                                                         'FALSE}',
                                                   'environment_update': None,
                                                   'init_value': [   (   'TRUE',
                                                                         'FALSE')],
                                                   'max_value': 1,
                                                   'min_value': 0,
                                                   'mode': 'VAR',
                                                   'name': 'lec2_am_r_pipe_warning',
                                                   'next_value': [   (   'lec2_am_r_2bb',
                                                                         [   (   '(lec2_am_r_2bb_update_success '
                                                                                 '= '
                                                                                 'FALSE)',
                                                                                 'lec2_am_r_pipe_warning'),
                                                                             (   'TRUE',
                                                                                 'next(lec2_am_r_stage_1) '
                                                                                 '= '
                                                                                 'pipe '
                                                                                 '| '
                                                                                 'next(lec2_am_r_stage_1) '
                                                                                 '= '
                                                                                 'speed_pipe')])]},
                     'lec2_am_r_speed_warning': {   'custom_value_range': '{TRUE, '
                                                                          'FALSE}',
                                                    'environment_update': None,
                                                    'init_value': [   (   'TRUE',
                                                                          'FALSE')],
                                                    'max_value': 1,
                                                    'min_value': 0,
                                                    'mode': 'VAR',
                                                    'name': 'lec2_am_r_speed_warning',
                                                    'next_value': [   (   'lec2_am_r_2bb',
                                                                          [   (   '(lec2_am_r_2bb_update_success '
                                                                                  '= '
                                                                                  'FALSE)',
                                                                                  'lec2_am_r_speed_warning'),
                                                                              (   'TRUE',
                                                                                  'next(lec2_am_r_stage_1) '
                                                                                  '= '
                                                                                  'speed '
                                                                                  '| '
                                                                                  'next(lec2_am_r_stage_1) '
                                                                                  '= '
                                                                                  'speed_pipe')])]},
                     'lec_dd_am': {   'custom_value_range': '{TRUE, FALSE}',
                                      'environment_update': None,
                                      'init_value': [('TRUE', 'FALSE')],
                                      'max_value': 1,
                                      'min_value': 0,
                                      'mode': 'VAR',
                                      'name': 'lec_dd_am',
                                      'next_value': []},
                     'lec_dd_am_warning': {   'custom_value_range': '{TRUE, '
                                                                    'FALSE}',
                                              'environment_update': None,
                                              'init_value': [('TRUE', 'FALSE')],
                                              'max_value': 1,
                                              'min_value': 0,
                                              'mode': 'VAR',
                                              'name': 'lec_dd_am_warning',
                                              'next_value': []},
                     'max_mission': {   'custom_value_range': '{4}',
                                        'environment_update': None,
                                        'init_value': [('TRUE', '4')],
                                        'max_value': 1,
                                        'min_value': 0,
                                        'mode': 'DEFINE',
                                        'name': 'max_mission',
                                        'next_value': []},
                     'mission2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': [   (   'TRUE',
                                                                                    '{TRUE, '
                                                                                    'FALSE}')],
                                                      'init_value': None,
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'mission2bb_update_success',
                                                      'next_value': [],
                                                      'read_by': [True]},
                     'mission_idx': {   'custom_value_range': None,
                                        'environment_update': None,
                                        'init_value': [('TRUE', '0')],
                                        'max_value': 4,
                                        'min_value': 0,
                                        'mode': 'VAR',
                                        'name': 'mission_idx',
                                        'next_value': [   (   'mission_server',
                                                              [   (   'next_mission',
                                                                      'min(max_mission, '
                                                                      'mission_idx '
                                                                      '+ 1)'),
                                                                  (   'TRUE',
                                                                      'mission_idx')])]},
                     'next_mission': {   'custom_value_range': '{TRUE, FALSE}',
                                         'environment_update': None,
                                         'init_value': [('TRUE', 'FALSE')],
                                         'max_value': 1,
                                         'min_value': 0,
                                         'mode': 'VAR',
                                         'name': 'next_mission',
                                         'next_value': [   (   'mission_server',
                                                               [   (   'TRUE',
                                                                       'FALSE')]),
                                                           (   'next_mission',
                                                               [   (   'TRUE',
                                                                       'TRUE')])]},
                     'obstacle_in_view': {   'custom_value_range': '{TRUE, '
                                                                   'FALSE}',
                                             'environment_update': None,
                                             'init_value': [('TRUE', 'FALSE')],
                                             'max_value': 1,
                                             'min_value': 0,
                                             'mode': 'VAR',
                                             'name': 'obstacle_in_view',
                                             'next_value': [   (   'fls_warning2bb',
                                                                   [   (   'TRUE',
                                                                           '{TRUE, '
                                                                           'FALSE}')])]},
                     'obstacle_standoff_warning': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': None,
                                                      'init_value': [   (   'TRUE',
                                                                            'FALSE')],
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'obstacle_standoff_warning',
                                                      'next_value': [   (   'fls2bb',
                                                                            [   (   '(fls2bb_update_success '
                                                                                    '= '
                                                                                    'FALSE)',
                                                                                    'obstacle_standoff_warning'),
                                                                                (   'TRUE',
                                                                                    'next(fls_range_stage_1) '
                                                                                    '= '
                                                                                    'danger_zone')])]},
                     'pipe_lost2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                              'FALSE}',
                                                        'environment_update': [   (   'TRUE',
                                                                                      '{TRUE, '
                                                                                      'FALSE}')],
                                                        'init_value': None,
                                                        'max_value': 1,
                                                        'min_value': 0,
                                                        'mode': 'VAR',
                                                        'name': 'pipe_lost2bb_update_success',
                                                        'next_value': [],
                                                        'read_by': [True]},
                     'pipe_mapping_enable': {   'custom_value_range': '{TRUE, '
                                                                      'FALSE}',
                                                'environment_update': None,
                                                'init_value': [   (   'TRUE',
                                                                      'FALSE')],
                                                'max_value': 1,
                                                'min_value': 0,
                                                'mode': 'VAR',
                                                'name': 'pipe_mapping_enable',
                                                'next_value': [   (   'pipe_mapping_disable_task',
                                                                      [   (   'TRUE',
                                                                              'FALSE')]),
                                                                  (   'pipe_mapping_disable_task_1',
                                                                      [   (   'TRUE',
                                                                              'FALSE')]),
                                                                  (   'pipe_mapping_enable_task',
                                                                      [   (   'TRUE',
                                                                              'TRUE')])]},
                     'rth2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                        'FALSE}',
                                                  'environment_update': [   (   'TRUE',
                                                                                '{TRUE, '
                                                                                'FALSE}')],
                                                  'init_value': None,
                                                  'max_value': 1,
                                                  'min_value': 0,
                                                  'mode': 'VAR',
                                                  'name': 'rth2bb_update_success',
                                                  'next_value': [],
                                                  'read_by': [True]},
                     'rtreach2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': [   (   'TRUE',
                                                                                    '{TRUE, '
                                                                                    'FALSE}')],
                                                      'init_value': None,
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'rtreach2bb_update_success',
                                                      'next_value': [],
                                                      'read_by': [True]},
                     'rtreach_index2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                  'FALSE}',
                                                            'environment_update': [   (   'TRUE',
                                                                                          '{TRUE, '
                                                                                          'FALSE}')],
                                                            'init_value': None,
                                                            'max_value': 1,
                                                            'min_value': 0,
                                                            'mode': 'VAR',
                                                            'name': 'rtreach_index2bb_update_success',
                                                            'next_value': [],
                                                            'read_by': [True]},
                     'rtreach_long_term_warning': {   'custom_value_range': '{TRUE, '
                                                                            'FALSE}',
                                                      'environment_update': None,
                                                      'init_value': [   (   'TRUE',
                                                                            'FALSE')],
                                                      'max_value': 1,
                                                      'min_value': 0,
                                                      'mode': 'VAR',
                                                      'name': 'rtreach_long_term_warning',
                                                      'next_value': [   (   'rtreach2bb',
                                                                            [   (   '(rtreach2bb_update_success '
                                                                                    '= '
                                                                                    'FALSE)',
                                                                                    'rtreach_long_term_warning'),
                                                                                (   'TRUE',
                                                                                    'next(rtreach_result_stage_1) '
                                                                                    '= '
                                                                                    'long '
                                                                                    '| '
                                                                                    'next(rtreach_result_stage_1) '
                                                                                    '= '
                                                                                    'short_long')])]},
                     'rtreach_result': {   'custom_value_range': '{safe, '
                                                                 'short, long, '
                                                                 'short_long}',
                                           'environment_update': None,
                                           'init_value': [('TRUE', 'safe')],
                                           'max_value': 1,
                                           'min_value': 0,
                                           'mode': 'VAR',
                                           'name': 'rtreach_result',
                                           'next_value': [   (   'rtreach2bb',
                                                                 [   (   'TRUE',
                                                                         '{safe, '
                                                                         'short, '
                                                                         'long, '
                                                                         'short_long}')])]},
                     'rtreach_unsafe_value2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                         'FALSE}',
                                                                   'environment_update': [   (   'TRUE',
                                                                                                 '{TRUE, '
                                                                                                 'FALSE}')],
                                                                   'init_value': None,
                                                                   'max_value': 1,
                                                                   'min_value': 0,
                                                                   'mode': 'VAR',
                                                                   'name': 'rtreach_unsafe_value2bb_update_success',
                                                                   'next_value': [   ],
                                                                   'read_by': [   True]},
                     'rtreach_warning': {   'custom_value_range': '{TRUE, '
                                                                  'FALSE}',
                                            'environment_update': None,
                                            'init_value': [('TRUE', 'FALSE')],
                                            'max_value': 1,
                                            'min_value': 0,
                                            'mode': 'VAR',
                                            'name': 'rtreach_warning',
                                            'next_value': [   (   'rtreach2bb',
                                                                  [   (   '(rtreach2bb_update_success '
                                                                          '= '
                                                                          'FALSE)',
                                                                          'rtreach_warning'),
                                                                      (   'TRUE',
                                                                          'next(rtreach_result_stage_1) '
                                                                          '= '
                                                                          'short '
                                                                          '| '
                                                                          'next(rtreach_result_stage_1) '
                                                                          '= '
                                                                          'short_long')])]},
                     'sensor_failure2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                   'FALSE}',
                                                             'environment_update': [   (   'TRUE',
                                                                                           '{TRUE, '
                                                                                           'FALSE}')],
                                                             'init_value': None,
                                                             'max_value': 1,
                                                             'min_value': 0,
                                                             'mode': 'VAR',
                                                             'name': 'sensor_failure2bb_update_success',
                                                             'next_value': [],
                                                             'read_by': [True]},
                     'waypoints_completed2bb_update_success': {   'custom_value_range': '{TRUE, '
                                                                                        'FALSE}',
                                                                  'environment_update': [   (   'TRUE',
                                                                                                '{TRUE, '
                                                                                                'FALSE}')],
                                                                  'init_value': None,
                                                                  'max_value': 1,
                                                                  'min_value': 0,
                                                                  'mode': 'VAR',
                                                                  'name': 'waypoints_completed2bb_update_success',
                                                                  'next_value': [   ],
                                                                  'read_by': [   True]}}}
