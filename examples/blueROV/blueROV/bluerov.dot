digraph pastafarianism {
ordering=out;
graph [fontname="times-roman"];
node [fontname="times-roman"];
edge [fontname="times-roman"];
BlueROV [fillcolor=gold, fontcolor=black, fontsize=9, label="⚡ BlueROV\nSuccessOnAll", shape=parallelogram, style=filled];
topics2bb [fillcolor=gold, fontcolor=black, fontsize=9, label="⚡ topics2bb\nSuccessOnAll", shape=parallelogram, style=filled];
BlueROV -> topics2bb;
battery2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=battery2bb, shape=ellipse, style=filled];
topics2bb -> battery2bb;
rth2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=rth2bb, shape=ellipse, style=filled];
topics2bb -> rth2bb;
geofence2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=geofence2bb, shape=ellipse, style=filled];
topics2bb -> geofence2bb;
lec2_am_r_2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=lec2_am_r_2bb, shape=ellipse, style=filled];
topics2bb -> lec2_am_r_2bb;
lec2_am_l_2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=lec2_am_l_2bb, shape=ellipse, style=filled];
topics2bb -> lec2_am_l_2bb;
pipe_lost2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=pipe_lost2bb, shape=ellipse, style=filled];
topics2bb -> pipe_lost2bb;
sensor_failure2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=sensor_failure2bb, shape=ellipse, style=filled];
topics2bb -> sensor_failure2bb;
waypoints_completed2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=waypoints_completed2bb, shape=ellipse, style=filled];
topics2bb -> waypoints_completed2bb;
mission2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=mission2bb, shape=ellipse, style=filled];
topics2bb -> mission2bb;
ddlec2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=ddlec2bb, shape=ellipse, style=filled];
topics2bb -> ddlec2bb;
fls2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=fls2bb, shape=ellipse, style=filled];
topics2bb -> fls2bb;
fls_warning2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=fls_warning2bb, shape=ellipse, style=filled];
topics2bb -> fls_warning2bb;
hsd_pipe2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=hsd_pipe2bb, shape=ellipse, style=filled];
topics2bb -> hsd_pipe2bb;
hsd_wp2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=hsd_wp2bb, shape=ellipse, style=filled];
topics2bb -> hsd_wp2bb;
hsd_rth2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=hsd_rth2bb, shape=ellipse, style=filled];
topics2bb -> hsd_rth2bb;
hsd_surface2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=hsd_surface2bb, shape=ellipse, style=filled];
topics2bb -> hsd_surface2bb;
rtreach2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=rtreach2bb, shape=ellipse, style=filled];
topics2bb -> rtreach2bb;
dd_tasks [fillcolor=cyan, fontcolor=black, fontsize=9, label=dd_tasks, shape=octagon, style=filled];
BlueROV -> dd_tasks;
reallocate_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=reallocate_check_SIF, shape=ellipse, style=filled];
dd_tasks -> reallocate_check_SIF;
reallocate_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=reallocate_check, shape=octagon, style=filled];
reallocate_check_SIF -> reallocate_check;
is_reallocation_requested [fillcolor=gray, fontcolor=black, fontsize=9, label=is_reallocation_requested, shape=ellipse, style=filled];
reallocate_check -> is_reallocation_requested;
reallocate_task [fillcolor=gray, fontcolor=black, fontsize=9, label=reallocate_task, shape=ellipse, style=filled];
reallocate_check -> reallocate_task;
dd_lec_task [fillcolor=gray, fontcolor=black, fontsize=9, label=dd_lec_task, shape=ellipse, style=filled];
dd_tasks -> dd_lec_task;
mission_server [fillcolor=gray, fontcolor=black, fontsize=9, label=mission_server, shape=ellipse, style=filled];
BlueROV -> mission_server;
obstacle_avoidance [fillcolor=gray, fontcolor=black, fontsize=9, label=obstacle_avoidance, shape=ellipse, style=filled];
BlueROV -> obstacle_avoidance;
priorities [fillcolor=cyan, fontcolor=black, fontsize=9, label=priorities, shape=octagon, style=filled];
BlueROV -> priorities;
battery_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=battery_check_SIF, shape=ellipse, style=filled];
priorities -> battery_check_SIF;
battery_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=battery_check, shape=octagon, style=filled];
battery_check_SIF -> battery_check;
battery_low_fs [fillcolor=gray, fontcolor=black, fontsize=9, label=battery_low_fs, shape=ellipse, style=filled];
battery_check -> battery_low_fs;
surface_task [fillcolor=gray, fontcolor=black, fontsize=9, label=surface_task, shape=ellipse, style=filled];
battery_check -> surface_task;
sensor_failure_selector_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=sensor_failure_selector_SIF, shape=ellipse, style=filled];
priorities -> sensor_failure_selector_SIF;
sensor_failure_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=sensor_failure_selector, shape=octagon, style=filled];
sensor_failure_selector_SIF -> sensor_failure_selector;
check_sensor_failure [fillcolor=gray, fontcolor=black, fontsize=9, label=check_sensor_failure, shape=ellipse, style=filled];
sensor_failure_selector -> check_sensor_failure;
"surface_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="surface_task*", shape=ellipse, style=filled];
sensor_failure_selector -> "surface_task*";
emergency_stop_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=emergency_stop_check_SIF, shape=ellipse, style=filled];
priorities -> emergency_stop_check_SIF;
emergency_stop_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=emergency_stop_check, shape=octagon, style=filled];
emergency_stop_check_SIF -> emergency_stop_check;
emergency_stop_fs [fillcolor=gray, fontcolor=black, fontsize=9, label=emergency_stop_fs, shape=ellipse, style=filled];
emergency_stop_check -> emergency_stop_fs;
emergency_stop_tasks [fillcolor=orange, fontcolor=black, fontsize=9, label="Ⓜ emergency_stop_tasks", shape=box, style=filled];
emergency_stop_check -> emergency_stop_tasks;
emergency_stop_task [fillcolor=gray, fontcolor=black, fontsize=9, label=emergency_stop_task, shape=ellipse, style=filled];
emergency_stop_tasks -> emergency_stop_task;
surface_task [fillcolor=gray, fontcolor=black, fontsize=9, label=surface_task, shape=ellipse, style=filled];
emergency_stop_tasks -> surface_task;
home_reached_selector_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=home_reached_selector_SIF, shape=ellipse, style=filled];
priorities -> home_reached_selector_SIF;
home_reached_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=home_reached_selector, shape=octagon, style=filled];
home_reached_selector_SIF -> home_reached_selector;
check_surface [fillcolor=gray, fontcolor=black, fontsize=9, label=check_surface, shape=ellipse, style=filled];
home_reached_selector -> check_surface;
"surface_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="surface_task*", shape=ellipse, style=filled];
home_reached_selector -> "surface_task*";
obstacle_standoff_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=obstacle_standoff_check_SIF, shape=ellipse, style=filled];
priorities -> obstacle_standoff_check_SIF;
obstacle_standoff_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=obstacle_standoff_check, shape=octagon, style=filled];
obstacle_standoff_check_SIF -> obstacle_standoff_check;
obstacle_standoff_fs [fillcolor=gray, fontcolor=black, fontsize=9, label=obstacle_standoff_fs, shape=ellipse, style=filled];
obstacle_standoff_check -> obstacle_standoff_fs;
surface_task [fillcolor=gray, fontcolor=black, fontsize=9, label=surface_task, shape=ellipse, style=filled];
obstacle_standoff_check -> surface_task;
rth_selector_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=rth_selector_SIF, shape=ellipse, style=filled];
priorities -> rth_selector_SIF;
rth_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=rth_selector, shape=octagon, style=filled];
rth_selector_SIF -> rth_selector;
check_rth [fillcolor=gray, fontcolor=black, fontsize=9, label=check_rth, shape=ellipse, style=filled];
rth_selector -> check_rth;
rth_par [fillcolor=gold, fontcolor=black, fontsize=9, label="⚡ rth_par\nSuccessOnAll", shape=parallelogram, style=filled];
rth_selector -> rth_par;
rth_task [fillcolor=gray, fontcolor=black, fontsize=9, label=rth_task, shape=ellipse, style=filled];
rth_par -> rth_task;
home2bb [fillcolor=gray, fontcolor=black, fontsize=9, label=home2bb, shape=ellipse, style=filled];
rth_par -> home2bb;
geofence_selector_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=geofence_selector_SIF, shape=ellipse, style=filled];
priorities -> geofence_selector_SIF;
geofence_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=geofence_selector, shape=octagon, style=filled];
geofence_selector_SIF -> geofence_selector;
check_geofence [fillcolor=gray, fontcolor=black, fontsize=9, label=check_geofence, shape=ellipse, style=filled];
geofence_selector -> check_geofence;
"rth_par*" [fillcolor=gold, fontcolor=black, fontsize=9, label="⚡ rth_par*\nSuccessOnAll", shape=parallelogram, style=filled];
geofence_selector -> "rth_par*";
"rth_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="rth_task*", shape=ellipse, style=filled];
"rth_par*" -> "rth_task*";
"home2bb*" [fillcolor=gray, fontcolor=black, fontsize=9, label="home2bb*", shape=ellipse, style=filled];
"rth_par*" -> "home2bb*";
pipe_lost_selector_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=pipe_lost_selector_SIF, shape=ellipse, style=filled];
priorities -> pipe_lost_selector_SIF;
pipe_lost_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=pipe_lost_selector, shape=octagon, style=filled];
pipe_lost_selector_SIF -> pipe_lost_selector;
check_pipe_post [fillcolor=gray, fontcolor=black, fontsize=9, label=check_pipe_post, shape=ellipse, style=filled];
pipe_lost_selector -> check_pipe_post;
loiter_task [fillcolor=gray, fontcolor=black, fontsize=9, label=loiter_task, shape=ellipse, style=filled];
pipe_lost_selector -> loiter_task;
track_pipe_mission [fillcolor=orange, fontcolor=black, fontsize=9, label="Ⓜ track_pipe_mission", shape=box, style=filled];
priorities -> track_pipe_mission;
is_track_pipe_mission_requested [fillcolor=gray, fontcolor=black, fontsize=9, label=is_track_pipe_mission_requested, shape=ellipse, style=filled];
track_pipe_mission -> is_track_pipe_mission_requested;
tracking [fillcolor=gold, fontcolor=black, fontsize=9, label="⚡ tracking\nSuccessOnAll", shape=parallelogram, style=filled];
track_pipe_mission -> tracking;
tracking_task [fillcolor=gray, fontcolor=black, fontsize=9, label=tracking_task, shape=ellipse, style=filled];
tracking -> tracking_task;
lec2am_speed_cmd [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_speed_cmd, shape=octagon, style=filled];
tracking -> lec2am_speed_cmd;
lec2am_l_speed_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=lec2am_l_speed_check_SIF, shape=ellipse, style=filled];
lec2am_speed_cmd -> lec2am_l_speed_check_SIF;
lec2am_l_speed_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_l_speed_check, shape=octagon, style=filled];
lec2am_l_speed_check_SIF -> lec2am_l_speed_check;
check_lec2am_ls [fillcolor=gray, fontcolor=black, fontsize=9, label=check_lec2am_ls, shape=ellipse, style=filled];
lec2am_l_speed_check -> check_lec2am_ls;
speed_min_task [fillcolor=gray, fontcolor=black, fontsize=9, label=speed_min_task, shape=ellipse, style=filled];
lec2am_l_speed_check -> speed_min_task;
lec2am_r_speed_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=lec2am_r_speed_check_SIF, shape=ellipse, style=filled];
lec2am_speed_cmd -> lec2am_r_speed_check_SIF;
lec2am_r_speed_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_r_speed_check, shape=octagon, style=filled];
lec2am_r_speed_check_SIF -> lec2am_r_speed_check;
check_lec2am_rs [fillcolor=gray, fontcolor=black, fontsize=9, label=check_lec2am_rs, shape=ellipse, style=filled];
lec2am_r_speed_check -> check_lec2am_rs;
"speed_min_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="speed_min_task*", shape=ellipse, style=filled];
lec2am_r_speed_check -> "speed_min_task*";
speed_max_task [fillcolor=gray, fontcolor=black, fontsize=9, label=speed_max_task, shape=ellipse, style=filled];
lec2am_speed_cmd -> speed_max_task;
lec2am_mapping_cmd [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_mapping_cmd, shape=octagon, style=filled];
tracking -> lec2am_mapping_cmd;
lec2am_l_mapping_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=lec2am_l_mapping_check_SIF, shape=ellipse, style=filled];
lec2am_mapping_cmd -> lec2am_l_mapping_check_SIF;
lec2am_l_mapping_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_l_mapping_check, shape=octagon, style=filled];
lec2am_l_mapping_check_SIF -> lec2am_l_mapping_check;
check_lec2am_lp [fillcolor=gray, fontcolor=black, fontsize=9, label=check_lec2am_lp, shape=ellipse, style=filled];
lec2am_l_mapping_check -> check_lec2am_lp;
pipe_mapping_disable_task [fillcolor=gray, fontcolor=black, fontsize=9, label=pipe_mapping_disable_task, shape=ellipse, style=filled];
lec2am_l_mapping_check -> pipe_mapping_disable_task;
lec2am_r_mapping_check_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=lec2am_r_mapping_check_SIF, shape=ellipse, style=filled];
lec2am_mapping_cmd -> lec2am_r_mapping_check_SIF;
lec2am_r_mapping_check [fillcolor=cyan, fontcolor=black, fontsize=9, label=lec2am_r_mapping_check, shape=octagon, style=filled];
lec2am_r_mapping_check_SIF -> lec2am_r_mapping_check;
check_lec2am_rp [fillcolor=gray, fontcolor=black, fontsize=9, label=check_lec2am_rp, shape=ellipse, style=filled];
lec2am_r_mapping_check -> check_lec2am_rp;
"pipe_mapping_disable_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="pipe_mapping_disable_task*", shape=ellipse, style=filled];
lec2am_r_mapping_check -> "pipe_mapping_disable_task*";
pipe_mapping_enable_task [fillcolor=gray, fontcolor=black, fontsize=9, label=pipe_mapping_enable_task, shape=ellipse, style=filled];
lec2am_mapping_cmd -> pipe_mapping_enable_task;
track_pipe_mission_end [fillcolor=orange, fontcolor=black, fontsize=9, label="Ⓜ track_pipe_mission_end", shape=box, style=filled];
track_pipe_mission -> track_pipe_mission_end;
evaluate [fillcolor=gray, fontcolor=black, fontsize=9, label=evaluate, shape=ellipse, style=filled];
track_pipe_mission_end -> evaluate;
waypoint_mission [fillcolor=orange, fontcolor=black, fontsize=9, label="Ⓜ waypoint_mission", shape=box, style=filled];
priorities -> waypoint_mission;
is_waypoint_requested [fillcolor=gray, fontcolor=black, fontsize=9, label=is_waypoint_requested, shape=ellipse, style=filled];
waypoint_mission -> is_waypoint_requested;
waypoint_selector [fillcolor=cyan, fontcolor=black, fontsize=9, label=waypoint_selector, shape=octagon, style=filled];
waypoint_mission -> waypoint_selector;
waypoints_sif_SIF [fillcolor=ghostwhite, fontcolor=black, fontsize=9, label=waypoints_sif_SIF, shape=ellipse, style=filled];
waypoint_selector -> waypoints_sif_SIF;
waypoints_sif [fillcolor=cyan, fontcolor=black, fontsize=9, label=waypoints_sif, shape=octagon, style=filled];
waypoints_sif_SIF -> waypoints_sif;
check_waypoints_completed [fillcolor=gray, fontcolor=black, fontsize=9, label=check_waypoints_completed, shape=ellipse, style=filled];
waypoints_sif -> check_waypoints_completed;
waypoint_end [fillcolor=orange, fontcolor=black, fontsize=9, label="Ⓜ waypoint_end", shape=box, style=filled];
waypoints_sif -> waypoint_end;
next_mission [fillcolor=gray, fontcolor=black, fontsize=9, label=next_mission, shape=ellipse, style=filled];
waypoint_end -> next_mission;
"loiter_task*" [fillcolor=gray, fontcolor=black, fontsize=9, label="loiter_task*", shape=ellipse, style=filled];
waypoint_end -> "loiter_task*";
waypoint_task [fillcolor=gray, fontcolor=black, fontsize=9, label=waypoint_task, shape=ellipse, style=filled];
waypoint_selector -> waypoint_task;
loiter_task [fillcolor=gray, fontcolor=black, fontsize=9, label=loiter_task, shape=ellipse, style=filled];
priorities -> loiter_task;
}
