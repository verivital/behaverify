configuration {
    #{ Here you specify various configuration options, such as Hypersafety }#
}
enumerations {
    #{ here you specify the enumerations used in the model}#
}
constants {
    x_min := 0, y_min := 0, x_max := 10, y_max := 10, tree_count := 2, vision_range := 4, tree_range := 2, y_change := 2, movement_cooldown := 10
} end_constants

variables {
    variable {bl prev_dest_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl prev_dest_y VAR [y_min, y_max] assign {result {(add, y_min, 1)}}}
    variable {bl cur_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl cur_y VAR [y_min, y_max] assign {result {y_min}}}
    variable {bl dest_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl dest_y VAR [y_min, y_max] assign {result {y_min}}}
    variable {bl dir VAR {-1, 1} assign {result {1}}}
    variable {bl victory VAR BOOLEAN assign {result {False}}}
    #{variable {env tree_locs array tree_count FROZENVAR [0, 960] range assign {result{range, 0, 960, True}}}}#
    #{
	variable {env tree_x array tree_count FROZENVAR [x_min, x_max] range assign {result{range, x_min, x_max, True}}}
	variable {env tree_y array tree_count FROZENVAR [y_min, y_max] range assign {result{range, y_min, y_max, True}}}
    }#
    variable {env tree_x array tree_count DEFINE INT default { assign{result{2}}} constant_index index_of{(max, 0, 1)} assign {result{5}}}
    variable {env tree_y array tree_count DEFINE INT default { assign{result{2}}} constant_index index_of{1} assign {result{5}}}
    variable {env tar_x VAR [x_min, x_max] assign {result {(loop, meh, [x_min, x_max] such_that True, meh)}}}
    variable {env tar_y VAR [y_min, y_max] assign {result {(loop, meh, [y_min, y_max] such_that True, meh)}}}
    variable {env timer VAR [0, movement_cooldown] assign {result{movement_cooldown}}}
    #{START OF X_NET}#
    variable {bl x_net_1_1 DEFINE INT assign {result{ (max, dest_x, 0)}}}
    variable {bl x_net_1_2 DEFINE INT assign {result{ (max, (sub, dest_x, prev_dest_x), 0)}}}
    variable {bl x_net_1_3 DEFINE INT assign {result{ (max, (sub, prev_dest_x, dest_x), 0)}}}
    variable {bl x_net_1_4 DEFINE INT assign {result{ (max, (sub, dest_x, (idiv, (add, x_min, x_max), 2)), 0)}}}
    variable {bl x_net_1_5 DEFINE INT assign {result{ (max, (sub, (idiv, (add, x_min, x_max), 2), dest_x), 0)}}}
    
    variable {bl x_net_2_1 DEFINE INT assign {result{ (max, x_net_1_1, 0)}}}
    variable {bl x_net_2_2 DEFINE INT assign {result{ (max, (add, (neg, x_net_1_2), (neg, x_net_1_3), 1), 0)}}}
    variable {bl x_net_2_3 DEFINE INT assign {result{ (max, (sub, 1, x_net_1_4), 0)}}}
    variable {bl x_net_2_4 DEFINE INT assign {result{ (max, (sub, 1, x_net_1_5), 0)}}}
    
    variable {bl x_net_3_1 DEFINE INT assign {result{ (max, (sub, x_net_2_1, (mult, x_net_2_2, x_max)), 0)}}}
    variable {bl x_net_3_2 DEFINE INT assign {result{ (max, (sub, 1, x_net_2_2), 0)}}}
    variable {bl x_net_3_3 DEFINE INT assign {result{ (max, x_net_2_3, 0)}}}
    variable {bl x_net_3_4 DEFINE INT assign {result{ (max, x_net_2_4, 0)}}}
    
    variable {bl x_net_4_1 DEFINE INT assign {result{ (max, x_net_3_1, 0)}}}
    variable {bl x_net_4_2 DEFINE INT assign {result{ (max, (sub, (mult, x_max, x_net_3_3), (mult, x_max, x_net_3_2)), 0)}}}
    variable {bl x_net_4_3 DEFINE INT assign {result{ (max, (sub, (mult, x_min, x_net_3_4), (mult, x_max, x_net_3_2)), 0)}}}
    
    variable {bl x_net_output DEFINE INT assign {result{ (max, (add, x_net_4_1, x_net_4_2, x_net_4_3), 0)}}}
    #{START OF Y_NET}#
    variable {bl y_net_1_1 DEFINE INT assign {result{ (max, dest_y, 0)}}}
    variable {bl y_net_1_2 DEFINE INT assign {result{ (max, (sub, dest_y, prev_dest_y), 0)}}}
    variable {bl y_net_1_3 DEFINE INT assign {result{ (max, (sub, prev_dest_y, dest_y), 0)}}}
    variable {bl y_net_1_4 DEFINE INT assign {result{ (max, dir, 0)}}}
    variable {bl y_net_1_5 DEFINE INT assign {result{ (max, (neg, dir), 0)}}}
    
    variable {bl y_net_2_1 DEFINE INT assign {result{ (max, y_net_1_1, 0)}}}
    variable {bl y_net_2_2 DEFINE INT assign {result{ (max, (add, (neg, y_net_1_2), (neg, y_net_1_3), 1), 0)}}}
    variable {bl y_net_2_3 DEFINE INT assign {result{ (max, y_net_1_4, 0)}}}
    variable {bl y_net_2_4 DEFINE INT assign {result{ (max, y_net_1_5, 0)}}}
    
    variable {bl y_net_3_1 DEFINE INT assign {result{ (max, y_net_2_1, 0)}}}
    variable {bl y_net_3_2 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_3, -1), 0)}}}
    variable {bl y_net_3_3 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_4, -1), 0)}}}
    
    variable {bl y_net_output DEFINE INT assign {result{ (max, (add, y_net_3_1, (mult, y_change, y_net_3_2), (mult, -1, y_change, y_net_3_3)), 0)}}}
variable {bl fake_net_1_0 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_1 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_2 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -2, (mult, prev_dest_y, -1), -5))}}}
variable {bl fake_net_1_3 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_4 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_5 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, -5), 4))}}}
variable {bl fake_net_1_6 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_7 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_8 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -1, (mult, prev_dest_y, 1), -3))}}}
variable {bl fake_net_1_9 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -1, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_10 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 4, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_11 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 4, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_12 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_13 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 5), 4))}}}
variable {bl fake_net_1_14 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_15 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_16 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -4, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_17 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 4, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_18 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_19 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, -5), 3))}}}
variable {bl fake_net_1_20 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, -4), 2))}}}
variable {bl fake_net_1_21 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, -2), -1))}}}
variable {bl fake_net_1_22 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_23 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_24 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_25 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_26 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_27 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_28 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_29 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_30 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_31 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -2, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_32 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_33 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 5, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_34 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 2, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_35 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_36 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_37 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_38 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_39 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 5, (mult, prev_dest_y, -3), -2))}}}
variable {bl fake_net_1_40 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 2, (mult, prev_dest_y, 5), -1))}}}
variable {bl fake_net_1_41 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 1), 3))}}}
variable {bl fake_net_1_42 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_43 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -5, (mult, prev_dest_y, 4), 2))}}}
variable {bl fake_net_1_44 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, 4), 4))}}}
variable {bl fake_net_1_45 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_46 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 5, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_47 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 4, (mult, prev_dest_y, 5), 2))}}}
variable {bl fake_net_1_48 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_49 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -5, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_50 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_51 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_52 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_53 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, -1), 2))}}}
variable {bl fake_net_1_54 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_55 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_56 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_57 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 1, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_58 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, -4), 2))}}}
variable {bl fake_net_1_59 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_60 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_61 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 4, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_62 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_63 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_64 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_65 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_66 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 2, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_67 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -2, (mult, prev_dest_y, -4), -1))}}}
variable {bl fake_net_1_68 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_69 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, -1), 2))}}}
variable {bl fake_net_1_70 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -2), 4))}}}
variable {bl fake_net_1_71 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, 5), 4))}}}
variable {bl fake_net_1_72 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_73 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_74 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_75 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_76 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_77 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_78 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_79 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_80 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_81 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_82 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_83 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 1), -3))}}}
variable {bl fake_net_1_84 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 1, (mult, prev_dest_y, -4), -2))}}}
variable {bl fake_net_1_85 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 2, (mult, prev_dest_y, 1), -4))}}}
variable {bl fake_net_1_86 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_87 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_88 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_89 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_90 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_91 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 1, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_92 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 3), -5))}}}
variable {bl fake_net_1_93 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -5, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_94 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_95 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_96 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_97 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -4, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_98 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_99 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, 5), 1))}}}
variable {bl fake_net_1_100 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 1, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_101 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 3, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_102 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 2), -3))}}}
variable {bl fake_net_1_103 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -2), 3))}}}
variable {bl fake_net_1_104 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_105 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -1, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_106 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 3, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_107 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_108 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -4, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_109 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, 1), 2))}}}
variable {bl fake_net_1_110 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_111 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_112 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -2, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_113 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_114 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_115 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -1, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_116 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, 2), 4))}}}
variable {bl fake_net_1_117 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 5, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_118 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_119 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -5), 3))}}}
variable {bl fake_net_1_120 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, 5), 2))}}}
variable {bl fake_net_1_121 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_122 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_123 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 4), -5))}}}
variable {bl fake_net_1_124 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, 4), 3))}}}
variable {bl fake_net_1_125 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_126 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 1, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_127 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_128 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_129 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_130 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_131 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_132 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, -5), 3))}}}
variable {bl fake_net_1_133 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_134 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 5, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_135 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_136 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 1, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_137 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_138 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_139 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -2, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_140 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_141 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_142 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_143 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -2, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_144 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -3, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_145 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, 1), -5))}}}
variable {bl fake_net_1_146 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 4), 1))}}}
variable {bl fake_net_1_147 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_148 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, 4), 2))}}}
variable {bl fake_net_1_149 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_150 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_151 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_152 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_153 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -2, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_154 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_155 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 1, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_156 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_157 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_158 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -1, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_159 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_160 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_161 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_162 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_163 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_164 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -3, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_165 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -2, (mult, prev_dest_y, 4), -5))}}}
variable {bl fake_net_1_166 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_167 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_168 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_169 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_170 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, 2), 4))}}}
variable {bl fake_net_1_171 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -2), 1))}}}
variable {bl fake_net_1_172 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -3, (mult, prev_dest_y, -5), 3))}}}
variable {bl fake_net_1_173 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_174 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_175 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_176 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_177 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 1), 2))}}}
variable {bl fake_net_1_178 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_179 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, 1), 4))}}}
variable {bl fake_net_1_180 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_181 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_182 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_183 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_184 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, -2), 4))}}}
variable {bl fake_net_1_185 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -2, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_186 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -4, (mult, prev_dest_y, -1), -5))}}}
variable {bl fake_net_1_187 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_188 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_189 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_190 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_191 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_192 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_193 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_194 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_195 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_196 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_197 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_198 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_199 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, 1), 3))}}}
variable {bl fake_net_1_200 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_201 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_202 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -5), 2))}}}
variable {bl fake_net_1_203 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, 3), -1))}}}
variable {bl fake_net_1_204 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -4), 4))}}}
variable {bl fake_net_1_205 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 1), -3))}}}
variable {bl fake_net_1_206 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -2, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_207 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_208 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_209 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 4, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_210 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_211 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_212 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_213 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_214 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_215 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_216 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -4), 1))}}}
variable {bl fake_net_1_217 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_218 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_219 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_220 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_221 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -3, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_222 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_223 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_224 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_225 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 5, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_226 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_227 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_228 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, -5), -3))}}}
variable {bl fake_net_1_229 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, 2), 5))}}}
variable {bl fake_net_1_230 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 4, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_231 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_232 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_233 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -4), -2))}}}
variable {bl fake_net_1_234 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_235 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_236 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_237 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_238 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 4, (mult, prev_dest_y, 2), -3))}}}
variable {bl fake_net_1_239 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_240 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_241 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_242 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, 1), 0))}}}
variable {bl fake_net_1_243 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_244 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 1), -4))}}}
variable {bl fake_net_1_245 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 5), 2))}}}
variable {bl fake_net_1_246 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 5), 1))}}}
variable {bl fake_net_1_247 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_248 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, -2), -1))}}}
variable {bl fake_net_1_249 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -3, (mult, prev_dest_y, 1), -3))}}}
variable {bl fake_net_1_250 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_251 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_252 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_253 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -5, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_254 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_255 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_256 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 1, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_257 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_258 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -3, (mult, prev_dest_y, -4), -2))}}}
variable {bl fake_net_1_259 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_260 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_261 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_262 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_263 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, -3), 5))}}}
variable {bl fake_net_1_264 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_265 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_266 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_267 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_268 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, 5), -5))}}}
variable {bl fake_net_1_269 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 4, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_270 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_271 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -4, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_272 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_273 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_274 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, 3), -1))}}}
variable {bl fake_net_1_275 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, 1), 3))}}}
variable {bl fake_net_1_276 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 1), -4))}}}
variable {bl fake_net_1_277 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_278 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_279 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_280 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_281 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 3), -5))}}}
variable {bl fake_net_1_282 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_283 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_284 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 2, (mult, prev_dest_y, 1), 3))}}}
variable {bl fake_net_1_285 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, 5), 2))}}}
variable {bl fake_net_1_286 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_287 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_288 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_289 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, 3), -1))}}}
variable {bl fake_net_1_290 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_291 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -3, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_292 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_293 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_294 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, -5), 4))}}}
variable {bl fake_net_1_295 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -2, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_296 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, -2), 4))}}}
variable {bl fake_net_1_297 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -1, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_298 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_299 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_300 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -1, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_301 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_302 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_303 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_304 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 4, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_305 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 4, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_306 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, 1), 2))}}}
variable {bl fake_net_1_307 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 5), -2))}}}
variable {bl fake_net_1_308 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -1, (mult, prev_dest_y, 2), -3))}}}
variable {bl fake_net_1_309 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_310 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -2, (mult, prev_dest_y, 5), 1))}}}
variable {bl fake_net_1_311 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -1, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_312 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_313 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_314 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_315 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, -5), 4))}}}
variable {bl fake_net_1_316 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -4, (mult, prev_dest_y, 1), -5))}}}
variable {bl fake_net_1_317 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, -1), -1))}}}
variable {bl fake_net_1_318 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -5, (mult, prev_dest_y, 5), -1))}}}
variable {bl fake_net_1_319 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_320 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_321 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 1, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_322 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_323 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 2, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_output DEFINE INT assign {result{(max, 0, (add, (mult, fake_net_1_0, 0), -3, (mult, fake_net_1_1, -3), -3, (mult, fake_net_1_2, 0), 1, (mult, fake_net_1_3, -3), 2, (mult, fake_net_1_4, 1), -1, (mult, fake_net_1_5, 5), 3, (mult, fake_net_1_6, 0), 5, (mult, fake_net_1_7, -5), 0, (mult, fake_net_1_8, -1), 0, (mult, fake_net_1_9, -2), 1, (mult, fake_net_1_10, -3), 1, (mult, fake_net_1_11, -4), -3, (mult, fake_net_1_12, 5), 5, (mult, fake_net_1_13, -3), -1, (mult, fake_net_1_14, -2), 2, (mult, fake_net_1_15, 1), 5, (mult, fake_net_1_16, -5), 1, (mult, fake_net_1_17, 3), -5, (mult, fake_net_1_18, -5), -5, (mult, fake_net_1_19, 4), 4, (mult, fake_net_1_20, -3), -1, (mult, fake_net_1_21, 0), 3, (mult, fake_net_1_22, 3), -4, (mult, fake_net_1_23, 1), -4, (mult, fake_net_1_24, -3), -2, (mult, fake_net_1_25, 0), -3, (mult, fake_net_1_26, 0), 1, (mult, fake_net_1_27, 5), -3, (mult, fake_net_1_28, 2), -4, (mult, fake_net_1_29, -2), 5, (mult, fake_net_1_30, 0), 0, (mult, fake_net_1_31, 1), 2, (mult, fake_net_1_32, 0), 2, (mult, fake_net_1_33, -5), 0, (mult, fake_net_1_34, -1), 0, (mult, fake_net_1_35, -4), -2, (mult, fake_net_1_36, 4), -2, (mult, fake_net_1_37, -3), -3, (mult, fake_net_1_38, 0), 4, (mult, fake_net_1_39, 1), -3, (mult, fake_net_1_40, 0), 3, (mult, fake_net_1_41, -4), 0, (mult, fake_net_1_42, 3), 3, (mult, fake_net_1_43, 1), -2, (mult, fake_net_1_44, 4), 0, (mult, fake_net_1_45, 0), 4, (mult, fake_net_1_46, -4), 1, (mult, fake_net_1_47, -1), 4, (mult, fake_net_1_48, -1), -2, (mult, fake_net_1_49, -1), 2, (mult, fake_net_1_50, 2), 1, (mult, fake_net_1_51, -4), 2, (mult, fake_net_1_52, -3), -1, (mult, fake_net_1_53, -2), -5, (mult, fake_net_1_54, -2), 0, (mult, fake_net_1_55, 0), 1, (mult, fake_net_1_56, 5), -3, (mult, fake_net_1_57, 2), -2, (mult, fake_net_1_58, -3), -1, (mult, fake_net_1_59, -4), 0, (mult, fake_net_1_60, 3), 3, (mult, fake_net_1_61, -1), 3, (mult, fake_net_1_62, 2), 2, (mult, fake_net_1_63, 1), 3, (mult, fake_net_1_64, 0), 3, (mult, fake_net_1_65, -5), 4, (mult, fake_net_1_66, 0), 0, (mult, fake_net_1_67, -3), -3, (mult, fake_net_1_68, -5), 2, (mult, fake_net_1_69, -5), -1, (mult, fake_net_1_70, -3), -5, (mult, fake_net_1_71, -4), 5, (mult, fake_net_1_72, -4), -1, (mult, fake_net_1_73, -2), 2, (mult, fake_net_1_74, 1), 3, (mult, fake_net_1_75, -2), -2, (mult, fake_net_1_76, 1), -3, (mult, fake_net_1_77, 0), -1, (mult, fake_net_1_78, 3), 2, (mult, fake_net_1_79, 3), -1, (mult, fake_net_1_80, 3), -5, (mult, fake_net_1_81, 0), 5, (mult, fake_net_1_82, -2), -2, (mult, fake_net_1_83, 0), -5, (mult, fake_net_1_84, -4), 5, (mult, fake_net_1_85, -3), 4, (mult, fake_net_1_86, -4), 0, (mult, fake_net_1_87, 0), 2, (mult, fake_net_1_88, 3), -4, (mult, fake_net_1_89, 0), -1, (mult, fake_net_1_90, 5), 2, (mult, fake_net_1_91, 4), 0, (mult, fake_net_1_92, -2), -2, (mult, fake_net_1_93, -5), 4, (mult, fake_net_1_94, -3), 5, (mult, fake_net_1_95, -2), 1, (mult, fake_net_1_96, 0), 0, (mult, fake_net_1_97, 3), -3, (mult, fake_net_1_98, 2), 1, (mult, fake_net_1_99, 0), -5, (mult, fake_net_1_100, 4), 1, (mult, fake_net_1_101, 5), -5, (mult, fake_net_1_102, -3), 4, (mult, fake_net_1_103, -4), -2, (mult, fake_net_1_104, 0), 4, (mult, fake_net_1_105, -5), 1, (mult, fake_net_1_106, 3), 2, (mult, fake_net_1_107, 0), -3, (mult, fake_net_1_108, 2), -2, (mult, fake_net_1_109, -3), -5, (mult, fake_net_1_110, 3), 4, (mult, fake_net_1_111, 4), 0, (mult, fake_net_1_112, -2), 0, (mult, fake_net_1_113, -3), -1, (mult, fake_net_1_114, 5), 0, (mult, fake_net_1_115, -1), 1, (mult, fake_net_1_116, 5), -4, (mult, fake_net_1_117, 0), 2, (mult, fake_net_1_118, 5), -5, (mult, fake_net_1_119, -3), -4, (mult, fake_net_1_120, -4), -2, (mult, fake_net_1_121, -1), -4, (mult, fake_net_1_122, -3), 2, (mult, fake_net_1_123, -5), -4, (mult, fake_net_1_124, -2), 5, (mult, fake_net_1_125, 3), 0, (mult, fake_net_1_126, 0), -5, (mult, fake_net_1_127, -4), 4, (mult, fake_net_1_128, 0), 4, (mult, fake_net_1_129, -5), -4, (mult, fake_net_1_130, 4), -5, (mult, fake_net_1_131, 2), -4, (mult, fake_net_1_132, 0), -2, (mult, fake_net_1_133, 4), 5, (mult, fake_net_1_134, 4), -1, (mult, fake_net_1_135, 4), -5, (mult, fake_net_1_136, -5), 2, (mult, fake_net_1_137, 4), -2, (mult, fake_net_1_138, 1), -5, (mult, fake_net_1_139, 0), -1, (mult, fake_net_1_140, 2), 0, (mult, fake_net_1_141, 3), -3, (mult, fake_net_1_142, 4), 2, (mult, fake_net_1_143, -1), 5, (mult, fake_net_1_144, -2), 0, (mult, fake_net_1_145, 0), -1, (mult, fake_net_1_146, 4), -3, (mult, fake_net_1_147, -1), -2, (mult, fake_net_1_148, 0), 2, (mult, fake_net_1_149, 3), 2, (mult, fake_net_1_150, -5), 4, (mult, fake_net_1_151, -3), 1, (mult, fake_net_1_152, -1), -2, (mult, fake_net_1_153, 0), 2, (mult, fake_net_1_154, 0), 5, (mult, fake_net_1_155, -2), 5, (mult, fake_net_1_156, -2), -4, (mult, fake_net_1_157, -3), 1, (mult, fake_net_1_158, 1), -5, (mult, fake_net_1_159, 0), -4, (mult, fake_net_1_160, -4), -5, (mult, fake_net_1_161, -5), -5, (mult, fake_net_1_162, 5), -2, (mult, fake_net_1_163, 3), 2, (mult, fake_net_1_164, 2), 3, (mult, fake_net_1_165, -4), -3, (mult, fake_net_1_166, 5), 1, (mult, fake_net_1_167, 1), -3, (mult, fake_net_1_168, 4), 5, (mult, fake_net_1_169, -1), 3, (mult, fake_net_1_170, 3), -4, (mult, fake_net_1_171, -2), -3, (mult, fake_net_1_172, -1), -1, (mult, fake_net_1_173, -3), 0, (mult, fake_net_1_174, -5), 0, (mult, fake_net_1_175, -3), 5, (mult, fake_net_1_176, 3), -4, (mult, fake_net_1_177, 5), -4, (mult, fake_net_1_178, -4), 2, (mult, fake_net_1_179, 1), 1, (mult, fake_net_1_180, -2), -5, (mult, fake_net_1_181, 1), -5, (mult, fake_net_1_182, 0), -2, (mult, fake_net_1_183, -5), -1, (mult, fake_net_1_184, -4), 5, (mult, fake_net_1_185, 1), -1, (mult, fake_net_1_186, 5), 3, (mult, fake_net_1_187, 2), -4, (mult, fake_net_1_188, -2), 5, (mult, fake_net_1_189, -3), -1, (mult, fake_net_1_190, 4), -3, (mult, fake_net_1_191, -4), -2, (mult, fake_net_1_192, 5), -2, (mult, fake_net_1_193, -4), -3, (mult, fake_net_1_194, 5), -1, (mult, fake_net_1_195, 2), 0, (mult, fake_net_1_196, 3), -1, (mult, fake_net_1_197, 5), 4, (mult, fake_net_1_198, -3), 2, (mult, fake_net_1_199, -1), 1, (mult, fake_net_1_200, -1), 2, (mult, fake_net_1_201, 5), -4, (mult, fake_net_1_202, -1), 5, (mult, fake_net_1_203, -2), -1, (mult, fake_net_1_204, -1), -2, (mult, fake_net_1_205, -5), -1, (mult, fake_net_1_206, 2), 4, (mult, fake_net_1_207, -1), 1, (mult, fake_net_1_208, -4), -1, (mult, fake_net_1_209, 1), 1, (mult, fake_net_1_210, 2), 2, (mult, fake_net_1_211, -1), -1, (mult, fake_net_1_212, 5), -4, (mult, fake_net_1_213, -4), 3, (mult, fake_net_1_214, -1), 0, (mult, fake_net_1_215, -1), -1, (mult, fake_net_1_216, 5), -5, (mult, fake_net_1_217, -3), 5, (mult, fake_net_1_218, 2), -5, (mult, fake_net_1_219, -1), -3, (mult, fake_net_1_220, 0), 4, (mult, fake_net_1_221, -1), 0, (mult, fake_net_1_222, -3), 1, (mult, fake_net_1_223, -1), -1, (mult, fake_net_1_224, 0), 5, (mult, fake_net_1_225, -3), 5, (mult, fake_net_1_226, -2), 0, (mult, fake_net_1_227, -2), 0, (mult, fake_net_1_228, 0), 4, (mult, fake_net_1_229, -2), -5, (mult, fake_net_1_230, 2), 1, (mult, fake_net_1_231, 0), 3, (mult, fake_net_1_232, -3), 0, (mult, fake_net_1_233, -4), 0, (mult, fake_net_1_234, -5), -2, (mult, fake_net_1_235, 4), -2, (mult, fake_net_1_236, 1), 4, (mult, fake_net_1_237, -5), -3, (mult, fake_net_1_238, 0), 0, (mult, fake_net_1_239, -4), -1, (mult, fake_net_1_240, -3), 0, (mult, fake_net_1_241, -3), 0, (mult, fake_net_1_242, 0), 1, (mult, fake_net_1_243, -2), -4, (mult, fake_net_1_244, -5), -4, (mult, fake_net_1_245, -1), 1, (mult, fake_net_1_246, 5), 0, (mult, fake_net_1_247, 0), 0, (mult, fake_net_1_248, 0), 5, (mult, fake_net_1_249, -5), -2, (mult, fake_net_1_250, 2), 4, (mult, fake_net_1_251, 4), -3, (mult, fake_net_1_252, 5), 0, (mult, fake_net_1_253, -3), 3, (mult, fake_net_1_254, -5), -5, (mult, fake_net_1_255, 0), 0, (mult, fake_net_1_256, 2), -3, (mult, fake_net_1_257, -2), 0, (mult, fake_net_1_258, 4), -2, (mult, fake_net_1_259, -3), 0, (mult, fake_net_1_260, 4), -1, (mult, fake_net_1_261, -3), -2, (mult, fake_net_1_262, 4), -1, (mult, fake_net_1_263, -2), -2, (mult, fake_net_1_264, -1), -5, (mult, fake_net_1_265, 1), 3, (mult, fake_net_1_266, -4), 5, (mult, fake_net_1_267, 0), 3, (mult, fake_net_1_268, 0), 2, (mult, fake_net_1_269, -3), 3, (mult, fake_net_1_270, 1), 2, (mult, fake_net_1_271, -3), 3, (mult, fake_net_1_272, 0), 3, (mult, fake_net_1_273, -4), 0, (mult, fake_net_1_274, 3), 0, (mult, fake_net_1_275, 0), 3, (mult, fake_net_1_276, 0), -2, (mult, fake_net_1_277, 5), -2, (mult, fake_net_1_278, 0), 2, (mult, fake_net_1_279, 1), 1, (mult, fake_net_1_280, 0), -1, (mult, fake_net_1_281, 2), 0, (mult, fake_net_1_282, -2), -2, (mult, fake_net_1_283, -5), 4, (mult, fake_net_1_284, 2), 0, (mult, fake_net_1_285, 2), 2, (mult, fake_net_1_286, 1), 0, (mult, fake_net_1_287, 5), -4, (mult, fake_net_1_288, 0), -1, (mult, fake_net_1_289, -2), 4, (mult, fake_net_1_290, -1), 4, (mult, fake_net_1_291, -4), 1, (mult, fake_net_1_292, -4), -1, (mult, fake_net_1_293, 4), 0, (mult, fake_net_1_294, 5), -3, (mult, fake_net_1_295, 0), -2, (mult, fake_net_1_296, 2), -1, (mult, fake_net_1_297, 0), -3, (mult, fake_net_1_298, 4), 1, (mult, fake_net_1_299, -4), -2, (mult, fake_net_1_300, 0), 5, (mult, fake_net_1_301, -2), 4, (mult, fake_net_1_302, -5), 1, (mult, fake_net_1_303, 0), -3, (mult, fake_net_1_304, 0), 3, (mult, fake_net_1_305, -4), 0, (mult, fake_net_1_306, -5), 4, (mult, fake_net_1_307, -4), -3, (mult, fake_net_1_308, 5), 4, (mult, fake_net_1_309, -4), -3, (mult, fake_net_1_310, 0), -4, (mult, fake_net_1_311, -3), 1, (mult, fake_net_1_312, -2), -5, (mult, fake_net_1_313, 1), 4, (mult, fake_net_1_314, -3), -1, (mult, fake_net_1_315, 5), -4, (mult, fake_net_1_316, 4), 3, (mult, fake_net_1_317, 4), 0, (mult, fake_net_1_318, 4), 3, (mult, fake_net_1_319, -2), 5, (mult, fake_net_1_320, -2), 0, (mult, fake_net_1_321, 4), -1, (mult, fake_net_1_322, -2), -3, (mult, fake_net_1_323, 1), -4))}}}

} end_variables

environment_update {
    #{}#
    variable_statement {
	tar_x
	assign {
	    case { (eq, timer, 0) } end_case result {tar_x, (min, x_max, (add, tar_x, 1)), (max, x_min, (sub, tar_x, 1))} end_result
	    result { tar_x } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	tar_y
	assign {
	    case { (eq, timer, 0) } end_case result {tar_y, (min, y_max, (add, tar_y, 1)), (max, y_min, (sub, tar_y, 1))} end_result
	    result { tar_y } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	timer
	assign {
	    case {(eq, timer, 0) } result {movement_cooldown}
	    result {(max, 0, (sub, timer, 1))}
	}
    }
    #{}#
} end_environment_update

checks {
    check {
	not_at_destination
	arguments {}
	read_variables {cur_x, cur_y, dest_x, dest_y}
	condition { (not, (and, (eq, cur_x, dest_x), (eq, cur_y, dest_y)))}
    }
    check {
	y_too_small
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (lt, cur_y, dest_y)}
    }
    check {
	y_too_big
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (gt, cur_y, dest_y)}
    }
    check {
	x_too_small
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (lt, cur_x, dest_x)}
    }
    check {
	x_too_big
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (gt, cur_x, dest_x)}
    }
} end_checks

environment_checks {
    #{This currently only checks one tree}#
    environment_check {
	target_in_sight
	arguments{}
	read_variables {cur_x, cur_y} end_read_variables
	condition {
	    (and,
		(lte, (add, (abs, (sub, cur_x, tar_x)), (abs, (sub, cur_y, tar_y))), vision_range),
		(loop, loop_index, [0, (sub, tree_count, 1)] such_that True,
		    (or,
			(gt, (add, (abs, (sub, (index, tree_x, constant_index loop_index), tar_x)), (abs, (sub, (index, tree_y, constant_index loop_index), tar_y))), tree_range),
			(and, (eq, (index, tree_x, constant_index loop_index), cur_x), (eq, (index, tree_y, constant_index loop_index), cur_y)),
			(and, (eq, (index, tree_x, constant_index loop_index), tar_x), (eq, (index, tree_y, constant_index loop_index), tar_y)),
			(and, (lt, (index, tree_x, constant_index loop_index), cur_x), (lt, (index, tree_x, constant_index loop_index), tar_x)),
			(and, (lt, (index, tree_y, constant_index loop_index), cur_y), (lt, (index, tree_y, constant_index loop_index), tar_y)),
			(and, (gt, (index, tree_x, constant_index loop_index), cur_x), (gt, (index, tree_x, constant_index loop_index), tar_x)),
			(and, (gt, (index, tree_y, constant_index loop_index), cur_y), (gt, (index, tree_y, constant_index loop_index), tar_y))
		    )
		)
	    )
	} end_condition
    } end_environment_check
    
} end_environment_checks

actions {
    #{ action nodes are defined here }#
    action {
	call_xy_net
	arguments{}
	local_variables {} end_local_variables
	read_variables {x_net_output, y_net_output} end_read_variables
	write_variables {dest_x, dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dest_x
		assign {
		    result {(max, x_min, (min, x_max, x_net_output))}
		}
	    }
	    variable_statement {
		dest_y
		assign {
		    result {(max, y_min, (min, y_max, y_net_output))}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	move
	arguments{delta_x := INT, delta_y := INT}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {cur_x, cur_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		cur_x assign {result {(max, x_min, (min, x_max, (add, delta_x, cur_x)))}}
	    }
	    variable_statement {
		cur_y assign {result {(max, y_min, (min, y_max, (add, delta_y, cur_y)))}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	send_victory
	arguments{}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {victory} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		victory assign {result {True}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	update_direction
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_y} end_read_variables
	write_variables {dir} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dir
		assign {
		    case { (eq, cur_y, y_max)}
		    result {-1}
		    case { (eq, cur_y, y_min)}
		    result {1}
		    result {dir}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    }
    action {
	update_previous_destination
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_x, cur_y} end_read_variables
	write_variables {prev_dest_x, prev_dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		prev_dest_x assign {result {cur_x}}
	    }
	    variable_statement {
		prev_dest_y assign {result {cur_y}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
} end_actions

sub_trees {
    sub_tree {
	DESTINATION_SUBTREE
	composite {
	    destination selector
	    children {
		not_at_destination {} #{Checks destination}#
		composite {
		    new_destination sequence
		    children {
			update_direction {} #{Updates the direction we're going in.}#
			call_xy_net {} #{Calls the neural networks}#
			update_previous_destination {} #{sets the current location to the previous destination.}#
		    }
		}
	    }
	}
    }
    sub_tree {
	MOVEMENT_SUBTREE
	composite {
	    destination_and_movement sequence
	    children {
		insert {DESTINATION_SUBTREE}
		composite {
		    movement selector
		    children {
			composite {
			    try_up sequence
			    children {
				y_too_small {}
				move {0, 1}
			    }
			}
			composite {
			    try_down sequence
			    children {
				y_too_big {}
				move {0, -1}
			    }
			}
			composite {
			    try_left sequence
			    children {
				x_too_big {}
				move {-1, 0}
			    }
			}
			composite {
			    try_right sequence
			    children {
				x_too_small {}
				move {1, 0}
			    }
			}
		    }
		}
	    }
	}
    }
} end_sub_trees

tree {
    composite {
	drone_control selector
	children {
	    composite {
		vision sequence
		children {
		    target_in_sight {}
		    send_victory {}
		    
		}
	    }
	    insert {MOVEMENT_SUBTREE}
	}
    }
} end_tree




tick_prerequisite { (not, victory) } end_tick_prerequisite
#{tick_prerequisite { True } end_tick_prerequisite}#
#{ if the condition is True, the tree ticks.
    If it is false, everything is done }#

specifications { #{ INVAR, LTL, and CTL specs go here }#
    CTLSPEC {(always_finally, victory at -1)}
    LTLSPEC {(finally_bounded, [0, 200], victory at -1)}
    #{CTLSPEC {(imply, (and, (eq, (index, tree_x 0, 0), 2), (eq, (index, tree_x 0, 1), 5), (eq, (index, tree_y 0, 0), 2), (eq, (index, tree_y 0, 1), 5)), (always_finally, victory -1))}}#
INVARSPEC { (eq, 0, fake_net_output)}
} end_specifications