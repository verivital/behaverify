MODULE main
	DEFINE
		max_active_node := 5;
		statuses := [example_1_seq1.status, node_z.status, sel1.status, node_x.status, node_y.status, nurrent_node.status];
		parents := [-1, 0, 0, 2, 2, 2];
		leafs := {-3, 1, 3, 4, 5};
		selectors := {-3, 2};
		sequences := {-3, 0};
		parallels_synchronised_all := {-3};
		parallels_unsynchronised_all := {-3};
		parallels_synchronised_one := {-3};
		parallels_unsynchronised_one := {-3};
		parallels := {-3};
		decorators := {-3};
		first_child := [1, -2, 3, -2, -2, -2];
		last_child := [2, -1, 5, -1, -1, -1];
		next_node := [next_node_0, next_node_1, next_node_2, next_node_3, next_node_4, next_node_5];
		next_node_0 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 0) : parents[0];
				(resume_status_0 = 2) : next_node_2;
				(previous_node <1) : next_node_1;
				(previous_node <2) : next_node_2;
				TRUE : parents[0];
			esac;
		next_node_1 := 
			case
				!(active_node = 1) : 1;
				TRUE : parents[1];
			esac;
		next_node_2 := 
			case
				(previous_status = running | previous_status = success) & (active_node = 2) : parents[2];
				(previous_node <3) : next_node_3;
				(previous_node <4) : next_node_4;
				(previous_node <5) : next_node_5;
				TRUE : parents[2];
			esac;
		next_node_3 := 
			case
				!(active_node = 3) : 3;
				TRUE : parents[3];
			esac;
		next_node_4 := 
			case
				!(active_node = 4) : 4;
				TRUE : parents[4];
			esac;
		next_node_5 := 
			case
				!(active_node = 5) : 5;
				TRUE : parents[5];
			esac;
	VAR
		active_node : -2..max_active_node;
		previous_node : -1..max_active_node;
		previous_status : {running, success, failure, invalid};
		resume_status_0 : {2, 0};
		example_1_seq1 : node_sequence(active_node, 0, previous_status, 2, previous_node);
		node_z : node_default(active_node, 1);
		sel1 : node_selector(active_node, 2, previous_status, 5, previous_node);
		node_x : node_default(active_node, 3);
		node_y : node_default(active_node, 4);
		nurrent_node : node_default(active_node, 5);
		node_names : define_nodes;
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		init(resume_status_0) := 0;
		next(resume_status_0 ) := 
			case
				(resume_status_0= 0) & (previous_node in {2, 0}) & (previous_status = running) : previous_node;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 0;
				 (previous_node in {2, 0}) & (previous_status = success | previous_status = failure) : 0;
				(previous_node = parents[0]) & (previous_status = failure | previous_status = success) : 0;
				(previous_node = 0) & (previous_status = failure | previous_status = success) : 0;
				TRUE : resume_status_0;
			esac;
		next(previous_node) :=
			case
				(active_node < 0) : -1;
				TRUE : active_node;
			esac;
		next(previous_status) :=
			case
				(active_node < 0) : invalid;
				TRUE : statuses[active_node];
			esac;
		next(active_node) :=
			case
				(active_node = -2) : -2;
				(active_node = -1) : 0;
				TRUE : next_node[active_node];
			esac;
MODULE node_sequence(active_node, id, previous_status, last_child, previous_node)
	DEFINE
		status :=
			case
				(id = active_node) & (previous_status = invalid) : invalid;
				(id = active_node) & (previous_status = running) : running;
				(id = active_node) & (previous_status = failure) : failure;
				(id = active_node) & (last_child = previous_node) : success;
				(id = active_node) : invalid;
				TRUE : invalid;
			esac;
MODULE node_default(active_node, id)
	DEFINE
		status :=
			case
				(id = active_node) : {success, failure, running};
				TRUE : invalid;
			esac;
MODULE node_selector(active_node, id, previous_status, last_child, previous_node)
	DEFINE
		status :=
			case
				(id = active_node) & (previous_status = invalid) : invalid;
				(id = active_node) & (previous_status = running) : running;
				(id = active_node) & (previous_status = success) : success;
				(id = active_node) & (last_child = previous_node) : failure;
				(id = active_node) : invalid;
				TRUE : invalid;
			esac;
MODULE define_nodes
	DEFINE
		example_1_seq1 := 0;
		node_z := 1;
		sel1 := 2;
		node_x := 3;
		node_y := 4;
		nurrent_node := 5;
