MODULE main
	DEFINE
		max_active_node := 24;
		statuses := [example_6_seq1.status, sel1.status, sel2.status, leaf_1.status, leaf_2.status, leaf_3.status, leaf_4.status, leaf_5.status, leaf_6.status, leaf_7.status, leaf_8.status, seq2.status, seq3.status, seq4.status, seq5.status, leaf_9.status, leaf_10.status, leaf_11.status, leaf_12.status, seq6.status, seq7.status, leaf_13.status, leaf_14.status, leaf_15.status, leaf_16.status];
		parents := [-1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 11, 11, 13, 13, 14, 14, 12, 12, 19, 19, 20, 20];
		leafs := {-3, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 22, 23, 24};
		selectors := {-3, 1, 2};
		sequences := {-3, 0, 11, 12, 13, 14, 19, 20};
		parallels_synchronised_all := {-3};
		parallels_unsynchronised_all := {-3};
		parallels_synchronised_one := {-3};
		parallels_unsynchronised_one := {-3};
		parallels := {-3};
		decorators := {-3};
		first_child := [1, 3, 11, -2, -2, -2, -2, -2, -2, -2, -2, 13, 19, 15, 17, -2, -2, -2, -2, 21, 23, -2, -2, -2, -2];
		last_child := [2, 10, 12, -1, -1, -1, -1, -1, -1, -1, -1, 14, 20, 16, 18, -1, -1, -1, -1, 22, 24, -1, -1, -1, -1];
		next_node := [next_node_0, next_node_1, next_node_2, next_node_3, next_node_4, next_node_5, next_node_6, next_node_7, next_node_8, next_node_9, next_node_10, next_node_11, next_node_12, next_node_13, next_node_14, next_node_15, next_node_16, next_node_17, next_node_18, next_node_19, next_node_20, next_node_21, next_node_22, next_node_23, next_node_24];
		next_node_0 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 0) : parents[0];
				(resume_status_0 = 2) : next_node_2;
				(previous_node <1) : next_node_1;
				(previous_node <2) : next_node_2;
				TRUE : parents[0];
			esac;
		next_node_1 := 
			case
				(previous_status = running | previous_status = success) & (active_node = 1) : parents[1];
				(previous_node <3) : next_node_3;
				(previous_node <4) : next_node_4;
				(previous_node <5) : next_node_5;
				(previous_node <6) : next_node_6;
				(previous_node <7) : next_node_7;
				(previous_node <8) : next_node_8;
				(previous_node <9) : next_node_9;
				(previous_node <10) : next_node_10;
				TRUE : parents[1];
			esac;
		next_node_2 := 
			case
				(previous_status = running | previous_status = success) & (active_node = 2) : parents[2];
				(previous_node <11) : next_node_11;
				(previous_node <12) : next_node_12;
				TRUE : parents[2];
			esac;
		next_node_3 := 
			case
				!(active_node = 3) : 3;
				TRUE : parents[3];
			esac;
		next_node_4 := 
			case
				!(active_node = 4) : 4;
				TRUE : parents[4];
			esac;
		next_node_5 := 
			case
				!(active_node = 5) : 5;
				TRUE : parents[5];
			esac;
		next_node_6 := 
			case
				!(active_node = 6) : 6;
				TRUE : parents[6];
			esac;
		next_node_7 := 
			case
				!(active_node = 7) : 7;
				TRUE : parents[7];
			esac;
		next_node_8 := 
			case
				!(active_node = 8) : 8;
				TRUE : parents[8];
			esac;
		next_node_9 := 
			case
				!(active_node = 9) : 9;
				TRUE : parents[9];
			esac;
		next_node_10 := 
			case
				!(active_node = 10) : 10;
				TRUE : parents[10];
			esac;
		next_node_11 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 11) : parents[11];
				(resume_status_0 = 16) : next_node_16;
				(resume_status_0 = 18) : next_node_18;
				(previous_node <13) : next_node_13;
				(previous_node <14) : next_node_14;
				TRUE : parents[11];
			esac;
		next_node_12 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 12) : parents[12];
				(resume_status_0 = 22) : next_node_22;
				(resume_status_0 = 24) : next_node_24;
				(previous_node <19) : next_node_19;
				(previous_node <20) : next_node_20;
				TRUE : parents[12];
			esac;
		next_node_13 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 13) : parents[13];
				(resume_status_0 = 16) : next_node_16;
				(previous_node <15) : next_node_15;
				(previous_node <16) : next_node_16;
				TRUE : parents[13];
			esac;
		next_node_14 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 14) : parents[14];
				(resume_status_0 = 18) : next_node_18;
				(previous_node <17) : next_node_17;
				(previous_node <18) : next_node_18;
				TRUE : parents[14];
			esac;
		next_node_15 := 
			case
				!(active_node = 15) : 15;
				TRUE : parents[15];
			esac;
		next_node_16 := 
			case
				!(active_node = 16) : 16;
				TRUE : parents[16];
			esac;
		next_node_17 := 
			case
				!(active_node = 17) : 17;
				TRUE : parents[17];
			esac;
		next_node_18 := 
			case
				!(active_node = 18) : 18;
				TRUE : parents[18];
			esac;
		next_node_19 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 19) : parents[19];
				(resume_status_0 = 22) : next_node_22;
				(previous_node <21) : next_node_21;
				(previous_node <22) : next_node_22;
				TRUE : parents[19];
			esac;
		next_node_20 := 
			case
				(previous_status = running | previous_status = failure) & (active_node = 20) : parents[20];
				(resume_status_0 = 24) : next_node_24;
				(previous_node <23) : next_node_23;
				(previous_node <24) : next_node_24;
				TRUE : parents[20];
			esac;
		next_node_21 := 
			case
				!(active_node = 21) : 21;
				TRUE : parents[21];
			esac;
		next_node_22 := 
			case
				!(active_node = 22) : 22;
				TRUE : parents[22];
			esac;
		next_node_23 := 
			case
				!(active_node = 23) : 23;
				TRUE : parents[23];
			esac;
		next_node_24 := 
			case
				!(active_node = 24) : 24;
				TRUE : parents[24];
			esac;
	VAR
		active_node : -2..max_active_node;
		previous_node : -1..max_active_node;
		previous_status : {running, success, failure, invalid};
		resume_status_0 : {2, 16, 18, 22, 24, 0};
		example_6_seq1 : node_sequence(active_node, 0, previous_status, 2, previous_node);
		sel1 : node_selector(active_node, 1, previous_status, 10, previous_node);
		sel2 : node_selector(active_node, 2, previous_status, 12, previous_node);
		leaf_1 : node_default(active_node, 3);
		leaf_2 : node_default(active_node, 4);
		leaf_3 : node_default(active_node, 5);
		leaf_4 : node_default(active_node, 6);
		leaf_5 : node_default(active_node, 7);
		leaf_6 : node_default(active_node, 8);
		leaf_7 : node_default(active_node, 9);
		leaf_8 : node_default(active_node, 10);
		seq2 : node_sequence(active_node, 11, previous_status, 14, previous_node);
		seq3 : node_sequence(active_node, 12, previous_status, 20, previous_node);
		seq4 : node_sequence(active_node, 13, previous_status, 16, previous_node);
		seq5 : node_sequence(active_node, 14, previous_status, 18, previous_node);
		leaf_9 : node_default(active_node, 15);
		leaf_10 : node_default(active_node, 16);
		leaf_11 : node_default(active_node, 17);
		leaf_12 : node_default(active_node, 18);
		seq6 : node_sequence(active_node, 19, previous_status, 22, previous_node);
		seq7 : node_sequence(active_node, 20, previous_status, 24, previous_node);
		leaf_13 : node_default(active_node, 21);
		leaf_14 : node_default(active_node, 22);
		leaf_15 : node_default(active_node, 23);
		leaf_16 : node_default(active_node, 24);
		node_names : define_nodes;
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		init(resume_status_0) := 0;
		next(resume_status_0 ) := 
			case
				(resume_status_0= 0) & (previous_node in {2, 16, 18, 22, 24, 0}) & (previous_status = running) : previous_node;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 0;
				 (previous_node in {2, 16, 18, 22, 24, 0}) & (previous_status = success | previous_status = failure) : 0;
				(previous_node = parents[0]) & (previous_status = failure | previous_status = success) : 0;
				(previous_node = 0) & (previous_status = failure | previous_status = success) : 0;
				TRUE : resume_status_0;
			esac;
		next(previous_node) :=
			case
				(active_node < 0) : -1;
				TRUE : active_node;
			esac;
		next(previous_status) :=
			case
				(active_node < 0) : invalid;
				TRUE : statuses[active_node];
			esac;
		next(active_node) :=
			case
				(active_node = -2) : -2;
				(active_node = -1) : 0;
				TRUE : next_node[active_node];
			esac;
MODULE node_sequence(active_node, id, previous_status, last_child, previous_node)
	DEFINE
		status :=
			case
				(id = active_node) & (previous_status = invalid) : invalid;
				(id = active_node) & (previous_status = running) : running;
				(id = active_node) & (previous_status = failure) : failure;
				(id = active_node) & (last_child = previous_node) : success;
				(id = active_node) : invalid;
				TRUE : invalid;
			esac;
MODULE node_selector(active_node, id, previous_status, last_child, previous_node)
	DEFINE
		status :=
			case
				(id = active_node) & (previous_status = invalid) : invalid;
				(id = active_node) & (previous_status = running) : running;
				(id = active_node) & (previous_status = success) : success;
				(id = active_node) & (last_child = previous_node) : failure;
				(id = active_node) : invalid;
				TRUE : invalid;
			esac;
MODULE node_default(active_node, id)
	DEFINE
		status :=
			case
				(id = active_node) : {success, failure, running};
				TRUE : invalid;
			esac;
MODULE define_nodes
	DEFINE
		example_6_seq1 := 0;
		sel1 := 1;
		sel2 := 2;
		leaf_1 := 3;
		leaf_2 := 4;
		leaf_3 := 5;
		leaf_4 := 6;
		leaf_5 := 7;
		leaf_6 := 8;
		leaf_7 := 9;
		leaf_8 := 10;
		seq2 := 11;
		seq3 := 12;
		seq4 := 13;
		seq5 := 14;
		leaf_9 := 15;
		leaf_10 := 16;
		leaf_11 := 17;
		leaf_12 := 18;
		seq6 := 19;
		seq7 := 20;
		leaf_13 := 21;
		leaf_14 := 22;
		leaf_15 := 23;
		leaf_16 := 24;
