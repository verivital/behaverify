MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [example_5_sel1.status, seq1.status, seq3.status, leaf_1.status, leaf_2.status, seq4.status, leaf_3.status, leaf_4.status, seq2.status, seq5.status, leaf_5.status, leaf_6.status, seq6.status, leaf_7.status, leaf_8.status];
		trace_running_source_4 := (statuses[4] = running) ? 4 : -2;
		trace_running_source_2 := 
			case
				!(trace_running_source_4 = -2) : trace_running_source_4;
				TRUE : -2;
			esac;
		trace_running_source_6 := (statuses[6] = running) ? 6 : -2;
		trace_running_source_7 := (statuses[7] = running) ? 7 : -2;
		trace_running_source_5 := 
			case
				!(trace_running_source_6 = -2) : trace_running_source_6;
				!(trace_running_source_7 = -2) : trace_running_source_7;
				TRUE : -2;
			esac;
		trace_running_source_1 := 
			case
				!(trace_running_source_2 = -2) : trace_running_source_2;
				!(trace_running_source_5 = -2) : trace_running_source_5;
				TRUE : -2;
			esac;
		trace_running_source_11 := (statuses[11] = running) ? 11 : -2;
		trace_running_source_9 := 
			case
				!(trace_running_source_11 = -2) : trace_running_source_11;
				TRUE : -2;
			esac;
		trace_running_source_13 := (statuses[13] = running) ? 13 : -2;
		trace_running_source_14 := (statuses[14] = running) ? 14 : -2;
		trace_running_source_12 := 
			case
				!(trace_running_source_13 = -2) : trace_running_source_13;
				!(trace_running_source_14 = -2) : trace_running_source_14;
				TRUE : -2;
			esac;
		trace_running_source_8 := 
			case
				!(trace_running_source_9 = -2) : trace_running_source_9;
				!(trace_running_source_12 = -2) : trace_running_source_12;
				TRUE : -2;
			esac;
		trace_running_source_0 := 
			case
				!(trace_running_source_1 = -2) : trace_running_source_1;
				!(trace_running_source_8 = -2) : trace_running_source_8;
				TRUE : -2;
			esac;
		resume_point_1 := 
			case
				(resume_from_node_0 in {4}) : 0;
				(resume_from_node_0 in {7}) : 1;
				TRUE : -2;
			esac;
		resume_point_2 := 
			case
				TRUE : -2;
			esac;
		resume_point_5 := 
			case
				TRUE : -2;
			esac;
		resume_point_8 := 
			case
				(resume_from_node_0 in {11}) : 0;
				(resume_from_node_0 in {14}) : 1;
				TRUE : -2;
			esac;
		resume_point_9 := 
			case
				TRUE : -2;
			esac;
		resume_point_12 := 
			case
				TRUE : -2;
			esac;
		children_statuses_0 := [seq1.status, seq2.status];
		children_statuses_1 := [seq3.status, seq4.status];
		children_statuses_2 := [leaf_1.status, leaf_2.status];
		children_statuses_5 := [leaf_3.status, leaf_4.status];
		children_statuses_8 := [seq5.status, seq6.status];
		children_statuses_9 := [leaf_5.status, leaf_6.status];
		children_statuses_12 := [leaf_7.status, leaf_8.status];
	VAR
		node_names : define_nodes;
		resume_from_node_0 : {0, 4, 6, 7, 11, 13, 14};
		example_5_sel1 : node_selector(TRUE, children_statuses_0, 2);
		seq1 : node_sequence(example_5_sel1.active_0, children_statuses_1, 2, resume_point_1);
		seq3 : node_sequence(seq1.active_0, children_statuses_2, 2, resume_point_2);
		leaf_1 : node_default(seq3.active_0);
		leaf_2 : node_default(seq3.active_1);
		seq4 : node_sequence(seq1.active_1, children_statuses_5, 2, resume_point_5);
		leaf_3 : node_default(seq4.active_0);
		leaf_4 : node_default(seq4.active_1);
		seq2 : node_sequence(example_5_sel1.active_1, children_statuses_8, 2, resume_point_8);
		seq5 : node_sequence(seq2.active_0, children_statuses_9, 2, resume_point_9);
		leaf_5 : node_default(seq5.active_0);
		leaf_6 : node_default(seq5.active_1);
		seq6 : node_sequence(seq2.active_1, children_statuses_12, 2, resume_point_12);
		leaf_7 : node_default(seq6.active_0);
		leaf_8 : node_default(seq6.active_1);
	ASSIGN
		init(resume_from_node_0) := 0;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				TRUE : max(trace_running_source_0, 0);
			esac;
MODULE node_default(active)
	CONSTANTS
		success, failure, running, invalid, error;
	IVAR
		input_status : {success, running, failure};
	DEFINE
		status :=
			case
				(active = FALSE) : invalid;
				TRUE : input_status;
			esac;
MODULE node_selector(active, children_statuses, last_child)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				(active = FALSE) : invalid;
				(active = FALSE) : invalid;
				(last_child < 0) : failure;
				(children_statuses[min(0, max(last_child, 0))] = error) : error;
				(children_statuses[min(1, max(last_child, 0))] = error) : error;
				(children_statuses[min(0, max(last_child, 0))] = success) : success;
				(children_statuses[min(0, max(last_child, 0))] = running) : running;
				(children_statuses[min(0, max(last_child, 0))] = invalid) : error;
				(children_statuses[min(1, max(last_child, 0))] = success) : success;
				(children_statuses[min(1, max(last_child, 0))] = running) : running;
				(children_statuses[min(1, max(last_child, 0))] = invalid) : error;
				TRUE : failure;
			esac;
		active_0 :=
			case
				!(active) : FALSE;
				(active = FALSE) : FALSE;
				(0 > last_child) : FALSE;
				TRUE : TRUE;
				esac;
		active_1 :=
			case
				!(active) : FALSE;
				(active = FALSE) : FALSE;
				(1 > last_child) : FALSE;
				!(active_0) : FALSE;
				!(children_statuses[min(0, max(last_child, 0))] = failure) : FALSE;
				TRUE: TRUE;
			esac;
MODULE node_sequence(active, children_statuses, last_child, resume_point)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				(active = FALSE) : invalid;
				(active = FALSE) : invalid;
				(last_child < 0) : success;
				(children_statuses[min(0, max(last_child, 0))] = error) : error;
				(children_statuses[min(1, max(last_child, 0))] = error) : error;
				(resume_point <= 0) & (children_statuses[min(0, max(last_child, 0))] = failure) : failure;
				(resume_point <= 0) & (children_statuses[min(0, max(last_child, 0))] = running) : running;
				(resume_point <= 0) & (children_statuses[min(0, max(last_child, 0))] = invalid) : error;
				(resume_point <= 1) & (children_statuses[min(1, max(last_child, 0))] = failure) : failure;
				(resume_point <= 1) & (children_statuses[min(1, max(last_child, 0))] = running) : running;
				(resume_point <= 1) & (children_statuses[min(1, max(last_child, 0))] = invalid) : error;
				TRUE : success;
			esac;
		active_0 :=
			case
				!(active) : FALSE;
				(active = FALSE) : FALSE;
				(0 > last_child) : FALSE;
				(0 < resume_point) : FALSE;
				(0 = resume_point) : TRUE;
				TRUE : TRUE;
				esac;
		active_1 :=
			case
				!(active) : FALSE;
				(active = FALSE) : FALSE;
				(1 > last_child) : FALSE;
				(1 < resume_point) : FALSE;
				(1 = resume_point) : TRUE;
				!(active_0) : FALSE;
				!(children_statuses[min(0, max(last_child, 0))] = success) : FALSE;
				TRUE: TRUE;
			esac;
MODULE define_nodes
	DEFINE
		example_5_sel1 := 0;
		seq1 := 1;
		seq3 := 2;
		leaf_1 := 3;
		leaf_2 := 4;
		seq4 := 5;
		leaf_3 := 6;
		leaf_4 := 7;
		seq2 := 8;
		seq5 := 9;
		leaf_5 := 10;
		leaf_6 := 11;
		seq6 := 12;
		leaf_7 := 13;
		leaf_8 := 14;
