MODULE main
    VAR
        system_1 : system_module;
        system_2 : system_module;
--------------SPECIFICATIONS

LTLSPEC G((H((system_1.low_input_stage_0 = system_2.low_input_stage_0)) -> (system_1.low_output_stage_0 = system_2.low_output_stage_0)));

--------------END OF SPECIFICATIONS

MODULE system_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        resume_from_here_in_subtree__output_changer := -3;
        output_changer.active := TRUE;
        --START OF BLACKBOARD DEFINITIONS
        output_stage_1 := 
            case
                !(apply_low_input.active) : output_stage_0;
                !(TRUE) : output_stage_0;
                TRUE : min(30, max(0, (output_stage_0 + low_input_stage_0)));
            esac;
        output_stage_2 := 
            case
                !(apply_high_input.active) : output_stage_1;
                !(TRUE) : output_stage_1;
                TRUE : min(30, max(0, (output_stage_1 + (10 * high_input_stage_0))));
            esac;
        low_output_stage_0 :=
            case
                TRUE : (output_stage_2 mod 10);
            esac;
        --END OF BLACKBOARD DEFINITIONS
    VAR
        node_names : define_nodes;
        apply_low_input : success_DEFAULT_module();
        apply_high_input : success_DEFAULT_module();
        output_changer : composite_sequence_without_memory_2(apply_low_input, apply_high_input);
        --START OF BLACKBOARD VARIABLES DECLARATION
        output_stage_0 : 0..30;
        low_input_stage_0 : -2..2;
        high_input_stage_0 : -1..1;
        --END OF BLACKBOARD VARIABLES DECLARATION
    ASSIGN
        --START OF BLACKBOARD VARIABLES INITIALIZATION
        init(output_stage_0) := 
            case
                TRUE : 0;
            esac;
        init(low_input_stage_0) := 
            case
                TRUE : {-2, -1, 0, 1, 2};
            esac;
        init(high_input_stage_0) := 
            case
                TRUE : {-1, 0, 1};
            esac;
        --END OF BLACKBOARD VARIABLES INITIALIZATION
        --START OF BLACKBOARD VARIABLES TRANSITION
        next(output_stage_0) := output_stage_2;
        next(low_input_stage_0) := 
            case
                !(output_changer.active) : low_input_stage_0;
                TRUE : {-2, -1, 0, 1, 2};
            esac;
        next(high_input_stage_0) := 
            case
                !(output_changer.active) : high_input_stage_0;
                TRUE : {-1, 0, 1};
            esac;
        --END OF BLACKBOARD VARIABLES TRANSITION

MODULE define_nodes
    DEFINE
        output_changer := 0;
        apply_low_input := 1;
        apply_high_input := 2;
MODULE composite_sequence_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = success) : child_0.internal_status;
                !(child_1.internal_status = success) : child_1.internal_status;
                TRUE : success;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = success;
MODULE success_DEFAULT_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := success;
