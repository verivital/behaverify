MODULE main
	DEFINE
		max_active_node := 62;
		statuses := [node1.status, node2.status, node33.status, node3.status, node18.status, node4.status, node11.status, node5.status, node8.status, Dummy.status, Dummy1.status, Dummy2.status, Dummy3.status, node12.status, node15.status, Dummy4.status, Dummy5.status, Dummy6.status, Dummy7.status, node19.status, node26.status, node20.status, node23.status, Dummy8.status, Dummy9.status, Dummy10.status, Dummy11.status, node27.status, node30.status, Dummy12.status, Dummy13.status, Dummy14.status, Dummy15.status, node34.status, node49.status, node35.status, node42.status, node36.status, node39.status, Dummy16.status, Dummy17.status, Dummy18.status, Dummy19.status, node43.status, node46.status, Dummy20.status, Dummy21.status, Dummy22.status, Dummy23.status, node50.status, node57.status, node51.status, node54.status, Dummy24.status, Dummy25.status, Dummy26.status, Dummy27.status, node58.status, node61.status, Dummy28.status, Dummy29.status, Dummy30.status, Dummy31.status];
		parents := [-1, 0, 0, 1, 1, 3, 3, 5, 5, 7, 7, 8, 8, 6, 6, 13, 13, 14, 14, 4, 4, 19, 19, 21, 21, 22, 22, 20, 20, 27, 27, 28, 28, 2, 2, 33, 33, 35, 35, 37, 37, 38, 38, 36, 36, 43, 43, 44, 44, 34, 34, 49, 49, 51, 51, 52, 52, 50, 50, 57, 57, 58, 58];
		leafs := {-3, 9, 10, 11, 12, 15, 16, 17, 18, 23, 24, 25, 26, 29, 30, 31, 32, 39, 40, 41, 42, 45, 46, 47, 48, 53, 54, 55, 56, 59, 60, 61, 62};
		selectors := {-3};
		sequences := {-3};
		parallels_synchronised_all := {-3, 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 27, 28, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 51, 52, 57, 58};
		parallels_unsynchronised_all := {-3};
		parallels_synchronised_one := {-3};
		parallels_unsynchronised_one := {-3};
		parallels := {-3, 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 27, 28, 33, 34, 35, 36, 37, 38, 43, 44, 49, 50, 51, 52, 57, 58};
		decorators := {-3};
		first_child := [1, 3, 33, 5, 19, 7, 13, 9, 11, -2, -2, -2, -2, 15, 17, -2, -2, -2, -2, 21, 27, 23, 25, -2, -2, -2, -2, 29, 31, -2, -2, -2, -2, 35, 49, 37, 43, 39, 41, -2, -2, -2, -2, 45, 47, -2, -2, -2, -2, 51, 57, 53, 55, -2, -2, -2, -2, 59, 61, -2, -2, -2, -2];
		last_child := [2, 4, 34, 6, 20, 8, 14, 10, 12, -1, -1, -1, -1, 16, 18, -1, -1, -1, -1, 22, 28, 24, 26, -1, -1, -1, -1, 30, 32, -1, -1, -1, -1, 36, 50, 38, 44, 40, 42, -1, -1, -1, -1, 46, 48, -1, -1, -1, -1, 52, 58, 54, 56, -1, -1, -1, -1, 60, 62, -1, -1, -1, -1];
		parallel_resume := [parallel_resume_0, parallel_resume_1, parallel_resume_2, parallel_resume_3, parallel_resume_4, parallel_resume_5, parallel_resume_6, parallel_resume_7, parallel_resume_8, -2, -2, -2, -2, parallel_resume_13, parallel_resume_14, -2, -2, -2, -2, parallel_resume_19, parallel_resume_20, parallel_resume_21, parallel_resume_22, -2, -2, -2, -2, parallel_resume_27, parallel_resume_28, -2, -2, -2, -2, parallel_resume_33, parallel_resume_34, parallel_resume_35, parallel_resume_36, parallel_resume_37, parallel_resume_38, -2, -2, -2, -2, parallel_resume_43, parallel_resume_44, -2, -2, -2, -2, parallel_resume_49, parallel_resume_50, parallel_resume_51, parallel_resume_52, -2, -2, -2, -2, parallel_resume_57, parallel_resume_58, -2, -2, -2, -2];
		parallel_resume_0 := 
			case
				(previous_node < 1) & !(parallel_resume_0_1 = -2) : parallel_resume_0_1;
				(previous_node < 2) & !(parallel_resume_0_2 = -2) : parallel_resume_0_2;
				TRUE : parents[0];
			esac;
		parallel_resume_1 := 
			case
				(previous_node < 3) & !(parallel_resume_1_3 = -2) : parallel_resume_1_3;
				(previous_node < 4) & !(parallel_resume_1_4 = -2) : parallel_resume_1_4;
				TRUE : parents[1];
			esac;
		parallel_resume_3 := 
			case
				(previous_node < 5) & !(parallel_resume_3_5 = -2) : parallel_resume_3_5;
				(previous_node < 6) & !(parallel_resume_3_6 = -2) : parallel_resume_3_6;
				TRUE : parents[3];
			esac;
		parallel_resume_5 := 
			case
				(previous_node < 7) & !(parallel_resume_5_7 = -2) : parallel_resume_5_7;
				(previous_node < 8) & !(parallel_resume_5_8 = -2) : parallel_resume_5_8;
				TRUE : parents[5];
			esac;
		parallel_resume_7 := 
			case
				(previous_node < 9) & !(parallel_resume_7_9 = -2) : parallel_resume_7_9;
				(previous_node < 10) & !(parallel_resume_7_10 = -2) : parallel_resume_7_10;
				TRUE : parents[7];
			esac;
		parallel_resume_8 := 
			case
				(previous_node < 11) & !(parallel_resume_8_11 = -2) : parallel_resume_8_11;
				(previous_node < 12) & !(parallel_resume_8_12 = -2) : parallel_resume_8_12;
				TRUE : parents[8];
			esac;
		parallel_resume_6 := 
			case
				(previous_node < 13) & !(parallel_resume_6_13 = -2) : parallel_resume_6_13;
				(previous_node < 14) & !(parallel_resume_6_14 = -2) : parallel_resume_6_14;
				TRUE : parents[6];
			esac;
		parallel_resume_13 := 
			case
				(previous_node < 15) & !(parallel_resume_13_15 = -2) : parallel_resume_13_15;
				(previous_node < 16) & !(parallel_resume_13_16 = -2) : parallel_resume_13_16;
				TRUE : parents[13];
			esac;
		parallel_resume_14 := 
			case
				(previous_node < 17) & !(parallel_resume_14_17 = -2) : parallel_resume_14_17;
				(previous_node < 18) & !(parallel_resume_14_18 = -2) : parallel_resume_14_18;
				TRUE : parents[14];
			esac;
		parallel_resume_4 := 
			case
				(previous_node < 19) & !(parallel_resume_4_19 = -2) : parallel_resume_4_19;
				(previous_node < 20) & !(parallel_resume_4_20 = -2) : parallel_resume_4_20;
				TRUE : parents[4];
			esac;
		parallel_resume_19 := 
			case
				(previous_node < 21) & !(parallel_resume_19_21 = -2) : parallel_resume_19_21;
				(previous_node < 22) & !(parallel_resume_19_22 = -2) : parallel_resume_19_22;
				TRUE : parents[19];
			esac;
		parallel_resume_21 := 
			case
				(previous_node < 23) & !(parallel_resume_21_23 = -2) : parallel_resume_21_23;
				(previous_node < 24) & !(parallel_resume_21_24 = -2) : parallel_resume_21_24;
				TRUE : parents[21];
			esac;
		parallel_resume_22 := 
			case
				(previous_node < 25) & !(parallel_resume_22_25 = -2) : parallel_resume_22_25;
				(previous_node < 26) & !(parallel_resume_22_26 = -2) : parallel_resume_22_26;
				TRUE : parents[22];
			esac;
		parallel_resume_20 := 
			case
				(previous_node < 27) & !(parallel_resume_20_27 = -2) : parallel_resume_20_27;
				(previous_node < 28) & !(parallel_resume_20_28 = -2) : parallel_resume_20_28;
				TRUE : parents[20];
			esac;
		parallel_resume_27 := 
			case
				(previous_node < 29) & !(parallel_resume_27_29 = -2) : parallel_resume_27_29;
				(previous_node < 30) & !(parallel_resume_27_30 = -2) : parallel_resume_27_30;
				TRUE : parents[27];
			esac;
		parallel_resume_28 := 
			case
				(previous_node < 31) & !(parallel_resume_28_31 = -2) : parallel_resume_28_31;
				(previous_node < 32) & !(parallel_resume_28_32 = -2) : parallel_resume_28_32;
				TRUE : parents[28];
			esac;
		parallel_resume_2 := 
			case
				(previous_node < 33) & !(parallel_resume_2_33 = -2) : parallel_resume_2_33;
				(previous_node < 34) & !(parallel_resume_2_34 = -2) : parallel_resume_2_34;
				TRUE : parents[2];
			esac;
		parallel_resume_33 := 
			case
				(previous_node < 35) & !(parallel_resume_33_35 = -2) : parallel_resume_33_35;
				(previous_node < 36) & !(parallel_resume_33_36 = -2) : parallel_resume_33_36;
				TRUE : parents[33];
			esac;
		parallel_resume_35 := 
			case
				(previous_node < 37) & !(parallel_resume_35_37 = -2) : parallel_resume_35_37;
				(previous_node < 38) & !(parallel_resume_35_38 = -2) : parallel_resume_35_38;
				TRUE : parents[35];
			esac;
		parallel_resume_37 := 
			case
				(previous_node < 39) & !(parallel_resume_37_39 = -2) : parallel_resume_37_39;
				(previous_node < 40) & !(parallel_resume_37_40 = -2) : parallel_resume_37_40;
				TRUE : parents[37];
			esac;
		parallel_resume_38 := 
			case
				(previous_node < 41) & !(parallel_resume_38_41 = -2) : parallel_resume_38_41;
				(previous_node < 42) & !(parallel_resume_38_42 = -2) : parallel_resume_38_42;
				TRUE : parents[38];
			esac;
		parallel_resume_36 := 
			case
				(previous_node < 43) & !(parallel_resume_36_43 = -2) : parallel_resume_36_43;
				(previous_node < 44) & !(parallel_resume_36_44 = -2) : parallel_resume_36_44;
				TRUE : parents[36];
			esac;
		parallel_resume_43 := 
			case
				(previous_node < 45) & !(parallel_resume_43_45 = -2) : parallel_resume_43_45;
				(previous_node < 46) & !(parallel_resume_43_46 = -2) : parallel_resume_43_46;
				TRUE : parents[43];
			esac;
		parallel_resume_44 := 
			case
				(previous_node < 47) & !(parallel_resume_44_47 = -2) : parallel_resume_44_47;
				(previous_node < 48) & !(parallel_resume_44_48 = -2) : parallel_resume_44_48;
				TRUE : parents[44];
			esac;
		parallel_resume_34 := 
			case
				(previous_node < 49) & !(parallel_resume_34_49 = -2) : parallel_resume_34_49;
				(previous_node < 50) & !(parallel_resume_34_50 = -2) : parallel_resume_34_50;
				TRUE : parents[34];
			esac;
		parallel_resume_49 := 
			case
				(previous_node < 51) & !(parallel_resume_49_51 = -2) : parallel_resume_49_51;
				(previous_node < 52) & !(parallel_resume_49_52 = -2) : parallel_resume_49_52;
				TRUE : parents[49];
			esac;
		parallel_resume_51 := 
			case
				(previous_node < 53) & !(parallel_resume_51_53 = -2) : parallel_resume_51_53;
				(previous_node < 54) & !(parallel_resume_51_54 = -2) : parallel_resume_51_54;
				TRUE : parents[51];
			esac;
		parallel_resume_52 := 
			case
				(previous_node < 55) & !(parallel_resume_52_55 = -2) : parallel_resume_52_55;
				(previous_node < 56) & !(parallel_resume_52_56 = -2) : parallel_resume_52_56;
				TRUE : parents[52];
			esac;
		parallel_resume_50 := 
			case
				(previous_node < 57) & !(parallel_resume_50_57 = -2) : parallel_resume_50_57;
				(previous_node < 58) & !(parallel_resume_50_58 = -2) : parallel_resume_50_58;
				TRUE : parents[50];
			esac;
		parallel_resume_57 := 
			case
				(previous_node < 59) & !(parallel_resume_57_59 = -2) : parallel_resume_57_59;
				(previous_node < 60) & !(parallel_resume_57_60 = -2) : parallel_resume_57_60;
				TRUE : parents[57];
			esac;
		parallel_resume_58 := 
			case
				(previous_node < 61) & !(parallel_resume_58_61 = -2) : parallel_resume_58_61;
				(previous_node < 62) & !(parallel_resume_58_62 = -2) : parallel_resume_58_62;
				TRUE : parents[58];
			esac;
	VAR
		active_node : -2..max_active_node;
		previous_node : -1..max_active_node;
		resume_node : -1..max_active_node;
		previous_status : {running, success, failure, invalid};
		parallel_resume_0_1 : {-2, 1};
		parallel_resume_0_2 : {-2, 2};
		parallel_resume_1_3 : {-2, 3};
		parallel_resume_1_4 : {-2, 4};
		parallel_resume_3_5 : {-2, 5};
		parallel_resume_3_6 : {-2, 6};
		parallel_resume_5_7 : {-2, 7};
		parallel_resume_5_8 : {-2, 8};
		parallel_resume_7_9 : {-2, 9};
		parallel_resume_7_10 : {-2, 10};
		parallel_resume_8_11 : {-2, 11};
		parallel_resume_8_12 : {-2, 12};
		parallel_resume_6_13 : {-2, 13};
		parallel_resume_6_14 : {-2, 14};
		parallel_resume_13_15 : {-2, 15};
		parallel_resume_13_16 : {-2, 16};
		parallel_resume_14_17 : {-2, 17};
		parallel_resume_14_18 : {-2, 18};
		parallel_resume_4_19 : {-2, 19};
		parallel_resume_4_20 : {-2, 20};
		parallel_resume_19_21 : {-2, 21};
		parallel_resume_19_22 : {-2, 22};
		parallel_resume_21_23 : {-2, 23};
		parallel_resume_21_24 : {-2, 24};
		parallel_resume_22_25 : {-2, 25};
		parallel_resume_22_26 : {-2, 26};
		parallel_resume_20_27 : {-2, 27};
		parallel_resume_20_28 : {-2, 28};
		parallel_resume_27_29 : {-2, 29};
		parallel_resume_27_30 : {-2, 30};
		parallel_resume_28_31 : {-2, 31};
		parallel_resume_28_32 : {-2, 32};
		parallel_resume_2_33 : {-2, 33};
		parallel_resume_2_34 : {-2, 34};
		parallel_resume_33_35 : {-2, 35};
		parallel_resume_33_36 : {-2, 36};
		parallel_resume_35_37 : {-2, 37};
		parallel_resume_35_38 : {-2, 38};
		parallel_resume_37_39 : {-2, 39};
		parallel_resume_37_40 : {-2, 40};
		parallel_resume_38_41 : {-2, 41};
		parallel_resume_38_42 : {-2, 42};
		parallel_resume_36_43 : {-2, 43};
		parallel_resume_36_44 : {-2, 44};
		parallel_resume_43_45 : {-2, 45};
		parallel_resume_43_46 : {-2, 46};
		parallel_resume_44_47 : {-2, 47};
		parallel_resume_44_48 : {-2, 48};
		parallel_resume_34_49 : {-2, 49};
		parallel_resume_34_50 : {-2, 50};
		parallel_resume_49_51 : {-2, 51};
		parallel_resume_49_52 : {-2, 52};
		parallel_resume_51_53 : {-2, 53};
		parallel_resume_51_54 : {-2, 54};
		parallel_resume_52_55 : {-2, 55};
		parallel_resume_52_56 : {-2, 56};
		parallel_resume_50_57 : {-2, 57};
		parallel_resume_50_58 : {-2, 58};
		parallel_resume_57_59 : {-2, 59};
		parallel_resume_57_60 : {-2, 60};
		parallel_resume_58_61 : {-2, 61};
		parallel_resume_58_62 : {-2, 62};
		node1 : node_parallel(active_node, 0, previous_status, 2, previous_node, TRUE, TRUE, parallel_resume_0);
		node2 : node_parallel(active_node, 1, previous_status, 4, previous_node, TRUE, TRUE, parallel_resume_1);
		node33 : node_parallel(active_node, 2, previous_status, 34, previous_node, TRUE, TRUE, parallel_resume_2);
		node3 : node_parallel(active_node, 3, previous_status, 6, previous_node, TRUE, TRUE, parallel_resume_3);
		node18 : node_parallel(active_node, 4, previous_status, 20, previous_node, TRUE, TRUE, parallel_resume_4);
		node4 : node_parallel(active_node, 5, previous_status, 8, previous_node, TRUE, TRUE, parallel_resume_5);
		node11 : node_parallel(active_node, 6, previous_status, 14, previous_node, TRUE, TRUE, parallel_resume_6);
		node5 : node_parallel(active_node, 7, previous_status, 10, previous_node, TRUE, TRUE, parallel_resume_7);
		node8 : node_parallel(active_node, 8, previous_status, 12, previous_node, TRUE, TRUE, parallel_resume_8);
		Dummy : node_default(active_node, 9);
		Dummy1 : node_default(active_node, 10);
		Dummy2 : node_default(active_node, 11);
		Dummy3 : node_default(active_node, 12);
		node12 : node_parallel(active_node, 13, previous_status, 16, previous_node, TRUE, TRUE, parallel_resume_13);
		node15 : node_parallel(active_node, 14, previous_status, 18, previous_node, TRUE, TRUE, parallel_resume_14);
		Dummy4 : node_default(active_node, 15);
		Dummy5 : node_default(active_node, 16);
		Dummy6 : node_default(active_node, 17);
		Dummy7 : node_default(active_node, 18);
		node19 : node_parallel(active_node, 19, previous_status, 22, previous_node, TRUE, TRUE, parallel_resume_19);
		node26 : node_parallel(active_node, 20, previous_status, 28, previous_node, TRUE, TRUE, parallel_resume_20);
		node20 : node_parallel(active_node, 21, previous_status, 24, previous_node, TRUE, TRUE, parallel_resume_21);
		node23 : node_parallel(active_node, 22, previous_status, 26, previous_node, TRUE, TRUE, parallel_resume_22);
		Dummy8 : node_default(active_node, 23);
		Dummy9 : node_default(active_node, 24);
		Dummy10 : node_default(active_node, 25);
		Dummy11 : node_default(active_node, 26);
		node27 : node_parallel(active_node, 27, previous_status, 30, previous_node, TRUE, TRUE, parallel_resume_27);
		node30 : node_parallel(active_node, 28, previous_status, 32, previous_node, TRUE, TRUE, parallel_resume_28);
		Dummy12 : node_default(active_node, 29);
		Dummy13 : node_default(active_node, 30);
		Dummy14 : node_default(active_node, 31);
		Dummy15 : node_default(active_node, 32);
		node34 : node_parallel(active_node, 33, previous_status, 36, previous_node, TRUE, TRUE, parallel_resume_33);
		node49 : node_parallel(active_node, 34, previous_status, 50, previous_node, TRUE, TRUE, parallel_resume_34);
		node35 : node_parallel(active_node, 35, previous_status, 38, previous_node, TRUE, TRUE, parallel_resume_35);
		node42 : node_parallel(active_node, 36, previous_status, 44, previous_node, TRUE, TRUE, parallel_resume_36);
		node36 : node_parallel(active_node, 37, previous_status, 40, previous_node, TRUE, TRUE, parallel_resume_37);
		node39 : node_parallel(active_node, 38, previous_status, 42, previous_node, TRUE, TRUE, parallel_resume_38);
		Dummy16 : node_default(active_node, 39);
		Dummy17 : node_default(active_node, 40);
		Dummy18 : node_default(active_node, 41);
		Dummy19 : node_default(active_node, 42);
		node43 : node_parallel(active_node, 43, previous_status, 46, previous_node, TRUE, TRUE, parallel_resume_43);
		node46 : node_parallel(active_node, 44, previous_status, 48, previous_node, TRUE, TRUE, parallel_resume_44);
		Dummy20 : node_default(active_node, 45);
		Dummy21 : node_default(active_node, 46);
		Dummy22 : node_default(active_node, 47);
		Dummy23 : node_default(active_node, 48);
		node50 : node_parallel(active_node, 49, previous_status, 52, previous_node, TRUE, TRUE, parallel_resume_49);
		node57 : node_parallel(active_node, 50, previous_status, 58, previous_node, TRUE, TRUE, parallel_resume_50);
		node51 : node_parallel(active_node, 51, previous_status, 54, previous_node, TRUE, TRUE, parallel_resume_51);
		node54 : node_parallel(active_node, 52, previous_status, 56, previous_node, TRUE, TRUE, parallel_resume_52);
		Dummy24 : node_default(active_node, 53);
		Dummy25 : node_default(active_node, 54);
		Dummy26 : node_default(active_node, 55);
		Dummy27 : node_default(active_node, 56);
		node58 : node_parallel(active_node, 57, previous_status, 60, previous_node, TRUE, TRUE, parallel_resume_57);
		node61 : node_parallel(active_node, 58, previous_status, 62, previous_node, TRUE, TRUE, parallel_resume_58);
		Dummy28 : node_default(active_node, 59);
		Dummy29 : node_default(active_node, 60);
		Dummy30 : node_default(active_node, 61);
		Dummy31 : node_default(active_node, 62);
		node_names : define_nodes;
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(resume_node) := -1;
		init(previous_status) := invalid;
		init(parallel_resume_0_1) := 1;
		init(parallel_resume_0_2) := 2;
		init(parallel_resume_1_3) := 3;
		init(parallel_resume_1_4) := 4;
		init(parallel_resume_3_5) := 5;
		init(parallel_resume_3_6) := 6;
		init(parallel_resume_5_7) := 7;
		init(parallel_resume_5_8) := 8;
		init(parallel_resume_7_9) := 9;
		init(parallel_resume_7_10) := 10;
		init(parallel_resume_8_11) := 11;
		init(parallel_resume_8_12) := 12;
		init(parallel_resume_6_13) := 13;
		init(parallel_resume_6_14) := 14;
		init(parallel_resume_13_15) := 15;
		init(parallel_resume_13_16) := 16;
		init(parallel_resume_14_17) := 17;
		init(parallel_resume_14_18) := 18;
		init(parallel_resume_4_19) := 19;
		init(parallel_resume_4_20) := 20;
		init(parallel_resume_19_21) := 21;
		init(parallel_resume_19_22) := 22;
		init(parallel_resume_21_23) := 23;
		init(parallel_resume_21_24) := 24;
		init(parallel_resume_22_25) := 25;
		init(parallel_resume_22_26) := 26;
		init(parallel_resume_20_27) := 27;
		init(parallel_resume_20_28) := 28;
		init(parallel_resume_27_29) := 29;
		init(parallel_resume_27_30) := 30;
		init(parallel_resume_28_31) := 31;
		init(parallel_resume_28_32) := 32;
		init(parallel_resume_2_33) := 33;
		init(parallel_resume_2_34) := 34;
		init(parallel_resume_33_35) := 35;
		init(parallel_resume_33_36) := 36;
		init(parallel_resume_35_37) := 37;
		init(parallel_resume_35_38) := 38;
		init(parallel_resume_37_39) := 39;
		init(parallel_resume_37_40) := 40;
		init(parallel_resume_38_41) := 41;
		init(parallel_resume_38_42) := 42;
		init(parallel_resume_36_43) := 43;
		init(parallel_resume_36_44) := 44;
		init(parallel_resume_43_45) := 45;
		init(parallel_resume_43_46) := 46;
		init(parallel_resume_44_47) := 47;
		init(parallel_resume_44_48) := 48;
		init(parallel_resume_34_49) := 49;
		init(parallel_resume_34_50) := 50;
		init(parallel_resume_49_51) := 51;
		init(parallel_resume_49_52) := 52;
		init(parallel_resume_51_53) := 53;
		init(parallel_resume_51_54) := 54;
		init(parallel_resume_52_55) := 55;
		init(parallel_resume_52_56) := 56;
		init(parallel_resume_50_57) := 57;
		init(parallel_resume_50_58) := 58;
		init(parallel_resume_57_59) := 59;
		init(parallel_resume_57_60) := 60;
		init(parallel_resume_58_61) := 61;
		init(parallel_resume_58_62) := 62;
		next(previous_node) :=
			case
				(active_node < 0) : -1;
				TRUE : active_node;
			esac;
		next(resume_node) :=
			case
				(previous_node < 0) : resume_node;
				!(previous_status = running) : -1;
				(resume_node = -1) : previous_node;
				(previous_node in parallels) : previous_node;
				TRUE : resume_node;
			esac;
		next(previous_status) :=
			case
				(active_node < 0) : invalid;
				TRUE : statuses[active_node];
			esac;
		next(active_node) :=
			case
				(active_node = -2) : -2;
				(active_node = -1) & (resume_node = -1) : 0;
				(active_node = -1) & !(resume_node = -1) : resume_node;
				(active_node in leafs) : parents[active_node];
				(previous_status = invalid) : first_child[active_node];
				(previous_node = last_child[active_node]) : parents[active_node];
				(active_node in parallels) : parallel_resume[active_node];
				(active_node in sequences) & (previous_status = success) : min(max_active_node, previous_node + 1);
				(active_node in selectors) & (previous_status = failure) : min(max_active_node, previous_node + 1);
				TRUE : parents[active_node];
			esac;
		next(parallel_resume_0_1) :=
			case
				(parallel_resume_0_1 = 1) & (previous_node in {-2, 1}) & (previous_status = running) : previous_node;
				(previous_node = 1) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 1;
				TRUE : parallel_resume_0_1;
			esac;

		next(parallel_resume_0_2) :=
			case
				(parallel_resume_0_2 = 2) & (previous_node in {-2, 2}) & (previous_status = running) : previous_node;
				(previous_node = 2) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 2;
				TRUE : parallel_resume_0_2;
			esac;

		next(parallel_resume_1_3) :=
			case
				(parallel_resume_1_3 = 3) & (previous_node in {-2, 3}) & (previous_status = running) : previous_node;
				(previous_node = 3) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 3;
				TRUE : parallel_resume_1_3;
			esac;

		next(parallel_resume_1_4) :=
			case
				(parallel_resume_1_4 = 4) & (previous_node in {-2, 4}) & (previous_status = running) : previous_node;
				(previous_node = 4) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 4;
				TRUE : parallel_resume_1_4;
			esac;

		next(parallel_resume_3_5) :=
			case
				(parallel_resume_3_5 = 5) & (previous_node in {-2, 5}) & (previous_status = running) : previous_node;
				(previous_node = 5) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 5;
				TRUE : parallel_resume_3_5;
			esac;

		next(parallel_resume_3_6) :=
			case
				(parallel_resume_3_6 = 6) & (previous_node in {-2, 6}) & (previous_status = running) : previous_node;
				(previous_node = 6) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 6;
				TRUE : parallel_resume_3_6;
			esac;

		next(parallel_resume_5_7) :=
			case
				(parallel_resume_5_7 = 7) & (previous_node in {-2, 7}) & (previous_status = running) : previous_node;
				(previous_node = 7) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 7;
				TRUE : parallel_resume_5_7;
			esac;

		next(parallel_resume_5_8) :=
			case
				(parallel_resume_5_8 = 8) & (previous_node in {-2, 8}) & (previous_status = running) : previous_node;
				(previous_node = 8) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 8;
				TRUE : parallel_resume_5_8;
			esac;

		next(parallel_resume_7_9) :=
			case
				(parallel_resume_7_9 = 9) & (previous_node in {-2, 9}) & (previous_status = running) : previous_node;
				(previous_node = 9) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 9;
				TRUE : parallel_resume_7_9;
			esac;

		next(parallel_resume_7_10) :=
			case
				(parallel_resume_7_10 = 10) & (previous_node in {-2, 10}) & (previous_status = running) : previous_node;
				(previous_node = 10) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 10;
				TRUE : parallel_resume_7_10;
			esac;

		next(parallel_resume_8_11) :=
			case
				(parallel_resume_8_11 = 11) & (previous_node in {-2, 11}) & (previous_status = running) : previous_node;
				(previous_node = 11) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 11;
				TRUE : parallel_resume_8_11;
			esac;

		next(parallel_resume_8_12) :=
			case
				(parallel_resume_8_12 = 12) & (previous_node in {-2, 12}) & (previous_status = running) : previous_node;
				(previous_node = 12) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 12;
				TRUE : parallel_resume_8_12;
			esac;

		next(parallel_resume_6_13) :=
			case
				(parallel_resume_6_13 = 13) & (previous_node in {-2, 13}) & (previous_status = running) : previous_node;
				(previous_node = 13) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 13;
				TRUE : parallel_resume_6_13;
			esac;

		next(parallel_resume_6_14) :=
			case
				(parallel_resume_6_14 = 14) & (previous_node in {-2, 14}) & (previous_status = running) : previous_node;
				(previous_node = 14) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 14;
				TRUE : parallel_resume_6_14;
			esac;

		next(parallel_resume_13_15) :=
			case
				(parallel_resume_13_15 = 15) & (previous_node in {-2, 15}) & (previous_status = running) : previous_node;
				(previous_node = 15) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 15;
				TRUE : parallel_resume_13_15;
			esac;

		next(parallel_resume_13_16) :=
			case
				(parallel_resume_13_16 = 16) & (previous_node in {-2, 16}) & (previous_status = running) : previous_node;
				(previous_node = 16) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 16;
				TRUE : parallel_resume_13_16;
			esac;

		next(parallel_resume_14_17) :=
			case
				(parallel_resume_14_17 = 17) & (previous_node in {-2, 17}) & (previous_status = running) : previous_node;
				(previous_node = 17) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 17;
				TRUE : parallel_resume_14_17;
			esac;

		next(parallel_resume_14_18) :=
			case
				(parallel_resume_14_18 = 18) & (previous_node in {-2, 18}) & (previous_status = running) : previous_node;
				(previous_node = 18) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 18;
				TRUE : parallel_resume_14_18;
			esac;

		next(parallel_resume_4_19) :=
			case
				(parallel_resume_4_19 = 19) & (previous_node in {-2, 19}) & (previous_status = running) : previous_node;
				(previous_node = 19) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 19;
				TRUE : parallel_resume_4_19;
			esac;

		next(parallel_resume_4_20) :=
			case
				(parallel_resume_4_20 = 20) & (previous_node in {-2, 20}) & (previous_status = running) : previous_node;
				(previous_node = 20) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 20;
				TRUE : parallel_resume_4_20;
			esac;

		next(parallel_resume_19_21) :=
			case
				(parallel_resume_19_21 = 21) & (previous_node in {-2, 21}) & (previous_status = running) : previous_node;
				(previous_node = 21) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 21;
				TRUE : parallel_resume_19_21;
			esac;

		next(parallel_resume_19_22) :=
			case
				(parallel_resume_19_22 = 22) & (previous_node in {-2, 22}) & (previous_status = running) : previous_node;
				(previous_node = 22) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 22;
				TRUE : parallel_resume_19_22;
			esac;

		next(parallel_resume_21_23) :=
			case
				(parallel_resume_21_23 = 23) & (previous_node in {-2, 23}) & (previous_status = running) : previous_node;
				(previous_node = 23) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 23;
				TRUE : parallel_resume_21_23;
			esac;

		next(parallel_resume_21_24) :=
			case
				(parallel_resume_21_24 = 24) & (previous_node in {-2, 24}) & (previous_status = running) : previous_node;
				(previous_node = 24) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 24;
				TRUE : parallel_resume_21_24;
			esac;

		next(parallel_resume_22_25) :=
			case
				(parallel_resume_22_25 = 25) & (previous_node in {-2, 25}) & (previous_status = running) : previous_node;
				(previous_node = 25) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 25;
				TRUE : parallel_resume_22_25;
			esac;

		next(parallel_resume_22_26) :=
			case
				(parallel_resume_22_26 = 26) & (previous_node in {-2, 26}) & (previous_status = running) : previous_node;
				(previous_node = 26) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 26;
				TRUE : parallel_resume_22_26;
			esac;

		next(parallel_resume_20_27) :=
			case
				(parallel_resume_20_27 = 27) & (previous_node in {-2, 27}) & (previous_status = running) : previous_node;
				(previous_node = 27) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 27;
				TRUE : parallel_resume_20_27;
			esac;

		next(parallel_resume_20_28) :=
			case
				(parallel_resume_20_28 = 28) & (previous_node in {-2, 28}) & (previous_status = running) : previous_node;
				(previous_node = 28) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 28;
				TRUE : parallel_resume_20_28;
			esac;

		next(parallel_resume_27_29) :=
			case
				(parallel_resume_27_29 = 29) & (previous_node in {-2, 29}) & (previous_status = running) : previous_node;
				(previous_node = 29) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 29;
				TRUE : parallel_resume_27_29;
			esac;

		next(parallel_resume_27_30) :=
			case
				(parallel_resume_27_30 = 30) & (previous_node in {-2, 30}) & (previous_status = running) : previous_node;
				(previous_node = 30) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 30;
				TRUE : parallel_resume_27_30;
			esac;

		next(parallel_resume_28_31) :=
			case
				(parallel_resume_28_31 = 31) & (previous_node in {-2, 31}) & (previous_status = running) : previous_node;
				(previous_node = 31) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 31;
				TRUE : parallel_resume_28_31;
			esac;

		next(parallel_resume_28_32) :=
			case
				(parallel_resume_28_32 = 32) & (previous_node in {-2, 32}) & (previous_status = running) : previous_node;
				(previous_node = 32) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 32;
				TRUE : parallel_resume_28_32;
			esac;

		next(parallel_resume_2_33) :=
			case
				(parallel_resume_2_33 = 33) & (previous_node in {-2, 33}) & (previous_status = running) : previous_node;
				(previous_node = 33) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 33;
				TRUE : parallel_resume_2_33;
			esac;

		next(parallel_resume_2_34) :=
			case
				(parallel_resume_2_34 = 34) & (previous_node in {-2, 34}) & (previous_status = running) : previous_node;
				(previous_node = 34) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 34;
				TRUE : parallel_resume_2_34;
			esac;

		next(parallel_resume_33_35) :=
			case
				(parallel_resume_33_35 = 35) & (previous_node in {-2, 35}) & (previous_status = running) : previous_node;
				(previous_node = 35) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 35;
				TRUE : parallel_resume_33_35;
			esac;

		next(parallel_resume_33_36) :=
			case
				(parallel_resume_33_36 = 36) & (previous_node in {-2, 36}) & (previous_status = running) : previous_node;
				(previous_node = 36) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 36;
				TRUE : parallel_resume_33_36;
			esac;

		next(parallel_resume_35_37) :=
			case
				(parallel_resume_35_37 = 37) & (previous_node in {-2, 37}) & (previous_status = running) : previous_node;
				(previous_node = 37) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 37;
				TRUE : parallel_resume_35_37;
			esac;

		next(parallel_resume_35_38) :=
			case
				(parallel_resume_35_38 = 38) & (previous_node in {-2, 38}) & (previous_status = running) : previous_node;
				(previous_node = 38) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 38;
				TRUE : parallel_resume_35_38;
			esac;

		next(parallel_resume_37_39) :=
			case
				(parallel_resume_37_39 = 39) & (previous_node in {-2, 39}) & (previous_status = running) : previous_node;
				(previous_node = 39) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 39;
				TRUE : parallel_resume_37_39;
			esac;

		next(parallel_resume_37_40) :=
			case
				(parallel_resume_37_40 = 40) & (previous_node in {-2, 40}) & (previous_status = running) : previous_node;
				(previous_node = 40) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 40;
				TRUE : parallel_resume_37_40;
			esac;

		next(parallel_resume_38_41) :=
			case
				(parallel_resume_38_41 = 41) & (previous_node in {-2, 41}) & (previous_status = running) : previous_node;
				(previous_node = 41) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 41;
				TRUE : parallel_resume_38_41;
			esac;

		next(parallel_resume_38_42) :=
			case
				(parallel_resume_38_42 = 42) & (previous_node in {-2, 42}) & (previous_status = running) : previous_node;
				(previous_node = 42) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 42;
				TRUE : parallel_resume_38_42;
			esac;

		next(parallel_resume_36_43) :=
			case
				(parallel_resume_36_43 = 43) & (previous_node in {-2, 43}) & (previous_status = running) : previous_node;
				(previous_node = 43) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 43;
				TRUE : parallel_resume_36_43;
			esac;

		next(parallel_resume_36_44) :=
			case
				(parallel_resume_36_44 = 44) & (previous_node in {-2, 44}) & (previous_status = running) : previous_node;
				(previous_node = 44) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 44;
				TRUE : parallel_resume_36_44;
			esac;

		next(parallel_resume_43_45) :=
			case
				(parallel_resume_43_45 = 45) & (previous_node in {-2, 45}) & (previous_status = running) : previous_node;
				(previous_node = 45) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 45;
				TRUE : parallel_resume_43_45;
			esac;

		next(parallel_resume_43_46) :=
			case
				(parallel_resume_43_46 = 46) & (previous_node in {-2, 46}) & (previous_status = running) : previous_node;
				(previous_node = 46) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 46;
				TRUE : parallel_resume_43_46;
			esac;

		next(parallel_resume_44_47) :=
			case
				(parallel_resume_44_47 = 47) & (previous_node in {-2, 47}) & (previous_status = running) : previous_node;
				(previous_node = 47) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 47;
				TRUE : parallel_resume_44_47;
			esac;

		next(parallel_resume_44_48) :=
			case
				(parallel_resume_44_48 = 48) & (previous_node in {-2, 48}) & (previous_status = running) : previous_node;
				(previous_node = 48) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 48;
				TRUE : parallel_resume_44_48;
			esac;

		next(parallel_resume_34_49) :=
			case
				(parallel_resume_34_49 = 49) & (previous_node in {-2, 49}) & (previous_status = running) : previous_node;
				(previous_node = 49) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 49;
				TRUE : parallel_resume_34_49;
			esac;

		next(parallel_resume_34_50) :=
			case
				(parallel_resume_34_50 = 50) & (previous_node in {-2, 50}) & (previous_status = running) : previous_node;
				(previous_node = 50) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 50;
				TRUE : parallel_resume_34_50;
			esac;

		next(parallel_resume_49_51) :=
			case
				(parallel_resume_49_51 = 51) & (previous_node in {-2, 51}) & (previous_status = running) : previous_node;
				(previous_node = 51) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 51;
				TRUE : parallel_resume_49_51;
			esac;

		next(parallel_resume_49_52) :=
			case
				(parallel_resume_49_52 = 52) & (previous_node in {-2, 52}) & (previous_status = running) : previous_node;
				(previous_node = 52) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 52;
				TRUE : parallel_resume_49_52;
			esac;

		next(parallel_resume_51_53) :=
			case
				(parallel_resume_51_53 = 53) & (previous_node in {-2, 53}) & (previous_status = running) : previous_node;
				(previous_node = 53) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 53;
				TRUE : parallel_resume_51_53;
			esac;

		next(parallel_resume_51_54) :=
			case
				(parallel_resume_51_54 = 54) & (previous_node in {-2, 54}) & (previous_status = running) : previous_node;
				(previous_node = 54) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 54;
				TRUE : parallel_resume_51_54;
			esac;

		next(parallel_resume_52_55) :=
			case
				(parallel_resume_52_55 = 55) & (previous_node in {-2, 55}) & (previous_status = running) : previous_node;
				(previous_node = 55) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 55;
				TRUE : parallel_resume_52_55;
			esac;

		next(parallel_resume_52_56) :=
			case
				(parallel_resume_52_56 = 56) & (previous_node in {-2, 56}) & (previous_status = running) : previous_node;
				(previous_node = 56) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 56;
				TRUE : parallel_resume_52_56;
			esac;

		next(parallel_resume_50_57) :=
			case
				(parallel_resume_50_57 = 57) & (previous_node in {-2, 57}) & (previous_status = running) : previous_node;
				(previous_node = 57) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 57;
				TRUE : parallel_resume_50_57;
			esac;

		next(parallel_resume_50_58) :=
			case
				(parallel_resume_50_58 = 58) & (previous_node in {-2, 58}) & (previous_status = running) : previous_node;
				(previous_node = 58) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 58;
				TRUE : parallel_resume_50_58;
			esac;

		next(parallel_resume_57_59) :=
			case
				(parallel_resume_57_59 = 59) & (previous_node in {-2, 59}) & (previous_status = running) : previous_node;
				(previous_node = 59) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 59;
				TRUE : parallel_resume_57_59;
			esac;

		next(parallel_resume_57_60) :=
			case
				(parallel_resume_57_60 = 60) & (previous_node in {-2, 60}) & (previous_status = running) : previous_node;
				(previous_node = 60) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 60;
				TRUE : parallel_resume_57_60;
			esac;

		next(parallel_resume_58_61) :=
			case
				(parallel_resume_58_61 = 61) & (previous_node in {-2, 61}) & (previous_status = running) : previous_node;
				(previous_node = 61) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 61;
				TRUE : parallel_resume_58_61;
			esac;

		next(parallel_resume_58_62) :=
			case
				(parallel_resume_58_62 = 62) & (previous_node in {-2, 62}) & (previous_status = running) : previous_node;
				(previous_node = 62) & (previous_status = success | previous_status = failure) : -2;
				(previous_node = 0) & (previous_status = success | previous_status = failure) : 62;
				TRUE : parallel_resume_58_62;
			esac;

MODULE node_parallel(active_node, id, previous_status, last_child, previous_node, synchronized, parallel_policy_all, resumer)
	DEFINE
		status :=
			case
				(id = active_node) & (resumer > id) : invalid;
				(id = active_node) & ((cur_status = failure) | (previous_status = failure)) : failure;
				(id = active_node) & (cur_status = running) & (previous_status = running) : running;
				(id = active_node) & !(parallel_policy_all) : success;
				(id = active_node) & (cur_status = success) & (previous_status = success) : success;
				(id = active_node) : running;
				TRUE : invalid;
			esac;
	VAR
		cur_status : {failure, running, success};
	ASSIGN
		init(cur_status) :=
			case
				(parallel_policy_all) : success;
				TRUE : running;
			esac;
		next(cur_status) :=
			case
				(id = active_node) & ((previous_status = failure) | (cur_status = failure)) : failure;
				(id = active_node) & (parallel_policy_all) & (previous_status = success) : cur_status;
				(id = active_node) & (parallel_policy_all) & (previous_status = running) : running;
				(id = active_node) & !(parallel_policy_all) & (previous_status = success) : success;
				(id = active_node) & !(parallel_policy_all) & (previous_status = running) : cur_status;
				(active_node = -1) & synchronized & (parallel_policy_all) & !(previous_status = running) : success;
				(active_node = -1) & synchronized & !(parallel_policy_all) & !(previous_status = running) : running;
				(active_node = -1) & !(synchronized) & (parallel_policy_all) : success;
				(active_node = -1) & !(synchronized) & !(parallel_policy_all) : running;
				TRUE : cur_status;
			esac;
MODULE node_default(active_node, id)
	DEFINE
		status :=
			case
				(id = active_node) : {success, failure, running};
				TRUE : invalid;
			esac;
MODULE define_nodes
	DEFINE
		node1 := 0;
		node2 := 1;
		node33 := 2;
		node3 := 3;
		node18 := 4;
		node4 := 5;
		node11 := 6;
		node5 := 7;
		node8 := 8;
		Dummy := 9;
		Dummy1 := 10;
		Dummy2 := 11;
		Dummy3 := 12;
		node12 := 13;
		node15 := 14;
		Dummy4 := 15;
		Dummy5 := 16;
		Dummy6 := 17;
		Dummy7 := 18;
		node19 := 19;
		node26 := 20;
		node20 := 21;
		node23 := 22;
		Dummy8 := 23;
		Dummy9 := 24;
		Dummy10 := 25;
		Dummy11 := 26;
		node27 := 27;
		node30 := 28;
		Dummy12 := 29;
		Dummy13 := 30;
		Dummy14 := 31;
		Dummy15 := 32;
		node34 := 33;
		node49 := 34;
		node35 := 35;
		node42 := 36;
		node36 := 37;
		node39 := 38;
		Dummy16 := 39;
		Dummy17 := 40;
		Dummy18 := 41;
		Dummy19 := 42;
		node43 := 43;
		node46 := 44;
		Dummy20 := 45;
		Dummy21 := 46;
		Dummy22 := 47;
		Dummy23 := 48;
		node50 := 49;
		node57 := 50;
		node51 := 51;
		node54 := 52;
		Dummy24 := 53;
		Dummy25 := 54;
		Dummy26 := 55;
		Dummy27 := 56;
		node58 := 57;
		node61 := 58;
		Dummy28 := 59;
		Dummy29 := 60;
		Dummy30 := 61;
		Dummy31 := 62;

