MODULE main
    VAR
        system : system_module;
--------------SPECIFICATIONS



--------------END OF SPECIFICATIONS

MODULE system_module
    CONSTANTS
        success, failure, running, invalid, yes, no, both;
    DEFINE
        resume_from_here_in_subtree__p_all0 := -3;
        child_index_to_resume_from__sel2 := -2;
        p_all0.active := TRUE;
        parallel_skip__p_all0 := [resume_from_here_in_subtree__sel1, resume_from_here_in_subtree__a2, resume_from_here_in_subtree__sel2];
        --START OF BLACKBOARD DEFINITIONS
        blVAR0_stage_1 :=
            case
                !(a3.active) : blVAR0_stage_0;
                ((case 0 = max(0, min(1, -2)) : blVAR3_stage_0_index_0; 1 = max(0, min(1, -2)) : blVAR3_stage_0_index_1; esac) | TRUE) : ((FALSE | TRUE) <-> (FALSE <-> blVAR0_stage_0));
                ((min(50, max(-50, (13 * 13 * -5 * 47)))) <= (min(50, max(-50, min(2, 41))))) : (37 >= -23);
                TRUE : (((blVAR0_stage_0 != blVAR0_stage_0) <-> (TRUE xnor TRUE)) xor ((TRUE <-> blVAR0_stage_0) <-> TRUE));
            esac;
        blVAR0_stage_2 :=
            case
                !(a3.active) : blVAR0_stage_1;
                TRUE : ((case 0 = max(0, min(1, -50)) : blVAR3_stage_0_index_0; 1 = max(0, min(1, -50)) : blVAR3_stage_0_index_1; esac) = (TRUE | blVAR0_stage_1));
            esac;
        envVAR1_stage_1 :=
            case
                !(a3.active) : envVAR1_stage_0;
                TRUE : min(-2, max(-5, (((case 0 = max(0, min(1, -20)) : blVAR3_stage_0_index_0; 1 = max(0, min(1, -20)) : blVAR3_stage_0_index_1; esac) = TRUE) ? 19 : 2)));
                TRUE : min(-2, max(-5, (min(50, max(-50, abs(4))))));
                TRUE : min(-2, max(-5, envVAR1_stage_0));
            esac;
        envVAR1_stage_2 :=
            case
                !(a1.active) : envVAR1_stage_1;
                (case 0 = max(0, min(1, envVAR1_stage_1)) : blVAR3_stage_2_index_0; 1 = max(0, min(1, envVAR1_stage_1)) : blVAR3_stage_2_index_1; esac) : min(-2, max(-5, (min(50, max(-50, (count((no != no), ((TRUE -> FALSE) != FALSE), (TRUE | FALSE), (TRUE -> FALSE)) - count((no != no), ((TRUE -> FALSE) != FALSE), (TRUE | FALSE), (TRUE -> FALSE))))))));
                TRUE : min(-2, max(-5, (min(50, max(-50, ((min(50, max(-50, max(4, 4)))) - (min(50, max(-50, max(4, 4))))))))));
            esac;
        blVAR2_stage_1_index_0 := 
            case
                !(a3.active) : blVAR2_stage_0_index_0;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                TRUE : blVAR2_stage_0_index_0;
            esac;
        blVAR2_stage_1_index_1 := 
            case
                !(a3.active) : blVAR2_stage_0_index_1;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, ((TRUE xor blVAR0_stage_1) ? 29 : 19))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) :
                    case
                        !((((blVAR0_stage_1 -> TRUE) & (FALSE xnor TRUE)) xor (FALSE & FALSE))) : (case 0 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_0; 1 = max(0, min(1, (min(50, max(-50, min(-34, -34)))))) : blVAR2_stage_0_index_1; esac);
                        TRUE : both;
                    esac;
                TRUE : blVAR2_stage_0_index_1;
            esac;
        blVAR2_stage_2_index_0 :=
            case
                !(a2.active) : blVAR2_stage_1_index_0;
                (TRUE <-> (-5 <= -30)) : yes;
                ((yes = (case 0 = max(0, min(1, -13)) : blVAR2_stage_1_index_0; 1 = max(0, min(1, -13)) : blVAR2_stage_1_index_1; esac)) -> (TRUE & blVAR0_stage_2)) : yes;
                TRUE : blDEFINE5_stage_0;
            esac;
        blVAR2_stage_2_index_1 :=
            case
                !(a2.active) : blVAR2_stage_1_index_1;
                (TRUE <-> (-5 <= -30)) : yes;
                ((yes = (case 0 = max(0, min(1, -13)) : blVAR2_stage_1_index_0; 1 = max(0, min(1, -13)) : blVAR2_stage_1_index_1; esac)) -> (TRUE & blVAR0_stage_2)) : yes;
                TRUE : blDEFINE5_stage_0;
            esac;
        blVAR2_stage_3_index_0 :=
            case
                !(a1.active) : blVAR2_stage_2_index_0;
                (-5 < 2) : blDEFINE5_stage_0;
                ((min(50, max(-50, (-4 - 28)))) <= 4) : blDEFINE5_stage_0;
                TRUE : blDEFINE5_stage_0;
            esac;
        blVAR2_stage_3_index_1 :=
            case
                !(a1.active) : blVAR2_stage_2_index_1;
                (-5 < 2) : blDEFINE5_stage_0;
                ((min(50, max(-50, (-4 - 28)))) <= 4) : blDEFINE5_stage_0;
                TRUE : blDEFINE5_stage_0;
            esac;
        blVAR3_stage_1_index_0 :=
            case
                !(a2.active) : blVAR3_stage_0_index_0;
                ((FALSE != TRUE) != (-38 > 5)) : ((-39 > (min(50, max(-50, abs(-2))))) & FALSE);
                TRUE : ((min(50, max(-50, ((min(50, max(-50, max(4, 4)))) * (min(50, max(-50, max(4, 4)))))))) < (min(50, max(-50, (-24 - (min(50, max(-50, (18 + 18 + 18 + 18)))))))));
            esac;
        blVAR3_stage_1_index_1 :=
            case
                !(a2.active) : blVAR3_stage_0_index_1;
                ((FALSE != TRUE) != (-38 > 5)) : ((-39 > (min(50, max(-50, abs(-2))))) & FALSE);
                TRUE : ((min(50, max(-50, ((min(50, max(-50, max(4, 4)))) * (min(50, max(-50, max(4, 4)))))))) < (min(50, max(-50, (-24 - (min(50, max(-50, (18 + 18 + 18 + 18)))))))));
            esac;
        blVAR3_stage_2_index_0 := 
            case
                !(a2.active) : blVAR3_stage_1_index_0;
                0 = max(0, min(1, ((TRUE <-> FALSE) ? -3 : 2))) : ((-30 < 46) & TRUE);
                TRUE : blVAR3_stage_1_index_0;
            esac;
        blVAR3_stage_2_index_1 := 
            case
                !(a2.active) : blVAR3_stage_1_index_1;
                1 = max(0, min(1, ((TRUE <-> FALSE) ? -3 : 2))) : ((-30 < 46) & TRUE);
                TRUE : blVAR3_stage_1_index_1;
            esac;
        envDEFINE4_stage_0_index_0 :=
            case
                blVAR0_stage_2 : min(5, max(2, (min(50, max(-50, min(envVAR1_stage_2, envVAR1_stage_2))))));
                ((min(50, max(-50, (envVAR1_stage_2 + envVAR1_stage_2 + 13)))) <= -22) : min(5, max(2, -4));
                TRUE : min(5, max(2, (min(50, max(-50, min((min(50, max(-50, ((min(50, max(-50, max(-32, -32)))) - envVAR1_stage_2)))), (min(50, max(-50, ((min(50, max(-50, max(-32, -32)))) - envVAR1_stage_2))))))))));
            esac;
        envDEFINE4_stage_0_index_1 :=
            case
                blVAR0_stage_2 : min(5, max(2, (min(50, max(-50, min(envVAR1_stage_2, envVAR1_stage_2))))));
                ((min(50, max(-50, (envVAR1_stage_2 + envVAR1_stage_2 + 13)))) <= -22) : min(5, max(2, -4));
                TRUE : min(5, max(2, (min(50, max(-50, min((min(50, max(-50, ((min(50, max(-50, max(-32, -32)))) - envVAR1_stage_2)))), (min(50, max(-50, ((min(50, max(-50, max(-32, -32)))) - envVAR1_stage_2))))))))));
            esac;
        blDEFINE5_stage_0 := (case 0 = max(0, min(1, 1)) : blVAR2_stage_1_index_0; 1 = max(0, min(1, 1)) : blVAR2_stage_1_index_1; esac);
        --END OF BLACKBOARD DEFINITIONS
    VAR
        node_names : define_nodes;
        resume_from_here_in_subtree__sel1 : {1, -2};
        resume_from_here_in_subtree__a2 : {4, -2};
        resume_from_here_in_subtree__sel2 : {5, -2};
        c2 : c2_module();
        a3 : failure_DEFAULT_module();
        sel1 : composite_selector_without_memory_2(c2, a3);
        a2 : failure_DEFAULT_module();
        a1 : failure_DEFAULT_module();
        c2_1 : c2_1_module();
        c2_2 : c2_2_module();
        sel2 : composite_selector_with_partial_memory_3(a1, c2_1, c2_2, child_index_to_resume_from__sel2);
        p_all0 : composite_parallel_success_on_all_with_partial_memory_3(sel1, a2, sel2, parallel_skip__p_all0);
        --START OF BLACKBOARD VARIABLES DECLARATION
        blVAR0_stage_0 : boolean;
        envVAR1_stage_0 : -5..-2;
        blVAR2_stage_0_index_0 : {yes, no, both};
        blVAR2_stage_0_index_1 : {yes, no, both};
        blVAR3_stage_0_index_0 : boolean;
        blVAR3_stage_0_index_1 : boolean;
        --END OF BLACKBOARD VARIABLES DECLARATION
    ASSIGN
        init(resume_from_here_in_subtree__sel1) := 1;
        init(resume_from_here_in_subtree__a2) := 4;
        init(resume_from_here_in_subtree__sel2) := 5;
        --START OF BLACKBOARD VARIABLES INITIALIZATION
        init(blVAR0_stage_0) :=
            case
                FALSE : ((-21 > -41) != TRUE);
                TRUE : ((TRUE & TRUE) <-> FALSE);
            esac;
        init(envVAR1_stage_0) :=
            case
                ((blVAR0_stage_0 != TRUE) xnor (TRUE = FALSE)) : min(-2, max(-5, 3));
                TRUE : min(-2, max(-5, (min(50, max(-50, ((min(50, max(-50, ((min(50, max(-50, (-5 * -5 * -34 * 4)))) * 35 * 50)))) - ((32 < 3) ? -2 : 2)))))));
            esac;
        init(blVAR2_stage_0_index_0) := 
            case
                0 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                0 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                TRUE :
                    case
                        (-4 < 4) : no;
                        (-26 >= 34) : both;
                        TRUE : both;
                    esac;
            esac;
        init(blVAR2_stage_0_index_1) := 
            case
                1 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                1 = max(0, min(1, (min(50, max(-50, (count((-5 > 7), (5 >= 21), (32 > 4)) + count((-5 > 7), (5 >= 21), (32 > 4)) + (min(50, max(-50, max(-3, -3)))))))))) :
                    case
                        ((10 < ((FALSE | blVAR0_stage_0) ? -38 : 35)) xor (FALSE | blVAR0_stage_0)) : no;
                        TRUE : both;
                    esac;
                TRUE :
                    case
                        (-4 < 4) : no;
                        (-26 >= 34) : both;
                        TRUE : both;
                    esac;
            esac;
        init(blVAR3_stage_0_index_0) := 
            case
                0 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                0 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                0 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                0 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                0 = max(0, min(1, (min(50, max(-50, max((min(50, max(-50, (4 * 4)))), (min(50, max(-50, (-2 * -2 * -4)))))))))) : FALSE;
                TRUE :
                    case
                        ((FALSE <-> FALSE) | (TRUE & TRUE)) : ((case 0 = max(0, min(1, 4)) : blVAR2_stage_0_index_0; 1 = max(0, min(1, 4)) : blVAR2_stage_0_index_1; esac) = yes);
                        (5 > 24) : (10 = 4);
                        TRUE : ((TRUE -> TRUE) <-> (1 > -1));
                    esac;
            esac;
        init(blVAR3_stage_0_index_1) := 
            case
                1 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                1 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                1 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                1 = max(0, min(1, (min(50, max(-50, ((min(50, max(-50, (-3 + -3 + -41)))) + (min(50, max(-50, (-3 + -3 + -41)))))))))) :
                    case
                        (blVAR0_stage_0 -> blVAR0_stage_0) : ((min(50, max(-50, (19 - 19)))) >= (min(50, max(-50, (-4 * 33 * 33 * 33)))));
                        TRUE : (((5 != -26) & (FALSE xnor blVAR0_stage_0)) | (blVAR0_stage_0 xor TRUE));
                    esac;
                1 = max(0, min(1, (min(50, max(-50, max((min(50, max(-50, (4 * 4)))), (min(50, max(-50, (-2 * -2 * -4)))))))))) : FALSE;
                TRUE :
                    case
                        ((FALSE <-> FALSE) | (TRUE & TRUE)) : ((case 0 = max(0, min(1, 4)) : blVAR2_stage_0_index_0; 1 = max(0, min(1, 4)) : blVAR2_stage_0_index_1; esac) = yes);
                        (5 > 24) : (10 = 4);
                        TRUE : ((TRUE -> TRUE) <-> (1 > -1));
                    esac;
            esac;
        --END OF BLACKBOARD VARIABLES INITIALIZATION
        next(resume_from_here_in_subtree__sel1) := 
            case
                (p_all0.status in {success, failure}) : node_names.sel1;
                (sel1.status = success) : -2;
                (sel1.status = failure) : node_names.sel1;
                sel1.status = invalid : resume_from_here_in_subtree__sel1;
                TRUE : 1;
            esac;
        next(resume_from_here_in_subtree__a2) := 
            case
                (p_all0.status in {success, failure}) : node_names.a2;
                (a2.status = success) : -2;
                (a2.status = failure) : node_names.a2;
                a2.status = invalid : resume_from_here_in_subtree__a2;
                TRUE : 4;
            esac;
        next(resume_from_here_in_subtree__sel2) := 
            case
                (p_all0.status in {success, failure}) : node_names.sel2;
                (sel2.status = success) : -2;
                (sel2.status = failure) : node_names.sel2;
                sel2.status = invalid : resume_from_here_in_subtree__sel2;
                TRUE : 5;
            esac;
        --START OF BLACKBOARD VARIABLES TRANSITION
        next(blVAR0_stage_0) := blVAR0_stage_2;
        next(envVAR1_stage_0) :=
            case
                !(a1.active) : envVAR1_stage_2;
                TRUE : min(-2, max(-5, (min(50, max(-50, ((case 0 = max(0, min(1, envVAR1_stage_2)) : envDEFINE4_stage_0_index_0; 1 = max(0, min(1, envVAR1_stage_2)) : envDEFINE4_stage_0_index_1; esac) - envVAR1_stage_2))))));
            esac;
        next(blVAR2_stage_0_index_0) := blVAR2_stage_3_index_0;
        next(blVAR2_stage_0_index_1) := blVAR2_stage_3_index_1;
        next(blVAR3_stage_0_index_0) := blVAR3_stage_2_index_0;
        next(blVAR3_stage_0_index_1) := blVAR3_stage_2_index_1;
        --END OF BLACKBOARD VARIABLES TRANSITION

MODULE define_nodes
    DEFINE
        p_all0 := 0;
        sel1 := 1;
        c2 := 2;
        a3 := 3;
        a2 := 4;
        sel2 := 5;
        a1 := 6;
        c2_1 := 7;
        c2_2 := 8;
MODULE composite_selector_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = failure) : child_0.internal_status;
                !(child_1.internal_status = failure) : child_1.internal_status;
                TRUE : failure;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = failure;
MODULE composite_parallel_success_on_all_with_partial_memory_3(child_0, child_1, child_2, skip_child)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                (child_0.internal_status = failure) & !(skip_child[0] = -2) : failure;
                (child_1.internal_status = failure) & !(skip_child[1] = -2) : failure;
                (child_2.internal_status = failure) & !(skip_child[2] = -2) : failure;
                !(child_0.internal_status = success) & !(skip_child[0] = -2) : child_0.internal_status;
                !(child_1.internal_status = success) & !(skip_child[1] = -2) : child_1.internal_status;
                !(child_2.internal_status = success) & !(skip_child[2] = -2) : child_2.internal_status;
                TRUE : success;
            esac;
        child_0.active := active & !(skip_child[0] = -2);
        child_1.active := active & !(skip_child[1] = -2);
        child_2.active := active & !(skip_child[2] = -2);
MODULE composite_selector_with_partial_memory_3(child_0, child_1, child_2, resume_point)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                (0 >= resume_point) & !(child_0.internal_status = failure) : child_0.internal_status;
                (1 >= resume_point) & !(child_1.internal_status = failure) : child_1.internal_status;
                (2 >= resume_point) & !(child_2.internal_status = failure) : child_2.internal_status;
                TRUE : failure;
            esac;
        child_0.active := active & (0 >= resume_point);
        child_1.active := active & ((1 >= resume_point) & ((1 = resume_point) | (child_0.status = failure)));
        child_2.active := active & ((2 >= resume_point) & ((2 = resume_point) | (child_1.status = failure)));
MODULE c2_module()
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := (FALSE) ? success : failure;
MODULE c2_1_module()
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := (FALSE) ? success : failure;
MODULE c2_2_module()
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := (FALSE) ? success : failure;
MODULE failure_DEFAULT_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := failure;
