configuration {
}
enumerations {
}

constants {
}

variables {
    variable { bl x VAR [0, 20] assign{result{(loop, i, [0, 20] such_that True, i)}}}
}

environment_update {
}

checks {
}

environment_checks {
}

actions {
    action {
        LongIfTest
        arguments {}
        local_variables {}
        read_variables {}
        write_variables {x}
        initial_values {}
        update {
            variable_statement {
                x
                assign{
                    case{(eq, x, 0)}result{1}
                    case{(eq, x, 1)}result{2}
                    case{(eq, x, 2)}result{3}
                    case{(eq, x, 3)}result{4}
                    case{(eq, x, 4)}result{5}
                    case{(eq, x, 5)}result{6}
                    case{(eq, x, 6)}result{7}
                    case{(eq, x, 7)}result{8}
                    case{(eq, x, 8)}result{9}
                    case{(eq, x, 9)}result{10}
                    case{(eq, x, 10)}result{11}
                    case{(eq, x, 11)}result{12}
                    case{(eq, x, 12)}result{13}
                    case{(eq, x, 13)}result{14}
                    case{(eq, x, 14)}result{15}
                    case{(eq, x, 15)}result{16}
                    case{(eq, x, 16)}result{17}
                    case{(eq, x, 17)}result{18}
                    case{(eq, x, 18)}result{19}
                    case{(eq, x, 19)}result{10}
                    case{(eq, x, 20)}result{0}
                    result{1}
                }
            }
            return_statement {
                result {success}
            }
        }
    }
}


sub_trees {
}

tree {
    LongIfTest {}
}

tick_prerequisite {
    True
}

specifications {
}
