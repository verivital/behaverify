MODULE main
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		statuses := [bt_root.status, do_pour_drink_in_kitchen.status, skill_goto_kitchen.status, do_pour_drink.status, do_bottle_and_glass.status, do_bottle.status, skill_find_bottle.status, skill_fetch_bottle.status, do_glass.status, skill_find_glass.status, skill_fetch_glass.status, skill_pour_drink.status, skill_ask_for_help.status];
		trace_running_source_6 := (statuses[6] = running) ? 6 : -2;
		trace_running_source_7 := (statuses[7] = running) ? 7 : -2;
		trace_running_source_5 := 
			case
				!(trace_running_source_6 = -2) : trace_running_source_6;
				!(trace_running_source_7 = -2) : trace_running_source_7;
				TRUE : -2;
			esac;
		trace_running_source_9 := (statuses[9] = running) ? 9 : -2;
		trace_running_source_10 := (statuses[10] = running) ? 10 : -2;
		trace_running_source_8 := 
			case
				!(trace_running_source_9 = -2) : trace_running_source_9;
				!(trace_running_source_10 = -2) : trace_running_source_10;
				TRUE : -2;
			esac;
		trace_running_source_4 := 
			case
				!(trace_running_source_5 = -2) : trace_running_source_5;
				!(trace_running_source_8 = -2) : trace_running_source_8;
				TRUE : -2;
			esac;
		trace_running_source_11 := (statuses[11] = running) ? 11 : -2;
		trace_running_source_3 := 
			case
				!(trace_running_source_4 = -2) : trace_running_source_4;
				!(trace_running_source_11 = -2) : trace_running_source_11;
				TRUE : -2;
			esac;
		trace_running_source_1 := 
			case
				!(trace_running_source_3 = -2) : trace_running_source_3;
				TRUE : -2;
			esac;
		trace_running_source_0 := 
			case
				!(trace_running_source_1 = -2) : trace_running_source_1;
				TRUE : -2;
			esac;
		resume_point_1 := 
			case
				(resume_from_node_0 in {11}) : 1;
				TRUE : -2;
			esac;
		resume_point_3 := 
			case
				(resume_from_node_0 in {10}) : 0;
				(resume_from_node_0 in {11}) : 1;
				TRUE : -2;
			esac;
		resume_point_4 := 
			case
				(resume_from_node_0 in {7}) : 0;
				(resume_from_node_0 in {10}) : 1;
				TRUE : -2;
			esac;
		resume_point_5 := 
			case
				(resume_from_node_0 in {6}) : 0;
				(resume_from_node_0 in {7}) : 1;
				TRUE : -2;
			esac;
		resume_point_8 := 
			case
				(resume_from_node_0 in {9}) : 0;
				(resume_from_node_0 in {10}) : 1;
				TRUE : -2;
			esac;
		bt_root.active := TRUE;
	VAR
		node_names : define_nodes;
		resume_from_node_0 : {0, 6, 7, 9, 10, 11};
		bt_root : node_selector(1, do_pour_drink_in_kitchen, skill_ask_for_help);
		do_pour_drink_in_kitchen : node_sequence(1, skill_goto_kitchen, do_pour_drink, resume_point_1);
		skill_goto_kitchen : node_default();
		do_pour_drink : node_sequence(1, do_bottle_and_glass, skill_pour_drink, resume_point_3);
		do_bottle_and_glass : node_sequence(1, do_bottle, do_glass, resume_point_4);
		do_bottle : node_sequence(1, skill_find_bottle, skill_fetch_bottle, resume_point_5);
		skill_find_bottle : node_default();
		skill_fetch_bottle : node_default();
		do_glass : node_sequence(1, skill_find_glass, skill_fetch_glass, resume_point_8);
		skill_find_glass : node_default();
		skill_fetch_glass : node_default();
		skill_pour_drink : node_default();
		skill_ask_for_help : node_default();
	ASSIGN
		init(resume_from_node_0) := 0;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				TRUE : max(trace_running_source_0, 0);
			esac;
MODULE fake_node()
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status := error;
MODULE node_sequence(last_child, child_0, child_1, resume_point)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : success;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = failure) : failure;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = running) : running;
				(0 >= resume_point) & (0 <= last_child) & (child_0.status = invalid) : error;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = failure) : failure;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = running) : running;
				(1 >= resume_point) & (1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : success;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				(0 < resume_point) : FALSE;
				(0 = resume_point) : TRUE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				(1 < resume_point) : FALSE;
				(1 = resume_point) : TRUE;
				!(child_0.active) : FALSE;
				!(child_0.status = success) : FALSE;
				TRUE: TRUE;
			esac;
MODULE node_default()
	CONSTANTS
		success, failure, running, invalid, error;
	IVAR
		input_status : {success, running, failure};
	DEFINE
		status :=
			case
				!(active) : invalid;
				TRUE : input_status;
			esac;
MODULE node_selector(last_child, child_0, child_1)
	CONSTANTS
		success, failure, running, invalid, error;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(last_child < 0) : failure;
				(0 <= last_child) & (child_0.status = error) : error;
				(1 <= last_child) & (child_1.status = error) : error;
				(0 <= last_child) & (child_0.status = success) : success;
				(0 <= last_child) & (child_0.status = running) : running;
				(0 <= last_child) & (child_0.status = invalid) : error;
				(1 <= last_child) & (child_1.status = success) : success;
				(1 <= last_child) & (child_1.status = running) : running;
				(1 <= last_child) & (child_1.status = invalid) : error;
				TRUE : failure;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				(0 > last_child) : FALSE;
				TRUE : TRUE;
				esac;
		child_1.active :=
			case
				!(active) : FALSE;
				(1 > last_child) : FALSE;
				!(child_0.active) : FALSE;
				!(child_0.status = failure) : FALSE;
				TRUE: TRUE;
			esac;
MODULE define_nodes
	DEFINE
		bt_root := 0;
		do_pour_drink_in_kitchen := 1;
		skill_goto_kitchen := 2;
		do_pour_drink := 3;
		do_bottle_and_glass := 4;
		do_bottle := 5;
		skill_find_bottle := 6;
		skill_fetch_bottle := 7;
		do_glass := 8;
		skill_find_glass := 9;
		skill_fetch_glass := 10;
		skill_pour_drink := 11;
		skill_ask_for_help := 12;
