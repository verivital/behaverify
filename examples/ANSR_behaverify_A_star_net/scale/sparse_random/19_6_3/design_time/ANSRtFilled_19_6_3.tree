configuration {
    #{ Here you specify various configuration options, such as Hypersafety }#
}
enumerations {
    #{ here you specify the enumerations used in the model}#
    'left', 'right', 'up', 'down', 'no_action', 'safe', 'unsafe', 'unknown'
}
constants {
    #{ constants are used to synchronize values in a .tree file. }#
    #{ example := 0 }#
    #{ to use example elsewhere, simply type 'example' in place of any integer (quotes included) }#
    min_val := 0, max_val := 19, number_of_obstacles := 6, max_obstacle_size := 3
} end_constants

variables {
    #{ Variable declarations go here.
	it is suggested, but not required, that the order of declaration be
	Blackboard, Local, Environment.
	If variable B depends on variable A, then variable A MUST be declared before B.
    }#
    variable { bl drone_x VAR [min_val, max_val] assign{result{(idiv, (add, min_val, max_val), 2)}}}
    variable { bl drone_y VAR [min_val, max_val] assign{result{(idiv, (add, min_val, max_val), 2)}}}
    variable { bl drone_speed VAR [1, 2] assign{result{1}}}
    variable { bl destination_x VAR [min_val, max_val] assign{result{drone_x}}}
    variable { bl destination_y VAR [min_val, max_val] assign{result{drone_y}}}
    variable { bl cell_changed_var VAR BOOLEAN assign{result{False}}}
    variable { bl current_action VAR {'left', 'right', 'up', 'down', 'no_action'} assign{result{'no_action'}}}
    variable { bl delta_x DEFINE INT assign{
	    case{(eq, current_action, 'left')} result{-1}
	    case{(eq, current_action, 'right')} result{1}
	    result{0}
	}
    }
    variable { bl delta_y DEFINE INT assign{
	    case{(eq, current_action, 'down')} result{-1}
	    case{(eq, current_action, 'up')} result{1}
	    result{0}
	}
    }
    variable { bl monitor_var VAR {'safe', 'unsafe', 'unknown'} assign{result{'unknown'}}}
    variable { bl fake_network DEFINE ENUM assign{
	    case{(and, (eq, drone_x, 19), (eq, drone_y, 0), (eq, destination_x, 18), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,1, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 5), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 12), (eq, drone_y, 17), (lte,3, destination_x), (lte, destination_x, 9), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 3), (eq, destination_x, 14), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 2), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (eq, destination_x, 16), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 5), (eq, destination_x, 4), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 11), (eq, drone_y, 9), (eq, destination_x, 9), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 17), (eq, destination_x, 17), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 10), (lte,5, destination_x), (lte, destination_x, 7), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 4), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 11), (eq, destination_x, 13), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 0), (eq, destination_x, 14), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 3), (lte,16, destination_x), (lte, destination_x, 17), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 1), (eq, destination_x, 5), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 19), (eq, destination_x, 0), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 12), (eq, drone_y, 11), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 7), (eq, destination_x, 1), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 14), (eq, destination_x, 13), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 18), (eq, destination_x, 10), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 4), (eq, destination_x, 6), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 9), (eq, destination_x, 5), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 12), (eq, drone_y, 11), (lte,7, destination_x), (lte, destination_x, 10), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 0), (eq, destination_x, 3), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 12), (eq, drone_y, 11), (lte,5, destination_x), (lte, destination_x, 6), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 3), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 7), (eq, drone_y, 13), (eq, destination_x, 4), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 10), (eq, destination_x, 12), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (eq, destination_x, 16), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 3), (eq, destination_x, 4), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (lte,13, destination_x), (lte, destination_x, 16), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 10), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 13), (eq, drone_y, 6), (eq, destination_x, 5), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 15), (eq, destination_x, 11), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 7), (eq, destination_x, 0), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (eq, destination_x, 14), (eq, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 1), (eq, destination_x, 16), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 0), (eq, destination_x, 11), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,15, destination_x), (lte, destination_x, 17), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 18), (eq, destination_x, 15), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 16), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (lte,12, destination_x), (lte, destination_x, 15), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 15), (eq, destination_x, 8), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 14), (eq, destination_x, 3), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 8), (eq, drone_y, 18), (eq, destination_x, 1), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 4), (eq, destination_x, 12), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 9), (eq, drone_y, 14), (eq, destination_x, 2), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 0), (eq, destination_x, 13), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (lte,2, destination_x), (lte, destination_x, 13), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 17), (lte,0, destination_x), (lte, destination_x, 12), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (lte,11, destination_x), (lte, destination_x, 13), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 12), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 15), (eq, destination_x, 13), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 16), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 7), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 3), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 15), (eq, drone_y, 1), (eq, destination_x, 10), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 4), (eq, destination_x, 0), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 7), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 2), (eq, destination_x, 13), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (eq, destination_x, 2), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 11), (eq, destination_x, 7), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 18), (lte,2, destination_x), (lte, destination_x, 6), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 4), (eq, destination_x, 1), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 5), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 4), (eq, drone_y, 19), (eq, destination_x, 2), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 16), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 9), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 4), (eq, destination_x, 0), (lte,1, destination_y), (lte, destination_y, 2))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,5, destination_x), (lte, destination_x, 13), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 7), (eq, destination_x, 7), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 17), (eq, destination_x, 0), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (eq, destination_x, 14), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 5), (lte,3, destination_y), (lte, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 1), (eq, destination_x, 12), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 0), (eq, destination_x, 4), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 16), (eq, destination_x, 7), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 15), (eq, destination_x, 9), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 18), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 19), (eq, destination_x, 3), (eq, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 5), (eq, destination_x, 18), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 16), (eq, destination_x, 13), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 12), (eq, destination_x, 11), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 1), (lte,10, destination_x), (lte, destination_x, 15), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (lte,4, destination_x), (lte, destination_x, 8), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (lte,4, destination_x), (lte, destination_x, 7), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 2), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 18), (eq, destination_x, 5), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,2, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 13), (eq, drone_y, 9), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 19), (eq, destination_x, 12), (eq, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 15), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 17), (eq, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 6), (eq, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 12), (eq, destination_x, 3), (eq, destination_y, 12))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 18), (eq, destination_x, 7), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 3), (eq, destination_x, 16), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (eq, destination_x, 9), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 7), (eq, destination_x, 13), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 10), (eq, drone_y, 7), (eq, destination_x, 6), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 11), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 11), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 17), (eq, destination_x, 4), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 6), (lte,1, destination_x), (lte, destination_x, 7), (lte,0, destination_y), (lte, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 3), (eq, destination_x, 0), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 8), (eq, destination_x, 14), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 8), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 18), (eq, drone_y, 17), (eq, destination_x, 16), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 5), (eq, destination_x, 14), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 13), (eq, drone_y, 9), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (eq, destination_x, 17), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 16), (eq, destination_x, 1), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 7), (lte,1, destination_y), (lte, destination_y, 2))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 7), (eq, destination_x, 3), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,8, destination_x), (lte, destination_x, 10), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 14), (lte,15, destination_x), (lte, destination_x, 18), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (lte,0, destination_x), (lte, destination_x, 8), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 3), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 12), (eq, destination_x, 4), (eq, destination_y, 12))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 16), (eq, destination_x, 18), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (eq, destination_x, 3), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 8), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 13), (eq, destination_x, 12), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (eq, destination_x, 14), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 7), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 9), (eq, destination_x, 12), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (eq, destination_x, 14), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 17), (eq, drone_y, 4), (eq, destination_x, 14), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 10), (eq, destination_x, 8), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (lte,10, destination_x), (lte, destination_x, 17), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 7), (eq, drone_y, 13), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 8), (eq, destination_x, 5), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 7), (eq, destination_x, 18), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 15), (eq, destination_x, 4), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 1), (eq, destination_x, 4), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (eq, destination_x, 3), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 15), (eq, drone_y, 5), (eq, destination_x, 12), (eq, destination_y, 5))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 6), (eq, destination_x, 12), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 19), (eq, destination_x, 18), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 6), (eq, destination_x, 9), (lte,0, destination_y), (lte, destination_y, 1))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,13, destination_x), (lte, destination_x, 16), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 10), (eq, drone_y, 6), (eq, destination_x, 8), (lte,0, destination_y), (lte, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 10), (eq, destination_x, 17), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 15), (eq, destination_x, 6), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (lte,1, destination_x), (lte, destination_x, 9), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 13), (eq, destination_x, 17), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 1), (lte,8, destination_x), (lte, destination_x, 10), (lte,6, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 4), (eq, destination_x, 18), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 13), (eq, destination_x, 2), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 9), (eq, destination_x, 2), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 3), (eq, drone_y, 10), (eq, destination_x, 1), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (lte,0, destination_x), (lte, destination_x, 3), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 16), (eq, destination_x, 9), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 0), (eq, destination_x, 6), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 14), (eq, destination_x, 16), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 5), (eq, destination_x, 5), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 10), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 2), (eq, destination_x, 4), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (eq, destination_x, 0), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 8), (eq, destination_x, 4), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (eq, destination_x, 7), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 3), (eq, destination_x, 12), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 2), (eq, destination_x, 17), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 3), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 0), (eq, destination_x, 8), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 9), (eq, destination_x, 0), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 3), (eq, destination_x, 18), (eq, destination_y, 3))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (eq, destination_x, 0), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 7), (eq, destination_x, 15), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 9), (eq, destination_x, 7), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 9), (eq, drone_y, 17), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 10), (eq, destination_x, 2), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 1), (lte,14, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 9), (eq, destination_x, 18), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 6), (eq, destination_x, 18), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 1), (eq, destination_x, 9), (lte,6, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 10), (eq, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 6), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 16), (eq, drone_y, 0), (lte,10, destination_x), (lte, destination_x, 12), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (eq, destination_x, 5), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 14), (eq, destination_x, 5), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 1), (lte,14, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 18), (eq, destination_x, 3), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 9), (eq, drone_y, 6), (eq, destination_x, 6), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 19), (lte,2, destination_x), (lte, destination_x, 4), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 9), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 11), (eq, destination_x, 9), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (eq, destination_x, 17), (eq, destination_y, 12))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 6), (eq, destination_x, 0), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (eq, destination_x, 1), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 9), (eq, drone_y, 17), (eq, destination_x, 3), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 9), (lte,9, destination_x), (lte, destination_x, 11), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 12), (eq, drone_y, 11), (eq, destination_x, 4), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 12), (eq, destination_x, 7), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 9), (eq, drone_y, 14), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (eq, destination_x, 3), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 18), (eq, destination_x, 12), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (eq, destination_x, 7), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 11), (eq, destination_x, 11), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 14), (eq, destination_x, 11), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 1), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 11), (eq, destination_x, 15), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 18), (eq, destination_x, 18), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 6), (eq, destination_x, 7), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 17), (eq, destination_x, 14), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 17), (eq, destination_x, 11), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 8), (eq, destination_x, 0), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (eq, destination_x, 10), (eq, destination_y, 12))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 2), (eq, destination_x, 15), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (lte,2, destination_x), (lte, destination_x, 7), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 12), (eq, destination_x, 8), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 14), (lte,5, destination_x), (lte, destination_x, 7), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 1), (eq, destination_x, 18), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 13), (eq, destination_x, 5), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 13), (eq, destination_x, 11), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (eq, destination_x, 15), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 13), (eq, destination_x, 8), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 6), (eq, destination_x, 11), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 17), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 7), (eq, destination_x, 9), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 13), (eq, destination_x, 9), (eq, destination_y, 13))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 9), (eq, drone_y, 10), (eq, destination_x, 4), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 15), (eq, destination_x, 1), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 5), (eq, destination_x, 0), (eq, destination_y, 5))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 17), (eq, destination_x, 5), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 4), (eq, destination_x, 16), (eq, destination_y, 4))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 19), (eq, destination_x, 15), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,6, destination_x), (lte, destination_x, 10), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 17), (eq, destination_x, 7), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 9), (eq, destination_x, 4), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (lte,8, destination_x), (lte, destination_x, 10), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 4), (eq, destination_x, 4), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 14), (eq, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 9), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 12), (eq, drone_y, 0), (eq, destination_x, 10), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 7), (eq, destination_x, 4), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 6), (eq, destination_x, 8), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 1), (lte,3, destination_y), (lte, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 12), (eq, destination_x, 18), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 14), (eq, drone_y, 14), (eq, destination_x, 10), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (eq, destination_x, 17), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 13), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,7, drone_x), (lte, drone_x, 9), (eq, drone_y, 12), (eq, destination_x, 6), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 12), (eq, drone_y, 17), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (lte,0, destination_x), (lte, destination_x, 2), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 10), (eq, destination_x, 10), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 1), (lte,3, destination_y), (lte, destination_y, 10))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 17), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 11), (eq, destination_x, 5), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 8), (eq, destination_x, 2), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 14), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 14), (eq, destination_x, 15), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 16), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 8), (eq, destination_x, 10), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 15), (eq, destination_x, 17), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (eq, destination_x, 3), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 2), (eq, destination_x, 12), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (lte,8, destination_x), (lte, destination_x, 9), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (eq, destination_x, 17), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 1), (eq, destination_x, 11), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 11), (eq, destination_x, 2), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (lte,2, destination_x), (lte, destination_x, 5), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 14), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (lte,6, destination_x), (lte, destination_x, 9), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 1), (lte,11, destination_x), (lte, destination_x, 13), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (lte,2, destination_x), (lte, destination_x, 5), (lte,3, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 10), (eq, drone_y, 19), (eq, destination_x, 7), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 12), (eq, destination_x, 16), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (eq, destination_x, 17), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 17), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 1), (eq, destination_x, 14), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 1), (eq, destination_x, 8), (lte,6, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 9), (eq, destination_x, 15), (eq, destination_y, 9))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 11), (eq, destination_x, 17), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 7), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 12), (eq, drone_y, 17), (eq, destination_x, 10), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (eq, destination_x, 11), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 16), (eq, destination_x, 14), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 19), (eq, destination_x, 9), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 5), (eq, destination_x, 13), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 12), (eq, destination_x, 2), (eq, destination_y, 12))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 18), (lte,2, destination_x), (lte, destination_x, 4), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 3), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 19), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 15), (eq, destination_y, 3))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 16), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 16))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 19), (eq, destination_x, 8), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 5), (lte,3, destination_y), (lte, destination_y, 5))} result{'left'}
case{(and, (lte,11, drone_x), (lte, drone_x, 13), (eq, drone_y, 6), (eq, destination_x, 10), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,2, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 19))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (eq, destination_x, 17), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 10))} result{'left'}
case{(and, (lte,14, drone_x), (lte, drone_x, 19), (eq, drone_y, 17), (eq, destination_x, 13), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (eq, destination_x, 17), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,13, drone_x), (lte, drone_x, 19), (eq, drone_y, 11), (lte,2, destination_x), (lte, destination_x, 12), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 2), (eq, destination_x, 18), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 15), (eq, destination_x, 0), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 14), (eq, destination_x, 0), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 7), (eq, destination_x, 16), (eq, destination_y, 7))} result{'left'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 4), (eq, destination_x, 15), (eq, destination_y, 4))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 4), (eq, drone_y, 18), (eq, destination_x, 2), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 5), (eq, destination_x, 1), (eq, destination_y, 5))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 8), (eq, drone_y, 18), (eq, destination_x, 0), (eq, destination_y, 18))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (eq, destination_x, 14), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 15), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 15))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 4), (lte,1, destination_x), (lte, destination_x, 5), (lte,0, destination_y), (lte, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 16), (eq, destination_x, 11), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 10), (eq, destination_x, 15), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 14), (eq, destination_x, 6), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 13), (eq, destination_x, 15), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 15), (eq, destination_x, 14), (eq, destination_y, 15))} result{'left'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 0), (eq, destination_x, 2), (eq, destination_y, 0))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 1), (eq, destination_x, 8), (eq, destination_y, 1))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 17), (eq, destination_x, 8), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 6), (eq, destination_x, 2), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,17, drone_x), (lte, drone_x, 19), (eq, drone_y, 8), (eq, destination_x, 16), (eq, destination_y, 8))} result{'left'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 16), (eq, destination_x, 4), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 13), (eq, destination_x, 6), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 17), (lte,16, destination_x), (lte, destination_x, 18), (eq, destination_y, 17))} result{'left'}
case{(and, (lte,10, drone_x), (lte, drone_x, 13), (eq, drone_y, 6), (lte,6, destination_x), (lte, destination_x, 9), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,9, drone_x), (lte, drone_x, 13), (eq, drone_y, 9), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 14), (lte,15, destination_x), (lte, destination_x, 17), (eq, destination_y, 14))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 2), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 2))} result{'left'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 6), (eq, destination_x, 0), (lte,1, destination_y), (lte, destination_y, 3))} result{'left'}
case{(and, (lte,18, drone_x), (lte, drone_x, 19), (eq, drone_y, 18), (eq, destination_x, 17), (eq, destination_y, 18))} result{'left'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 6), (eq, destination_x, 10), (lte,0, destination_y), (lte, destination_y, 1))} result{'left'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 10), (eq, destination_x, 5), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 2), (eq, destination_x, 2), (eq, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 17), (eq, destination_x, 1), (eq, destination_y, 17))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 19), (eq, destination_x, 5), (eq, destination_y, 19))} result{'left'}
case{(and, (lte,4, drone_x), (lte, drone_x, 9), (eq, drone_y, 10), (lte,1, destination_x), (lte, destination_x, 3), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 1), (eq, destination_x, 0), (eq, destination_y, 1))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 3), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 6))} result{'left'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 16), (eq, destination_x, 0), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 12), (eq, destination_x, 13), (eq, destination_y, 12))} result{'left'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 2), (eq, destination_x, 0), (eq, destination_y, 2))} result{'left'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 0), (lte,13, destination_x), (lte, destination_x, 15), (eq, destination_y, 0))} result{'left'}
case{(and, (lte,2, drone_x), (lte, drone_x, 3), (eq, drone_y, 8), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 8))} result{'left'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 16), (eq, destination_x, 5), (eq, destination_y, 16))} result{'left'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 14), (eq, destination_x, 8), (eq, destination_y, 14))} result{'left'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 9), (eq, destination_x, 10), (eq, destination_y, 9))} result{'left'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 6), (eq, destination_x, 14), (eq, destination_y, 6))} result{'left'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 7), (eq, destination_x, 11), (eq, destination_y, 7))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 13), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 13))} result{'left'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 10), (eq, destination_x, 6), (eq, destination_y, 10))} result{'left'}
case{(and, (eq, drone_x, 19), (eq, drone_y, 11), (eq, destination_x, 18), (eq, destination_y, 11))} result{'left'}
case{(and, (lte,15, drone_x), (lte, drone_x, 19), (eq, drone_y, 11), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 11))} result{'left'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 3), (lte,4, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 13), (eq, destination_x, 12), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 2), (lte,5, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 3), (eq, destination_x, 5), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 11), (eq, destination_x, 7), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 12), (eq, destination_x, 19), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 12), (eq, drone_y, 7), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 17), (eq, drone_y, 5), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 12), (eq, drone_y, 0), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 10), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 4), (eq, drone_y, 11), (lte,5, destination_x), (lte, destination_x, 15), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 2), (eq, drone_y, 0), (eq, destination_x, 3), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 12), (eq, destination_x, 14), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 19), (eq, destination_x, 18), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 12), (eq, drone_y, 15), (lte,13, destination_x), (lte, destination_x, 19), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 1), (eq, destination_x, 10), (lte,6, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 1), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 12), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 15), (eq, drone_y, 13), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 6), (lte,13, destination_x), (lte, destination_x, 19), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 3), (lte,3, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 5), (eq, drone_y, 0), (eq, destination_x, 6), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 18), (eq, destination_x, 9), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 12), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 4), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 4))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 16), (eq, drone_y, 10), (lte,17, destination_x), (lte, destination_x, 19), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 14), (lte,8, destination_x), (lte, destination_x, 9), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 13), (lte,6, destination_x), (lte, destination_x, 8), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 16), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 10), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,9, drone_x), (lte, drone_x, 11), (eq, drone_y, 6), (eq, destination_x, 10), (lte,0, destination_y), (lte, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 13), (eq, destination_x, 17), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 16), (eq, destination_x, 18), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 11), (eq, destination_x, 10), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 15), (eq, drone_y, 15), (eq, destination_x, 16), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 6), (eq, destination_x, 3), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 7), (eq, drone_y, 11), (eq, destination_x, 8), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 4), (lte,6, destination_x), (lte, destination_x, 11), (lte,0, destination_y), (lte, destination_y, 1))} result{'right'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 6), (lte,11, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 10), (eq, destination_x, 1), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 8), (lte,7, destination_x), (lte, destination_x, 10), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 16), (eq, drone_y, 19), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 3), (eq, drone_y, 14), (eq, destination_x, 4), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 18), (eq, drone_y, 18), (eq, destination_x, 19), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,12, drone_x), (lte, drone_x, 14), (eq, drone_y, 11), (eq, destination_x, 15), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 10), (eq, destination_x, 19), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 9), (eq, destination_x, 4), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 8), (eq, drone_y, 13), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,12, drone_x), (lte, drone_x, 15), (eq, drone_y, 4), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 4), (eq, destination_x, 6), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 5), (lte,14, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (eq, destination_x, 7), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 9), (eq, drone_y, 18), (lte,10, destination_x), (lte, destination_x, 12), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 17), (eq, drone_y, 14), (eq, destination_x, 18), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 1), (eq, destination_x, 7), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 7), (eq, destination_x, 17), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 18), (eq, drone_y, 15), (eq, destination_x, 19), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 12), (eq, drone_y, 18), (lte,13, destination_x), (lte, destination_x, 15), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,17, drone_x), (lte, drone_x, 18), (eq, drone_y, 9), (eq, destination_x, 19), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 16), (eq, destination_x, 13), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 19), (eq, destination_x, 15), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 19), (lte,1, destination_x), (lte, destination_x, 2), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 17), (eq, destination_x, 9), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 4), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 7), (eq, destination_x, 1), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 0), (eq, destination_x, 10), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 15), (eq, destination_x, 6), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 5), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 7), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 13), (eq, destination_x, 7), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 7), (lte,1, destination_y), (lte, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 3), (eq, destination_x, 1), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 1), (eq, destination_x, 12), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 4), (eq, destination_x, 1), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 5), (eq, destination_x, 19), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 18), (lte,3, destination_x), (lte, destination_x, 12), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 10), (eq, destination_x, 2), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 11), (eq, destination_x, 4), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 9), (eq, destination_x, 11), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 9), (eq, destination_x, 15), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 1), (lte,11, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 10), (eq, destination_x, 8), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 10), (eq, destination_x, 11), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 11), (eq, destination_x, 14), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 17), (eq, destination_x, 4), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 17), (eq, drone_y, 17), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 12), (eq, destination_x, 6), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 0), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 2), (lte,6, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 3))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 17), (lte,3, destination_x), (lte, destination_x, 10), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 6), (eq, destination_x, 9), (lte,0, destination_y), (lte, destination_y, 1))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 16), (eq, drone_y, 14), (eq, destination_x, 17), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 1), (eq, destination_x, 8), (lte,6, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 2), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 8), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 4), (eq, destination_x, 13), (eq, destination_y, 4))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 5), (lte,16, destination_x), (lte, destination_x, 17), (eq, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 18), (eq, destination_x, 12), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 0), (eq, destination_x, 17), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 15), (lte,5, destination_x), (lte, destination_x, 6), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 8), (eq, destination_x, 5), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 12), (eq, destination_x, 16), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 10), (lte,3, destination_x), (lte, destination_x, 5), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 12), (eq, destination_x, 12), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 2), (eq, destination_x, 4), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 8), (eq, destination_x, 10), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 16), (eq, drone_y, 1), (lte,17, destination_x), (lte, destination_x, 19), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 6), (eq, destination_x, 16), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 18), (eq, drone_y, 19), (eq, destination_x, 19), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 16), (eq, destination_x, 4), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 13), (eq, drone_y, 1), (eq, destination_x, 14), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 9), (eq, destination_x, 6), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 2), (eq, destination_x, 15), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 19), (lte,5, destination_x), (lte, destination_x, 9), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 2), (eq, destination_x, 7), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 19), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 17), (eq, drone_y, 0), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 7), (lte,7, destination_x), (lte, destination_x, 15), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 7), (eq, destination_x, 14), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 8), (eq, destination_x, 3), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 7), (eq, destination_x, 8), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 17), (eq, drone_y, 12), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 18), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 13), (eq, destination_x, 4), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 5), (lte,5, destination_x), (lte, destination_x, 7), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 7), (eq, destination_x, 6), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 10), (eq, drone_y, 7), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 12), (eq, drone_y, 1), (eq, destination_x, 13), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 10), (eq, destination_x, 14), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 0), (eq, destination_x, 12), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 9), (lte,1, destination_x), (lte, destination_x, 2), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 9), (eq, drone_y, 14), (lte,10, destination_x), (lte, destination_x, 14), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 2), (eq, destination_x, 7), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 15), (eq, destination_x, 18), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 18), (eq, destination_x, 18), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 19), (eq, destination_x, 2), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 10))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 3), (lte,15, destination_x), (lte, destination_x, 19), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 8), (eq, destination_x, 15), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 17), (eq, destination_x, 19), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 13), (eq, destination_x, 10), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 18), (eq, destination_x, 1), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 15), (eq, drone_y, 11), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 15), (eq, destination_x, 1), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 4), (eq, drone_y, 12), (lte,5, destination_x), (lte, destination_x, 12), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 2), (lte,14, destination_x), (lte, destination_x, 18), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 4), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 8), (eq, destination_x, 19), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 3), (eq, drone_y, 6), (eq, destination_x, 4), (eq, destination_y, 6))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 16), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 15), (eq, destination_x, 12), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 4), (eq, destination_x, 4), (eq, destination_y, 4))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 10), (eq, drone_y, 0), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 8), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 14), (eq, drone_y, 0), (lte,15, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 16), (eq, destination_x, 2), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 10), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 5), (eq, destination_x, 15), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,12, drone_x), (lte, drone_x, 18), (eq, drone_y, 2), (eq, destination_x, 19), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 10), (eq, drone_y, 1), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,9, drone_x), (lte, drone_x, 11), (eq, drone_y, 10), (eq, destination_x, 12), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 9), (eq, destination_x, 18), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 14), (eq, destination_x, 9), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 7), (eq, drone_y, 18), (lte,8, destination_x), (lte, destination_x, 9), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 8), (eq, drone_y, 10), (lte,9, destination_x), (lte, destination_x, 12), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 7), (eq, destination_x, 3), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 1), (eq, destination_x, 3), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,11, drone_x), (lte, drone_x, 13), (eq, drone_y, 17), (lte,14, destination_x), (lte, destination_x, 19), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 7), (eq, destination_x, 19), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 9), (lte,8, destination_x), (lte, destination_x, 13), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 12), (eq, drone_y, 10), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 13), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 1), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 3), (eq, drone_y, 1), (lte,4, destination_x), (lte, destination_x, 5), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 12), (eq, destination_x, 8), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 2), (eq, destination_x, 1), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 6), (eq, destination_x, 11), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 9), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 2), (lte,13, destination_x), (lte, destination_x, 18), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 13), (eq, destination_x, 15), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 8), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 0), (lte,16, destination_x), (lte, destination_x, 17), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 16), (lte,5, destination_x), (lte, destination_x, 10), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 11), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 6), (eq, destination_x, 1), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 10), (eq, drone_y, 8), (lte,11, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 19), (eq, destination_x, 9), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 14), (eq, destination_x, 6), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 4), (eq, destination_x, 7), (lte,3, destination_y), (lte, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 5), (eq, destination_x, 4), (eq, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 19), (eq, destination_x, 14), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 6), (lte,7, destination_x), (lte, destination_x, 8), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 3), (eq, drone_y, 8), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 1), (eq, destination_x, 19), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 10), (lte,4, destination_x), (lte, destination_x, 5), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,11, drone_x), (lte, drone_x, 13), (eq, drone_y, 16), (lte,14, destination_x), (lte, destination_x, 19), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 10), (eq, drone_y, 13), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 16), (eq, drone_y, 12), (eq, destination_x, 17), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 15), (eq, destination_x, 15), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 2), (lte,2, destination_x), (lte, destination_x, 4), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 3), (eq, destination_x, 17), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 9), (eq, drone_y, 16), (eq, destination_x, 10), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 6), (eq, destination_x, 18), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,11, drone_x), (lte, drone_x, 12), (eq, drone_y, 8), (lte,13, destination_x), (lte, destination_x, 15), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 2), (eq, destination_x, 18), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 15), (lte,7, destination_x), (lte, destination_x, 12), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 1), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 6), (eq, drone_y, 14), (lte,7, destination_x), (lte, destination_x, 9), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 19), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,8, destination_x), (lte, destination_x, 11), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 9), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 6), (lte,14, destination_x), (lte, destination_x, 16), (eq, destination_y, 6))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 7), (eq, destination_x, 5), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 10), (eq, destination_x, 5), (eq, destination_y, 10))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 17), (lte,1, destination_x), (lte, destination_x, 2), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 18), (eq, destination_x, 7), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 9), (lte,17, destination_x), (lte, destination_x, 19), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 19), (eq, destination_x, 4), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 14), (eq, drone_y, 7), (eq, destination_x, 15), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 9), (eq, destination_x, 7), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 5), (eq, destination_x, 1), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 13), (eq, drone_y, 9), (lte,14, destination_x), (lte, destination_x, 19), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 9), (eq, drone_y, 6), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 15), (eq, destination_x, 3), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,1, destination_x), (lte, destination_x, 11), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 13), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,11, drone_x), (lte, drone_x, 15), (eq, drone_y, 8), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 4), (eq, destination_x, 15), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 13), (eq, destination_x, 14), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 15), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 4), (eq, drone_y, 14), (lte,5, destination_x), (lte, destination_x, 6), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 6), (eq, destination_x, 8), (eq, destination_y, 6))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 9), (eq, destination_x, 13), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 0), (eq, destination_x, 2), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 16), (eq, drone_y, 15), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 10), (eq, drone_y, 15), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 15), (eq, drone_y, 1), (eq, destination_x, 16), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,12, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 5))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 17), (eq, drone_y, 8), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 17), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 7), (lte,2, destination_x), (lte, destination_x, 3), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 14), (eq, drone_y, 12), (lte,15, destination_x), (lte, destination_x, 17), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 8), (eq, drone_y, 11), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 12), (eq, drone_y, 13), (lte,13, destination_x), (lte, destination_x, 15), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 9), (eq, drone_y, 7), (eq, destination_x, 10), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 18), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 3), (eq, drone_y, 0), (lte,4, destination_x), (lte, destination_x, 5), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 15), (lte,9, destination_x), (lte, destination_x, 10), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 17), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 4), (eq, drone_y, 13), (lte,5, destination_x), (lte, destination_x, 10), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 17), (eq, destination_x, 17), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 14), (eq, drone_y, 14), (lte,15, destination_x), (lte, destination_x, 19), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 18), (eq, drone_y, 14), (eq, destination_x, 19), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 3), (eq, destination_x, 2), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 18), (eq, destination_x, 2), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 8), (eq, destination_x, 12), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 4), (eq, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 13), (eq, destination_x, 19), (eq, destination_y, 13))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 18), (lte,14, destination_x), (lte, destination_x, 15), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 11), (lte,13, destination_x), (lte, destination_x, 14), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 9), (eq, drone_y, 19), (lte,10, destination_x), (lte, destination_x, 12), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 10), (eq, drone_y, 17), (lte,11, destination_x), (lte, destination_x, 19), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 6), (eq, destination_x, 2), (eq, destination_y, 6))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 12), (eq, destination_x, 4), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 14), (eq, drone_y, 10), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 12), (eq, drone_y, 19), (lte,13, destination_x), (lte, destination_x, 19), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 16), (eq, destination_x, 9), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 15), (eq, destination_x, 10), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 10), (lte,10, destination_x), (lte, destination_x, 11), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,17, drone_x), (lte, drone_x, 18), (eq, drone_y, 16), (eq, destination_x, 19), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 0), (eq, destination_x, 8), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 1), (eq, destination_x, 5), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,8, drone_x), (lte, drone_x, 11), (eq, drone_y, 9), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 9))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 14), (eq, drone_y, 1), (eq, destination_x, 15), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 3), (eq, drone_y, 7), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 13), (eq, destination_x, 8), (eq, destination_y, 13))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 10), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 5), (eq, destination_x, 6), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,10, drone_x), (lte, drone_x, 11), (eq, drone_y, 14), (lte,12, destination_x), (lte, destination_x, 14), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 17), (lte,12, destination_x), (lte, destination_x, 13), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 2), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 19), (lte,7, destination_x), (lte, destination_x, 9), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 4), (eq, drone_y, 17), (eq, destination_x, 5), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 19), (eq, destination_x, 6), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 3), (lte,16, destination_x), (lte, destination_x, 17), (eq, destination_y, 3))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 19), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 15), (eq, drone_y, 18), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 18))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 6), (eq, destination_x, 5), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 5), (eq, destination_x, 7), (eq, destination_y, 5))} result{'right'}
case{(and, (lte,7, drone_x), (lte, drone_x, 8), (eq, drone_y, 7), (eq, destination_x, 9), (eq, destination_y, 7))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 3), (eq, drone_y, 15), (lte,4, destination_x), (lte, destination_x, 6), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 17), (eq, destination_x, 13), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 0), (eq, destination_x, 14), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 17), (eq, destination_x, 16), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 4), (lte,2, destination_x), (lte, destination_x, 4), (eq, destination_y, 4))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 6), (lte,6, destination_x), (lte, destination_x, 9), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 15), (eq, drone_y, 19), (eq, destination_x, 16), (eq, destination_y, 19))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 15), (eq, drone_y, 7), (lte,16, destination_x), (lte, destination_x, 19), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 8), (eq, destination_x, 1), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 1), (eq, destination_x, 10), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,17, drone_x), (lte, drone_x, 18), (eq, drone_y, 6), (eq, destination_x, 19), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 10), (eq, drone_y, 16), (lte,11, destination_x), (lte, destination_x, 19), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 0), (eq, destination_x, 5), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 3), (lte,13, destination_x), (lte, destination_x, 19), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 15), (eq, destination_x, 8), (eq, destination_y, 15))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 0), (eq, destination_x, 19), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 1), (lte,1, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'right'}
case{(and, (eq, drone_x, 3), (eq, drone_y, 18), (lte,4, destination_x), (lte, destination_x, 5), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 4), (eq, drone_y, 18), (eq, destination_x, 5), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 3), (eq, destination_x, 14), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 10), (eq, drone_y, 14), (eq, destination_x, 11), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 14), (lte,1, destination_x), (lte, destination_x, 6), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 9), (eq, destination_x, 2), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 16), (eq, destination_x, 6), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 8), (eq, drone_y, 9), (eq, destination_x, 9), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 16), (lte,1, destination_x), (lte, destination_x, 2), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 1), (eq, drone_y, 17), (eq, destination_x, 2), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 2), (eq, destination_x, 6), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 11), (eq, drone_y, 6), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 6))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 14), (eq, destination_x, 13), (eq, destination_y, 14))} result{'right'}
case{(and, (lte,15, drone_x), (lte, drone_x, 17), (eq, drone_y, 3), (lte,18, destination_x), (lte, destination_x, 19), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 12), (eq, drone_y, 5), (lte,13, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 4), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 14), (eq, destination_x, 16), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 11), (eq, destination_x, 18), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 7), (eq, drone_y, 17), (lte,8, destination_x), (lte, destination_x, 10), (eq, destination_y, 17))} result{'right'}
case{(and, (eq, drone_x, 18), (eq, drone_y, 3), (eq, destination_x, 19), (eq, destination_y, 3))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 11), (lte,17, destination_x), (lte, destination_x, 18), (eq, destination_y, 11))} result{'right'}
case{(and, (eq, drone_x, 17), (eq, drone_y, 4), (eq, destination_x, 18), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 2), (eq, drone_y, 14), (eq, destination_x, 3), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 8), (eq, destination_x, 17), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 19), (lte,8, destination_x), (lte, destination_x, 9), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 16), (eq, destination_x, 16), (eq, destination_y, 16))} result{'right'}
case{(and, (eq, drone_x, 16), (eq, drone_y, 5), (eq, destination_x, 17), (eq, destination_y, 5))} result{'right'}
case{(and, (eq, drone_x, 15), (eq, drone_y, 10), (eq, destination_x, 16), (eq, destination_y, 10))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,8, destination_x), (lte, destination_x, 10), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,12, drone_x), (lte, drone_x, 13), (eq, drone_y, 14), (eq, destination_x, 14), (eq, destination_y, 14))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 19), (eq, destination_x, 12), (eq, destination_y, 19))} result{'right'}
case{(and, (eq, drone_x, 9), (eq, drone_y, 12), (eq, destination_x, 10), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,2, drone_x), (lte, drone_x, 12), (eq, drone_y, 12), (lte,13, destination_x), (lte, destination_x, 17), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 7), (eq, destination_x, 12), (eq, destination_y, 7))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 11), (lte,12, destination_x), (lte, destination_x, 15), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 18), (eq, drone_y, 4), (eq, destination_x, 19), (eq, destination_y, 4))} result{'right'}
case{(and, (lte,3, drone_x), (lte, drone_x, 5), (eq, drone_y, 18), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 11), (eq, drone_y, 6), (lte,8, destination_x), (lte, destination_x, 9), (lte,0, destination_y), (lte, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 8), (eq, destination_x, 8), (eq, destination_y, 8))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 18), (eq, destination_x, 15), (eq, destination_y, 18))} result{'right'}
case{(and, (eq, drone_x, 14), (eq, drone_y, 6), (lte,15, destination_x), (lte, destination_x, 16), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,6, drone_x), (lte, drone_x, 8), (eq, drone_y, 6), (eq, destination_x, 9), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,9, drone_x), (lte, drone_x, 10), (eq, drone_y, 12), (lte,11, destination_x), (lte, destination_x, 12), (eq, destination_y, 12))} result{'right'}
case{(and, (eq, drone_x, 5), (eq, drone_y, 11), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,16, drone_x), (lte, drone_x, 18), (eq, drone_y, 11), (eq, destination_x, 19), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 16), (eq, drone_y, 16), (lte,17, destination_x), (lte, destination_x, 19), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 2), (eq, drone_y, 16), (lte,3, destination_x), (lte, destination_x, 4), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 9), (lte,5, destination_x), (lte, destination_x, 7), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 17), (eq, destination_x, 7), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 9), (eq, destination_x, 16), (eq, destination_y, 9))} result{'right'}
case{(and, (eq, drone_x, 0), (eq, drone_y, 1), (eq, destination_x, 1), (eq, destination_y, 1))} result{'right'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 16), (lte,8, destination_x), (lte, destination_x, 9), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 4), (eq, drone_y, 4), (lte,5, destination_x), (lte, destination_x, 6), (eq, destination_y, 4))} result{'right'}
case{(and, (eq, drone_x, 13), (eq, drone_y, 15), (eq, destination_x, 14), (eq, destination_y, 15))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 1), (lte,6, destination_x), (lte, destination_x, 16), (eq, destination_y, 1))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 6), (eq, drone_y, 16), (lte,7, destination_x), (lte, destination_x, 10), (eq, destination_y, 16))} result{'right'}
case{(and, (lte,10, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,9, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 19))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 10), (eq, drone_y, 11), (lte,11, destination_x), (lte, destination_x, 15), (eq, destination_y, 11))} result{'right'}
case{(and, (lte,5, drone_x), (lte, drone_x, 8), (eq, drone_y, 12), (lte,9, destination_x), (lte, destination_x, 12), (eq, destination_y, 12))} result{'right'}
case{(and, (lte,4, drone_x), (lte, drone_x, 5), (eq, drone_y, 8), (eq, destination_x, 6), (eq, destination_y, 8))} result{'right'}
case{(and, (lte,8, drone_x), (lte, drone_x, 9), (eq, drone_y, 17), (eq, destination_x, 10), (eq, destination_y, 17))} result{'right'}
case{(and, (lte,1, drone_x), (lte, drone_x, 6), (eq, drone_y, 0), (lte,7, destination_x), (lte, destination_x, 14), (eq, destination_y, 0))} result{'right'}
case{(and, (lte,13, drone_x), (lte, drone_x, 16), (eq, drone_y, 6), (lte,17, destination_x), (lte, destination_x, 19), (eq, destination_y, 6))} result{'right'}
case{(and, (lte,14, drone_x), (lte, drone_x, 15), (eq, drone_y, 2), (eq, destination_x, 16), (eq, destination_y, 2))} result{'right'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,1, drone_y), (lte, drone_y, 3), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,4, drone_y), (lte, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 10))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,4, drone_y), (lte, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 19), (lte,7, destination_y), (lte, destination_y, 9))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,1, drone_y), (lte, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 1), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 13), (lte,0, destination_x), (lte, destination_x, 19), (lte,17, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,1, drone_y), (lte, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (eq, drone_x, 6), (eq, drone_y, 1), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,2, drone_y), (lte, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'up'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 11), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 12))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,4, drone_y), (lte, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,2, drone_y), (lte, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 10))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,1, drone_y), (lte, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 1), (lte,6, destination_y), (lte, destination_y, 10))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,0, destination_x), (lte, destination_x, 1), (lte,2, destination_y), (lte, destination_y, 10))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 3))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 16))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 10), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 11))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 7), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'up'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (lte,6, drone_y), (lte, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 10))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 11), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (lte,15, destination_y), (lte, destination_y, 16))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 11), (eq, drone_y, 0), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (eq, destination_x, 7), (lte,3, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,3, drone_y), (lte, drone_y, 4), (eq, destination_x, 7), (eq, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,4, drone_y), (lte, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 1), (eq, destination_y, 10))} result{'up'}
case{(and, (eq, drone_x, 7), (lte,2, drone_y), (lte, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,0, drone_y), (lte, drone_y, 1), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 2))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,0, drone_y), (lte, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 5), (lte,3, destination_y), (lte, destination_y, 4))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,3, drone_y), (lte, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 6), (eq, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 5), (lte,4, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,2, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 3))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 4), (lte,8, destination_x), (lte, destination_x, 11), (eq, destination_y, 6))} result{'up'}
case{(and, (eq, drone_x, 7), (lte,2, drone_y), (lte, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 10))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 1))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,4, drone_y), (lte, drone_y, 5), (lte,12, destination_x), (lte, destination_x, 19), (lte,4, destination_y), (lte, destination_y, 6))} result{'up'}
case{(and, (eq, drone_x, 7), (lte,1, drone_y), (lte, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 12), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 13))} result{'up'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 19), (lte,7, destination_y), (lte, destination_y, 9))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (eq, destination_x, 7), (eq, destination_y, 3))} result{'up'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 2), (eq, destination_x, 7), (eq, destination_y, 3))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 5), (lte,3, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 17), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 18))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,6, drone_y), (lte, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 1), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,6, drone_y), (lte, drone_y, 9), (lte,2, destination_x), (lte, destination_x, 19), (lte,10, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 4))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,0, drone_y), (lte, drone_y, 2), (lte,12, destination_x), (lte, destination_x, 19), (lte,3, destination_y), (lte, destination_y, 5))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 1), (lte,0, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 10))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,3, drone_y), (lte, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 4))} result{'up'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 5))} result{'up'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (eq, destination_x, 6), (eq, destination_y, 4))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,14, drone_y), (lte, drone_y, 18), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (lte,15, destination_y), (lte, destination_y, 16))} result{'up'}
case{(and, (eq, drone_x, 7), (lte,2, drone_y), (lte, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (eq, destination_x, 7), (eq, destination_y, 3))} result{'up'}
case{(and, (eq, drone_x, 6), (lte,4, drone_y), (lte, drone_y, 5), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,14, drone_y), (lte, drone_y, 16), (lte,0, destination_x), (lte, destination_x, 19), (lte,17, destination_y), (lte, destination_y, 18))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 13), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 14))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 8), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 9))} result{'up'}
case{(and, (lte,1, drone_x), (lte, drone_x, 19), (eq, drone_y, 0), (lte,0, destination_x), (lte, destination_x, 1), (lte,14, destination_y), (lte, destination_y, 19))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 11), (eq, destination_y, 6))} result{'up'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 7), (lte,5, destination_y), (lte, destination_y, 6))} result{'up'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,12, drone_y), (lte, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 11))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 11), (eq, destination_y, 6))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 17), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 16))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,15, drone_y), (lte, drone_y, 19), (lte,1, destination_x), (lte, destination_x, 11), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 6))} result{'down'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,15, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 19), (lte,6, destination_y), (lte, destination_y, 10))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 2), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,9, drone_y), (lte, drone_y, 10), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'down'}
case{(and, (eq, drone_x, 7), (lte,3, drone_y), (lte, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 19), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,2, drone_y), (lte, drone_y, 5), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (lte,1, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 1))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 6), (lte,12, destination_x), (lte, destination_x, 19), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 4))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 10), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 9))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,4, drone_y), (lte, drone_y, 6), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,6, drone_y), (lte, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,1, drone_x), (lte, drone_x, 11), (eq, drone_y, 1), (lte,1, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,2, drone_y), (lte, drone_y, 4), (eq, destination_x, 0), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,2, drone_y), (lte, drone_y, 4), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,1, drone_y), (lte, drone_y, 6), (lte,1, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,15, drone_y), (lte, drone_y, 19), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 18))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,16, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 19), (lte,14, destination_y), (lte, destination_y, 15))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 4))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 8))} result{'down'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 4))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 4))} result{'down'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 2), (eq, destination_x, 0), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 10), (lte,12, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 6))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,2, drone_y), (lte, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,15, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 2))} result{'down'}
case{(and, (eq, drone_x, 7), (lte,3, drone_y), (lte, drone_y, 4), (lte,1, destination_x), (lte, destination_x, 19), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (lte,0, destination_x), (lte, destination_x, 6), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,18, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 19), (lte,16, destination_y), (lte, destination_y, 17))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,7, drone_y), (lte, drone_y, 10), (lte,1, destination_x), (lte, destination_x, 11), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,2, drone_y), (lte, drone_y, 6), (lte,1, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 1))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 2), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 14), (lte,2, destination_x), (lte, destination_x, 19), (lte,12, destination_y), (lte, destination_y, 13))} result{'down'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 4), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,7, drone_y), (lte, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,6, drone_x), (lte, drone_x, 7), (eq, drone_y, 2), (lte,1, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 1))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,5, drone_y), (lte, drone_y, 10), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 11), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,15, drone_y), (lte, drone_y, 19), (lte,2, destination_x), (lte, destination_x, 19), (lte,11, destination_y), (lte, destination_y, 13))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (lte,15, drone_y), (lte, drone_y, 19), (lte,12, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (lte,5, drone_y), (lte, drone_y, 6), (eq, destination_x, 0), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,8, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 10), (lte,6, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,15, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 11), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,15, drone_y), (lte, drone_y, 19), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (eq, drone_y, 3), (eq, destination_x, 7), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 19), (lte,1, destination_x), (lte, destination_x, 11), (eq, destination_y, 0))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (eq, drone_y, 13), (lte,2, destination_x), (lte, destination_x, 19), (eq, destination_y, 12))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,4, drone_y), (lte, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 5), (lte,3, drone_y), (lte, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 7), (lte,4, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (eq, drone_y, 15), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 14))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,15, drone_y), (lte, drone_y, 19), (lte,0, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 5), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 5), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (eq, drone_y, 5), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 4))} result{'down'}
case{(and, (eq, drone_x, 7), (eq, drone_y, 3), (lte,12, destination_x), (lte, destination_x, 19), (eq, destination_y, 4))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 10))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 19), (lte,12, destination_x), (lte, destination_x, 19), (lte,0, destination_y), (lte, destination_y, 5))} result{'down'}
case{(and, (eq, drone_x, 7), (lte,3, drone_y), (lte, drone_y, 4), (lte,0, destination_x), (lte, destination_x, 7), (eq, destination_y, 2))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 1), (eq, drone_y, 10), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 7))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 7), (eq, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 5), (eq, destination_y, 5))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,2, drone_y), (lte, drone_y, 6), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 1))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 14), (eq, destination_x, 7), (eq, destination_y, 3))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,10, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 19), (lte,7, destination_y), (lte, destination_y, 9))} result{'down'}
case{(and, (lte,2, drone_x), (lte, drone_x, 19), (lte,11, drone_y), (lte, drone_y, 14), (lte,0, destination_x), (lte, destination_x, 11), (eq, destination_y, 1))} result{'down'}
case{(and, (eq, drone_x, 7), (lte,3, drone_y), (lte, drone_y, 4), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,12, drone_x), (lte, drone_x, 19), (lte,4, drone_y), (lte, drone_y, 6), (lte,12, destination_x), (lte, destination_x, 19), (lte,2, destination_y), (lte, destination_y, 3))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,7, drone_y), (lte, drone_y, 10), (lte,0, destination_x), (lte, destination_x, 5), (lte,1, destination_y), (lte, destination_y, 6))} result{'down'}
case{(and, (lte,0, drone_x), (lte, drone_x, 19), (lte,8, drone_y), (lte, drone_y, 9), (lte,0, destination_x), (lte, destination_x, 19), (eq, destination_y, 7))} result{'down'}
result{'no_action'}

	}
    }
    #{##########################################}#
    variable { bl obstacles DEFINE INT static array (mult, number_of_obstacles, 2) iterative_assign, index_var
	condition {(eq, index_var, 0)} assign{result{11}}condition {(eq, index_var, 1)} assign{result{5}}
condition {(eq, index_var, 2)} assign{result{6}}condition {(eq, index_var, 3)} assign{result{3}}
condition {(eq, index_var, 4)} assign{result{1}}condition {(eq, index_var, 5)} assign{result{13}}
condition {(eq, index_var, 6)} assign{result{1}}condition {(eq, index_var, 7)} assign{result{11}}
condition {(eq, index_var, 8)} assign{result{0}}condition {(eq, index_var, 9)} assign{result{11}}
condition {(eq, index_var, 10)} assign{result{0}}condition {(eq, index_var, 11)} assign{result{0}}

	assign{result{0}}
    }
    variable { bl obstacle_sizes DEFINE INT static array number_of_obstacles iterative_assign, index_var
	
condition {(eq, index_var, 0)} assign{result{3}}
condition {(eq, index_var, 1)} assign{result{0}}
condition {(eq, index_var, 2)} assign{result{1}}
condition {(eq, index_var, 3)} assign{result{0}}
condition {(eq, index_var, 4)} assign{result{0}}
condition {(eq, index_var, 5)} assign{result{0}}

	assign{result{0}}
    }
    variable { bl safety_accept_init VAR BOOLEAN assign{result{True}}}
    variable { bl safety_p0 DEFINE BOOLEAN assign{result{
		(not,
		    (or,
			(loop, loop_var, [0, (sub, number_of_obstacles, 1)] such_that True,
			    (and,
				(lte, (max, min_val, (min, max_val, (add, drone_x, (mult, delta_x, 2)))), (index, obstacles, constant_index (mult, loop_var, 2))),
				(gte, (max, min_val, (min, max_val, (add, drone_x, (mult, delta_x, 2)))), (sub, (index, obstacles, constant_index (mult, loop_var, 2)), (index, obstacle_sizes, constant_index loop_var))),
				(lte, (max, min_val, (min, max_val, (add, drone_y, (mult, delta_y, 2)))), (index, obstacles, constant_index (add, (mult, loop_var, 2), 1))),
				(gte, (max, min_val, (min, max_val, (add, drone_y, (mult, delta_y, 2)))), (sub, (index, obstacles, constant_index (add, (mult, loop_var, 2), 1)), (index, obstacle_sizes, constant_index loop_var)))
			    )
			)
		    )
		)
	    }
	}
    }
    variable { bl liveness_states VAR BOOLEAN array 16 default{assign{result{False}}} constant_index index_of{0} assign{result{True}}}
    variable { bl liveness_p0 DEFINE BOOLEAN assign{result{(eq, current_action, 'left')}}}
    variable { bl liveness_p1 DEFINE BOOLEAN assign{result{(neq, current_action, 'right')}}}
    variable { bl liveness_p2 DEFINE BOOLEAN assign{result{(eq, current_action, 'right')}}}
    variable { bl liveness_p3 DEFINE BOOLEAN assign{result{(neq, current_action, 'left')}}}
    variable { bl liveness_p4 DEFINE BOOLEAN assign{result{(eq, current_action, 'up')}}}
    variable { bl liveness_p5 DEFINE BOOLEAN assign{result{(neq, current_action, 'down')}}}
    variable { bl liveness_p6 DEFINE BOOLEAN assign{result{(eq, current_action, 'down')}}}
    variable { bl liveness_p7 DEFINE BOOLEAN assign{result{(neq, current_action, 'up')}}}
    
    variable { env executing_action VAR {'left', 'right', 'up', 'down', 'no_action'} assign{result{'no_action'}}}
} end_variables

environment_update {
} end_environment_update

checks {
    check {
	cell_changed
	arguments {}
	read_variables {cell_changed_var, current_action}
	condition {(or, cell_changed_var, (eq, current_action, 'no_action'))}
    }
    check {
	not_at_destination
	arguments {}
	read_variables {destination_x, destination_y, drone_x, drone_y, current_action}
	condition {
	    (not,
		(or,
		    (and, (eq, destination_x, drone_x), (eq, destination_y, drone_y)),
		    (eq, current_action, 'no_action')
		)
	    )
	}
    }
} end_checks

environment_checks {
} end_environment_checks

actions {
    action {
	new_destination
	arguments{}
	local_variables {} end_local_variables
	read_variables {} end_read_variables
	write_variables {destination_x, destination_y } end_write_variables
	initial_values {} end_initial_values
	update {
	    read_environment {
		function_get_new_destination
		condition {True}
		variable_statement {
		    destination_x
		    assign {
			result {(loop, loop_var, [min_val, max_val] such_that True, loop_var)}
		    }
		}
		variable_statement {
		    destination_y
		    assign {
			result {(loop, loop_var, [min_val, max_val] such_that True, loop_var)}
		    }
		}
	    }
	    return_statement {
		result { success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	next_action
	arguments{}
	local_variables {} end_local_variables
	read_variables {fake_network, drone_x, drone_y, destination_x, destination_y} end_read_variables
	write_variables {cell_changed_var, current_action} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		cell_changed_var
		assign {
		    result {False}
		}
	    }
	    variable_statement {
		current_action
		assign {result{fake_network}}
	    }
	    return_statement {
		result { success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	read_monitor
	arguments{}
	local_variables {} end_local_variables
	read_variables {drone_x, drone_y, current_action, delta_x, delta_y, safety_p0, liveness_p0, liveness_p1, liveness_p2, liveness_p3, liveness_p4, liveness_p5, liveness_p6, liveness_p7} end_read_variables
	write_variables { drone_speed, monitor_var, safety_accept_init, liveness_states } end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		drone_speed
		assign {result{2}}
	    }
	    variable_statement {
		safety_accept_init
		assign{result{True}} #{We reset this before each test.}#
	    }
	    variable_statement {
		safety_accept_init
		assign{
		    result{(and, safety_accept_init, safety_p0)}
		}
	    }
	    variable_statement {
		monitor_var
		assign{
		    case{safety_accept_init}result{'unknown'}
		    result{'unsafe'}
		}
	    }
	    variable_statement {
		drone_speed
		assign{case{(eq, monitor_var, 'unsafe')}result{1}result{drone_speed}}
	    }
	    #{NOW LIVENESS--------------------}#
	    variable_statement {
		liveness_states
		constant_index
		index_of{0}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{1}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 11), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p4), liveness_p5))
		    }
		}
		index_of{2}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p4), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{3}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), True),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, liveness_p3),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, liveness_p5),
			    (and, (index, liveness_states, constant_index 9), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 10), liveness_p3),
			    (and, (index, liveness_states, constant_index 11), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 13), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), liveness_p5))
		    }
		}
		index_of{4}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{5}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p2), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p2), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p2), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p2), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p2), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p2), (not, liveness_p4), liveness_p5))
		    }
		}
		index_of{6}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p2), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p2), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p2), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p2), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p2), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p2), (not, liveness_p4), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{7}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p2)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, (not, liveness_p2), liveness_p3),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p2), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p2)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p2), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p2), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p2), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p2), liveness_p3),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p2), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p2), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p2), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p2), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p2), liveness_p5))
		    }
		}
		index_of{8}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p2), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), liveness_p1, (not, liveness_p2), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), liveness_p1, (not, liveness_p2), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), liveness_p1, (not, liveness_p2), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), liveness_p1, (not, liveness_p2), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p2), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p2), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p2), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p2), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p2), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{9}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p4), liveness_p5))
		    }
		}
		index_of{10}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), liveness_p3, (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), liveness_p3, (not, liveness_p4), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), liveness_p3, (not, liveness_p4), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p4), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p4), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p4), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{11}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, liveness_p3),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), liveness_p3),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), liveness_p5))
		    }
		}
		index_of{12}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), liveness_p5, (not, liveness_p6)))
		    }
		}
		index_of{13}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p4), liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p2), (not, liveness_p4), liveness_p5))
		    }
		}
		index_of{14}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p2)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p2)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p5),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), (not, liveness_p2), liveness_p3, liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), (not, liveness_p2), liveness_p3),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), (not, liveness_p2), liveness_p3, liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), (not, liveness_p2), liveness_p3, liveness_p5),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p2), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p2), liveness_p5, liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p2), liveness_p5))
		    }
		}
		index_of{15}
		assign{
		    result{
			(or,
			    (and, (index, liveness_states, constant_index 0), (not, liveness_p0), (not, liveness_p2), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 1), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 2), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 3), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 4), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 5), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 6), (not, liveness_p0), liveness_p1, (not, liveness_p2), (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 7), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 8), (not, liveness_p0), liveness_p1, (not, liveness_p2), liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 9), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 10), (not, liveness_p0), (not, liveness_p2), liveness_p3, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 11), (not, liveness_p0), (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 12), (not, liveness_p0), (not, liveness_p2), liveness_p3, liveness_p5, (not, liveness_p6)),
			    (and, (index, liveness_states, constant_index 13), (not, liveness_p0), (not, liveness_p2), (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 14), (not, liveness_p0), (not, liveness_p2), liveness_p5, (not, liveness_p6), liveness_p7),
			    (and, (index, liveness_states, constant_index 15), (not, liveness_p0), (not, liveness_p2), liveness_p5, (not, liveness_p6)))
		    }
		}
	    }
	    
	    variable_statement {
		monitor_var
		assign{
		    case{(or,(loop, loop_var, [0, 15] such_that True, (index, liveness_states, constant_index loop_var)))}result{'unknown'}
		    result{'unsafe'}
		}
	    }
	    variable_statement {
		drone_speed
		assign{case{(eq, monitor_var, 'unsafe')}result{1}result{drone_speed}}
	    }
	    variable_statement {
		liveness_states
		constant_index
		index_of{0}
		assign{
		    case{(eq, monitor_var, 'unsafe')}result{True}
		    result{(index, liveness_states, constant_index 0)}
		} #{Reset on unsafe.}#
	    }
	    return_statement {
		result { success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	read_position
	arguments{}
	local_variables {} end_local_variables
	read_variables {current_action, delta_x, delta_y, drone_speed} end_read_variables
	write_variables { drone_x, drone_y, cell_changed_var } end_write_variables
	initial_values {} end_initial_values
	update {
	    read_environment {
		function_get_position
		#{
		    condition_variable {cell_changed_var}
		    condition {non_determinism, True}
		}#
		condition {True}
		variable_statement {
		    cell_changed_var
		    assign {result{True}}
		}
		variable_statement {
		    drone_x
		    assign {
			result { (max, min_val, (min, max_val, (add, drone_x, (mult, delta_x, drone_speed))))}
		    }
		}
		variable_statement {
		    drone_y
		    assign {
			result { (max, min_val, (min, max_val, (add, drone_y, (mult, delta_y, drone_speed))))}
		    }
		}
	    }
	    return_statement {
		result { success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	send_action
	arguments{}
	local_variables {} end_local_variables
	read_variables {current_action} end_read_variables
	write_variables {} end_write_variables
	initial_values {} end_initial_values
	update {
	    write_environment {
		function_send_action
		variable_statement {
		    instant
		    executing_action
		    assign {
			result {current_action}
		    }
		}
	    }
	    return_statement {
		result { success} end_result
	    } end_return_statement
	} end_update
    } end_action
} end_actions

sub_trees {#{ subtrees go here. }#} end_sub_trees

tree {
    composite {
	drone_control sequence
	children {
	    read_position {} #{this just gets our position}#
	    cell_changed {} #{this checks if the cell changed OR we took no_action}#
	    composite {
		destination_selector selector
		children {
		    not_at_destination {} #{success if we are not at the destination AND we took no action.}#
		    new_destination {} #{if we reached the destination OR we took no action, find a new destination}#
		}
	    }
	    next_action {} #{pick an action}#
	    read_monitor {}
	    send_action {} #{send the action}#
	}
    }
} end_tree

tick_prerequisite { (True) } end_tick_prerequisite

specifications {
    INVARSPEC {
	(not,
	    (or,
		(loop, loop_var, [0, (sub, number_of_obstacles, 1)] such_that True,
		    (and,
			(lte, drone_x, (index, obstacles, constant_index (mult, loop_var, 2))),
			(gte, drone_x, (sub, (index, obstacles, constant_index (mult, loop_var, 2)), (index, obstacle_sizes, constant_index loop_var))),
			(lte, drone_y, (index, obstacles, constant_index (add, (mult, loop_var, 2), 1))),
			(gte, drone_y, (sub, (index, obstacles, constant_index (add, (mult, loop_var, 2), 1)), (index, obstacle_sizes, constant_index loop_var)))
		    )
		)
	    )
	)
    }
    LTLSPEC {
	(globally,
	    (
		(finally,
		    (or,
			(and,
			    (eq, drone_x at 1, destination_x at 0),
			    (eq, drone_y at 1, destination_y at 0)
			),
			(loop, loop_var, [0, (sub, number_of_obstacles, 1)] such_that True,
			    (and,
				(lte, destination_x at 0, (index, obstacles, constant_index (mult, loop_var, 2))),
				(gte, destination_x at 0, (sub, (index, obstacles, constant_index (mult, loop_var, 2)), (index, obstacle_sizes, constant_index loop_var))),
				(lte, destination_y at 0, (index, obstacles, constant_index (add, (mult, loop_var, 2), 1))),
				(gte, destination_y at 0, (sub, (index, obstacles, constant_index (add, (mult, loop_var, 2), 1)), (index, obstacle_sizes, constant_index loop_var)))
			    )
			)
		    )
		)
	    )
	)
    }
} end_specifications