*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 17:48:12 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- specification  G (safety_check0.output = bt_output_false -> backup0.enable = TRUE)  is true
-- specification  G (safety_check0.output = bt_output_false -> backup0.enable = FALSE)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    linkSeq1.enable = TRUE
    linkSeq1.has_left_bt_succeded = FALSE
    sel2.enable = TRUE
    safety_check2.output = bt_output_none
    safety_check2.enable = TRUE
    backup2.enable = FALSE
    linkSeq0.enable = TRUE
    linkSeq0.has_left_bt_succeded = FALSE
    sel0.enable = TRUE
    safety_check0.output = bt_output_none
    safety_check0.enable = TRUE
    backup0.enable = FALSE
    sel1.enable = TRUE
    safety_check1.output = bt_output_none
    safety_check1.enable = TRUE
    backup1.enable = FALSE
    linkSeq1.output = bt_output_true
    sel2.output = bt_output_true
    backup2.output = bt_output_true
    linkSeq0.output = bt_output_true
    sel0.output = bt_output_true
    backup0.output = bt_output_true
    sel1.output = bt_output_true
    backup1.output = bt_output_true
  -> Input: 1.2 <-
    safety_check2.input = bt_input_true
    safety_check0.input = bt_input_false
    safety_check1.input = bt_input_true
  -> State: 1.2 <-
    safety_check2.output = bt_output_true
    safety_check0.output = bt_output_false
    backup0.enable = TRUE
    safety_check1.output = bt_output_true
  -> Input: 1.3 <-
    safety_check2.input = bt_input_false
    safety_check0.input = bt_input_true
    safety_check1.input = bt_input_false
  -> State: 1.3 <-
    safety_check2.output = bt_output_false
    backup2.enable = TRUE
    safety_check0.output = bt_output_true
    backup0.enable = FALSE
    safety_check1.output = bt_output_false
    backup1.enable = TRUE
  -> Input: 1.4 <-
    safety_check2.input = bt_input_true
    safety_check1.input = bt_input_true
  -- Loop starts here
  -> State: 1.4 <-
    safety_check2.output = bt_output_true
    backup2.enable = FALSE
    safety_check1.output = bt_output_true
    backup1.enable = FALSE
  -> Input: 1.5 <-
    safety_check2.input = bt_input_false
    safety_check1.input = bt_input_false
  -> State: 1.5 <-
    safety_check2.output = bt_output_false
    backup2.enable = TRUE
    safety_check1.output = bt_output_false
    backup1.enable = TRUE
  -> Input: 1.6 <-
    safety_check2.input = bt_input_true
    safety_check1.input = bt_input_true
  -> State: 1.6 <-
    safety_check2.output = bt_output_true
    backup2.enable = FALSE
    safety_check1.output = bt_output_true
    backup1.enable = FALSE
-- specification  G (safety_check1.output = bt_output_false -> backup1.enable = TRUE)  is true
-- specification  G (safety_check1.output = bt_output_false -> backup1.enable = FALSE)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    linkSeq1.enable = TRUE
    linkSeq1.has_left_bt_succeded = FALSE
    sel2.enable = TRUE
    safety_check2.output = bt_output_none
    safety_check2.enable = TRUE
    backup2.enable = FALSE
    linkSeq0.enable = TRUE
    linkSeq0.has_left_bt_succeded = FALSE
    sel0.enable = TRUE
    safety_check0.output = bt_output_none
    safety_check0.enable = TRUE
    backup0.enable = FALSE
    sel1.enable = TRUE
    safety_check1.output = bt_output_none
    safety_check1.enable = TRUE
    backup1.enable = FALSE
    linkSeq1.output = bt_output_true
    sel2.output = bt_output_true
    backup2.output = bt_output_true
    linkSeq0.output = bt_output_true
    sel0.output = bt_output_true
    backup0.output = bt_output_true
    sel1.output = bt_output_true
    backup1.output = bt_output_true
  -> Input: 2.2 <-
    safety_check2.input = bt_input_true
    safety_check0.input = bt_input_true
    safety_check1.input = bt_input_false
  -> State: 2.2 <-
    safety_check2.output = bt_output_true
    safety_check0.output = bt_output_true
    safety_check1.output = bt_output_false
    backup1.enable = TRUE
  -> Input: 2.3 <-
    safety_check2.input = bt_input_false
    safety_check0.input = bt_input_false
    safety_check1.input = bt_input_true
  -> State: 2.3 <-
    safety_check2.output = bt_output_false
    backup2.enable = TRUE
    safety_check0.output = bt_output_false
    backup0.enable = TRUE
    safety_check1.output = bt_output_true
    backup1.enable = FALSE
  -> Input: 2.4 <-
    safety_check2.input = bt_input_true
    safety_check0.input = bt_input_true
  -- Loop starts here
  -> State: 2.4 <-
    safety_check2.output = bt_output_true
    backup2.enable = FALSE
    safety_check0.output = bt_output_true
    backup0.enable = FALSE
  -> Input: 2.5 <-
    safety_check2.input = bt_input_false
    safety_check0.input = bt_input_false
  -> State: 2.5 <-
    safety_check2.output = bt_output_false
    backup2.enable = TRUE
    safety_check0.output = bt_output_false
    backup0.enable = TRUE
  -> Input: 2.6 <-
    safety_check2.input = bt_input_true
    safety_check0.input = bt_input_true
  -> State: 2.6 <-
    safety_check2.output = bt_output_true
    backup2.enable = FALSE
    safety_check0.output = bt_output_true
    backup0.enable = FALSE
-- specification  G (safety_check2.output = bt_output_false -> backup2.enable = TRUE)  is true
-- specification  G (safety_check2.output = bt_output_false -> backup2.enable = FALSE)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 3.1 <-
    linkSeq1.enable = TRUE
    linkSeq1.has_left_bt_succeded = FALSE
    sel2.enable = TRUE
    safety_check2.output = bt_output_none
    safety_check2.enable = TRUE
    backup2.enable = FALSE
    linkSeq0.enable = TRUE
    linkSeq0.has_left_bt_succeded = FALSE
    sel0.enable = TRUE
    safety_check0.output = bt_output_none
    safety_check0.enable = TRUE
    backup0.enable = FALSE
    sel1.enable = TRUE
    safety_check1.output = bt_output_none
    safety_check1.enable = TRUE
    backup1.enable = FALSE
    linkSeq1.output = bt_output_true
    sel2.output = bt_output_true
    backup2.output = bt_output_true
    linkSeq0.output = bt_output_true
    sel0.output = bt_output_true
    backup0.output = bt_output_true
    sel1.output = bt_output_true
    backup1.output = bt_output_true
  -> Input: 3.2 <-
    safety_check2.input = bt_input_false
    safety_check0.input = bt_input_true
    safety_check1.input = bt_input_true
  -> State: 3.2 <-
    safety_check2.output = bt_output_false
    backup2.enable = TRUE
    safety_check0.output = bt_output_true
    safety_check1.output = bt_output_true
  -> Input: 3.3 <-
    safety_check2.input = bt_input_true
    safety_check0.input = bt_input_false
    safety_check1.input = bt_input_false
  -> State: 3.3 <-
    safety_check2.output = bt_output_true
    backup2.enable = FALSE
    safety_check0.output = bt_output_false
    backup0.enable = TRUE
    safety_check1.output = bt_output_false
    backup1.enable = TRUE
  -> Input: 3.4 <-
    safety_check0.input = bt_input_true
    safety_check1.input = bt_input_true
  -- Loop starts here
  -> State: 3.4 <-
    safety_check0.output = bt_output_true
    backup0.enable = FALSE
    safety_check1.output = bt_output_true
    backup1.enable = FALSE
  -> Input: 3.5 <-
    safety_check0.input = bt_input_false
    safety_check1.input = bt_input_false
  -> State: 3.5 <-
    safety_check0.output = bt_output_false
    backup0.enable = TRUE
    safety_check1.output = bt_output_false
    backup1.enable = TRUE
  -> Input: 3.6 <-
    safety_check0.input = bt_input_true
    safety_check1.input = bt_input_true
  -> State: 3.6 <-
    safety_check0.output = bt_output_true
    backup0.enable = FALSE
    safety_check1.output = bt_output_true
    backup1.enable = FALSE
