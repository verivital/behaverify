MODULE main
    VAR
        system : system_module;
--------------SPECIFICATIONS

LTLSPEC G((system.value_stage_2 != 1));
LTLSPEC ((system.value_stage_0 != 1) -> G((system.value_stage_2 != 1)));
LTLSPEC (((system.value_stage_0 != 1) & (system.value_stage_0 != 2)) -> G((system.value_stage_2 != 1)));

--------------END OF SPECIFICATIONS

MODULE system_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        resume_from_here_in_subtree__collatz := -3;
        collatz.active := (value_stage_0 != 1);
        --START OF BLACKBOARD DEFINITIONS
        value_stage_1 := 
            case
                !(divide_by_2.active) : value_stage_0;
                TRUE : (value_stage_0 / 2);
            esac;
        value_stage_2 := 
            case
                !(multiply_and_add.active) : value_stage_1;
                TRUE : ((value_stage_1 * 3) + 1);
            esac;
        --END OF BLACKBOARD DEFINITIONS
    VAR
        node_names : define_nodes;
        is_even : is_even_module(value_stage_0);
        divide_by_2 : success_DEFAULT_module();
        even_case : composite_sequence_without_memory_2(is_even, divide_by_2);
        multiply_and_add : success_DEFAULT_module();
        collatz : composite_selector_without_memory_2(even_case, multiply_and_add);
        --START OF BLACKBOARD VARIABLES DECLARATION
        value_stage_0 : integer;
        --END OF BLACKBOARD VARIABLES DECLARATION
    ASSIGN
        --START OF BLACKBOARD VARIABLES INITIALIZATION
        init(value_stage_0) := 
            case
                TRUE : {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20};
            esac;
        --END OF BLACKBOARD VARIABLES INITIALIZATION
        --START OF BLACKBOARD VARIABLES TRANSITION
        next(value_stage_0) := value_stage_2;
        --END OF BLACKBOARD VARIABLES TRANSITION

MODULE define_nodes
    DEFINE
        collatz := 0;
        even_case := 1;
        is_even := 2;
        divide_by_2 := 3;
        multiply_and_add := 4;
MODULE composite_sequence_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = success) : child_0.internal_status;
                !(child_1.internal_status = success) : child_1.internal_status;
                TRUE : success;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = success;
MODULE composite_selector_without_memory_2(child_0, child_1)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status :=
            case
                !(child_0.internal_status = failure) : child_0.internal_status;
                !(child_1.internal_status = failure) : child_1.internal_status;
                TRUE : failure;
            esac;
        child_0.active := active;
        child_1.active := child_0.status = failure;
MODULE is_even_module(value_stage_0)
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := ((value_stage_0 = (2 * (value_stage_0 / 2)))) ? success : failure;
MODULE success_DEFAULT_module
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := success;
