configuration {
    #{ Here you specify various configuration options, such as Hypersafety }#
    use_reals
}
enumerations {
    #{ here you specify the enumerations used in the model}#
}
constants {
    'x_min' := 0, 'y_min' := 0, 'x_max' := 10, 'y_max' := 10, 'tree_count' := 2, 'vision_range' := 4, 'tree_range' := 2, 'y_change' := 2, 'movement_cooldown' := 10
} end_constants

variables {
    variable {bl prev_dest_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl prev_dest_y VAR ['y_min', 'y_max'] assign {result {(add, 'y_min', 1)}}}
    variable {bl cur_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl cur_y VAR ['y_min', 'y_max'] assign {result {'y_min'}}}
    variable {bl dest_x VAR ['x_min', 'x_max'] assign {result {'x_min'}}}
    variable {bl dest_y VAR ['y_min', 'y_max'] assign {result {'y_min'}}}
    variable {bl dir VAR {-1, 1} assign {result {1}}}
    variable {bl victory VAR BOOLEAN assign {result {False}}}
    #{variable {env tree_locs array 'tree_count' FROZENVAR [0, 960] range assign {result{range, 0, 960, True}}}}#
    #{
	variable {env tree_x array 'tree_count' FROZENVAR ['x_min', 'x_max'] range assign {result{range, 'x_min', 'x_max', True}}}
	variable {env tree_y array 'tree_count' FROZENVAR ['y_min', 'y_max'] range assign {result{range, 'y_min', 'y_max', True}}}
    }#
    variable {env tree_x array 'tree_count' DEFINE INT per_index assign {result{2}} assign {result{5}}}
    variable {env tree_y array 'tree_count' DEFINE INT per_index assign {result{2}} assign {result{5}}}
    variable {env tar_x VAR ['x_min', 'x_max'] assign {result {range, 'x_min', 'x_max', True}}}
    variable {env tar_y VAR ['y_min', 'y_max'] assign {result {range, 'y_min', 'y_max', True}}}
    variable {env timer VAR [0, 'movement_cooldown'] assign {result{'movement_cooldown'}}}
    #{START OF X_NET}#
    variable {bl x_net_weight_from_0_0 array 10 DEFINE REAL per_index assign{result{0.2001702}}assign{result{0.6165274}}assign{result{-0.6220189}}assign{result{-0.04946643}}assign{result{1.1031656}}assign{result{-0.12607843}}assign{result{0.7328935}}assign{result{-0.112498224}}assign{result{-0.70053303}}assign{result{0.56685084}}}
    variable {bl x_net_weight_from_0_1 array 10 DEFINE REAL per_index assign{result{-0.360913}}assign{result{0.1218523}}assign{result{-0.586587}}assign{result{-0.20571035}}assign{result{0.1447911}}assign{result{1.0974408}}assign{result{-0.47595254}}assign{result{-0.68379855}}assign{result{-0.14106834}}assign{result{-0.76940954}}}
    variable {bl x_net_bias_from_0 array 10 DEFINE REAL per_index assign{result{1.2857533}}assign{result{-1.1601343}}assign{result{0.0}}assign{result{0.0}}assign{result{-0.6619661}}assign{result{1.3954307}}assign{result{0.64281094}}assign{result{0.0}}assign{result{0.0}}assign{result{0.6212209}}}
    variable {bl x_net_weight_from_1_0 array 10 DEFINE REAL per_index assign{result{1.3527094}}assign{result{0.98375773}}assign{result{0.27433524}}assign{result{-0.15983278}}assign{result{-0.63044226}}assign{result{-2.2379932}}assign{result{-0.66453975}}assign{result{1.8816615}}assign{result{-0.0008644019}}assign{result{0.64513505}}}
    variable {bl x_net_weight_from_1_1 array 10 DEFINE REAL per_index assign{result{-0.6053107}}assign{result{-0.50175434}}assign{result{0.3506417}}assign{result{0.21270752}}assign{result{0.4127142}}assign{result{-0.51381755}}assign{result{0.5854645}}assign{result{-0.5994848}}assign{result{-0.7881524}}assign{result{1.166435}}}
    variable {bl x_net_weight_from_1_2 array 10 DEFINE REAL per_index assign{result{-0.4385792}}assign{result{0.21760327}}assign{result{-0.20101333}}assign{result{0.04624331}}assign{result{-0.035621345}}assign{result{-0.034121275}}assign{result{0.47381985}}assign{result{-0.3140409}}assign{result{-0.10135725}}assign{result{-0.534085}}}
    variable {bl x_net_weight_from_1_3 array 10 DEFINE REAL per_index assign{result{0.01688373}}assign{result{-0.18207556}}assign{result{-0.13941154}}assign{result{0.29234993}}assign{result{0.5211866}}assign{result{-0.09402725}}assign{result{0.27024585}}assign{result{-0.38536608}}assign{result{-0.36899775}}assign{result{-0.53492343}}}
    variable {bl x_net_weight_from_1_4 array 10 DEFINE REAL per_index assign{result{-0.08689896}}assign{result{-1.1645869}}assign{result{0.0546546}}assign{result{0.13641185}}assign{result{0.22821276}}assign{result{-0.5202811}}assign{result{1.2515333}}assign{result{-0.15524487}}assign{result{-0.46366498}}assign{result{0.8139701}}}
    variable {bl x_net_weight_from_1_5 array 10 DEFINE REAL per_index assign{result{0.11335178}}assign{result{0.1634152}}assign{result{0.6094485}}assign{result{-0.3567548}}assign{result{-0.5048823}}assign{result{0.74032664}}assign{result{0.18393727}}assign{result{0.71734583}}assign{result{0.7551123}}assign{result{0.69374716}}}
    variable {bl x_net_weight_from_1_6 array 10 DEFINE REAL per_index assign{result{0.9093688}}assign{result{-1.1511207}}assign{result{-0.7480983}}assign{result{-0.5308741}}assign{result{0.44099417}}assign{result{-0.14296606}}assign{result{0.35304302}}assign{result{-0.038323168}}assign{result{0.8997346}}assign{result{0.8376366}}}
    variable {bl x_net_weight_from_1_7 array 10 DEFINE REAL per_index assign{result{-0.47674096}}assign{result{-0.39133847}}assign{result{-0.058779}}assign{result{-0.16728199}}assign{result{0.4354421}}assign{result{0.42495763}}assign{result{-0.0065160394}}assign{result{0.22811317}}assign{result{0.34141523}}assign{result{0.3355251}}}
    variable {bl x_net_weight_from_1_8 array 10 DEFINE REAL per_index assign{result{0.48377097}}assign{result{-0.026623726}}assign{result{0.396136}}assign{result{0.48317528}}assign{result{0.14633787}}assign{result{0.3328328}}assign{result{0.48108757}}assign{result{0.17676431}}assign{result{0.17763472}}assign{result{0.32663488}}}
    variable {bl x_net_weight_from_1_9 array 10 DEFINE REAL per_index assign{result{-0.7474134}}assign{result{-1.7119068}}assign{result{0.77238333}}assign{result{-0.20080778}}assign{result{-0.124188155}}assign{result{-1.4917822}}assign{result{0.052892726}}assign{result{1.0525073}}assign{result{-0.3924704}}assign{result{1.4850638}}}
    variable {bl x_net_bias_from_1 array 10 DEFINE REAL per_index assign{result{1.2323934}}assign{result{0.28509218}}assign{result{-0.4262861}}assign{result{0.0}}assign{result{-1.1265537}}assign{result{0.9385807}}assign{result{-0.35639217}}assign{result{1.1435393}}assign{result{1.6518087}}assign{result{-0.2802381}}}
    variable {bl x_net_weight_from_2_0 array 10 DEFINE REAL per_index assign{result{-0.6051807}}assign{result{0.6479653}}assign{result{0.70981413}}assign{result{-0.5227347}}assign{result{1.7368653}}assign{result{-1.0455121}}assign{result{-0.3103411}}assign{result{0.5190896}}assign{result{-0.5964447}}assign{result{-1.5704654}}}
    variable {bl x_net_weight_from_2_1 array 10 DEFINE REAL per_index assign{result{-0.2904844}}assign{result{0.41697812}}assign{result{-1.7913921}}assign{result{-0.54763824}}assign{result{-1.7532403}}assign{result{-0.45423108}}assign{result{-0.49285778}}assign{result{0.6539202}}assign{result{-0.3186149}}assign{result{-0.38355097}}}
    variable {bl x_net_weight_from_2_2 array 10 DEFINE REAL per_index assign{result{-0.13988684}}assign{result{0.44088614}}assign{result{-0.27493224}}assign{result{0.17726982}}assign{result{0.13740921}}assign{result{0.29217595}}assign{result{0.016104162}}assign{result{0.007150572}}assign{result{0.1404218}}assign{result{1.1174186}}}
    variable {bl x_net_weight_from_2_3 array 10 DEFINE REAL per_index assign{result{-0.43955246}}assign{result{0.29663664}}assign{result{0.4718052}}assign{result{-0.32682186}}assign{result{0.07920039}}assign{result{-0.012582064}}assign{result{0.45665705}}assign{result{-0.14131668}}assign{result{-0.23852947}}assign{result{0.19334626}}}
    variable {bl x_net_weight_from_2_4 array 10 DEFINE REAL per_index assign{result{0.8232385}}assign{result{-2.3065412}}assign{result{0.6460871}}assign{result{0.16691542}}assign{result{-0.93722117}}assign{result{2.704816}}assign{result{-0.44181266}}assign{result{0.3598021}}assign{result{-0.2235412}}assign{result{1.8137258}}}
    variable {bl x_net_weight_from_2_5 array 10 DEFINE REAL per_index assign{result{-1.1823509}}assign{result{2.607101}}assign{result{-0.62702996}}assign{result{-0.46971917}}assign{result{0.9098721}}assign{result{-0.6926904}}assign{result{0.1446327}}assign{result{1.0224597}}assign{result{0.028327592}}assign{result{-1.1524892}}}
    variable {bl x_net_weight_from_2_6 array 10 DEFINE REAL per_index assign{result{-0.36736754}}assign{result{-0.07640781}}assign{result{0.6077701}}assign{result{-0.5078454}}assign{result{-0.79375356}}assign{result{0.7682273}}assign{result{0.2050492}}assign{result{-2.433818}}assign{result{-0.16621405}}assign{result{-0.01631301}}}
    variable {bl x_net_weight_from_2_7 array 10 DEFINE REAL per_index assign{result{-0.44678715}}assign{result{1.3301667}}assign{result{-0.0013665096}}assign{result{-0.4195042}}assign{result{1.0054227}}assign{result{-0.25622758}}assign{result{-0.18204594}}assign{result{0.19261314}}assign{result{0.15134375}}assign{result{0.11997561}}}
    variable {bl x_net_weight_from_2_8 array 10 DEFINE REAL per_index assign{result{0.3106684}}assign{result{0.4111871}}assign{result{-0.079915635}}assign{result{-0.1375333}}assign{result{2.148612}}assign{result{0.31429052}}assign{result{-0.25519735}}assign{result{0.43467933}}assign{result{0.18675455}}assign{result{-0.38952422}}}
    variable {bl x_net_weight_from_2_9 array 10 DEFINE REAL per_index assign{result{0.46906543}}assign{result{0.56206506}}assign{result{0.79427963}}assign{result{0.060584664}}assign{result{-0.465613}}assign{result{0.19215278}}assign{result{-0.46162733}}assign{result{0.2564362}}assign{result{-0.49596727}}assign{result{0.36308128}}}
    variable {bl x_net_bias_from_2 array 10 DEFINE REAL per_index assign{result{-0.07179972}}assign{result{0.38232645}}assign{result{0.26791218}}assign{result{0.0}}assign{result{1.2999177}}assign{result{-0.53269386}}assign{result{-0.005652847}}assign{result{0.29742238}}assign{result{-0.19911909}}assign{result{-0.9053143}}}
    variable {bl x_net_weight_from_3_0 array 10 DEFINE REAL per_index assign{result{0.2886538}}assign{result{-0.06586474}}assign{result{0.3230181}}assign{result{-0.09843132}}assign{result{-0.6454846}}assign{result{-0.29798913}}assign{result{-0.29456064}}assign{result{-0.5459121}}assign{result{0.6829895}}assign{result{0.5537368}}}
    variable {bl x_net_weight_from_3_1 array 10 DEFINE REAL per_index assign{result{-0.07803191}}assign{result{0.56221205}}assign{result{-0.14029768}}assign{result{-0.54414225}}assign{result{0.42906815}}assign{result{-0.29502007}}assign{result{-0.4419359}}assign{result{0.6966228}}assign{result{-0.39607295}}assign{result{-0.60063326}}}
    variable {bl x_net_weight_from_3_2 array 10 DEFINE REAL per_index assign{result{-1.6189471}}assign{result{0.42735964}}assign{result{0.48434815}}assign{result{0.40224087}}assign{result{0.21106644}}assign{result{-0.3603487}}assign{result{0.66575617}}assign{result{-0.14791368}}assign{result{0.10001236}}assign{result{0.6323124}}}
    variable {bl x_net_weight_from_3_3 array 10 DEFINE REAL per_index assign{result{0.04321575}}assign{result{0.43127817}}assign{result{0.40159178}}assign{result{0.38852525}}assign{result{-0.18305784}}assign{result{-0.48620605}}assign{result{0.34362018}}assign{result{-0.3152128}}assign{result{-0.18347898}}assign{result{0.0005981922}}}
    variable {bl x_net_weight_from_3_4 array 10 DEFINE REAL per_index assign{result{0.96540684}}assign{result{0.604681}}assign{result{0.0253388}}assign{result{-0.15467829}}assign{result{-0.9955908}}assign{result{0.07254958}}assign{result{-0.39096352}}assign{result{-1.189744}}assign{result{1.7341455}}assign{result{0.3511722}}}
    variable {bl x_net_weight_from_3_5 array 10 DEFINE REAL per_index assign{result{-2.0441525}}assign{result{-0.34120047}}assign{result{0.5805461}}assign{result{-0.2548043}}assign{result{0.18945083}}assign{result{-0.24297062}}assign{result{0.62865514}}assign{result{-0.26227602}}assign{result{0.36290222}}assign{result{0.02291534}}}
    variable {bl x_net_weight_from_3_6 array 10 DEFINE REAL per_index assign{result{-0.38621455}}assign{result{-0.24350902}}assign{result{0.2619209}}assign{result{-0.2007445}}assign{result{-0.034516692}}assign{result{-0.4517876}}assign{result{-0.06687637}}assign{result{0.46829998}}assign{result{0.49170193}}assign{result{0.2750889}}}
    variable {bl x_net_weight_from_3_7 array 10 DEFINE REAL per_index assign{result{2.460242}}assign{result{0.28046995}}assign{result{-1.6921593}}assign{result{-0.42768353}}assign{result{-0.48562714}}assign{result{0.19472206}}assign{result{0.2870766}}assign{result{0.08643597}}assign{result{-1.4698433}}assign{result{0.14949128}}}
    variable {bl x_net_weight_from_3_8 array 10 DEFINE REAL per_index assign{result{-0.38704562}}assign{result{0.03010885}}assign{result{-0.022234857}}assign{result{-0.22454059}}assign{result{0.11830345}}assign{result{0.111739576}}assign{result{0.29155448}}assign{result{-0.003807713}}assign{result{-0.25212157}}assign{result{0.4229405}}}
    variable {bl x_net_weight_from_3_9 array 10 DEFINE REAL per_index assign{result{-0.52968305}}assign{result{-0.7627636}}assign{result{0.19397156}}assign{result{0.0694639}}assign{result{-0.4430988}}assign{result{-0.26193893}}assign{result{0.9162741}}assign{result{0.2605358}}assign{result{0.5956915}}assign{result{-0.66312563}}}
    variable {bl x_net_bias_from_3 array 10 DEFINE REAL per_index assign{result{0.46510866}}assign{result{0.7725554}}assign{result{0.23564066}}assign{result{-0.024956755}}assign{result{0.20087224}}assign{result{0.0}}assign{result{-0.59070575}}assign{result{-0.2171349}}assign{result{-0.5175548}}assign{result{0.38917205}}}
    variable {bl x_net_weight_from_4_0 array 11 DEFINE REAL per_index assign{result{0.76567197}}assign{result{0.24294323}}assign{result{-0.44745597}}assign{result{-2.5391629}}assign{result{-0.8828814}}assign{result{-1.0664265}}assign{result{-0.6651383}}assign{result{-1.1412729}}assign{result{-0.84466374}}assign{result{-1.016046}}assign{result{0.28767946}}}
    variable {bl x_net_weight_from_4_1 array 11 DEFINE REAL per_index assign{result{0.061027173}}assign{result{0.3088539}}assign{result{0.3628289}}assign{result{0.36090955}}assign{result{0.23773311}}assign{result{0.25810787}}assign{result{-0.25529844}}assign{result{-0.48633534}}assign{result{-1.0138744}}assign{result{-1.2864588}}assign{result{-0.7957526}}}
    variable {bl x_net_weight_from_4_2 array 11 DEFINE REAL per_index assign{result{0.2837662}}assign{result{-2.8874252}}assign{result{-3.7368324}}assign{result{-1.9658561}}assign{result{-0.17291655}}assign{result{-0.42199925}}assign{result{0.2054973}}assign{result{-0.21714322}}assign{result{0.09436163}}assign{result{0.4424133}}assign{result{-0.01200496}}}
    variable {bl x_net_weight_from_4_3 array 11 DEFINE REAL per_index assign{result{0.47533527}}assign{result{-0.09433277}}assign{result{-0.35210556}}assign{result{0.08497325}}assign{result{-0.16138642}}assign{result{0.37156698}}assign{result{-0.53729606}}assign{result{-0.1314726}}assign{result{0.003382922}}assign{result{0.10940655}}assign{result{-0.2918564}}}
    variable {bl x_net_weight_from_4_4 array 11 DEFINE REAL per_index assign{result{-0.39176315}}assign{result{-2.2364664}}assign{result{-1.1593461}}assign{result{-0.4490243}}assign{result{0.44678473}}assign{result{-0.057551775}}assign{result{0.67658824}}assign{result{0.08515967}}assign{result{0.33164474}}assign{result{0.044713005}}assign{result{-0.7767151}}}
    variable {bl x_net_weight_from_4_5 array 11 DEFINE REAL per_index assign{result{-0.13999191}}assign{result{-0.29742348}}assign{result{-0.080270946}}assign{result{0.31402922}}assign{result{0.14660132}}assign{result{0.38328665}}assign{result{-0.3961605}}assign{result{-0.10297683}}assign{result{-0.1783956}}assign{result{0.25268668}}assign{result{0.012297988}}}
    variable {bl x_net_weight_from_4_6 array 11 DEFINE REAL per_index assign{result{0.66432667}}assign{result{-0.84172136}}assign{result{-1.1761466}}assign{result{-1.5673696}}assign{result{-2.4029553}}assign{result{-0.13175741}}assign{result{-0.49740818}}assign{result{0.50196284}}assign{result{0.36669287}}assign{result{0.19923115}}assign{result{0.6434896}}}
    variable {bl x_net_weight_from_4_7 array 11 DEFINE REAL per_index assign{result{-1.1090641}}assign{result{0.313278}}assign{result{-2.0111794}}assign{result{-0.970433}}assign{result{0.08978704}}assign{result{0.7046041}}assign{result{0.89739114}}assign{result{0.78251123}}assign{result{0.30718702}}assign{result{-0.121285014}}assign{result{-2.1397586}}}
    variable {bl x_net_weight_from_4_8 array 11 DEFINE REAL per_index assign{result{-0.59043115}}assign{result{0.05283131}}assign{result{0.5129439}}assign{result{0.50906396}}assign{result{-0.32544914}}assign{result{-0.8835648}}assign{result{-3.0618343}}assign{result{-1.6597631}}assign{result{-0.44927353}}assign{result{0.31415418}}assign{result{1.2760104}}}
    variable {bl x_net_weight_from_4_9 array 11 DEFINE REAL per_index assign{result{-5.2080226}}assign{result{-0.8191376}}assign{result{-0.85348773}}assign{result{-0.8483434}}assign{result{-0.0082045905}}assign{result{-0.21270074}}assign{result{-1.0739777}}assign{result{0.18556115}}assign{result{0.10039978}}assign{result{0.2392816}}assign{result{0.5134266}}}
    variable {bl x_net_bias_from_4 array 11 DEFINE REAL per_index assign{result{0.085851304}}assign{result{-0.16191939}}assign{result{0.19741079}}assign{result{0.1651236}}assign{result{0.21406388}}assign{result{0.2560757}}assign{result{0.5287777}}assign{result{-0.14183702}}assign{result{-0.20878896}}assign{result{-0.5917071}}assign{result{-0.25110456}}}
    variable {bl x_net_node_0_0 DEFINE REAL assign{result{dest_x}}}
    variable {bl x_net_node_0_1 DEFINE REAL assign{result{prev_dest_x}}}
    variable {bl x_net_node_1_0 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 0)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 0)),(index, x_net_bias_from_0, 0)), 0)}}}
    variable {bl x_net_node_1_1 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 1)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 1)),(index, x_net_bias_from_0, 1)), 0)}}}
    variable {bl x_net_node_1_2 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 2)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 2)),(index, x_net_bias_from_0, 2)), 0)}}}
    variable {bl x_net_node_1_3 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 3)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 3)),(index, x_net_bias_from_0, 3)), 0)}}}
    variable {bl x_net_node_1_4 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 4)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 4)),(index, x_net_bias_from_0, 4)), 0)}}}
    variable {bl x_net_node_1_5 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 5)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 5)),(index, x_net_bias_from_0, 5)), 0)}}}
    variable {bl x_net_node_1_6 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 6)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 6)),(index, x_net_bias_from_0, 6)), 0)}}}
    variable {bl x_net_node_1_7 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 7)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 7)),(index, x_net_bias_from_0, 7)), 0)}}}
    variable {bl x_net_node_1_8 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 8)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 8)),(index, x_net_bias_from_0, 8)), 0)}}}
    variable {bl x_net_node_1_9 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_0_0, (index, x_net_weight_from_0_0, 9)),(mult, x_net_node_0_1, (index, x_net_weight_from_0_1, 9)),(index, x_net_bias_from_0, 9)), 0)}}}
    variable {bl x_net_node_2_0 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 0)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 0)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 0)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 0)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 0)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 0)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 0)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 0)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 0)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 0)),(index, x_net_bias_from_1, 0)), 0)}}}
    variable {bl x_net_node_2_1 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 1)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 1)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 1)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 1)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 1)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 1)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 1)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 1)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 1)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 1)),(index, x_net_bias_from_1, 1)), 0)}}}
    variable {bl x_net_node_2_2 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 2)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 2)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 2)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 2)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 2)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 2)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 2)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 2)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 2)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 2)),(index, x_net_bias_from_1, 2)), 0)}}}
    variable {bl x_net_node_2_3 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 3)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 3)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 3)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 3)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 3)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 3)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 3)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 3)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 3)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 3)),(index, x_net_bias_from_1, 3)), 0)}}}
    variable {bl x_net_node_2_4 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 4)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 4)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 4)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 4)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 4)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 4)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 4)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 4)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 4)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 4)),(index, x_net_bias_from_1, 4)), 0)}}}
    variable {bl x_net_node_2_5 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 5)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 5)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 5)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 5)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 5)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 5)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 5)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 5)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 5)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 5)),(index, x_net_bias_from_1, 5)), 0)}}}
    variable {bl x_net_node_2_6 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 6)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 6)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 6)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 6)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 6)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 6)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 6)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 6)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 6)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 6)),(index, x_net_bias_from_1, 6)), 0)}}}
    variable {bl x_net_node_2_7 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 7)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 7)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 7)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 7)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 7)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 7)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 7)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 7)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 7)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 7)),(index, x_net_bias_from_1, 7)), 0)}}}
    variable {bl x_net_node_2_8 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 8)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 8)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 8)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 8)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 8)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 8)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 8)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 8)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 8)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 8)),(index, x_net_bias_from_1, 8)), 0)}}}
    variable {bl x_net_node_2_9 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_1_0, (index, x_net_weight_from_1_0, 9)),(mult, x_net_node_1_1, (index, x_net_weight_from_1_1, 9)),(mult, x_net_node_1_2, (index, x_net_weight_from_1_2, 9)),(mult, x_net_node_1_3, (index, x_net_weight_from_1_3, 9)),(mult, x_net_node_1_4, (index, x_net_weight_from_1_4, 9)),(mult, x_net_node_1_5, (index, x_net_weight_from_1_5, 9)),(mult, x_net_node_1_6, (index, x_net_weight_from_1_6, 9)),(mult, x_net_node_1_7, (index, x_net_weight_from_1_7, 9)),(mult, x_net_node_1_8, (index, x_net_weight_from_1_8, 9)),(mult, x_net_node_1_9, (index, x_net_weight_from_1_9, 9)),(index, x_net_bias_from_1, 9)), 0)}}}
    variable {bl x_net_node_3_0 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 0)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 0)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 0)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 0)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 0)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 0)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 0)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 0)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 0)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 0)),(index, x_net_bias_from_2, 0)), 0)}}}
    variable {bl x_net_node_3_1 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 1)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 1)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 1)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 1)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 1)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 1)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 1)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 1)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 1)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 1)),(index, x_net_bias_from_2, 1)), 0)}}}
    variable {bl x_net_node_3_2 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 2)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 2)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 2)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 2)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 2)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 2)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 2)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 2)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 2)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 2)),(index, x_net_bias_from_2, 2)), 0)}}}
    variable {bl x_net_node_3_3 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 3)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 3)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 3)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 3)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 3)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 3)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 3)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 3)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 3)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 3)),(index, x_net_bias_from_2, 3)), 0)}}}
    variable {bl x_net_node_3_4 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 4)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 4)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 4)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 4)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 4)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 4)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 4)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 4)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 4)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 4)),(index, x_net_bias_from_2, 4)), 0)}}}
    variable {bl x_net_node_3_5 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 5)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 5)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 5)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 5)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 5)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 5)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 5)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 5)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 5)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 5)),(index, x_net_bias_from_2, 5)), 0)}}}
    variable {bl x_net_node_3_6 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 6)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 6)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 6)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 6)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 6)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 6)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 6)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 6)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 6)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 6)),(index, x_net_bias_from_2, 6)), 0)}}}
    variable {bl x_net_node_3_7 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 7)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 7)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 7)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 7)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 7)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 7)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 7)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 7)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 7)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 7)),(index, x_net_bias_from_2, 7)), 0)}}}
    variable {bl x_net_node_3_8 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 8)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 8)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 8)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 8)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 8)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 8)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 8)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 8)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 8)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 8)),(index, x_net_bias_from_2, 8)), 0)}}}
    variable {bl x_net_node_3_9 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_2_0, (index, x_net_weight_from_2_0, 9)),(mult, x_net_node_2_1, (index, x_net_weight_from_2_1, 9)),(mult, x_net_node_2_2, (index, x_net_weight_from_2_2, 9)),(mult, x_net_node_2_3, (index, x_net_weight_from_2_3, 9)),(mult, x_net_node_2_4, (index, x_net_weight_from_2_4, 9)),(mult, x_net_node_2_5, (index, x_net_weight_from_2_5, 9)),(mult, x_net_node_2_6, (index, x_net_weight_from_2_6, 9)),(mult, x_net_node_2_7, (index, x_net_weight_from_2_7, 9)),(mult, x_net_node_2_8, (index, x_net_weight_from_2_8, 9)),(mult, x_net_node_2_9, (index, x_net_weight_from_2_9, 9)),(index, x_net_bias_from_2, 9)), 0)}}}
    variable {bl x_net_node_4_0 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 0)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 0)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 0)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 0)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 0)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 0)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 0)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 0)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 0)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 0)),(index, x_net_bias_from_3, 0)), 0)}}}
    variable {bl x_net_node_4_1 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 1)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 1)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 1)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 1)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 1)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 1)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 1)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 1)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 1)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 1)),(index, x_net_bias_from_3, 1)), 0)}}}
    variable {bl x_net_node_4_2 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 2)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 2)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 2)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 2)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 2)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 2)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 2)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 2)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 2)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 2)),(index, x_net_bias_from_3, 2)), 0)}}}
    variable {bl x_net_node_4_3 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 3)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 3)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 3)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 3)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 3)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 3)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 3)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 3)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 3)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 3)),(index, x_net_bias_from_3, 3)), 0)}}}
    variable {bl x_net_node_4_4 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 4)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 4)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 4)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 4)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 4)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 4)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 4)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 4)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 4)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 4)),(index, x_net_bias_from_3, 4)), 0)}}}
    variable {bl x_net_node_4_5 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 5)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 5)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 5)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 5)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 5)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 5)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 5)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 5)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 5)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 5)),(index, x_net_bias_from_3, 5)), 0)}}}
    variable {bl x_net_node_4_6 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 6)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 6)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 6)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 6)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 6)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 6)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 6)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 6)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 6)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 6)),(index, x_net_bias_from_3, 6)), 0)}}}
    variable {bl x_net_node_4_7 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 7)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 7)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 7)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 7)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 7)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 7)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 7)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 7)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 7)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 7)),(index, x_net_bias_from_3, 7)), 0)}}}
    variable {bl x_net_node_4_8 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 8)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 8)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 8)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 8)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 8)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 8)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 8)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 8)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 8)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 8)),(index, x_net_bias_from_3, 8)), 0)}}}
    variable {bl x_net_node_4_9 DEFINE REAL assign{result{(max, (add, (mult, x_net_node_3_0, (index, x_net_weight_from_3_0, 9)),(mult, x_net_node_3_1, (index, x_net_weight_from_3_1, 9)),(mult, x_net_node_3_2, (index, x_net_weight_from_3_2, 9)),(mult, x_net_node_3_3, (index, x_net_weight_from_3_3, 9)),(mult, x_net_node_3_4, (index, x_net_weight_from_3_4, 9)),(mult, x_net_node_3_5, (index, x_net_weight_from_3_5, 9)),(mult, x_net_node_3_6, (index, x_net_weight_from_3_6, 9)),(mult, x_net_node_3_7, (index, x_net_weight_from_3_7, 9)),(mult, x_net_node_3_8, (index, x_net_weight_from_3_8, 9)),(mult, x_net_node_3_9, (index, x_net_weight_from_3_9, 9)),(index, x_net_bias_from_3, 9)), 0)}}}
    variable {bl x_net_node_5_0 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 0)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 0)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 0)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 0)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 0)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 0)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 0)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 0)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 0)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 0)),(index, x_net_bias_from_4, 0))}}}
    variable {bl x_net_node_5_1 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 1)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 1)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 1)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 1)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 1)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 1)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 1)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 1)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 1)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 1)),(index, x_net_bias_from_4, 1))}}}
    variable {bl x_net_node_5_2 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 2)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 2)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 2)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 2)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 2)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 2)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 2)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 2)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 2)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 2)),(index, x_net_bias_from_4, 2))}}}
    variable {bl x_net_node_5_3 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 3)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 3)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 3)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 3)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 3)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 3)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 3)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 3)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 3)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 3)),(index, x_net_bias_from_4, 3))}}}
    variable {bl x_net_node_5_4 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 4)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 4)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 4)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 4)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 4)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 4)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 4)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 4)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 4)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 4)),(index, x_net_bias_from_4, 4))}}}
    variable {bl x_net_node_5_5 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 5)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 5)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 5)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 5)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 5)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 5)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 5)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 5)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 5)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 5)),(index, x_net_bias_from_4, 5))}}}
    variable {bl x_net_node_5_6 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 6)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 6)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 6)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 6)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 6)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 6)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 6)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 6)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 6)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 6)),(index, x_net_bias_from_4, 6))}}}
    variable {bl x_net_node_5_7 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 7)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 7)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 7)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 7)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 7)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 7)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 7)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 7)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 7)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 7)),(index, x_net_bias_from_4, 7))}}}
    variable {bl x_net_node_5_8 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 8)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 8)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 8)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 8)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 8)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 8)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 8)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 8)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 8)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 8)),(index, x_net_bias_from_4, 8))}}}
    variable {bl x_net_node_5_9 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 9)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 9)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 9)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 9)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 9)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 9)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 9)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 9)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 9)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 9)),(index, x_net_bias_from_4, 9))}}}
    variable {bl x_net_node_5_10 DEFINE REAL assign{result{(add, (mult, x_net_node_4_0, (index, x_net_weight_from_4_0, 10)),(mult, x_net_node_4_1, (index, x_net_weight_from_4_1, 10)),(mult, x_net_node_4_2, (index, x_net_weight_from_4_2, 10)),(mult, x_net_node_4_3, (index, x_net_weight_from_4_3, 10)),(mult, x_net_node_4_4, (index, x_net_weight_from_4_4, 10)),(mult, x_net_node_4_5, (index, x_net_weight_from_4_5, 10)),(mult, x_net_node_4_6, (index, x_net_weight_from_4_6, 10)),(mult, x_net_node_4_7, (index, x_net_weight_from_4_7, 10)),(mult, x_net_node_4_8, (index, x_net_weight_from_4_8, 10)),(mult, x_net_node_4_9, (index, x_net_weight_from_4_9, 10)),(index, x_net_bias_from_4, 10))}}}
    variable {bl x_net_output_max DEFINE REAL assign{result{(max, x_net_node_5_10, (max, x_net_node_5_9, (max, x_net_node_5_8, (max, x_net_node_5_7, (max, x_net_node_5_6, (max, x_net_node_5_5, (max, x_net_node_5_4, (max, x_net_node_5_3, (max, x_net_node_5_2, (max, x_net_node_5_1, x_net_node_5_0))))))))))}}}
    variable {bl x_net_output DEFINE REAL assign{case{(eq, x_net_output_max, x_net_node_5_0)}result{0}case{(eq, x_net_output_max, x_net_node_5_1)}result{1}case{(eq, x_net_output_max, x_net_node_5_2)}result{2}case{(eq, x_net_output_max, x_net_node_5_3)}result{3}case{(eq, x_net_output_max, x_net_node_5_4)}result{4}case{(eq, x_net_output_max, x_net_node_5_5)}result{5}case{(eq, x_net_output_max, x_net_node_5_6)}result{6}case{(eq, x_net_output_max, x_net_node_5_7)}result{7}case{(eq, x_net_output_max, x_net_node_5_8)}result{8}case{(eq, x_net_output_max, x_net_node_5_9)}result{9}case{(eq, x_net_output_max, x_net_node_5_10)}result{10}result{-1}}}
    
    #{START OF Y_NET}#
    variable {bl y_net_1_1 DEFINE INT assign {result{ (max, dest_y, 0)}}}
    variable {bl y_net_1_2 DEFINE INT assign {result{ (max, (sub, dest_y, prev_dest_y), 0)}}}
    variable {bl y_net_1_3 DEFINE INT assign {result{ (max, (sub, prev_dest_y, dest_y), 0)}}}
    variable {bl y_net_1_4 DEFINE INT assign {result{ (max, dir, 0)}}}
    variable {bl y_net_1_5 DEFINE INT assign {result{ (max, (neg, dir), 0)}}}
    
    variable {bl y_net_2_1 DEFINE INT assign {result{ (max, y_net_1_1, 0)}}}
    variable {bl y_net_2_2 DEFINE INT assign {result{ (max, (add, (neg, y_net_1_2), (neg, y_net_1_3), 1), 0)}}}
    variable {bl y_net_2_3 DEFINE INT assign {result{ (max, y_net_1_4, 0)}}}
    variable {bl y_net_2_4 DEFINE INT assign {result{ (max, y_net_1_5, 0)}}}
    
    variable {bl y_net_3_1 DEFINE INT assign {result{ (max, y_net_2_1, 0)}}}
    variable {bl y_net_3_2 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_3, -1), 0)}}}
    variable {bl y_net_3_3 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_4, -1), 0)}}}
    
    variable {bl y_net_output DEFINE INT assign {result{ (max, (add, y_net_3_1, (mult, 'y_change', y_net_3_2), (mult, -1, 'y_change', y_net_3_3)), 0)}}}
} end_variables

environment_update {
    #{}#
    variable_statement {
	tar_x
	assign {
	    case { (eq, timer, 0) } end_case result {tar_x, (min, 'x_max', (add, tar_x, 1)), (max, 'x_min', (sub, tar_x, 1))} end_result
	    result { tar_x } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	tar_y
	assign {
	    case { (eq, timer, 0) } end_case result {tar_y, (min, 'x_max', (add, tar_y, 1)), (max, 'x_min', (sub, tar_y, 1))} end_result
	    result { tar_y } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	timer
	assign {
	    case {(eq, timer, 0) } result {'movement_cooldown'}
	    result {(max, 0, (sub, timer, 1))}
	}
    }
    #{}#
} end_environment_update

checks {
    check {
	not_at_destination
	arguments {}
	read_variables {cur_x, cur_y, dest_x, dest_y}
	condition { (not, (and, (eq, cur_x, dest_x), (eq, cur_y, dest_y)))}
    }
    check {
	y_too_small
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (lt, cur_y, dest_y)}
    }
    check {
	y_too_big
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (gt, cur_y, dest_y)}
    }
    check {
	x_too_small
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (lt, cur_x, dest_x)}
    }
    check {
	x_too_big
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (gt, cur_x, dest_x)}
    }
} end_checks

environment_checks {
    #{This currently only checks one tree}#
    environment_check {
	target_in_sight
	arguments{}
	read_variables {cur_x, cur_y} end_read_variables
	condition {
	    (and,
		(lte, (add, (abs, (sub, cur_x, tar_x)), (abs, (sub, cur_y, tar_y))), 'vision_range'),
		(or,
		    (gt, (add, (abs, (sub, (index, tree_x, 0), tar_x)), (abs, (sub, (index, tree_y, 0), tar_y))), 'tree_range'),
		    (and, (eq, (index, tree_x, 0), cur_x), (eq, (index, tree_y, 0), cur_y)),
		    (and, (eq, (index, tree_x, 0), tar_x), (eq, (index, tree_y, 0), tar_y)),
		    (and, (lt, (index, tree_x, 0), cur_x), (lt, (index, tree_x, 0), tar_x)),
		    (and, (lt, (index, tree_y, 0), cur_y), (lt, (index, tree_y, 0), tar_y)),
		    (and, (gt, (index, tree_x, 0), cur_x), (gt, (index, tree_x, 0), tar_x)),
		    (and, (gt, (index, tree_y, 0), cur_y), (gt, (index, tree_y, 0), tar_y))
		),
		(or,
		    (gt, (add, (abs, (sub, (index, tree_x, 1), tar_x)), (abs, (sub, (index, tree_y, 1), tar_y))), 'tree_range'),
		    (and, (eq, (index, tree_x, 1), cur_x), (eq, (index, tree_y, 1), cur_y)),
		    (and, (eq, (index, tree_x, 1), tar_x), (eq, (index, tree_y, 1), tar_y)),
		    (and, (lt, (index, tree_x, 1), cur_x), (lt, (index, tree_x, 1), tar_x)),
		    (and, (lt, (index, tree_y, 1), cur_y), (lt, (index, tree_y, 1), tar_y)),
		    (and, (gt, (index, tree_x, 1), cur_x), (gt, (index, tree_x, 1), tar_x)),
		    (and, (gt, (index, tree_y, 1), cur_y), (gt, (index, tree_y, 1), tar_y))
		)
	    )
	} end_condition
    } end_environment_check
    
} end_environment_checks

actions {
    #{ action nodes are defined here }#
    action {
	call_xy_net
	arguments{}
	local_variables {} end_local_variables
	read_variables {x_net_output, y_net_output} end_read_variables
	write_variables {dest_x, dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dest_x
		assign {
		    result {(max, 'x_min', (min, 'x_max', (floor, x_net_output)))}
		}
	    }
	    variable_statement {
		dest_y
		assign {
		    result {(max, 'y_min', (min, 'y_max', y_net_output))}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	move
	arguments{'delta_x' := INT, 'delta_y' := INT}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {cur_x, cur_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		cur_x assign {result {(max, 'x_min', (min, 'x_max', (add, 'delta_x', cur_x)))}}
	    }
	    variable_statement {
		cur_y assign {result {(max, 'y_min', (min, 'y_max', (add, 'delta_y', cur_y)))}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	send_victory
	arguments{}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {victory} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		victory assign {result {True}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	update_direction
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_y} end_read_variables
	write_variables {dir} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dir
		assign {
		    case { (eq, cur_y, 'y_max')}
		    result {-1}
		    case { (eq, cur_y, 'y_min')}
		    result {1}
		    result {dir}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    }
    action {
	update_previous_destination
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_x, cur_y} end_read_variables
	write_variables {prev_dest_x, prev_dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		prev_dest_x assign {result {cur_x}}
	    }
	    variable_statement {
		prev_dest_y assign {result {cur_y}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
} end_actions

sub_trees {
    sub_tree {
	DESTINATION_SUBTREE
	composite {
	    destination selector
	    children {
		not_at_destination {} #{Checks destination}#
		composite {
		    new_destination sequence
		    children {
			update_direction {} #{Updates the direction we're going in.}#
			call_xy_net {} #{Calls the neural networks}#
			update_previous_destination {} #{sets the current location to the previous destination.}#
		    }
		}
	    }
	}
    }
    sub_tree {
	MOVEMENT_SUBTREE
	composite {
	    destination_and_movement sequence
	    children {
		insert {DESTINATION_SUBTREE}
		composite {
		    movement selector
		    children {
			composite {
			    try_up sequence
			    children {
				y_too_small {}
				move {0, 1}
			    }
			}
			composite {
			    try_down sequence
			    children {
				y_too_big {}
				move {0, -1}
			    }
			}
			composite {
			    try_left sequence
			    children {
				x_too_big {}
				move {-1, 0}
			    }
			}
			composite {
			    try_right sequence
			    children {
				x_too_small {}
				move {1, 0}
			    }
			}
		    }
		}
	    }
	}
    }
} end_sub_trees

tree {
    composite {
	drone_control selector
	children {
	    composite {
		vision sequence
		children {
		    target_in_sight {}
		    send_victory {}
		    
		}
	    }
	    insert {MOVEMENT_SUBTREE}
	}
    }
} end_tree




tick_prerequisite { (not, victory) } end_tick_prerequisite
#{tick_prerequisite { True } end_tick_prerequisite}#
#{ if the condition is True, the tree ticks.
    If it is false, everything is done }#

specifications { #{ INVAR, LTL, and CTL specs go here }#
    CTLSPEC {(always_finally, victory -1)}
    #{CTLSPEC {(imply, (and, (eq, (index, tree_x 0, 0), 2), (eq, (index, tree_x 0, 1), 5), (eq, (index, tree_y 0, 0), 2), (eq, (index, tree_y 0, 1), 5)), (always_finally, victory -1))}}#
} end_specifications