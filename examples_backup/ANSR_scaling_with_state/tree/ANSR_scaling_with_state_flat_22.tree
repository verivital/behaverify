configuration {
    #{ Here you specify various configuration options, such as Hypersafety }#
}
enumerations {
    #{ here you specify the enumerations used in the model}#
}
constants {
    x_min := 0, y_min := 0, x_max := 10, y_max := 10, tree_count := 2, vision_range := 4, tree_range := 2, y_change := 2, movement_cooldown := 10
} end_constants

variables {
    variable {bl prev_dest_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl prev_dest_y VAR [y_min, y_max] assign {result {(add, y_min, 1)}}}
    variable {bl cur_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl cur_y VAR [y_min, y_max] assign {result {y_min}}}
    variable {bl dest_x VAR [x_min, x_max] assign {result {x_min}}}
    variable {bl dest_y VAR [y_min, y_max] assign {result {y_min}}}
    variable {bl dir VAR {-1, 1} assign {result {1}}}
    variable {bl victory VAR BOOLEAN assign {result {False}}}
    #{variable {env tree_locs array tree_count FROZENVAR [0, 960] range assign {result{range, 0, 960, True}}}}#
    #{
	variable {env tree_x array tree_count FROZENVAR [x_min, x_max] range assign {result{range, x_min, x_max, True}}}
	variable {env tree_y array tree_count FROZENVAR [y_min, y_max] range assign {result{range, y_min, y_max, True}}}
    }#
    variable {env tree_x array tree_count DEFINE INT default { assign{result{2}}} constant_index index_of{(max, 0, 1)} assign {result{5}}}
    variable {env tree_y array tree_count DEFINE INT default { assign{result{2}}} constant_index index_of{1} assign {result{5}}}
    variable {env tar_x VAR [x_min, x_max] assign {result {(loop, meh, [x_min, x_max] such_that True, meh)}}}
    variable {env tar_y VAR [y_min, y_max] assign {result {(loop, meh, [y_min, y_max] such_that True, meh)}}}
    variable {env timer VAR [0, movement_cooldown] assign {result{movement_cooldown}}}
    #{START OF X_NET}#
    variable {bl x_net_1_1 DEFINE INT assign {result{ (max, dest_x, 0)}}}
    variable {bl x_net_1_2 DEFINE INT assign {result{ (max, (sub, dest_x, prev_dest_x), 0)}}}
    variable {bl x_net_1_3 DEFINE INT assign {result{ (max, (sub, prev_dest_x, dest_x), 0)}}}
    variable {bl x_net_1_4 DEFINE INT assign {result{ (max, (sub, dest_x, (idiv, (add, x_min, x_max), 2)), 0)}}}
    variable {bl x_net_1_5 DEFINE INT assign {result{ (max, (sub, (idiv, (add, x_min, x_max), 2), dest_x), 0)}}}
    
    variable {bl x_net_2_1 DEFINE INT assign {result{ (max, x_net_1_1, 0)}}}
    variable {bl x_net_2_2 DEFINE INT assign {result{ (max, (add, (neg, x_net_1_2), (neg, x_net_1_3), 1), 0)}}}
    variable {bl x_net_2_3 DEFINE INT assign {result{ (max, (sub, 1, x_net_1_4), 0)}}}
    variable {bl x_net_2_4 DEFINE INT assign {result{ (max, (sub, 1, x_net_1_5), 0)}}}
    
    variable {bl x_net_3_1 DEFINE INT assign {result{ (max, (sub, x_net_2_1, (mult, x_net_2_2, x_max)), 0)}}}
    variable {bl x_net_3_2 DEFINE INT assign {result{ (max, (sub, 1, x_net_2_2), 0)}}}
    variable {bl x_net_3_3 DEFINE INT assign {result{ (max, x_net_2_3, 0)}}}
    variable {bl x_net_3_4 DEFINE INT assign {result{ (max, x_net_2_4, 0)}}}
    
    variable {bl x_net_4_1 DEFINE INT assign {result{ (max, x_net_3_1, 0)}}}
    variable {bl x_net_4_2 DEFINE INT assign {result{ (max, (sub, (mult, x_max, x_net_3_3), (mult, x_max, x_net_3_2)), 0)}}}
    variable {bl x_net_4_3 DEFINE INT assign {result{ (max, (sub, (mult, x_min, x_net_3_4), (mult, x_max, x_net_3_2)), 0)}}}
    
    variable {bl x_net_output DEFINE INT assign {result{ (max, (add, x_net_4_1, x_net_4_2, x_net_4_3), 0)}}}
    #{START OF Y_NET}#
    variable {bl y_net_1_1 DEFINE INT assign {result{ (max, dest_y, 0)}}}
    variable {bl y_net_1_2 DEFINE INT assign {result{ (max, (sub, dest_y, prev_dest_y), 0)}}}
    variable {bl y_net_1_3 DEFINE INT assign {result{ (max, (sub, prev_dest_y, dest_y), 0)}}}
    variable {bl y_net_1_4 DEFINE INT assign {result{ (max, dir, 0)}}}
    variable {bl y_net_1_5 DEFINE INT assign {result{ (max, (neg, dir), 0)}}}
    
    variable {bl y_net_2_1 DEFINE INT assign {result{ (max, y_net_1_1, 0)}}}
    variable {bl y_net_2_2 DEFINE INT assign {result{ (max, (add, (neg, y_net_1_2), (neg, y_net_1_3), 1), 0)}}}
    variable {bl y_net_2_3 DEFINE INT assign {result{ (max, y_net_1_4, 0)}}}
    variable {bl y_net_2_4 DEFINE INT assign {result{ (max, y_net_1_5, 0)}}}
    
    variable {bl y_net_3_1 DEFINE INT assign {result{ (max, y_net_2_1, 0)}}}
    variable {bl y_net_3_2 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_3, -1), 0)}}}
    variable {bl y_net_3_3 DEFINE INT assign {result{ (max, (add, y_net_2_2, y_net_2_4, -1), 0)}}}
    
    variable {bl y_net_output DEFINE INT assign {result{ (max, (add, y_net_3_1, (mult, y_change, y_net_3_2), (mult, -1, y_change, y_net_3_3)), 0)}}}
variable {bl fake_net_1_0 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_1 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_2 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_3 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, 5), -5))}}}
variable {bl fake_net_1_4 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, -1), 2))}}}
variable {bl fake_net_1_5 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_6 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, 1), -4))}}}
variable {bl fake_net_1_7 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_8 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_9 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_10 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_11 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_12 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 2, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_13 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -3, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_14 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_15 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_16 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_17 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_18 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 5, (mult, prev_dest_y, -4), 2))}}}
variable {bl fake_net_1_19 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_20 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_21 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_22 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 4, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_23 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_24 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_25 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, 4), 4))}}}
variable {bl fake_net_1_26 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 5, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_27 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_28 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_29 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_30 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -1, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_31 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, -3), -2))}}}
variable {bl fake_net_1_32 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_33 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_34 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -2), 1))}}}
variable {bl fake_net_1_35 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_36 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_37 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_38 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_39 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_40 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_41 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -5, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_42 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, -1), 2))}}}
variable {bl fake_net_1_43 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_44 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_45 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_46 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_47 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_48 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_49 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_50 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_51 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_52 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_53 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_54 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_55 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 5, (mult, prev_dest_y, -5), 4))}}}
variable {bl fake_net_1_56 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -3, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_57 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 4, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_58 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -1, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_59 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_60 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -3), 5))}}}
variable {bl fake_net_1_61 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_62 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_63 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_64 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -1, (mult, prev_dest_y, 2), -4))}}}
variable {bl fake_net_1_65 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_66 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_67 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_68 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_69 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -5, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_70 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_71 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, -5), -5))}}}
variable {bl fake_net_1_72 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_73 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_74 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 2, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_75 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_76 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_77 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_78 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_79 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, -1), -1))}}}
variable {bl fake_net_1_80 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -3, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_81 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_82 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -1, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_83 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_84 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 2, (mult, prev_dest_y, -2), -4))}}}
variable {bl fake_net_1_85 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, -5), 2))}}}
variable {bl fake_net_1_86 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_87 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 5, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_88 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_89 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_90 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, 5), -1))}}}
variable {bl fake_net_1_91 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, -1), -5))}}}
variable {bl fake_net_1_92 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -4, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_93 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_94 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -5), -5))}}}
variable {bl fake_net_1_95 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_96 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -3, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_97 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 1, (mult, prev_dest_y, 4), 4))}}}
variable {bl fake_net_1_98 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 4, (mult, prev_dest_y, -2), 1))}}}
variable {bl fake_net_1_99 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_100 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, -5), -3))}}}
variable {bl fake_net_1_101 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_102 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -1, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_103 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_104 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, -5), -3))}}}
variable {bl fake_net_1_105 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_106 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_107 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -1, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_108 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, -4), 1))}}}
variable {bl fake_net_1_109 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, 1), -3))}}}
variable {bl fake_net_1_110 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_111 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_112 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 1, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_113 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_114 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_115 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_116 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_117 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 4, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_118 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_119 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, -3), 4))}}}
variable {bl fake_net_1_120 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_121 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 1, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_122 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_123 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_124 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 2, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_125 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_126 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, -2), -1))}}}
variable {bl fake_net_1_127 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 1, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_128 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_129 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -1, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_130 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_131 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -4, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_132 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -4, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_133 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 3), 5))}}}
variable {bl fake_net_1_134 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_135 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, 2), -4))}}}
variable {bl fake_net_1_136 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_137 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_138 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_139 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -2, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_140 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, -5), 1))}}}
variable {bl fake_net_1_141 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_142 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_143 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, -2), 5))}}}
variable {bl fake_net_1_144 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_145 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_146 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_147 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_148 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, -4), -1))}}}
variable {bl fake_net_1_149 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_150 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 1, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_151 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -2, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_152 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_153 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_154 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_155 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_156 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_157 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 4, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_158 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_159 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_160 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -4, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_161 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, -1), -1))}}}
variable {bl fake_net_1_162 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 2, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_163 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -3, (mult, prev_dest_y, 4), -5))}}}
variable {bl fake_net_1_164 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, 3), -4))}}}
variable {bl fake_net_1_165 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_166 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 4, (mult, prev_dest_y, 5), 2))}}}
variable {bl fake_net_1_167 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 3, (mult, prev_dest_y, 3), -1))}}}
variable {bl fake_net_1_168 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_169 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_170 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_171 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, -4), 5))}}}
variable {bl fake_net_1_172 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -5, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_173 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_174 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_175 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_176 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_177 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, -5), 1))}}}
variable {bl fake_net_1_178 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_179 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, -5), -5))}}}
variable {bl fake_net_1_180 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_181 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_182 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_183 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 2, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_184 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 1), 0))}}}
variable {bl fake_net_1_185 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_186 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_187 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -1, (mult, prev_dest_y, 1), 3))}}}
variable {bl fake_net_1_188 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 1, (mult, prev_dest_y, 4), -5))}}}
variable {bl fake_net_1_189 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, -5), 5))}}}
variable {bl fake_net_1_190 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_191 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_192 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_193 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 2, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_194 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_195 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_196 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_197 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_198 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_199 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -4, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_200 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -3, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_201 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_202 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_203 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -1, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_204 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -1, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_205 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 4), -1))}}}
variable {bl fake_net_1_206 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_207 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_208 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_209 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_210 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 2), 5))}}}
variable {bl fake_net_1_211 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_212 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_213 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, -2), 3))}}}
variable {bl fake_net_1_214 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_215 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_216 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_217 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_218 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_219 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_220 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -1, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_221 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_222 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 1, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_223 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, -1), -1))}}}
variable {bl fake_net_1_224 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, -2), -1))}}}
variable {bl fake_net_1_225 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, -2), -4))}}}
variable {bl fake_net_1_226 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, 5), -1))}}}
variable {bl fake_net_1_227 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 4), 2))}}}
variable {bl fake_net_1_228 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 1, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_229 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_230 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, 5), -2))}}}
variable {bl fake_net_1_231 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_232 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_233 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 4, (mult, prev_dest_y, -3), -3))}}}
variable {bl fake_net_1_234 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_235 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_236 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_237 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 0, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_238 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 5), 3))}}}
variable {bl fake_net_1_239 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, 2), 4))}}}
variable {bl fake_net_1_240 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_241 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, 5), -5))}}}
variable {bl fake_net_1_242 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_243 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -2, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_244 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_245 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_246 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_247 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_248 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, 4), -3))}}}
variable {bl fake_net_1_249 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_250 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_251 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_252 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 5, (mult, prev_dest_y, 1), -5))}}}
variable {bl fake_net_1_253 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_254 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, 1), 0))}}}
variable {bl fake_net_1_255 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -1, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_256 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_257 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 4, (mult, prev_dest_y, -2), 3))}}}
variable {bl fake_net_1_258 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, 5), 0))}}}
variable {bl fake_net_1_259 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 5, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_260 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_261 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -1, (mult, prev_dest_y, -3), 5))}}}
variable {bl fake_net_1_262 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_263 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_264 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_265 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_266 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, 4), 2))}}}
variable {bl fake_net_1_267 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_268 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_269 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, -4), -2))}}}
variable {bl fake_net_1_270 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_271 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_272 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 3), -5))}}}
variable {bl fake_net_1_273 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 1), 2))}}}
variable {bl fake_net_1_274 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_275 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -2, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_276 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_277 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, -5), -5))}}}
variable {bl fake_net_1_278 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_279 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_280 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_281 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, 2), 1))}}}
variable {bl fake_net_1_282 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 1), 4))}}}
variable {bl fake_net_1_283 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 3, (mult, prev_dest_y, 5), 4))}}}
variable {bl fake_net_1_284 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 3, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_285 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -4, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_286 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -5, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_287 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 4, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_288 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_289 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_290 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_291 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 5, (mult, prev_dest_y, -2), -4))}}}
variable {bl fake_net_1_292 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_293 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_294 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -2, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_295 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_296 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_297 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 3), 0))}}}
variable {bl fake_net_1_298 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, 3), 3))}}}
variable {bl fake_net_1_299 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_300 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_301 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, -2), 4))}}}
variable {bl fake_net_1_302 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, 3), 2))}}}
variable {bl fake_net_1_303 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, 5), -3))}}}
variable {bl fake_net_1_304 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_305 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_306 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_307 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_308 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 3, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_309 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 4, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_310 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, 4), -2))}}}
variable {bl fake_net_1_311 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 3, (mult, prev_dest_y, -4), 4))}}}
variable {bl fake_net_1_312 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_313 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_314 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, -3), 4))}}}
variable {bl fake_net_1_315 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_316 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -5), 1))}}}
variable {bl fake_net_1_317 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, -4), 4))}}}
variable {bl fake_net_1_318 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -3, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_319 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_320 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, -2), -2))}}}
variable {bl fake_net_1_321 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -1, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_322 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_323 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -1, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_324 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 5), 4))}}}
variable {bl fake_net_1_325 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_326 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, -3), 1))}}}
variable {bl fake_net_1_327 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_328 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, -2), 5))}}}
variable {bl fake_net_1_329 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_330 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -1, (mult, prev_dest_y, 2), -2))}}}
variable {bl fake_net_1_331 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_332 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, 3), 5))}}}
variable {bl fake_net_1_333 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -3, (mult, prev_dest_y, 4), 2))}}}
variable {bl fake_net_1_334 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 3), 5))}}}
variable {bl fake_net_1_335 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_336 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), 4))}}}
variable {bl fake_net_1_337 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_338 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 0), 1))}}}
variable {bl fake_net_1_339 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -4, (mult, prev_dest_y, 3), -3))}}}
variable {bl fake_net_1_340 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_341 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_342 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, 2), 1))}}}
variable {bl fake_net_1_343 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 2, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_344 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -2, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_345 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_346 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -1), -3))}}}
variable {bl fake_net_1_347 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_348 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, 2), 4))}}}
variable {bl fake_net_1_349 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -5, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_350 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -1, (mult, prev_dest_y, -1), -2))}}}
variable {bl fake_net_1_351 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, 5), -2))}}}
variable {bl fake_net_1_352 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_353 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_354 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_355 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -4, (mult, prev_dest_y, -3), -3))}}}
variable {bl fake_net_1_356 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, -3), 2))}}}
variable {bl fake_net_1_357 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -2, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_358 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), -4, (mult, prev_dest_y, -1), 1))}}}
variable {bl fake_net_1_359 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 2, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_360 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 3, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_361 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -1, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_362 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 1), 4))}}}
variable {bl fake_net_1_363 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 1, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_364 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 1, (mult, prev_dest_y, -5), 2))}}}
variable {bl fake_net_1_365 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 4, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_366 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 2, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_367 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 1, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_368 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -3), -5))}}}
variable {bl fake_net_1_369 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 3, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_370 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 1, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_371 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 2), -4))}}}
variable {bl fake_net_1_372 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_373 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 2, (mult, prev_dest_y, 2), 0))}}}
variable {bl fake_net_1_374 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -4, (mult, prev_dest_y, 0), -5))}}}
variable {bl fake_net_1_375 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -3, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_376 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_377 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_378 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, -5), 0))}}}
variable {bl fake_net_1_379 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -5, (mult, prev_dest_y, -5), 2))}}}
variable {bl fake_net_1_380 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 1, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_381 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 1, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_382 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -3, (mult, prev_dest_y, 1), 5))}}}
variable {bl fake_net_1_383 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, -5), 4))}}}
variable {bl fake_net_1_384 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, -3), -3))}}}
variable {bl fake_net_1_385 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 2), 2))}}}
variable {bl fake_net_1_386 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, 1), -1))}}}
variable {bl fake_net_1_387 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_388 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 5, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_389 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, 5), -4))}}}
variable {bl fake_net_1_390 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, -4), 0))}}}
variable {bl fake_net_1_391 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, -1), -5))}}}
variable {bl fake_net_1_392 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, -2), -5))}}}
variable {bl fake_net_1_393 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 4), 3))}}}
variable {bl fake_net_1_394 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), -1, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_395 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_396 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_397 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 2, (mult, prev_dest_y, -1), -5))}}}
variable {bl fake_net_1_398 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, -5), -4))}}}
variable {bl fake_net_1_399 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 1, (mult, prev_dest_y, 1), 2))}}}
variable {bl fake_net_1_400 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, -3), -3))}}}
variable {bl fake_net_1_401 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 3), 5))}}}
variable {bl fake_net_1_402 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -2, (mult, prev_dest_y, 2), -4))}}}
variable {bl fake_net_1_403 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 3, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_404 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, -3), -2))}}}
variable {bl fake_net_1_405 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 0, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_406 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -2, (mult, prev_dest_y, -4), 4))}}}
variable {bl fake_net_1_407 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -4, (mult, prev_dest_y, -5), -2))}}}
variable {bl fake_net_1_408 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_409 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, -5), 3))}}}
variable {bl fake_net_1_410 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 2, (mult, prev_dest_y, -2), -1))}}}
variable {bl fake_net_1_411 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_412 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -5, (mult, prev_dest_y, 4), -5))}}}
variable {bl fake_net_1_413 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -2, (mult, prev_dest_y, -1), 5))}}}
variable {bl fake_net_1_414 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 4, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_415 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 1, (mult, prev_dest_y, 1), -2))}}}
variable {bl fake_net_1_416 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -4, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_417 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_418 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -5, (mult, prev_dest_y, 2), -1))}}}
variable {bl fake_net_1_419 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 5, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_420 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 3, (mult, prev_dest_y, 5), 1))}}}
variable {bl fake_net_1_421 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_422 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_423 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 5, (mult, prev_dest_y, 5), -2))}}}
variable {bl fake_net_1_424 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -5, (mult, prev_dest_y, -4), -4))}}}
variable {bl fake_net_1_425 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 4, (mult, prev_dest_y, 3), 4))}}}
variable {bl fake_net_1_426 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -2, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_1_427 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, 5), 5))}}}
variable {bl fake_net_1_428 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_429 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -4, (mult, prev_dest_y, 1), 0))}}}
variable {bl fake_net_1_430 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, -2), 2))}}}
variable {bl fake_net_1_431 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 1, (mult, prev_dest_y, 3), 1))}}}
variable {bl fake_net_1_432 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 0, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_433 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -3, (mult, prev_dest_y, 0), 5))}}}
variable {bl fake_net_1_434 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), -5, (mult, prev_dest_y, 4), -4))}}}
variable {bl fake_net_1_435 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_436 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 5, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_437 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, -3), 5))}}}
variable {bl fake_net_1_438 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 5), -5))}}}
variable {bl fake_net_1_439 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -3), 4))}}}
variable {bl fake_net_1_440 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, 1), 1))}}}
variable {bl fake_net_1_441 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 0, (mult, prev_dest_y, -3), -2))}}}
variable {bl fake_net_1_442 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 5, (mult, prev_dest_y, -2), 4))}}}
variable {bl fake_net_1_443 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 3), 4))}}}
variable {bl fake_net_1_444 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 4, (mult, prev_dest_y, -4), -5))}}}
variable {bl fake_net_1_445 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), -2, (mult, prev_dest_y, 0), 0))}}}
variable {bl fake_net_1_446 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 1, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_447 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 2), 3))}}}
variable {bl fake_net_1_448 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), 4, (mult, prev_dest_y, -5), -1))}}}
variable {bl fake_net_1_449 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 5), -5))}}}
variable {bl fake_net_1_450 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -5, (mult, prev_dest_y, 0), -3))}}}
variable {bl fake_net_1_451 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 0, (mult, prev_dest_y, 0), 3))}}}
variable {bl fake_net_1_452 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -1), 4, (mult, prev_dest_y, 2), -5))}}}
variable {bl fake_net_1_453 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -4, (mult, prev_dest_y, -1), 0))}}}
variable {bl fake_net_1_454 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 4, (mult, prev_dest_y, -3), -4))}}}
variable {bl fake_net_1_455 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -5, (mult, prev_dest_y, -5), -5))}}}
variable {bl fake_net_1_456 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 1, (mult, prev_dest_y, -2), 0))}}}
variable {bl fake_net_1_457 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), -4, (mult, prev_dest_y, 2), 1))}}}
variable {bl fake_net_1_458 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -1, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_459 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -1, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_460 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 3, (mult, prev_dest_y, 4), 4))}}}
variable {bl fake_net_1_461 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -4), 0, (mult, prev_dest_y, -5), -3))}}}
variable {bl fake_net_1_462 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, -1), 3))}}}
variable {bl fake_net_1_463 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), 0, (mult, prev_dest_y, 4), 5))}}}
variable {bl fake_net_1_464 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), 5, (mult, prev_dest_y, -3), -1))}}}
variable {bl fake_net_1_465 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 5, (mult, prev_dest_y, -2), -4))}}}
variable {bl fake_net_1_466 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -3, (mult, prev_dest_y, 4), 0))}}}
variable {bl fake_net_1_467 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 0, (mult, prev_dest_y, 0), -1))}}}
variable {bl fake_net_1_468 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, -3), 3))}}}
variable {bl fake_net_1_469 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -3), 3, (mult, prev_dest_y, 5), -1))}}}
variable {bl fake_net_1_470 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -2), 0, (mult, prev_dest_y, 0), -2))}}}
variable {bl fake_net_1_471 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -1, (mult, prev_dest_y, -3), 4))}}}
variable {bl fake_net_1_472 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), 2, (mult, prev_dest_y, -4), -3))}}}
variable {bl fake_net_1_473 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, -5), -3, (mult, prev_dest_y, 4), 3))}}}
variable {bl fake_net_1_474 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 2), -4))}}}
variable {bl fake_net_1_475 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -3, (mult, prev_dest_y, -4), 3))}}}
variable {bl fake_net_1_476 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), -3, (mult, prev_dest_y, 1), 0))}}}
variable {bl fake_net_1_477 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 2), -4, (mult, prev_dest_y, 3), -1))}}}
variable {bl fake_net_1_478 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 3), -3, (mult, prev_dest_y, -3), 0))}}}
variable {bl fake_net_1_479 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), 2, (mult, prev_dest_y, -2), -3))}}}
variable {bl fake_net_1_480 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 0), -2, (mult, prev_dest_y, -1), 4))}}}
variable {bl fake_net_1_481 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 5), -1, (mult, prev_dest_y, 0), 2))}}}
variable {bl fake_net_1_482 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 1), 0, (mult, prev_dest_y, 3), -2))}}}
variable {bl fake_net_1_483 DEFINE INT assign {result{(max, 0, (add, (mult, prev_dest_x, 4), 0, (mult, prev_dest_y, 0), -4))}}}
variable {bl fake_net_output DEFINE INT assign {result{(max, 0, (add, (mult, fake_net_1_0, -3), 0, (mult, fake_net_1_1, 4), -4, (mult, fake_net_1_2, 1), 0, (mult, fake_net_1_3, -4), 0, (mult, fake_net_1_4, -2), -2, (mult, fake_net_1_5, 0), 0, (mult, fake_net_1_6, -5), 0, (mult, fake_net_1_7, 2), 0, (mult, fake_net_1_8, -4), 1, (mult, fake_net_1_9, 3), 3, (mult, fake_net_1_10, 0), 4, (mult, fake_net_1_11, -3), 1, (mult, fake_net_1_12, 0), -5, (mult, fake_net_1_13, 0), 4, (mult, fake_net_1_14, 2), 0, (mult, fake_net_1_15, 3), 5, (mult, fake_net_1_16, -1), 1, (mult, fake_net_1_17, 4), 0, (mult, fake_net_1_18, -2), -4, (mult, fake_net_1_19, 0), -3, (mult, fake_net_1_20, -2), -1, (mult, fake_net_1_21, -4), 1, (mult, fake_net_1_22, -4), 4, (mult, fake_net_1_23, 4), 1, (mult, fake_net_1_24, -2), 1, (mult, fake_net_1_25, 4), 3, (mult, fake_net_1_26, 4), -2, (mult, fake_net_1_27, -1), -5, (mult, fake_net_1_28, 4), -4, (mult, fake_net_1_29, 1), -3, (mult, fake_net_1_30, -3), -3, (mult, fake_net_1_31, 0), -5, (mult, fake_net_1_32, 1), 3, (mult, fake_net_1_33, -5), 0, (mult, fake_net_1_34, 5), 0, (mult, fake_net_1_35, -1), 2, (mult, fake_net_1_36, -1), -2, (mult, fake_net_1_37, 3), -3, (mult, fake_net_1_38, 3), -1, (mult, fake_net_1_39, 3), 0, (mult, fake_net_1_40, -2), -5, (mult, fake_net_1_41, -5), 4, (mult, fake_net_1_42, 0), 0, (mult, fake_net_1_43, 5), -5, (mult, fake_net_1_44, 0), 0, (mult, fake_net_1_45, 3), 0, (mult, fake_net_1_46, 3), 3, (mult, fake_net_1_47, 4), -2, (mult, fake_net_1_48, 0), -1, (mult, fake_net_1_49, 2), -1, (mult, fake_net_1_50, 5), 5, (mult, fake_net_1_51, 1), -5, (mult, fake_net_1_52, 1), -2, (mult, fake_net_1_53, -5), -3, (mult, fake_net_1_54, 2), -2, (mult, fake_net_1_55, -1), -4, (mult, fake_net_1_56, -4), 4, (mult, fake_net_1_57, 2), 3, (mult, fake_net_1_58, 1), 2, (mult, fake_net_1_59, -4), 4, (mult, fake_net_1_60, 2), 2, (mult, fake_net_1_61, 4), 4, (mult, fake_net_1_62, 2), 0, (mult, fake_net_1_63, -2), -4, (mult, fake_net_1_64, 2), -4, (mult, fake_net_1_65, 5), 2, (mult, fake_net_1_66, -5), 4, (mult, fake_net_1_67, 5), -3, (mult, fake_net_1_68, 3), 2, (mult, fake_net_1_69, -1), -5, (mult, fake_net_1_70, -5), 0, (mult, fake_net_1_71, 0), 5, (mult, fake_net_1_72, 4), 5, (mult, fake_net_1_73, -2), 3, (mult, fake_net_1_74, 4), 0, (mult, fake_net_1_75, 2), 4, (mult, fake_net_1_76, 5), 0, (mult, fake_net_1_77, -3), -5, (mult, fake_net_1_78, -2), 5, (mult, fake_net_1_79, -4), 0, (mult, fake_net_1_80, -5), -1, (mult, fake_net_1_81, -1), 2, (mult, fake_net_1_82, 4), -4, (mult, fake_net_1_83, 1), -1, (mult, fake_net_1_84, -3), 2, (mult, fake_net_1_85, 5), -1, (mult, fake_net_1_86, -1), -4, (mult, fake_net_1_87, -3), 4, (mult, fake_net_1_88, 3), -1, (mult, fake_net_1_89, 3), 2, (mult, fake_net_1_90, 4), 0, (mult, fake_net_1_91, 5), 0, (mult, fake_net_1_92, 0), 0, (mult, fake_net_1_93, 5), -3, (mult, fake_net_1_94, -1), -4, (mult, fake_net_1_95, -1), 0, (mult, fake_net_1_96, -5), 1, (mult, fake_net_1_97, 1), -1, (mult, fake_net_1_98, 0), 3, (mult, fake_net_1_99, 5), 2, (mult, fake_net_1_100, 1), 2, (mult, fake_net_1_101, 0), -5, (mult, fake_net_1_102, -3), -2, (mult, fake_net_1_103, 0), 0, (mult, fake_net_1_104, 5), 2, (mult, fake_net_1_105, -5), -3, (mult, fake_net_1_106, 5), 5, (mult, fake_net_1_107, 0), 0, (mult, fake_net_1_108, 2), 0, (mult, fake_net_1_109, -5), -4, (mult, fake_net_1_110, -3), 0, (mult, fake_net_1_111, -1), -4, (mult, fake_net_1_112, -4), -1, (mult, fake_net_1_113, 3), 2, (mult, fake_net_1_114, -4), 1, (mult, fake_net_1_115, 2), 0, (mult, fake_net_1_116, 1), -2, (mult, fake_net_1_117, 4), 0, (mult, fake_net_1_118, 5), -1, (mult, fake_net_1_119, -5), -5, (mult, fake_net_1_120, -1), 0, (mult, fake_net_1_121, 2), 4, (mult, fake_net_1_122, 2), 1, (mult, fake_net_1_123, -5), 0, (mult, fake_net_1_124, 5), -2, (mult, fake_net_1_125, 0), 5, (mult, fake_net_1_126, 0), -4, (mult, fake_net_1_127, 2), 0, (mult, fake_net_1_128, -4), -2, (mult, fake_net_1_129, 5), 2, (mult, fake_net_1_130, 1), -2, (mult, fake_net_1_131, 0), 1, (mult, fake_net_1_132, 5), 1, (mult, fake_net_1_133, 5), 2, (mult, fake_net_1_134, 4), -2, (mult, fake_net_1_135, -1), -5, (mult, fake_net_1_136, -5), -2, (mult, fake_net_1_137, 2), 2, (mult, fake_net_1_138, 3), -3, (mult, fake_net_1_139, 0), -1, (mult, fake_net_1_140, 4), -3, (mult, fake_net_1_141, -1), -4, (mult, fake_net_1_142, 0), 4, (mult, fake_net_1_143, -5), -4, (mult, fake_net_1_144, 3), 3, (mult, fake_net_1_145, 0), -5, (mult, fake_net_1_146, -5), 4, (mult, fake_net_1_147, -3), 2, (mult, fake_net_1_148, -5), -2, (mult, fake_net_1_149, -2), 4, (mult, fake_net_1_150, -3), -5, (mult, fake_net_1_151, 2), -5, (mult, fake_net_1_152, -3), 2, (mult, fake_net_1_153, -1), 3, (mult, fake_net_1_154, 0), 0, (mult, fake_net_1_155, -1), -3, (mult, fake_net_1_156, 0), 4, (mult, fake_net_1_157, -3), 0, (mult, fake_net_1_158, 4), 1, (mult, fake_net_1_159, 5), -2, (mult, fake_net_1_160, 2), -2, (mult, fake_net_1_161, -2), 1, (mult, fake_net_1_162, 3), -3, (mult, fake_net_1_163, 3), -3, (mult, fake_net_1_164, -2), 5, (mult, fake_net_1_165, 4), -4, (mult, fake_net_1_166, -5), -3, (mult, fake_net_1_167, -5), 2, (mult, fake_net_1_168, 2), 2, (mult, fake_net_1_169, 5), -3, (mult, fake_net_1_170, -3), 4, (mult, fake_net_1_171, 3), -1, (mult, fake_net_1_172, 0), 4, (mult, fake_net_1_173, -4), 2, (mult, fake_net_1_174, -1), -4, (mult, fake_net_1_175, 0), 0, (mult, fake_net_1_176, -5), -1, (mult, fake_net_1_177, -1), 0, (mult, fake_net_1_178, 1), 1, (mult, fake_net_1_179, -5), -5, (mult, fake_net_1_180, -1), -2, (mult, fake_net_1_181, 0), -1, (mult, fake_net_1_182, -4), -4, (mult, fake_net_1_183, 1), 1, (mult, fake_net_1_184, 0), -4, (mult, fake_net_1_185, 0), 1, (mult, fake_net_1_186, 0), -4, (mult, fake_net_1_187, 5), -2, (mult, fake_net_1_188, 2), -4, (mult, fake_net_1_189, 0), -2, (mult, fake_net_1_190, -1), 4, (mult, fake_net_1_191, -5), -1, (mult, fake_net_1_192, 0), -3, (mult, fake_net_1_193, 3), -4, (mult, fake_net_1_194, -4), 4, (mult, fake_net_1_195, 4), 4, (mult, fake_net_1_196, -2), 4, (mult, fake_net_1_197, -3), -2, (mult, fake_net_1_198, 2), 5, (mult, fake_net_1_199, 5), 0, (mult, fake_net_1_200, -4), 1, (mult, fake_net_1_201, 4), -1, (mult, fake_net_1_202, -5), 0, (mult, fake_net_1_203, 2), 1, (mult, fake_net_1_204, 2), -5, (mult, fake_net_1_205, 5), 3, (mult, fake_net_1_206, 4), 4, (mult, fake_net_1_207, -4), -3, (mult, fake_net_1_208, -5), -5, (mult, fake_net_1_209, 0), -4, (mult, fake_net_1_210, -4), 4, (mult, fake_net_1_211, 1), 0, (mult, fake_net_1_212, -3), -2, (mult, fake_net_1_213, -2), 2, (mult, fake_net_1_214, -2), 0, (mult, fake_net_1_215, 0), 0, (mult, fake_net_1_216, 5), -3, (mult, fake_net_1_217, 4), -1, (mult, fake_net_1_218, -5), 3, (mult, fake_net_1_219, 3), 0, (mult, fake_net_1_220, 5), -1, (mult, fake_net_1_221, 0), 5, (mult, fake_net_1_222, -4), -1, (mult, fake_net_1_223, 2), 3, (mult, fake_net_1_224, 0), 1, (mult, fake_net_1_225, -5), -2, (mult, fake_net_1_226, 0), 2, (mult, fake_net_1_227, -4), -4, (mult, fake_net_1_228, 2), -2, (mult, fake_net_1_229, -3), -5, (mult, fake_net_1_230, 2), 0, (mult, fake_net_1_231, 5), 4, (mult, fake_net_1_232, 0), -1, (mult, fake_net_1_233, 4), -5, (mult, fake_net_1_234, 0), 0, (mult, fake_net_1_235, 0), 5, (mult, fake_net_1_236, 0), -1, (mult, fake_net_1_237, 2), 2, (mult, fake_net_1_238, 4), -3, (mult, fake_net_1_239, 5), 2, (mult, fake_net_1_240, -2), 0, (mult, fake_net_1_241, 5), -1, (mult, fake_net_1_242, -5), 5, (mult, fake_net_1_243, 4), 5, (mult, fake_net_1_244, 3), 4, (mult, fake_net_1_245, 5), -1, (mult, fake_net_1_246, 0), 4, (mult, fake_net_1_247, 2), -2, (mult, fake_net_1_248, 0), -5, (mult, fake_net_1_249, -3), 0, (mult, fake_net_1_250, -4), -3, (mult, fake_net_1_251, 0), -2, (mult, fake_net_1_252, 1), 0, (mult, fake_net_1_253, 5), -3, (mult, fake_net_1_254, -5), -3, (mult, fake_net_1_255, -1), 1, (mult, fake_net_1_256, -4), 0, (mult, fake_net_1_257, 1), -2, (mult, fake_net_1_258, 0), 4, (mult, fake_net_1_259, 3), 3, (mult, fake_net_1_260, 5), 3, (mult, fake_net_1_261, 0), 5, (mult, fake_net_1_262, -3), 0, (mult, fake_net_1_263, 4), 5, (mult, fake_net_1_264, 2), -5, (mult, fake_net_1_265, 1), -3, (mult, fake_net_1_266, 0), 1, (mult, fake_net_1_267, -2), 1, (mult, fake_net_1_268, 4), 3, (mult, fake_net_1_269, 1), -1, (mult, fake_net_1_270, 5), 2, (mult, fake_net_1_271, 2), 0, (mult, fake_net_1_272, 0), 0, (mult, fake_net_1_273, -3), -5, (mult, fake_net_1_274, 5), 5, (mult, fake_net_1_275, -5), 0, (mult, fake_net_1_276, 4), 4, (mult, fake_net_1_277, -2), -5, (mult, fake_net_1_278, 3), 5, (mult, fake_net_1_279, 0), -5, (mult, fake_net_1_280, -4), 3, (mult, fake_net_1_281, 5), 0, (mult, fake_net_1_282, -1), 3, (mult, fake_net_1_283, 3), 4, (mult, fake_net_1_284, -5), 2, (mult, fake_net_1_285, 4), 0, (mult, fake_net_1_286, -1), 2, (mult, fake_net_1_287, -3), 5, (mult, fake_net_1_288, -3), 2, (mult, fake_net_1_289, 5), -1, (mult, fake_net_1_290, -3), 2, (mult, fake_net_1_291, -1), -5, (mult, fake_net_1_292, 0), 0, (mult, fake_net_1_293, 0), -1, (mult, fake_net_1_294, -2), 2, (mult, fake_net_1_295, 0), -2, (mult, fake_net_1_296, -4), 0, (mult, fake_net_1_297, -5), 2, (mult, fake_net_1_298, -4), 4, (mult, fake_net_1_299, 2), -3, (mult, fake_net_1_300, -3), 4, (mult, fake_net_1_301, 0), 2, (mult, fake_net_1_302, 0), 5, (mult, fake_net_1_303, -2), 2, (mult, fake_net_1_304, -2), 4, (mult, fake_net_1_305, 2), -5, (mult, fake_net_1_306, 5), 0, (mult, fake_net_1_307, -5), -1, (mult, fake_net_1_308, 5), 4, (mult, fake_net_1_309, 2), -4, (mult, fake_net_1_310, 2), 0, (mult, fake_net_1_311, -1), 0, (mult, fake_net_1_312, -3), -1, (mult, fake_net_1_313, 4), 0, (mult, fake_net_1_314, -1), 0, (mult, fake_net_1_315, 0), 1, (mult, fake_net_1_316, -5), 5, (mult, fake_net_1_317, 0), -1, (mult, fake_net_1_318, 2), -2, (mult, fake_net_1_319, 0), -3, (mult, fake_net_1_320, 0), -1, (mult, fake_net_1_321, -5), 5, (mult, fake_net_1_322, -4), 1, (mult, fake_net_1_323, -4), 1, (mult, fake_net_1_324, -2), 2, (mult, fake_net_1_325, -3), 0, (mult, fake_net_1_326, 5), 5, (mult, fake_net_1_327, -4), 0, (mult, fake_net_1_328, -5), -1, (mult, fake_net_1_329, -2), 4, (mult, fake_net_1_330, -1), 2, (mult, fake_net_1_331, 0), 2, (mult, fake_net_1_332, 1), 4, (mult, fake_net_1_333, -3), 1, (mult, fake_net_1_334, 3), -2, (mult, fake_net_1_335, -1), -2, (mult, fake_net_1_336, 1), -3, (mult, fake_net_1_337, 2), -1, (mult, fake_net_1_338, 0), -3, (mult, fake_net_1_339, 4), 3, (mult, fake_net_1_340, 3), 3, (mult, fake_net_1_341, 0), -4, (mult, fake_net_1_342, -3), 0, (mult, fake_net_1_343, 4), -1, (mult, fake_net_1_344, -4), 3, (mult, fake_net_1_345, -3), 0, (mult, fake_net_1_346, 0), -3, (mult, fake_net_1_347, 3), 2, (mult, fake_net_1_348, -3), 5, (mult, fake_net_1_349, -3), -1, (mult, fake_net_1_350, 5), -3, (mult, fake_net_1_351, -1), -2, (mult, fake_net_1_352, 0), -5, (mult, fake_net_1_353, 2), 2, (mult, fake_net_1_354, -3), -1, (mult, fake_net_1_355, 0), 0, (mult, fake_net_1_356, 4), 0, (mult, fake_net_1_357, 1), 3, (mult, fake_net_1_358, -3), 5, (mult, fake_net_1_359, 2), -1, (mult, fake_net_1_360, 0), 0, (mult, fake_net_1_361, -4), 4, (mult, fake_net_1_362, -3), 2, (mult, fake_net_1_363, -2), 5, (mult, fake_net_1_364, 0), -1, (mult, fake_net_1_365, -5), -3, (mult, fake_net_1_366, 5), 2, (mult, fake_net_1_367, -5), 1, (mult, fake_net_1_368, 5), 3, (mult, fake_net_1_369, 1), 3, (mult, fake_net_1_370, 0), -4, (mult, fake_net_1_371, 0), -3, (mult, fake_net_1_372, 4), 0, (mult, fake_net_1_373, -4), 3, (mult, fake_net_1_374, 5), 0, (mult, fake_net_1_375, -2), 3, (mult, fake_net_1_376, -1), -3, (mult, fake_net_1_377, -4), -5, (mult, fake_net_1_378, 5), -3, (mult, fake_net_1_379, 1), 5, (mult, fake_net_1_380, 0), -2, (mult, fake_net_1_381, -1), 1, (mult, fake_net_1_382, 3), -4, (mult, fake_net_1_383, 3), 4, (mult, fake_net_1_384, 4), 4, (mult, fake_net_1_385, -1), 0, (mult, fake_net_1_386, 4), -1, (mult, fake_net_1_387, -2), -1, (mult, fake_net_1_388, 4), -4, (mult, fake_net_1_389, -2), -5, (mult, fake_net_1_390, 5), -5, (mult, fake_net_1_391, 3), -2, (mult, fake_net_1_392, -4), -3, (mult, fake_net_1_393, 2), -1, (mult, fake_net_1_394, 1), 5, (mult, fake_net_1_395, -4), -2, (mult, fake_net_1_396, -4), 1, (mult, fake_net_1_397, 2), -2, (mult, fake_net_1_398, 2), 0, (mult, fake_net_1_399, 3), 4, (mult, fake_net_1_400, -4), -2, (mult, fake_net_1_401, -3), -4, (mult, fake_net_1_402, 5), -4, (mult, fake_net_1_403, -3), -1, (mult, fake_net_1_404, 3), 1, (mult, fake_net_1_405, 5), -2, (mult, fake_net_1_406, 4), 0, (mult, fake_net_1_407, -5), 0, (mult, fake_net_1_408, 2), 5, (mult, fake_net_1_409, 4), 0, (mult, fake_net_1_410, -3), -5, (mult, fake_net_1_411, 4), -4, (mult, fake_net_1_412, -1), 3, (mult, fake_net_1_413, -4), 3, (mult, fake_net_1_414, -5), 0, (mult, fake_net_1_415, 4), 1, (mult, fake_net_1_416, -2), 5, (mult, fake_net_1_417, 0), 0, (mult, fake_net_1_418, -3), 1, (mult, fake_net_1_419, 3), 4, (mult, fake_net_1_420, -3), -4, (mult, fake_net_1_421, 2), 0, (mult, fake_net_1_422, -3), -5, (mult, fake_net_1_423, -4), -3, (mult, fake_net_1_424, 3), 4, (mult, fake_net_1_425, 4), 0, (mult, fake_net_1_426, -5), 4, (mult, fake_net_1_427, 1), -5, (mult, fake_net_1_428, -2), 0, (mult, fake_net_1_429, 0), -3, (mult, fake_net_1_430, 1), -1, (mult, fake_net_1_431, -1), 0, (mult, fake_net_1_432, 3), 0, (mult, fake_net_1_433, 4), 4, (mult, fake_net_1_434, 1), -4, (mult, fake_net_1_435, 0), 3, (mult, fake_net_1_436, 4), 0, (mult, fake_net_1_437, -5), -3, (mult, fake_net_1_438, -3), 5, (mult, fake_net_1_439, 0), -1, (mult, fake_net_1_440, 3), -4, (mult, fake_net_1_441, 5), 4, (mult, fake_net_1_442, 3), 5, (mult, fake_net_1_443, -5), 0, (mult, fake_net_1_444, 5), -4, (mult, fake_net_1_445, 5), -4, (mult, fake_net_1_446, -1), -3, (mult, fake_net_1_447, -5), -2, (mult, fake_net_1_448, -4), 0, (mult, fake_net_1_449, 3), -5, (mult, fake_net_1_450, -5), -3, (mult, fake_net_1_451, -5), -4, (mult, fake_net_1_452, 2), 4, (mult, fake_net_1_453, 4), -4, (mult, fake_net_1_454, 0), 2, (mult, fake_net_1_455, 1), -3, (mult, fake_net_1_456, 3), -4, (mult, fake_net_1_457, -2), 1, (mult, fake_net_1_458, 4), -3, (mult, fake_net_1_459, 3), -4, (mult, fake_net_1_460, 1), 2, (mult, fake_net_1_461, -5), 1, (mult, fake_net_1_462, 1), 4, (mult, fake_net_1_463, 0), -2, (mult, fake_net_1_464, -1), 3, (mult, fake_net_1_465, 1), -1, (mult, fake_net_1_466, -4), 4, (mult, fake_net_1_467, 0), 4, (mult, fake_net_1_468, -4), -1, (mult, fake_net_1_469, -3), -2, (mult, fake_net_1_470, -3), 0, (mult, fake_net_1_471, -5), -4, (mult, fake_net_1_472, -2), -5, (mult, fake_net_1_473, -2), -1, (mult, fake_net_1_474, -5), 2, (mult, fake_net_1_475, -5), 2, (mult, fake_net_1_476, -1), -3, (mult, fake_net_1_477, -5), 4, (mult, fake_net_1_478, -4), 1, (mult, fake_net_1_479, -2), 2, (mult, fake_net_1_480, 2), 1, (mult, fake_net_1_481, -3), 1, (mult, fake_net_1_482, 5), 5, (mult, fake_net_1_483, 4), 5))}}}
variable {bl fake_net_result VAR {0, 1} assign {case{(gt, fake_net_output, 0)}result{1}result{0}}}

} end_variables

environment_update {
    #{}#
    variable_statement {
	tar_x
	assign {
	    case { (eq, timer, 0) } end_case result {tar_x, (min, x_max, (add, tar_x, 1)), (max, x_min, (sub, tar_x, 1))} end_result
	    result { tar_x } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	tar_y
	assign {
	    case { (eq, timer, 0) } end_case result {tar_y, (min, y_max, (add, tar_y, 1)), (max, y_min, (sub, tar_y, 1))} end_result
	    result { tar_y } end_result
	} end_assign
    } end_variable_statement
    variable_statement {
	timer
	assign {
	    case {(eq, timer, 0) } result {movement_cooldown}
	    result {(max, 0, (sub, timer, 1))}
	}
    }
    #{}#
} end_environment_update

checks {
    check {
	not_at_destination
	arguments {}
	read_variables {cur_x, cur_y, dest_x, dest_y}
	condition { (not, (and, (eq, cur_x, dest_x), (eq, cur_y, dest_y)))}
    }
    check {
	y_too_small
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (lt, cur_y, dest_y)}
    }
    check {
	y_too_big
	arguments {}
	read_variables {cur_y, dest_y}
	condition { (gt, cur_y, dest_y)}
    }
    check {
	x_too_small
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (lt, cur_x, dest_x)}
    }
    check {
	x_too_big
	arguments {}
	read_variables {cur_x, dest_x}
	condition { (gt, cur_x, dest_x)}
    }
} end_checks

environment_checks {
    #{This currently only checks one tree}#
    environment_check {
	target_in_sight
	arguments{}
	read_variables {cur_x, cur_y} end_read_variables
	condition {
	    (and,
		(lte, (add, (abs, (sub, cur_x, tar_x)), (abs, (sub, cur_y, tar_y))), vision_range),
		(loop, loop_index, [0, (sub, tree_count, 1)] such_that True,
		    (or,
			(gt, (add, (abs, (sub, (index, tree_x, constant_index loop_index), tar_x)), (abs, (sub, (index, tree_y, constant_index loop_index), tar_y))), tree_range),
			(and, (eq, (index, tree_x, constant_index loop_index), cur_x), (eq, (index, tree_y, constant_index loop_index), cur_y)),
			(and, (eq, (index, tree_x, constant_index loop_index), tar_x), (eq, (index, tree_y, constant_index loop_index), tar_y)),
			(and, (lt, (index, tree_x, constant_index loop_index), cur_x), (lt, (index, tree_x, constant_index loop_index), tar_x)),
			(and, (lt, (index, tree_y, constant_index loop_index), cur_y), (lt, (index, tree_y, constant_index loop_index), tar_y)),
			(and, (gt, (index, tree_x, constant_index loop_index), cur_x), (gt, (index, tree_x, constant_index loop_index), tar_x)),
			(and, (gt, (index, tree_y, constant_index loop_index), cur_y), (gt, (index, tree_y, constant_index loop_index), tar_y))
		    )
		)
	    )
	} end_condition
    } end_environment_check
    
} end_environment_checks

actions {
    #{ action nodes are defined here }#
    action {
	call_xy_net
	arguments{}
	local_variables {} end_local_variables
	read_variables {x_net_output, y_net_output} end_read_variables
	write_variables {dest_x, dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dest_x
		assign {
		    result {(max, x_min, (min, x_max, x_net_output))}
		}
	    }
	    variable_statement {
		dest_y
		assign {
		    result {(max, y_min, (min, y_max, y_net_output))}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	move
	arguments{delta_x := INT, delta_y := INT}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {cur_x, cur_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		cur_x assign {result {(max, x_min, (min, x_max, (add, delta_x, cur_x)))}}
	    }
	    variable_statement {
		cur_y assign {result {(max, y_min, (min, y_max, (add, delta_y, cur_y)))}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	send_victory
	arguments{}
	local_variables { } end_local_variables
	read_variables {} end_read_variables
	write_variables {victory} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		victory assign {result {True}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
    action {
	update_direction
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_y} end_read_variables
	write_variables {dir} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		dir
		assign {
		    case { (eq, cur_y, y_max)}
		    result {-1}
		    case { (eq, cur_y, y_min)}
		    result {1}
		    result {dir}
		}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    }
    action {
	update_previous_destination
	arguments{}
	local_variables { } end_local_variables
	read_variables {cur_x, cur_y} end_read_variables
	write_variables {prev_dest_x, prev_dest_y} end_write_variables
	initial_values {} end_initial_values
	update {
	    variable_statement {
		prev_dest_x assign {result {cur_x}}
	    }
	    variable_statement {
		prev_dest_y assign {result {cur_y}}
	    }
	    return_statement {
		result {success} end_result
	    } end_return_statement
	} end_update
    } end_action
} end_actions

sub_trees {
    sub_tree {
	DESTINATION_SUBTREE
	composite {
	    destination selector
	    children {
		not_at_destination {} #{Checks destination}#
		composite {
		    new_destination sequence
		    children {
			update_direction {} #{Updates the direction we're going in.}#
			call_xy_net {} #{Calls the neural networks}#
			update_previous_destination {} #{sets the current location to the previous destination.}#
		    }
		}
	    }
	}
    }
    sub_tree {
	MOVEMENT_SUBTREE
	composite {
	    destination_and_movement sequence
	    children {
		insert {DESTINATION_SUBTREE}
		composite {
		    movement selector
		    children {
			composite {
			    try_up sequence
			    children {
				y_too_small {}
				move {0, 1}
			    }
			}
			composite {
			    try_down sequence
			    children {
				y_too_big {}
				move {0, -1}
			    }
			}
			composite {
			    try_left sequence
			    children {
				x_too_big {}
				move {-1, 0}
			    }
			}
			composite {
			    try_right sequence
			    children {
				x_too_small {}
				move {1, 0}
			    }
			}
		    }
		}
	    }
	}
    }
} end_sub_trees

tree {
    composite {
	drone_control selector
	children {
	    composite {
		vision sequence
		children {
		    target_in_sight {}
		    send_victory {}
		    
		}
	    }
	    insert {MOVEMENT_SUBTREE}
	}
    }
} end_tree




tick_prerequisite { (not, victory) } end_tick_prerequisite
#{tick_prerequisite { True } end_tick_prerequisite}#
#{ if the condition is True, the tree ticks.
    If it is false, everything is done }#

specifications { #{ INVAR, LTL, and CTL specs go here }#
    CTLSPEC {(always_finally, victory at -1)}
    LTLSPEC {(finally_bounded, [0, 200], victory at -1)}
    #{CTLSPEC {(imply, (and, (eq, (index, tree_x 0, 0), 2), (eq, (index, tree_x 0, 1), 5), (eq, (index, tree_y 0, 0), 2), (eq, (index, tree_y 0, 1), 5)), (always_finally, victory -1))}}#
INVARSPEC { (eq, 0, fake_net_result)}
} end_specifications