MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__seqLink11 := -3;
		next_child__sel0 := 
			case
				(previous_node < node_names.success_failure_node_4) : node_names.success_failure_node_4;
				(previous_node < node_names.success_node_4) : node_names.success_node_4;
				TRUE : -1;
			esac;
		next_child__sel1 := 
			case
				(previous_node < node_names.success_failure_node_5) : node_names.success_failure_node_5;
				(previous_node < node_names.success_node_5) : node_names.success_node_5;
				TRUE : -1;
			esac;
		next_child__sel10 := 
			case
				(previous_node < node_names.success_failure_node_2) : node_names.success_failure_node_2;
				(previous_node < node_names.success_node_2) : node_names.success_node_2;
				TRUE : -1;
			esac;
		next_child__sel11 := 
			case
				(previous_node < node_names.success_failure_node_3) : node_names.success_failure_node_3;
				(previous_node < node_names.success_node_3) : node_names.success_node_3;
				TRUE : -1;
			esac;
		next_child__sel2 := 
			case
				(previous_node < node_names.success_failure_node_6) : node_names.success_failure_node_6;
				(previous_node < node_names.success_node_6) : node_names.success_node_6;
				TRUE : -1;
			esac;
		next_child__sel3 := 
			case
				(previous_node < node_names.success_failure_node_7) : node_names.success_failure_node_7;
				(previous_node < node_names.success_node_7) : node_names.success_node_7;
				TRUE : -1;
			esac;
		next_child__sel4 := 
			case
				(previous_node < node_names.success_failure_node_8) : node_names.success_failure_node_8;
				(previous_node < node_names.success_node_8) : node_names.success_node_8;
				TRUE : -1;
			esac;
		next_child__sel5 := 
			case
				(previous_node < node_names.success_failure_node_9) : node_names.success_failure_node_9;
				(previous_node < node_names.success_node_9) : node_names.success_node_9;
				TRUE : -1;
			esac;
		next_child__sel6 := 
			case
				(previous_node < node_names.success_failure_node_10) : node_names.success_failure_node_10;
				(previous_node < node_names.success_node_10) : node_names.success_node_10;
				TRUE : -1;
			esac;
		next_child__sel7 := 
			case
				(previous_node < node_names.success_failure_node_11) : node_names.success_failure_node_11;
				(previous_node < node_names.success_node_11) : node_names.success_node_11;
				TRUE : -1;
			esac;
		next_child__sel8 := 
			case
				(previous_node < node_names.success_failure_node) : node_names.success_failure_node;
				(previous_node < node_names.success_node) : node_names.success_node;
				TRUE : -1;
			esac;
		next_child__sel9 := 
			case
				(previous_node < node_names.success_failure_node_1) : node_names.success_failure_node_1;
				(previous_node < node_names.success_node_1) : node_names.success_node_1;
				TRUE : -1;
			esac;
		next_child__seqLink1 := 
			case
				(previous_node < node_names.sel0) : node_names.sel0;
				(previous_node < node_names.sel1) : node_names.sel1;
				TRUE : -1;
			esac;
		next_child__seqLink10 := 
			case
				(previous_node < node_names.seqLink7) : node_names.seqLink7;
				(previous_node < node_names.seqLink8) : node_names.seqLink8;
				TRUE : -1;
			esac;
		next_child__seqLink11 := 
			case
				(previous_node < node_names.seqLink9) : node_names.seqLink9;
				(previous_node < node_names.seqLink10) : node_names.seqLink10;
				TRUE : -1;
			esac;
		next_child__seqLink2 := 
			case
				(previous_node < node_names.sel2) : node_names.sel2;
				(previous_node < node_names.sel3) : node_names.sel3;
				TRUE : -1;
			esac;
		next_child__seqLink3 := 
			case
				(previous_node < node_names.sel4) : node_names.sel4;
				(previous_node < node_names.sel5) : node_names.sel5;
				TRUE : -1;
			esac;
		next_child__seqLink4 := 
			case
				(previous_node < node_names.sel6) : node_names.sel6;
				(previous_node < node_names.sel7) : node_names.sel7;
				TRUE : -1;
			esac;
		next_child__seqLink5 := 
			case
				(previous_node < node_names.sel8) : node_names.sel8;
				(previous_node < node_names.sel9) : node_names.sel9;
				TRUE : -1;
			esac;
		next_child__seqLink6 := 
			case
				(previous_node < node_names.sel10) : node_names.sel10;
				(previous_node < node_names.sel11) : node_names.sel11;
				TRUE : -1;
			esac;
		next_child__seqLink7 := 
			case
				(previous_node < node_names.seqLink1) : node_names.seqLink1;
				(previous_node < node_names.seqLink2) : node_names.seqLink2;
				TRUE : -1;
			esac;
		next_child__seqLink8 := 
			case
				(previous_node < node_names.seqLink3) : node_names.seqLink3;
				(previous_node < node_names.seqLink4) : node_names.seqLink4;
				TRUE : -1;
			esac;
		next_child__seqLink9 := 
			case
				(previous_node < node_names.seqLink5) : node_names.seqLink5;
				(previous_node < node_names.seqLink6) : node_names.seqLink6;
				TRUE : -1;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..47;
		previous_node : -1..47;
		current_status : {success, running, failure, invalid};
		previous_status : {success, running, failure, invalid};
		--START OF BLACKBOARD VARIABLES DECLARATION
		success_failure_node_10_DOT_randomizer : boolean;
		success_failure_node_11_DOT_randomizer : boolean;
		success_failure_node_1_DOT_randomizer : boolean;
		success_failure_node_2_DOT_randomizer : boolean;
		success_failure_node_3_DOT_randomizer : boolean;
		success_failure_node_4_DOT_randomizer : boolean;
		success_failure_node_5_DOT_randomizer : boolean;
		success_failure_node_6_DOT_randomizer : boolean;
		success_failure_node_7_DOT_randomizer : boolean;
		success_failure_node_8_DOT_randomizer : boolean;
		success_failure_node_9_DOT_randomizer : boolean;
		success_failure_node_DOT_randomizer : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(success_failure_node_10_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_11_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_1_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_2_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_3_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_4_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_5_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_6_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_7_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_8_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_9_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.seqLink11;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.sel0) & (current_status != invalid) : node_names.seqLink1;
				(active_node = node_names.sel0) & (current_status = invalid) : next_child__sel0;
				(active_node = node_names.sel1) & (current_status != invalid) : node_names.seqLink1;
				(active_node = node_names.sel1) & (current_status = invalid) : next_child__sel1;
				(active_node = node_names.sel10) & (current_status != invalid) : node_names.seqLink6;
				(active_node = node_names.sel10) & (current_status = invalid) : next_child__sel10;
				(active_node = node_names.sel11) & (current_status != invalid) : node_names.seqLink6;
				(active_node = node_names.sel11) & (current_status = invalid) : next_child__sel11;
				(active_node = node_names.sel2) & (current_status != invalid) : node_names.seqLink2;
				(active_node = node_names.sel2) & (current_status = invalid) : next_child__sel2;
				(active_node = node_names.sel3) & (current_status != invalid) : node_names.seqLink2;
				(active_node = node_names.sel3) & (current_status = invalid) : next_child__sel3;
				(active_node = node_names.sel4) & (current_status != invalid) : node_names.seqLink3;
				(active_node = node_names.sel4) & (current_status = invalid) : next_child__sel4;
				(active_node = node_names.sel5) & (current_status != invalid) : node_names.seqLink3;
				(active_node = node_names.sel5) & (current_status = invalid) : next_child__sel5;
				(active_node = node_names.sel6) & (current_status != invalid) : node_names.seqLink4;
				(active_node = node_names.sel6) & (current_status = invalid) : next_child__sel6;
				(active_node = node_names.sel7) & (current_status != invalid) : node_names.seqLink4;
				(active_node = node_names.sel7) & (current_status = invalid) : next_child__sel7;
				(active_node = node_names.sel8) & (current_status != invalid) : node_names.seqLink5;
				(active_node = node_names.sel8) & (current_status = invalid) : next_child__sel8;
				(active_node = node_names.sel9) & (current_status != invalid) : node_names.seqLink5;
				(active_node = node_names.sel9) & (current_status = invalid) : next_child__sel9;
				(active_node = node_names.seqLink1) & (current_status != invalid) : node_names.seqLink7;
				(active_node = node_names.seqLink1) & (current_status = invalid) : next_child__seqLink1;
				(active_node = node_names.seqLink10) & (current_status != invalid) : node_names.seqLink11;
				(active_node = node_names.seqLink10) & (current_status = invalid) : next_child__seqLink10;
				(active_node = node_names.seqLink11) & (current_status != invalid) : -1;
				(active_node = node_names.seqLink11) & (current_status = invalid) : next_child__seqLink11;
				(active_node = node_names.seqLink2) & (current_status != invalid) : node_names.seqLink7;
				(active_node = node_names.seqLink2) & (current_status = invalid) : next_child__seqLink2;
				(active_node = node_names.seqLink3) & (current_status != invalid) : node_names.seqLink8;
				(active_node = node_names.seqLink3) & (current_status = invalid) : next_child__seqLink3;
				(active_node = node_names.seqLink4) & (current_status != invalid) : node_names.seqLink8;
				(active_node = node_names.seqLink4) & (current_status = invalid) : next_child__seqLink4;
				(active_node = node_names.seqLink5) & (current_status != invalid) : node_names.seqLink9;
				(active_node = node_names.seqLink5) & (current_status = invalid) : next_child__seqLink5;
				(active_node = node_names.seqLink6) & (current_status != invalid) : node_names.seqLink9;
				(active_node = node_names.seqLink6) & (current_status = invalid) : next_child__seqLink6;
				(active_node = node_names.seqLink7) & (current_status != invalid) : node_names.seqLink10;
				(active_node = node_names.seqLink7) & (current_status = invalid) : next_child__seqLink7;
				(active_node = node_names.seqLink8) & (current_status != invalid) : node_names.seqLink10;
				(active_node = node_names.seqLink8) & (current_status = invalid) : next_child__seqLink8;
				(active_node = node_names.seqLink9) & (current_status != invalid) : node_names.seqLink11;
				(active_node = node_names.seqLink9) & (current_status = invalid) : next_child__seqLink9;
				(active_node = node_names.success_failure_node) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_failure_node_1) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_failure_node_10) & (current_status != invalid) : node_names.sel6;
				(active_node = node_names.success_failure_node_11) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_failure_node_2) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_failure_node_3) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_failure_node_4) & (current_status != invalid) : node_names.sel0;
				(active_node = node_names.success_failure_node_5) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_failure_node_6) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_failure_node_7) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_failure_node_8) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_failure_node_9) & (current_status != invalid) : node_names.sel5;
				(active_node = node_names.success_node) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_node_1) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_node_10) & (current_status != invalid) : node_names.sel6;
				(active_node = node_names.success_node_11) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_node_2) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_node_3) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_node_4) & (current_status != invalid) : node_names.sel0;
				(active_node = node_names.success_node_5) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_node_6) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_node_7) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_node_8) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_node_9) & (current_status != invalid) : node_names.sel5;
				TRUE : active_node;
			esac;
		next(previous_node) := active_node;
		current_status :=
			case
				(active_node = node_names.sel0) & (previous_status = running) : running;
				(active_node = node_names.sel0) & (previous_status = success) : success;
				(active_node = node_names.sel0) & (next_child__sel0 = -1) : failure;
				(active_node = node_names.sel0) : invalid;
				(active_node = node_names.sel1) & (previous_status = running) : running;
				(active_node = node_names.sel1) & (previous_status = success) : success;
				(active_node = node_names.sel1) & (next_child__sel1 = -1) : failure;
				(active_node = node_names.sel1) : invalid;
				(active_node = node_names.sel10) & (previous_status = running) : running;
				(active_node = node_names.sel10) & (previous_status = success) : success;
				(active_node = node_names.sel10) & (next_child__sel10 = -1) : failure;
				(active_node = node_names.sel10) : invalid;
				(active_node = node_names.sel11) & (previous_status = running) : running;
				(active_node = node_names.sel11) & (previous_status = success) : success;
				(active_node = node_names.sel11) & (next_child__sel11 = -1) : failure;
				(active_node = node_names.sel11) : invalid;
				(active_node = node_names.sel2) & (previous_status = running) : running;
				(active_node = node_names.sel2) & (previous_status = success) : success;
				(active_node = node_names.sel2) & (next_child__sel2 = -1) : failure;
				(active_node = node_names.sel2) : invalid;
				(active_node = node_names.sel3) & (previous_status = running) : running;
				(active_node = node_names.sel3) & (previous_status = success) : success;
				(active_node = node_names.sel3) & (next_child__sel3 = -1) : failure;
				(active_node = node_names.sel3) : invalid;
				(active_node = node_names.sel4) & (previous_status = running) : running;
				(active_node = node_names.sel4) & (previous_status = success) : success;
				(active_node = node_names.sel4) & (next_child__sel4 = -1) : failure;
				(active_node = node_names.sel4) : invalid;
				(active_node = node_names.sel5) & (previous_status = running) : running;
				(active_node = node_names.sel5) & (previous_status = success) : success;
				(active_node = node_names.sel5) & (next_child__sel5 = -1) : failure;
				(active_node = node_names.sel5) : invalid;
				(active_node = node_names.sel6) & (previous_status = running) : running;
				(active_node = node_names.sel6) & (previous_status = success) : success;
				(active_node = node_names.sel6) & (next_child__sel6 = -1) : failure;
				(active_node = node_names.sel6) : invalid;
				(active_node = node_names.sel7) & (previous_status = running) : running;
				(active_node = node_names.sel7) & (previous_status = success) : success;
				(active_node = node_names.sel7) & (next_child__sel7 = -1) : failure;
				(active_node = node_names.sel7) : invalid;
				(active_node = node_names.sel8) & (previous_status = running) : running;
				(active_node = node_names.sel8) & (previous_status = success) : success;
				(active_node = node_names.sel8) & (next_child__sel8 = -1) : failure;
				(active_node = node_names.sel8) : invalid;
				(active_node = node_names.sel9) & (previous_status = running) : running;
				(active_node = node_names.sel9) & (previous_status = success) : success;
				(active_node = node_names.sel9) & (next_child__sel9 = -1) : failure;
				(active_node = node_names.sel9) : invalid;
				(active_node = node_names.seqLink1) & (previous_status = running) : running;
				(active_node = node_names.seqLink1) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink1) & (next_child__seqLink1 = -1) : success;
				(active_node = node_names.seqLink1) : invalid;
				(active_node = node_names.seqLink10) & (previous_status = running) : running;
				(active_node = node_names.seqLink10) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink10) & (next_child__seqLink10 = -1) : success;
				(active_node = node_names.seqLink10) : invalid;
				(active_node = node_names.seqLink11) & (previous_status = running) : running;
				(active_node = node_names.seqLink11) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink11) & (next_child__seqLink11 = -1) : success;
				(active_node = node_names.seqLink11) : invalid;
				(active_node = node_names.seqLink2) & (previous_status = running) : running;
				(active_node = node_names.seqLink2) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink2) & (next_child__seqLink2 = -1) : success;
				(active_node = node_names.seqLink2) : invalid;
				(active_node = node_names.seqLink3) & (previous_status = running) : running;
				(active_node = node_names.seqLink3) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink3) & (next_child__seqLink3 = -1) : success;
				(active_node = node_names.seqLink3) : invalid;
				(active_node = node_names.seqLink4) & (previous_status = running) : running;
				(active_node = node_names.seqLink4) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink4) & (next_child__seqLink4 = -1) : success;
				(active_node = node_names.seqLink4) : invalid;
				(active_node = node_names.seqLink5) & (previous_status = running) : running;
				(active_node = node_names.seqLink5) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink5) & (next_child__seqLink5 = -1) : success;
				(active_node = node_names.seqLink5) : invalid;
				(active_node = node_names.seqLink6) & (previous_status = running) : running;
				(active_node = node_names.seqLink6) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink6) & (next_child__seqLink6 = -1) : success;
				(active_node = node_names.seqLink6) : invalid;
				(active_node = node_names.seqLink7) & (previous_status = running) : running;
				(active_node = node_names.seqLink7) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink7) & (next_child__seqLink7 = -1) : success;
				(active_node = node_names.seqLink7) : invalid;
				(active_node = node_names.seqLink8) & (previous_status = running) : running;
				(active_node = node_names.seqLink8) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink8) & (next_child__seqLink8 = -1) : success;
				(active_node = node_names.seqLink8) : invalid;
				(active_node = node_names.seqLink9) & (previous_status = running) : running;
				(active_node = node_names.seqLink9) & (previous_status = failure) : failure;
				(active_node = node_names.seqLink9) & (next_child__seqLink9 = -1) : success;
				(active_node = node_names.seqLink9) : invalid;
				(active_node = node_names.success_failure_node) & success_failure_node_DOT_randomizer : success;
				(active_node = node_names.success_failure_node) & TRUE : failure;
				(active_node = node_names.success_failure_node_1) & success_failure_node_1_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_1) & TRUE : failure;
				(active_node = node_names.success_failure_node_10) & success_failure_node_10_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_10) & TRUE : failure;
				(active_node = node_names.success_failure_node_11) & success_failure_node_11_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_11) & TRUE : failure;
				(active_node = node_names.success_failure_node_2) & success_failure_node_2_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_2) & TRUE : failure;
				(active_node = node_names.success_failure_node_3) & success_failure_node_3_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_3) & TRUE : failure;
				(active_node = node_names.success_failure_node_4) & success_failure_node_4_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_4) & TRUE : failure;
				(active_node = node_names.success_failure_node_5) & success_failure_node_5_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_5) & TRUE : failure;
				(active_node = node_names.success_failure_node_6) & success_failure_node_6_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_6) & TRUE : failure;
				(active_node = node_names.success_failure_node_7) & success_failure_node_7_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_7) & TRUE : failure;
				(active_node = node_names.success_failure_node_8) & success_failure_node_8_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_8) & TRUE : failure;
				(active_node = node_names.success_failure_node_9) & success_failure_node_9_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_9) & TRUE : failure;
				(active_node = node_names.success_node) : success;
				(active_node = node_names.success_node_1) : success;
				(active_node = node_names.success_node_10) : success;
				(active_node = node_names.success_node_11) : success;
				(active_node = node_names.success_node_2) : success;
				(active_node = node_names.success_node_3) : success;
				(active_node = node_names.success_node_4) : success;
				(active_node = node_names.success_node_5) : success;
				(active_node = node_names.success_node_6) : success;
				(active_node = node_names.success_node_7) : success;
				(active_node = node_names.success_node_8) : success;
				(active_node = node_names.success_node_9) : success;
				TRUE : invalid;
			esac;
		next(previous_status) := current_status;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(success_failure_node_10_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_10) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_10_DOT_randomizer;
			esac;
		next(success_failure_node_11_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_11) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_11_DOT_randomizer;
			esac;
		next(success_failure_node_1_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_1) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_1_DOT_randomizer;
			esac;
		next(success_failure_node_2_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_2) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_2_DOT_randomizer;
			esac;
		next(success_failure_node_3_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_3) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_3_DOT_randomizer;
			esac;
		next(success_failure_node_4_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_4) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_4_DOT_randomizer;
			esac;
		next(success_failure_node_5_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_5) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_5_DOT_randomizer;
			esac;
		next(success_failure_node_6_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_6) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_6_DOT_randomizer;
			esac;
		next(success_failure_node_7_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_7) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_7_DOT_randomizer;
			esac;
		next(success_failure_node_8_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_8) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_8_DOT_randomizer;
			esac;
		next(success_failure_node_9_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_9) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_9_DOT_randomizer;
			esac;
		next(success_failure_node_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_DOT_randomizer;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));


MODULE define_nodes
	DEFINE
		seqLink11 := 0;
		seqLink9 := 1;
		seqLink5 := 2;
		sel8 := 3;
		success_failure_node := 4;
		success_node := 5;
		sel9 := 6;
		success_failure_node_1 := 7;
		success_node_1 := 8;
		seqLink6 := 9;
		sel10 := 10;
		success_failure_node_2 := 11;
		success_node_2 := 12;
		sel11 := 13;
		success_failure_node_3 := 14;
		success_node_3 := 15;
		seqLink10 := 16;
		seqLink7 := 17;
		seqLink1 := 18;
		sel0 := 19;
		success_failure_node_4 := 20;
		success_node_4 := 21;
		sel1 := 22;
		success_failure_node_5 := 23;
		success_node_5 := 24;
		seqLink2 := 25;
		sel2 := 26;
		success_failure_node_6 := 27;
		success_node_6 := 28;
		sel3 := 29;
		success_failure_node_7 := 30;
		success_node_7 := 31;
		seqLink8 := 32;
		seqLink3 := 33;
		sel4 := 34;
		success_failure_node_8 := 35;
		success_node_8 := 36;
		sel5 := 37;
		success_failure_node_9 := 38;
		success_node_9 := 39;
		seqLink4 := 40;
		sel6 := 41;
		success_failure_node_10 := 42;
		success_node_10 := 43;
		sel7 := 44;
		success_failure_node_11 := 45;
		success_node_11 := 46;
