MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator24 := -3;
		resume_from_here_in_subtree__decorator25 := -3;
		resume_from_here_in_subtree__decorator26 := -3;
		resume_from_here_in_subtree__decorator27 := -3;
		resume_from_here_in_subtree__parallel23 := -3;
		resume_from_here_in_subtree__decorator20 := -3;
		resume_from_here_in_subtree__decorator21 := -3;
		resume_from_here_in_subtree__decorator22 := -3;
		resume_from_here_in_subtree__decorator23 := -3;
		resume_from_here_in_subtree__parallel19 := -3;
		resume_from_here_in_subtree__decorator16 := -3;
		resume_from_here_in_subtree__decorator17 := -3;
		resume_from_here_in_subtree__decorator18 := -3;
		resume_from_here_in_subtree__decorator19 := -3;
		resume_from_here_in_subtree__parallel15 := -3;
		resume_from_here_in_subtree__decorator12 := -3;
		resume_from_here_in_subtree__decorator13 := -3;
		resume_from_here_in_subtree__decorator14 := -3;
		resume_from_here_in_subtree__decorator15 := -3;
		resume_from_here_in_subtree__parallel11 := -3;
		resume_from_here_in_subtree__decorator8 := -3;
		resume_from_here_in_subtree__decorator9 := -3;
		resume_from_here_in_subtree__decorator10 := -3;
		resume_from_here_in_subtree__decorator11 := -3;
		resume_from_here_in_subtree__parallel7 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator5 := -3;
		resume_from_here_in_subtree__decorator6 := -3;
		resume_from_here_in_subtree__decorator7 := -3;
		resume_from_here_in_subtree__parallel3 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		biggest_fish_sequence.active := TRUE;
		parallel11.status := parallel11.active ? parallel11.internal_status : invalid;
		parallel11.internal_status := 
			case
				count(decorator8.internal_status = failure, decorator9.internal_status = failure, decorator10.internal_status = failure, decorator11.internal_status = failure, parallel7.internal_status = failure) >= 1 : failure;
				count(decorator8.internal_status = success, decorator9.internal_status = success, decorator10.internal_status = success, decorator11.internal_status = success, parallel7.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel15.status := parallel15.active ? parallel15.internal_status : invalid;
		parallel15.internal_status := 
			case
				count(decorator12.internal_status = failure, decorator13.internal_status = failure, decorator14.internal_status = failure, decorator15.internal_status = failure, parallel11.internal_status = failure) >= 1 : failure;
				count(decorator12.internal_status = success, decorator13.internal_status = success, decorator14.internal_status = success, decorator15.internal_status = success, parallel11.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel19.status := parallel19.active ? parallel19.internal_status : invalid;
		parallel19.internal_status := 
			case
				count(decorator16.internal_status = failure, decorator17.internal_status = failure, decorator18.internal_status = failure, decorator19.internal_status = failure, parallel15.internal_status = failure) >= 1 : failure;
				count(decorator16.internal_status = success, decorator17.internal_status = success, decorator18.internal_status = success, decorator19.internal_status = success, parallel15.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel23.status := parallel23.active ? parallel23.internal_status : invalid;
		parallel23.internal_status := 
			case
				count(decorator20.internal_status = failure, decorator21.internal_status = failure, decorator22.internal_status = failure, decorator23.internal_status = failure, parallel19.internal_status = failure) >= 1 : failure;
				count(decorator20.internal_status = success, decorator21.internal_status = success, decorator22.internal_status = success, decorator23.internal_status = success, parallel19.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel27.status := parallel27.active ? parallel27.internal_status : invalid;
		parallel27.internal_status := 
			case
				count(decorator24.internal_status = failure, decorator25.internal_status = failure, decorator26.internal_status = failure, decorator27.internal_status = failure, parallel23.internal_status = failure) >= 1 : failure;
				count(decorator24.internal_status = success, decorator25.internal_status = success, decorator26.internal_status = success, decorator27.internal_status = success, parallel23.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel3.status := parallel3.active ? parallel3.internal_status : invalid;
		parallel3.internal_status := 
			case
				count(decorator0.internal_status = failure, decorator1.internal_status = failure, decorator2.internal_status = failure, decorator3.internal_status = failure) >= 1 : failure;
				count(decorator0.internal_status = success, decorator1.internal_status = success, decorator2.internal_status = success, decorator3.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel7.status := parallel7.active ? parallel7.internal_status : invalid;
		parallel7.internal_status := 
			case
				count(decorator4.internal_status = failure, decorator5.internal_status = failure, decorator6.internal_status = failure, decorator7.internal_status = failure, parallel3.internal_status = failure) >= 1 : failure;
				count(decorator4.internal_status = success, decorator5.internal_status = success, decorator6.internal_status = success, decorator7.internal_status = success, parallel3.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		var_biggest_fish_stage_1 := 
			case
				!(bigger_fish.active) : var_biggest_fish;
				TRUE : min((1 + var_biggest_fish), 99);
			esac;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is10 : biggest_fish_is10_module(var_biggest_fish);
		biggest_fish_is11 : biggest_fish_is11_module(var_biggest_fish);
		biggest_fish_is12 : biggest_fish_is12_module(var_biggest_fish);
		biggest_fish_is13 : biggest_fish_is13_module(var_biggest_fish);
		biggest_fish_is14 : biggest_fish_is14_module(var_biggest_fish);
		biggest_fish_is15 : biggest_fish_is15_module(var_biggest_fish);
		biggest_fish_is16 : biggest_fish_is16_module(var_biggest_fish);
		biggest_fish_is17 : biggest_fish_is17_module(var_biggest_fish);
		biggest_fish_is18 : biggest_fish_is18_module(var_biggest_fish);
		biggest_fish_is19 : biggest_fish_is19_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is20 : biggest_fish_is20_module(var_biggest_fish);
		biggest_fish_is21 : biggest_fish_is21_module(var_biggest_fish);
		biggest_fish_is22 : biggest_fish_is22_module(var_biggest_fish);
		biggest_fish_is23 : biggest_fish_is23_module(var_biggest_fish);
		biggest_fish_is24 : biggest_fish_is24_module(var_biggest_fish);
		biggest_fish_is25 : biggest_fish_is25_module(var_biggest_fish);
		biggest_fish_is26 : biggest_fish_is26_module(var_biggest_fish);
		biggest_fish_is27 : biggest_fish_is27_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		biggest_fish_is5 : biggest_fish_is5_module(var_biggest_fish);
		biggest_fish_is6 : biggest_fish_is6_module(var_biggest_fish);
		biggest_fish_is7 : biggest_fish_is7_module(var_biggest_fish);
		biggest_fish_is8 : biggest_fish_is8_module(var_biggest_fish);
		biggest_fish_is9 : biggest_fish_is9_module(var_biggest_fish);
		biggest_fish_sequence_NEXT_2 : composite_sequence_without_memory_END;
		biggest_fish_sequence_NEXT_1 : composite_sequence_without_memory(biggest_fish_sequence_NEXT_2, bigger_fish);
		biggest_fish_sequence : composite_sequence_without_memory(biggest_fish_sequence_NEXT_1, special_decorator);
		decorator0 : decorator_X_is_Y(biggest_fish_is0, failure, running);
		decorator1 : decorator_X_is_Y(biggest_fish_is1, failure, running);
		decorator10 : decorator_X_is_Y(biggest_fish_is10, failure, running);
		decorator11 : decorator_X_is_Y(biggest_fish_is11, failure, running);
		decorator12 : decorator_X_is_Y(biggest_fish_is12, failure, running);
		decorator13 : decorator_X_is_Y(biggest_fish_is13, failure, running);
		decorator14 : decorator_X_is_Y(biggest_fish_is14, failure, running);
		decorator15 : decorator_X_is_Y(biggest_fish_is15, failure, running);
		decorator16 : decorator_X_is_Y(biggest_fish_is16, failure, running);
		decorator17 : decorator_X_is_Y(biggest_fish_is17, failure, running);
		decorator18 : decorator_X_is_Y(biggest_fish_is18, failure, running);
		decorator19 : decorator_X_is_Y(biggest_fish_is19, failure, running);
		decorator2 : decorator_X_is_Y(biggest_fish_is2, failure, running);
		decorator20 : decorator_X_is_Y(biggest_fish_is20, failure, running);
		decorator21 : decorator_X_is_Y(biggest_fish_is21, failure, running);
		decorator22 : decorator_X_is_Y(biggest_fish_is22, failure, running);
		decorator23 : decorator_X_is_Y(biggest_fish_is23, failure, running);
		decorator24 : decorator_X_is_Y(biggest_fish_is24, failure, running);
		decorator25 : decorator_X_is_Y(biggest_fish_is25, failure, running);
		decorator26 : decorator_X_is_Y(biggest_fish_is26, failure, running);
		decorator27 : decorator_X_is_Y(biggest_fish_is27, failure, running);
		decorator3 : decorator_X_is_Y(biggest_fish_is3, failure, running);
		decorator4 : decorator_X_is_Y(biggest_fish_is4, failure, running);
		decorator5 : decorator_X_is_Y(biggest_fish_is5, failure, running);
		decorator6 : decorator_X_is_Y(biggest_fish_is6, failure, running);
		decorator7 : decorator_X_is_Y(biggest_fish_is7, failure, running);
		decorator8 : decorator_X_is_Y(biggest_fish_is8, failure, running);
		decorator9 : decorator_X_is_Y(biggest_fish_is9, failure, running);
		parallel11_NEXT_5 : composite_parallel_without_memory_END;
		parallel11_NEXT_4 : composite_parallel_without_memory(parallel11_NEXT_5, parallel7);
		parallel11_NEXT_3 : composite_parallel_without_memory(parallel11_NEXT_4, decorator11);
		parallel11_NEXT_2 : composite_parallel_without_memory(parallel11_NEXT_3, decorator10);
		parallel11_NEXT_1 : composite_parallel_without_memory(parallel11_NEXT_2, decorator9);
		parallel11 : composite_parallel_without_memory(parallel11_NEXT_1, decorator8);
		parallel15_NEXT_5 : composite_parallel_without_memory_END;
		parallel15_NEXT_4 : composite_parallel_without_memory(parallel15_NEXT_5, parallel11);
		parallel15_NEXT_3 : composite_parallel_without_memory(parallel15_NEXT_4, decorator15);
		parallel15_NEXT_2 : composite_parallel_without_memory(parallel15_NEXT_3, decorator14);
		parallel15_NEXT_1 : composite_parallel_without_memory(parallel15_NEXT_2, decorator13);
		parallel15 : composite_parallel_without_memory(parallel15_NEXT_1, decorator12);
		parallel19_NEXT_5 : composite_parallel_without_memory_END;
		parallel19_NEXT_4 : composite_parallel_without_memory(parallel19_NEXT_5, parallel15);
		parallel19_NEXT_3 : composite_parallel_without_memory(parallel19_NEXT_4, decorator19);
		parallel19_NEXT_2 : composite_parallel_without_memory(parallel19_NEXT_3, decorator18);
		parallel19_NEXT_1 : composite_parallel_without_memory(parallel19_NEXT_2, decorator17);
		parallel19 : composite_parallel_without_memory(parallel19_NEXT_1, decorator16);
		parallel23_NEXT_5 : composite_parallel_without_memory_END;
		parallel23_NEXT_4 : composite_parallel_without_memory(parallel23_NEXT_5, parallel19);
		parallel23_NEXT_3 : composite_parallel_without_memory(parallel23_NEXT_4, decorator23);
		parallel23_NEXT_2 : composite_parallel_without_memory(parallel23_NEXT_3, decorator22);
		parallel23_NEXT_1 : composite_parallel_without_memory(parallel23_NEXT_2, decorator21);
		parallel23 : composite_parallel_without_memory(parallel23_NEXT_1, decorator20);
		parallel27_NEXT_5 : composite_parallel_without_memory_END;
		parallel27_NEXT_4 : composite_parallel_without_memory(parallel27_NEXT_5, parallel23);
		parallel27_NEXT_3 : composite_parallel_without_memory(parallel27_NEXT_4, decorator27);
		parallel27_NEXT_2 : composite_parallel_without_memory(parallel27_NEXT_3, decorator26);
		parallel27_NEXT_1 : composite_parallel_without_memory(parallel27_NEXT_2, decorator25);
		parallel27 : composite_parallel_without_memory(parallel27_NEXT_1, decorator24);
		parallel3_NEXT_4 : composite_parallel_without_memory_END;
		parallel3_NEXT_3 : composite_parallel_without_memory(parallel3_NEXT_4, decorator3);
		parallel3_NEXT_2 : composite_parallel_without_memory(parallel3_NEXT_3, decorator2);
		parallel3_NEXT_1 : composite_parallel_without_memory(parallel3_NEXT_2, decorator1);
		parallel3 : composite_parallel_without_memory(parallel3_NEXT_1, decorator0);
		parallel7_NEXT_5 : composite_parallel_without_memory_END;
		parallel7_NEXT_4 : composite_parallel_without_memory(parallel7_NEXT_5, parallel3);
		parallel7_NEXT_3 : composite_parallel_without_memory(parallel7_NEXT_4, decorator7);
		parallel7_NEXT_2 : composite_parallel_without_memory(parallel7_NEXT_3, decorator6);
		parallel7_NEXT_1 : composite_parallel_without_memory(parallel7_NEXT_2, decorator5);
		parallel7 : composite_parallel_without_memory(parallel7_NEXT_1, decorator4);
		special_decorator : decorator_X_is_Y(parallel27, running, failure);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..99;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) := var_biggest_fish_stage_1;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 28)));
CTLSPEC AF(AG((var_biggest_fish = 28)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel27 := 2;
		decorator24 := 3;
		biggest_fish_is24 := 4;
		decorator25 := 5;
		biggest_fish_is25 := 6;
		decorator26 := 7;
		biggest_fish_is26 := 8;
		decorator27 := 9;
		biggest_fish_is27 := 10;
		parallel23 := 11;
		decorator20 := 12;
		biggest_fish_is20 := 13;
		decorator21 := 14;
		biggest_fish_is21 := 15;
		decorator22 := 16;
		biggest_fish_is22 := 17;
		decorator23 := 18;
		biggest_fish_is23 := 19;
		parallel19 := 20;
		decorator16 := 21;
		biggest_fish_is16 := 22;
		decorator17 := 23;
		biggest_fish_is17 := 24;
		decorator18 := 25;
		biggest_fish_is18 := 26;
		decorator19 := 27;
		biggest_fish_is19 := 28;
		parallel15 := 29;
		decorator12 := 30;
		biggest_fish_is12 := 31;
		decorator13 := 32;
		biggest_fish_is13 := 33;
		decorator14 := 34;
		biggest_fish_is14 := 35;
		decorator15 := 36;
		biggest_fish_is15 := 37;
		parallel11 := 38;
		decorator8 := 39;
		biggest_fish_is8 := 40;
		decorator9 := 41;
		biggest_fish_is9 := 42;
		decorator10 := 43;
		biggest_fish_is10 := 44;
		decorator11 := 45;
		biggest_fish_is11 := 46;
		parallel7 := 47;
		decorator4 := 48;
		biggest_fish_is4 := 49;
		decorator5 := 50;
		biggest_fish_is5 := 51;
		decorator6 := 52;
		biggest_fish_is6 := 53;
		decorator7 := 54;
		biggest_fish_is7 := 55;
		parallel3 := 56;
		decorator0 := 57;
		biggest_fish_is0 := 58;
		decorator1 := 59;
		biggest_fish_is1 := 60;
		decorator2 := 61;
		biggest_fish_is2 := 62;
		decorator3 := 63;
		biggest_fish_is3 := 64;
		bigger_fish := 65;
MODULE composite_parallel_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		child.active := active;
		next_composite.active := active;

MODULE composite_parallel_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
MODULE decorator_X_is_Y(child_0, incoming_status, outgoing_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.status = incoming_status : outgoing_status;
				TRUE : child_0.status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 0)) ? success : failure;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 1)) ? success : failure;
MODULE biggest_fish_is10_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 10)) ? success : failure;
MODULE biggest_fish_is11_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 11)) ? success : failure;
MODULE biggest_fish_is12_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 12)) ? success : failure;
MODULE biggest_fish_is13_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 13)) ? success : failure;
MODULE biggest_fish_is14_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 14)) ? success : failure;
MODULE biggest_fish_is15_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 15)) ? success : failure;
MODULE biggest_fish_is16_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 16)) ? success : failure;
MODULE biggest_fish_is17_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 17)) ? success : failure;
MODULE biggest_fish_is18_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 18)) ? success : failure;
MODULE biggest_fish_is19_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 19)) ? success : failure;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 2)) ? success : failure;
MODULE biggest_fish_is20_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 20)) ? success : failure;
MODULE biggest_fish_is21_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 21)) ? success : failure;
MODULE biggest_fish_is22_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 22)) ? success : failure;
MODULE biggest_fish_is23_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 23)) ? success : failure;
MODULE biggest_fish_is24_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 24)) ? success : failure;
MODULE biggest_fish_is25_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 25)) ? success : failure;
MODULE biggest_fish_is26_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 26)) ? success : failure;
MODULE biggest_fish_is27_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 27)) ? success : failure;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 3)) ? success : failure;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 4)) ? success : failure;
MODULE biggest_fish_is5_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 5)) ? success : failure;
MODULE biggest_fish_is6_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 6)) ? success : failure;
MODULE biggest_fish_is7_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 7)) ? success : failure;
MODULE biggest_fish_is8_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 8)) ? success : failure;
MODULE biggest_fish_is9_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 9)) ? success : failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
