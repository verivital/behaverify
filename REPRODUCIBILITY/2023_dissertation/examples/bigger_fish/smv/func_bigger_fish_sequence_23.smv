MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		biggest_fish_sequence.active := TRUE;
		--START OF BLACKBOARD DEFINITIONS
		var_biggest_fish_stage_1 := 
			case
				!(bigger_fish.active) : var_biggest_fish;
				TRUE : min((1 + var_biggest_fish), 99);
			esac;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is10 : biggest_fish_is10_module(var_biggest_fish);
		biggest_fish_is11 : biggest_fish_is11_module(var_biggest_fish);
		biggest_fish_is12 : biggest_fish_is12_module(var_biggest_fish);
		biggest_fish_is13 : biggest_fish_is13_module(var_biggest_fish);
		biggest_fish_is14 : biggest_fish_is14_module(var_biggest_fish);
		biggest_fish_is15 : biggest_fish_is15_module(var_biggest_fish);
		biggest_fish_is16 : biggest_fish_is16_module(var_biggest_fish);
		biggest_fish_is17 : biggest_fish_is17_module(var_biggest_fish);
		biggest_fish_is18 : biggest_fish_is18_module(var_biggest_fish);
		biggest_fish_is19 : biggest_fish_is19_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is20 : biggest_fish_is20_module(var_biggest_fish);
		biggest_fish_is21 : biggest_fish_is21_module(var_biggest_fish);
		biggest_fish_is22 : biggest_fish_is22_module(var_biggest_fish);
		biggest_fish_is23 : biggest_fish_is23_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		biggest_fish_is5 : biggest_fish_is5_module(var_biggest_fish);
		biggest_fish_is6 : biggest_fish_is6_module(var_biggest_fish);
		biggest_fish_is7 : biggest_fish_is7_module(var_biggest_fish);
		biggest_fish_is8 : biggest_fish_is8_module(var_biggest_fish);
		biggest_fish_is9 : biggest_fish_is9_module(var_biggest_fish);
		biggest_fish_sequence_NEXT_2 : composite_sequence_without_memory_END;
		biggest_fish_sequence_NEXT_1 : composite_sequence_without_memory(biggest_fish_sequence_NEXT_2, bigger_fish);
		biggest_fish_sequence : composite_sequence_without_memory(biggest_fish_sequence_NEXT_1, special_decorator);
		decorator0 : decorator_inverter(biggest_fish_is0);
		decorator1 : decorator_inverter(biggest_fish_is1);
		decorator10 : decorator_inverter(biggest_fish_is10);
		decorator11 : decorator_inverter(biggest_fish_is11);
		decorator12 : decorator_inverter(biggest_fish_is12);
		decorator13 : decorator_inverter(biggest_fish_is13);
		decorator14 : decorator_inverter(biggest_fish_is14);
		decorator15 : decorator_inverter(biggest_fish_is15);
		decorator16 : decorator_inverter(biggest_fish_is16);
		decorator17 : decorator_inverter(biggest_fish_is17);
		decorator18 : decorator_inverter(biggest_fish_is18);
		decorator19 : decorator_inverter(biggest_fish_is19);
		decorator2 : decorator_inverter(biggest_fish_is2);
		decorator20 : decorator_inverter(biggest_fish_is20);
		decorator21 : decorator_inverter(biggest_fish_is21);
		decorator22 : decorator_inverter(biggest_fish_is22);
		decorator23 : decorator_inverter(biggest_fish_is23);
		decorator3 : decorator_inverter(biggest_fish_is3);
		decorator4 : decorator_inverter(biggest_fish_is4);
		decorator5 : decorator_inverter(biggest_fish_is5);
		decorator6 : decorator_inverter(biggest_fish_is6);
		decorator7 : decorator_inverter(biggest_fish_is7);
		decorator8 : decorator_inverter(biggest_fish_is8);
		decorator9 : decorator_inverter(biggest_fish_is9);
		sequence11_NEXT_5 : composite_sequence_without_memory_END;
		sequence11_NEXT_4 : composite_sequence_without_memory(sequence11_NEXT_5, sequence7);
		sequence11_NEXT_3 : composite_sequence_without_memory(sequence11_NEXT_4, decorator11);
		sequence11_NEXT_2 : composite_sequence_without_memory(sequence11_NEXT_3, decorator10);
		sequence11_NEXT_1 : composite_sequence_without_memory(sequence11_NEXT_2, decorator9);
		sequence11 : composite_sequence_without_memory(sequence11_NEXT_1, decorator8);
		sequence15_NEXT_5 : composite_sequence_without_memory_END;
		sequence15_NEXT_4 : composite_sequence_without_memory(sequence15_NEXT_5, sequence11);
		sequence15_NEXT_3 : composite_sequence_without_memory(sequence15_NEXT_4, decorator15);
		sequence15_NEXT_2 : composite_sequence_without_memory(sequence15_NEXT_3, decorator14);
		sequence15_NEXT_1 : composite_sequence_without_memory(sequence15_NEXT_2, decorator13);
		sequence15 : composite_sequence_without_memory(sequence15_NEXT_1, decorator12);
		sequence19_NEXT_5 : composite_sequence_without_memory_END;
		sequence19_NEXT_4 : composite_sequence_without_memory(sequence19_NEXT_5, sequence15);
		sequence19_NEXT_3 : composite_sequence_without_memory(sequence19_NEXT_4, decorator19);
		sequence19_NEXT_2 : composite_sequence_without_memory(sequence19_NEXT_3, decorator18);
		sequence19_NEXT_1 : composite_sequence_without_memory(sequence19_NEXT_2, decorator17);
		sequence19 : composite_sequence_without_memory(sequence19_NEXT_1, decorator16);
		sequence23_NEXT_5 : composite_sequence_without_memory_END;
		sequence23_NEXT_4 : composite_sequence_without_memory(sequence23_NEXT_5, sequence19);
		sequence23_NEXT_3 : composite_sequence_without_memory(sequence23_NEXT_4, decorator23);
		sequence23_NEXT_2 : composite_sequence_without_memory(sequence23_NEXT_3, decorator22);
		sequence23_NEXT_1 : composite_sequence_without_memory(sequence23_NEXT_2, decorator21);
		sequence23 : composite_sequence_without_memory(sequence23_NEXT_1, decorator20);
		sequence3_NEXT_4 : composite_sequence_without_memory_END;
		sequence3_NEXT_3 : composite_sequence_without_memory(sequence3_NEXT_4, decorator3);
		sequence3_NEXT_2 : composite_sequence_without_memory(sequence3_NEXT_3, decorator2);
		sequence3_NEXT_1 : composite_sequence_without_memory(sequence3_NEXT_2, decorator1);
		sequence3 : composite_sequence_without_memory(sequence3_NEXT_1, decorator0);
		sequence7_NEXT_5 : composite_sequence_without_memory_END;
		sequence7_NEXT_4 : composite_sequence_without_memory(sequence7_NEXT_5, sequence3);
		sequence7_NEXT_3 : composite_sequence_without_memory(sequence7_NEXT_4, decorator7);
		sequence7_NEXT_2 : composite_sequence_without_memory(sequence7_NEXT_3, decorator6);
		sequence7_NEXT_1 : composite_sequence_without_memory(sequence7_NEXT_2, decorator5);
		sequence7 : composite_sequence_without_memory(sequence7_NEXT_1, decorator4);
		special_decorator : decorator_inverter(sequence23);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..99;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) := var_biggest_fish_stage_1;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 24)));
CTLSPEC AF(AG((var_biggest_fish = 24)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		sequence23 := 2;
		decorator20 := 3;
		biggest_fish_is20 := 4;
		decorator21 := 5;
		biggest_fish_is21 := 6;
		decorator22 := 7;
		biggest_fish_is22 := 8;
		decorator23 := 9;
		biggest_fish_is23 := 10;
		sequence19 := 11;
		decorator16 := 12;
		biggest_fish_is16 := 13;
		decorator17 := 14;
		biggest_fish_is17 := 15;
		decorator18 := 16;
		biggest_fish_is18 := 17;
		decorator19 := 18;
		biggest_fish_is19 := 19;
		sequence15 := 20;
		decorator12 := 21;
		biggest_fish_is12 := 22;
		decorator13 := 23;
		biggest_fish_is13 := 24;
		decorator14 := 25;
		biggest_fish_is14 := 26;
		decorator15 := 27;
		biggest_fish_is15 := 28;
		sequence11 := 29;
		decorator8 := 30;
		biggest_fish_is8 := 31;
		decorator9 := 32;
		biggest_fish_is9 := 33;
		decorator10 := 34;
		biggest_fish_is10 := 35;
		decorator11 := 36;
		biggest_fish_is11 := 37;
		sequence7 := 38;
		decorator4 := 39;
		biggest_fish_is4 := 40;
		decorator5 := 41;
		biggest_fish_is5 := 42;
		decorator6 := 43;
		biggest_fish_is6 := 44;
		decorator7 := 45;
		biggest_fish_is7 := 46;
		sequence3 := 47;
		decorator0 := 48;
		biggest_fish_is0 := 49;
		decorator1 := 50;
		biggest_fish_is1 := 51;
		decorator2 := 52;
		biggest_fish_is2 := 53;
		decorator3 := 54;
		biggest_fish_is3 := 55;
		bigger_fish := 56;
MODULE decorator_inverter(child_0)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.status = success : failure;
				child_0.status = failure : success;
				TRUE : child_0.status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 0)) ? success : failure;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 1)) ? success : failure;
MODULE biggest_fish_is10_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 10)) ? success : failure;
MODULE biggest_fish_is11_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 11)) ? success : failure;
MODULE biggest_fish_is12_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 12)) ? success : failure;
MODULE biggest_fish_is13_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 13)) ? success : failure;
MODULE biggest_fish_is14_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 14)) ? success : failure;
MODULE biggest_fish_is15_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 15)) ? success : failure;
MODULE biggest_fish_is16_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 16)) ? success : failure;
MODULE biggest_fish_is17_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 17)) ? success : failure;
MODULE biggest_fish_is18_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 18)) ? success : failure;
MODULE biggest_fish_is19_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 19)) ? success : failure;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 2)) ? success : failure;
MODULE biggest_fish_is20_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 20)) ? success : failure;
MODULE biggest_fish_is21_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 21)) ? success : failure;
MODULE biggest_fish_is22_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 22)) ? success : failure;
MODULE biggest_fish_is23_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 23)) ? success : failure;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 3)) ? success : failure;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 4)) ? success : failure;
MODULE biggest_fish_is5_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 5)) ? success : failure;
MODULE biggest_fish_is6_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 6)) ? success : failure;
MODULE biggest_fish_is7_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 7)) ? success : failure;
MODULE biggest_fish_is8_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 8)) ? success : failure;
MODULE biggest_fish_is9_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 9)) ? success : failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
