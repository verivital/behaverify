MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator195 := -3;
		resume_from_here_in_subtree__decorator196 := -3;
		resume_from_here_in_subtree__decorator197 := -3;
		resume_from_here_in_subtree__decorator198 := -3;
		resume_from_here_in_subtree__parallel194 := -3;
		resume_from_here_in_subtree__decorator191 := -3;
		resume_from_here_in_subtree__decorator192 := -3;
		resume_from_here_in_subtree__decorator193 := -3;
		resume_from_here_in_subtree__decorator194 := -3;
		resume_from_here_in_subtree__parallel190 := -3;
		resume_from_here_in_subtree__decorator187 := -3;
		resume_from_here_in_subtree__decorator188 := -3;
		resume_from_here_in_subtree__decorator189 := -3;
		resume_from_here_in_subtree__decorator190 := -3;
		resume_from_here_in_subtree__parallel186 := -3;
		resume_from_here_in_subtree__decorator183 := -3;
		resume_from_here_in_subtree__decorator184 := -3;
		resume_from_here_in_subtree__decorator185 := -3;
		resume_from_here_in_subtree__decorator186 := -3;
		resume_from_here_in_subtree__parallel182 := -3;
		resume_from_here_in_subtree__decorator179 := -3;
		resume_from_here_in_subtree__decorator180 := -3;
		resume_from_here_in_subtree__decorator181 := -3;
		resume_from_here_in_subtree__decorator182 := -3;
		resume_from_here_in_subtree__parallel178 := -3;
		resume_from_here_in_subtree__decorator175 := -3;
		resume_from_here_in_subtree__decorator176 := -3;
		resume_from_here_in_subtree__decorator177 := -3;
		resume_from_here_in_subtree__decorator178 := -3;
		resume_from_here_in_subtree__parallel174 := -3;
		resume_from_here_in_subtree__decorator171 := -3;
		resume_from_here_in_subtree__decorator172 := -3;
		resume_from_here_in_subtree__decorator173 := -3;
		resume_from_here_in_subtree__decorator174 := -3;
		resume_from_here_in_subtree__parallel170 := -3;
		resume_from_here_in_subtree__decorator167 := -3;
		resume_from_here_in_subtree__decorator168 := -3;
		resume_from_here_in_subtree__decorator169 := -3;
		resume_from_here_in_subtree__decorator170 := -3;
		resume_from_here_in_subtree__parallel166 := -3;
		resume_from_here_in_subtree__decorator163 := -3;
		resume_from_here_in_subtree__decorator164 := -3;
		resume_from_here_in_subtree__decorator165 := -3;
		resume_from_here_in_subtree__decorator166 := -3;
		resume_from_here_in_subtree__parallel162 := -3;
		resume_from_here_in_subtree__decorator159 := -3;
		resume_from_here_in_subtree__decorator160 := -3;
		resume_from_here_in_subtree__decorator161 := -3;
		resume_from_here_in_subtree__decorator162 := -3;
		resume_from_here_in_subtree__parallel158 := -3;
		resume_from_here_in_subtree__decorator155 := -3;
		resume_from_here_in_subtree__decorator156 := -3;
		resume_from_here_in_subtree__decorator157 := -3;
		resume_from_here_in_subtree__decorator158 := -3;
		resume_from_here_in_subtree__parallel154 := -3;
		resume_from_here_in_subtree__decorator151 := -3;
		resume_from_here_in_subtree__decorator152 := -3;
		resume_from_here_in_subtree__decorator153 := -3;
		resume_from_here_in_subtree__decorator154 := -3;
		resume_from_here_in_subtree__parallel150 := -3;
		resume_from_here_in_subtree__decorator147 := -3;
		resume_from_here_in_subtree__decorator148 := -3;
		resume_from_here_in_subtree__decorator149 := -3;
		resume_from_here_in_subtree__decorator150 := -3;
		resume_from_here_in_subtree__parallel146 := -3;
		resume_from_here_in_subtree__decorator143 := -3;
		resume_from_here_in_subtree__decorator144 := -3;
		resume_from_here_in_subtree__decorator145 := -3;
		resume_from_here_in_subtree__decorator146 := -3;
		resume_from_here_in_subtree__parallel142 := -3;
		resume_from_here_in_subtree__decorator139 := -3;
		resume_from_here_in_subtree__decorator140 := -3;
		resume_from_here_in_subtree__decorator141 := -3;
		resume_from_here_in_subtree__decorator142 := -3;
		resume_from_here_in_subtree__parallel138 := -3;
		resume_from_here_in_subtree__decorator135 := -3;
		resume_from_here_in_subtree__decorator136 := -3;
		resume_from_here_in_subtree__decorator137 := -3;
		resume_from_here_in_subtree__decorator138 := -3;
		resume_from_here_in_subtree__parallel134 := -3;
		resume_from_here_in_subtree__decorator131 := -3;
		resume_from_here_in_subtree__decorator132 := -3;
		resume_from_here_in_subtree__decorator133 := -3;
		resume_from_here_in_subtree__decorator134 := -3;
		resume_from_here_in_subtree__parallel130 := -3;
		resume_from_here_in_subtree__decorator127 := -3;
		resume_from_here_in_subtree__decorator128 := -3;
		resume_from_here_in_subtree__decorator129 := -3;
		resume_from_here_in_subtree__decorator130 := -3;
		resume_from_here_in_subtree__parallel126 := -3;
		resume_from_here_in_subtree__decorator123 := -3;
		resume_from_here_in_subtree__decorator124 := -3;
		resume_from_here_in_subtree__decorator125 := -3;
		resume_from_here_in_subtree__decorator126 := -3;
		resume_from_here_in_subtree__parallel122 := -3;
		resume_from_here_in_subtree__decorator119 := -3;
		resume_from_here_in_subtree__decorator120 := -3;
		resume_from_here_in_subtree__decorator121 := -3;
		resume_from_here_in_subtree__decorator122 := -3;
		resume_from_here_in_subtree__parallel118 := -3;
		resume_from_here_in_subtree__decorator115 := -3;
		resume_from_here_in_subtree__decorator116 := -3;
		resume_from_here_in_subtree__decorator117 := -3;
		resume_from_here_in_subtree__decorator118 := -3;
		resume_from_here_in_subtree__parallel114 := -3;
		resume_from_here_in_subtree__decorator111 := -3;
		resume_from_here_in_subtree__decorator112 := -3;
		resume_from_here_in_subtree__decorator113 := -3;
		resume_from_here_in_subtree__decorator114 := -3;
		resume_from_here_in_subtree__parallel110 := -3;
		resume_from_here_in_subtree__decorator107 := -3;
		resume_from_here_in_subtree__decorator108 := -3;
		resume_from_here_in_subtree__decorator109 := -3;
		resume_from_here_in_subtree__decorator110 := -3;
		resume_from_here_in_subtree__parallel106 := -3;
		resume_from_here_in_subtree__decorator103 := -3;
		resume_from_here_in_subtree__decorator104 := -3;
		resume_from_here_in_subtree__decorator105 := -3;
		resume_from_here_in_subtree__decorator106 := -3;
		resume_from_here_in_subtree__parallel102 := -3;
		resume_from_here_in_subtree__decorator99 := -3;
		resume_from_here_in_subtree__decorator100 := -3;
		resume_from_here_in_subtree__decorator101 := -3;
		resume_from_here_in_subtree__decorator102 := -3;
		resume_from_here_in_subtree__parallel98 := -3;
		resume_from_here_in_subtree__decorator95 := -3;
		resume_from_here_in_subtree__decorator96 := -3;
		resume_from_here_in_subtree__decorator97 := -3;
		resume_from_here_in_subtree__decorator98 := -3;
		resume_from_here_in_subtree__parallel94 := -3;
		resume_from_here_in_subtree__decorator91 := -3;
		resume_from_here_in_subtree__decorator92 := -3;
		resume_from_here_in_subtree__decorator93 := -3;
		resume_from_here_in_subtree__decorator94 := -3;
		resume_from_here_in_subtree__parallel90 := -3;
		resume_from_here_in_subtree__decorator87 := -3;
		resume_from_here_in_subtree__decorator88 := -3;
		resume_from_here_in_subtree__decorator89 := -3;
		resume_from_here_in_subtree__decorator90 := -3;
		resume_from_here_in_subtree__parallel86 := -3;
		resume_from_here_in_subtree__decorator83 := -3;
		resume_from_here_in_subtree__decorator84 := -3;
		resume_from_here_in_subtree__decorator85 := -3;
		resume_from_here_in_subtree__decorator86 := -3;
		resume_from_here_in_subtree__parallel82 := -3;
		resume_from_here_in_subtree__decorator79 := -3;
		resume_from_here_in_subtree__decorator80 := -3;
		resume_from_here_in_subtree__decorator81 := -3;
		resume_from_here_in_subtree__decorator82 := -3;
		resume_from_here_in_subtree__parallel78 := -3;
		resume_from_here_in_subtree__decorator75 := -3;
		resume_from_here_in_subtree__decorator76 := -3;
		resume_from_here_in_subtree__decorator77 := -3;
		resume_from_here_in_subtree__decorator78 := -3;
		resume_from_here_in_subtree__parallel74 := -3;
		resume_from_here_in_subtree__decorator71 := -3;
		resume_from_here_in_subtree__decorator72 := -3;
		resume_from_here_in_subtree__decorator73 := -3;
		resume_from_here_in_subtree__decorator74 := -3;
		resume_from_here_in_subtree__parallel70 := -3;
		resume_from_here_in_subtree__decorator67 := -3;
		resume_from_here_in_subtree__decorator68 := -3;
		resume_from_here_in_subtree__decorator69 := -3;
		resume_from_here_in_subtree__decorator70 := -3;
		resume_from_here_in_subtree__parallel66 := -3;
		resume_from_here_in_subtree__decorator63 := -3;
		resume_from_here_in_subtree__decorator64 := -3;
		resume_from_here_in_subtree__decorator65 := -3;
		resume_from_here_in_subtree__decorator66 := -3;
		resume_from_here_in_subtree__parallel62 := -3;
		resume_from_here_in_subtree__decorator59 := -3;
		resume_from_here_in_subtree__decorator60 := -3;
		resume_from_here_in_subtree__decorator61 := -3;
		resume_from_here_in_subtree__decorator62 := -3;
		resume_from_here_in_subtree__parallel58 := -3;
		resume_from_here_in_subtree__decorator55 := -3;
		resume_from_here_in_subtree__decorator56 := -3;
		resume_from_here_in_subtree__decorator57 := -3;
		resume_from_here_in_subtree__decorator58 := -3;
		resume_from_here_in_subtree__parallel54 := -3;
		resume_from_here_in_subtree__decorator51 := -3;
		resume_from_here_in_subtree__decorator52 := -3;
		resume_from_here_in_subtree__decorator53 := -3;
		resume_from_here_in_subtree__decorator54 := -3;
		resume_from_here_in_subtree__parallel50 := -3;
		resume_from_here_in_subtree__decorator47 := -3;
		resume_from_here_in_subtree__decorator48 := -3;
		resume_from_here_in_subtree__decorator49 := -3;
		resume_from_here_in_subtree__decorator50 := -3;
		resume_from_here_in_subtree__parallel46 := -3;
		resume_from_here_in_subtree__decorator43 := -3;
		resume_from_here_in_subtree__decorator44 := -3;
		resume_from_here_in_subtree__decorator45 := -3;
		resume_from_here_in_subtree__decorator46 := -3;
		resume_from_here_in_subtree__parallel42 := -3;
		resume_from_here_in_subtree__decorator39 := -3;
		resume_from_here_in_subtree__decorator40 := -3;
		resume_from_here_in_subtree__decorator41 := -3;
		resume_from_here_in_subtree__decorator42 := -3;
		resume_from_here_in_subtree__parallel38 := -3;
		resume_from_here_in_subtree__decorator35 := -3;
		resume_from_here_in_subtree__decorator36 := -3;
		resume_from_here_in_subtree__decorator37 := -3;
		resume_from_here_in_subtree__decorator38 := -3;
		resume_from_here_in_subtree__parallel34 := -3;
		resume_from_here_in_subtree__decorator31 := -3;
		resume_from_here_in_subtree__decorator32 := -3;
		resume_from_here_in_subtree__decorator33 := -3;
		resume_from_here_in_subtree__decorator34 := -3;
		resume_from_here_in_subtree__parallel30 := -3;
		resume_from_here_in_subtree__decorator27 := -3;
		resume_from_here_in_subtree__decorator28 := -3;
		resume_from_here_in_subtree__decorator29 := -3;
		resume_from_here_in_subtree__decorator30 := -3;
		resume_from_here_in_subtree__parallel26 := -3;
		resume_from_here_in_subtree__decorator23 := -3;
		resume_from_here_in_subtree__decorator24 := -3;
		resume_from_here_in_subtree__decorator25 := -3;
		resume_from_here_in_subtree__decorator26 := -3;
		resume_from_here_in_subtree__parallel22 := -3;
		resume_from_here_in_subtree__decorator19 := -3;
		resume_from_here_in_subtree__decorator20 := -3;
		resume_from_here_in_subtree__decorator21 := -3;
		resume_from_here_in_subtree__decorator22 := -3;
		resume_from_here_in_subtree__parallel18 := -3;
		resume_from_here_in_subtree__decorator15 := -3;
		resume_from_here_in_subtree__decorator16 := -3;
		resume_from_here_in_subtree__decorator17 := -3;
		resume_from_here_in_subtree__decorator18 := -3;
		resume_from_here_in_subtree__parallel14 := -3;
		resume_from_here_in_subtree__decorator11 := -3;
		resume_from_here_in_subtree__decorator12 := -3;
		resume_from_here_in_subtree__decorator13 := -3;
		resume_from_here_in_subtree__decorator14 := -3;
		resume_from_here_in_subtree__parallel10 := -3;
		resume_from_here_in_subtree__decorator7 := -3;
		resume_from_here_in_subtree__decorator8 := -3;
		resume_from_here_in_subtree__decorator9 := -3;
		resume_from_here_in_subtree__decorator10 := -3;
		resume_from_here_in_subtree__parallel6 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator5 := -3;
		resume_from_here_in_subtree__decorator6 := -3;
		resume_from_here_in_subtree__parallel2 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		biggest_fish_sequence.active := TRUE;
		parallel10.status := parallel10.active ? parallel10.internal_status : invalid;
		parallel10.internal_status := 
			case
				count(decorator7.internal_status = failure, decorator8.internal_status = failure, decorator9.internal_status = failure, decorator10.internal_status = failure, parallel6.internal_status = failure) >= 1 : failure;
				count(decorator7.internal_status = success, decorator8.internal_status = success, decorator9.internal_status = success, decorator10.internal_status = success, parallel6.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel102.status := parallel102.active ? parallel102.internal_status : invalid;
		parallel102.internal_status := 
			case
				count(decorator99.internal_status = failure, decorator100.internal_status = failure, decorator101.internal_status = failure, decorator102.internal_status = failure, parallel98.internal_status = failure) >= 1 : failure;
				count(decorator99.internal_status = success, decorator100.internal_status = success, decorator101.internal_status = success, decorator102.internal_status = success, parallel98.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel106.status := parallel106.active ? parallel106.internal_status : invalid;
		parallel106.internal_status := 
			case
				count(decorator103.internal_status = failure, decorator104.internal_status = failure, decorator105.internal_status = failure, decorator106.internal_status = failure, parallel102.internal_status = failure) >= 1 : failure;
				count(decorator103.internal_status = success, decorator104.internal_status = success, decorator105.internal_status = success, decorator106.internal_status = success, parallel102.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel110.status := parallel110.active ? parallel110.internal_status : invalid;
		parallel110.internal_status := 
			case
				count(decorator107.internal_status = failure, decorator108.internal_status = failure, decorator109.internal_status = failure, decorator110.internal_status = failure, parallel106.internal_status = failure) >= 1 : failure;
				count(decorator107.internal_status = success, decorator108.internal_status = success, decorator109.internal_status = success, decorator110.internal_status = success, parallel106.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel114.status := parallel114.active ? parallel114.internal_status : invalid;
		parallel114.internal_status := 
			case
				count(decorator111.internal_status = failure, decorator112.internal_status = failure, decorator113.internal_status = failure, decorator114.internal_status = failure, parallel110.internal_status = failure) >= 1 : failure;
				count(decorator111.internal_status = success, decorator112.internal_status = success, decorator113.internal_status = success, decorator114.internal_status = success, parallel110.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel118.status := parallel118.active ? parallel118.internal_status : invalid;
		parallel118.internal_status := 
			case
				count(decorator115.internal_status = failure, decorator116.internal_status = failure, decorator117.internal_status = failure, decorator118.internal_status = failure, parallel114.internal_status = failure) >= 1 : failure;
				count(decorator115.internal_status = success, decorator116.internal_status = success, decorator117.internal_status = success, decorator118.internal_status = success, parallel114.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel122.status := parallel122.active ? parallel122.internal_status : invalid;
		parallel122.internal_status := 
			case
				count(decorator119.internal_status = failure, decorator120.internal_status = failure, decorator121.internal_status = failure, decorator122.internal_status = failure, parallel118.internal_status = failure) >= 1 : failure;
				count(decorator119.internal_status = success, decorator120.internal_status = success, decorator121.internal_status = success, decorator122.internal_status = success, parallel118.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel126.status := parallel126.active ? parallel126.internal_status : invalid;
		parallel126.internal_status := 
			case
				count(decorator123.internal_status = failure, decorator124.internal_status = failure, decorator125.internal_status = failure, decorator126.internal_status = failure, parallel122.internal_status = failure) >= 1 : failure;
				count(decorator123.internal_status = success, decorator124.internal_status = success, decorator125.internal_status = success, decorator126.internal_status = success, parallel122.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel130.status := parallel130.active ? parallel130.internal_status : invalid;
		parallel130.internal_status := 
			case
				count(decorator127.internal_status = failure, decorator128.internal_status = failure, decorator129.internal_status = failure, decorator130.internal_status = failure, parallel126.internal_status = failure) >= 1 : failure;
				count(decorator127.internal_status = success, decorator128.internal_status = success, decorator129.internal_status = success, decorator130.internal_status = success, parallel126.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel134.status := parallel134.active ? parallel134.internal_status : invalid;
		parallel134.internal_status := 
			case
				count(decorator131.internal_status = failure, decorator132.internal_status = failure, decorator133.internal_status = failure, decorator134.internal_status = failure, parallel130.internal_status = failure) >= 1 : failure;
				count(decorator131.internal_status = success, decorator132.internal_status = success, decorator133.internal_status = success, decorator134.internal_status = success, parallel130.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel138.status := parallel138.active ? parallel138.internal_status : invalid;
		parallel138.internal_status := 
			case
				count(decorator135.internal_status = failure, decorator136.internal_status = failure, decorator137.internal_status = failure, decorator138.internal_status = failure, parallel134.internal_status = failure) >= 1 : failure;
				count(decorator135.internal_status = success, decorator136.internal_status = success, decorator137.internal_status = success, decorator138.internal_status = success, parallel134.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel14.status := parallel14.active ? parallel14.internal_status : invalid;
		parallel14.internal_status := 
			case
				count(decorator11.internal_status = failure, decorator12.internal_status = failure, decorator13.internal_status = failure, decorator14.internal_status = failure, parallel10.internal_status = failure) >= 1 : failure;
				count(decorator11.internal_status = success, decorator12.internal_status = success, decorator13.internal_status = success, decorator14.internal_status = success, parallel10.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel142.status := parallel142.active ? parallel142.internal_status : invalid;
		parallel142.internal_status := 
			case
				count(decorator139.internal_status = failure, decorator140.internal_status = failure, decorator141.internal_status = failure, decorator142.internal_status = failure, parallel138.internal_status = failure) >= 1 : failure;
				count(decorator139.internal_status = success, decorator140.internal_status = success, decorator141.internal_status = success, decorator142.internal_status = success, parallel138.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel146.status := parallel146.active ? parallel146.internal_status : invalid;
		parallel146.internal_status := 
			case
				count(decorator143.internal_status = failure, decorator144.internal_status = failure, decorator145.internal_status = failure, decorator146.internal_status = failure, parallel142.internal_status = failure) >= 1 : failure;
				count(decorator143.internal_status = success, decorator144.internal_status = success, decorator145.internal_status = success, decorator146.internal_status = success, parallel142.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel150.status := parallel150.active ? parallel150.internal_status : invalid;
		parallel150.internal_status := 
			case
				count(decorator147.internal_status = failure, decorator148.internal_status = failure, decorator149.internal_status = failure, decorator150.internal_status = failure, parallel146.internal_status = failure) >= 1 : failure;
				count(decorator147.internal_status = success, decorator148.internal_status = success, decorator149.internal_status = success, decorator150.internal_status = success, parallel146.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel154.status := parallel154.active ? parallel154.internal_status : invalid;
		parallel154.internal_status := 
			case
				count(decorator151.internal_status = failure, decorator152.internal_status = failure, decorator153.internal_status = failure, decorator154.internal_status = failure, parallel150.internal_status = failure) >= 1 : failure;
				count(decorator151.internal_status = success, decorator152.internal_status = success, decorator153.internal_status = success, decorator154.internal_status = success, parallel150.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel158.status := parallel158.active ? parallel158.internal_status : invalid;
		parallel158.internal_status := 
			case
				count(decorator155.internal_status = failure, decorator156.internal_status = failure, decorator157.internal_status = failure, decorator158.internal_status = failure, parallel154.internal_status = failure) >= 1 : failure;
				count(decorator155.internal_status = success, decorator156.internal_status = success, decorator157.internal_status = success, decorator158.internal_status = success, parallel154.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel162.status := parallel162.active ? parallel162.internal_status : invalid;
		parallel162.internal_status := 
			case
				count(decorator159.internal_status = failure, decorator160.internal_status = failure, decorator161.internal_status = failure, decorator162.internal_status = failure, parallel158.internal_status = failure) >= 1 : failure;
				count(decorator159.internal_status = success, decorator160.internal_status = success, decorator161.internal_status = success, decorator162.internal_status = success, parallel158.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel166.status := parallel166.active ? parallel166.internal_status : invalid;
		parallel166.internal_status := 
			case
				count(decorator163.internal_status = failure, decorator164.internal_status = failure, decorator165.internal_status = failure, decorator166.internal_status = failure, parallel162.internal_status = failure) >= 1 : failure;
				count(decorator163.internal_status = success, decorator164.internal_status = success, decorator165.internal_status = success, decorator166.internal_status = success, parallel162.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel170.status := parallel170.active ? parallel170.internal_status : invalid;
		parallel170.internal_status := 
			case
				count(decorator167.internal_status = failure, decorator168.internal_status = failure, decorator169.internal_status = failure, decorator170.internal_status = failure, parallel166.internal_status = failure) >= 1 : failure;
				count(decorator167.internal_status = success, decorator168.internal_status = success, decorator169.internal_status = success, decorator170.internal_status = success, parallel166.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel174.status := parallel174.active ? parallel174.internal_status : invalid;
		parallel174.internal_status := 
			case
				count(decorator171.internal_status = failure, decorator172.internal_status = failure, decorator173.internal_status = failure, decorator174.internal_status = failure, parallel170.internal_status = failure) >= 1 : failure;
				count(decorator171.internal_status = success, decorator172.internal_status = success, decorator173.internal_status = success, decorator174.internal_status = success, parallel170.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel178.status := parallel178.active ? parallel178.internal_status : invalid;
		parallel178.internal_status := 
			case
				count(decorator175.internal_status = failure, decorator176.internal_status = failure, decorator177.internal_status = failure, decorator178.internal_status = failure, parallel174.internal_status = failure) >= 1 : failure;
				count(decorator175.internal_status = success, decorator176.internal_status = success, decorator177.internal_status = success, decorator178.internal_status = success, parallel174.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel18.status := parallel18.active ? parallel18.internal_status : invalid;
		parallel18.internal_status := 
			case
				count(decorator15.internal_status = failure, decorator16.internal_status = failure, decorator17.internal_status = failure, decorator18.internal_status = failure, parallel14.internal_status = failure) >= 1 : failure;
				count(decorator15.internal_status = success, decorator16.internal_status = success, decorator17.internal_status = success, decorator18.internal_status = success, parallel14.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel182.status := parallel182.active ? parallel182.internal_status : invalid;
		parallel182.internal_status := 
			case
				count(decorator179.internal_status = failure, decorator180.internal_status = failure, decorator181.internal_status = failure, decorator182.internal_status = failure, parallel178.internal_status = failure) >= 1 : failure;
				count(decorator179.internal_status = success, decorator180.internal_status = success, decorator181.internal_status = success, decorator182.internal_status = success, parallel178.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel186.status := parallel186.active ? parallel186.internal_status : invalid;
		parallel186.internal_status := 
			case
				count(decorator183.internal_status = failure, decorator184.internal_status = failure, decorator185.internal_status = failure, decorator186.internal_status = failure, parallel182.internal_status = failure) >= 1 : failure;
				count(decorator183.internal_status = success, decorator184.internal_status = success, decorator185.internal_status = success, decorator186.internal_status = success, parallel182.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel190.status := parallel190.active ? parallel190.internal_status : invalid;
		parallel190.internal_status := 
			case
				count(decorator187.internal_status = failure, decorator188.internal_status = failure, decorator189.internal_status = failure, decorator190.internal_status = failure, parallel186.internal_status = failure) >= 1 : failure;
				count(decorator187.internal_status = success, decorator188.internal_status = success, decorator189.internal_status = success, decorator190.internal_status = success, parallel186.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel194.status := parallel194.active ? parallel194.internal_status : invalid;
		parallel194.internal_status := 
			case
				count(decorator191.internal_status = failure, decorator192.internal_status = failure, decorator193.internal_status = failure, decorator194.internal_status = failure, parallel190.internal_status = failure) >= 1 : failure;
				count(decorator191.internal_status = success, decorator192.internal_status = success, decorator193.internal_status = success, decorator194.internal_status = success, parallel190.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel198.status := parallel198.active ? parallel198.internal_status : invalid;
		parallel198.internal_status := 
			case
				count(decorator195.internal_status = failure, decorator196.internal_status = failure, decorator197.internal_status = failure, decorator198.internal_status = failure, parallel194.internal_status = failure) >= 1 : failure;
				count(decorator195.internal_status = success, decorator196.internal_status = success, decorator197.internal_status = success, decorator198.internal_status = success, parallel194.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel2.status := parallel2.active ? parallel2.internal_status : invalid;
		parallel2.internal_status := 
			case
				count(decorator0.internal_status = failure, decorator1.internal_status = failure, decorator2.internal_status = failure) >= 1 : failure;
				count(decorator0.internal_status = success, decorator1.internal_status = success, decorator2.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel22.status := parallel22.active ? parallel22.internal_status : invalid;
		parallel22.internal_status := 
			case
				count(decorator19.internal_status = failure, decorator20.internal_status = failure, decorator21.internal_status = failure, decorator22.internal_status = failure, parallel18.internal_status = failure) >= 1 : failure;
				count(decorator19.internal_status = success, decorator20.internal_status = success, decorator21.internal_status = success, decorator22.internal_status = success, parallel18.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel26.status := parallel26.active ? parallel26.internal_status : invalid;
		parallel26.internal_status := 
			case
				count(decorator23.internal_status = failure, decorator24.internal_status = failure, decorator25.internal_status = failure, decorator26.internal_status = failure, parallel22.internal_status = failure) >= 1 : failure;
				count(decorator23.internal_status = success, decorator24.internal_status = success, decorator25.internal_status = success, decorator26.internal_status = success, parallel22.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel30.status := parallel30.active ? parallel30.internal_status : invalid;
		parallel30.internal_status := 
			case
				count(decorator27.internal_status = failure, decorator28.internal_status = failure, decorator29.internal_status = failure, decorator30.internal_status = failure, parallel26.internal_status = failure) >= 1 : failure;
				count(decorator27.internal_status = success, decorator28.internal_status = success, decorator29.internal_status = success, decorator30.internal_status = success, parallel26.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel34.status := parallel34.active ? parallel34.internal_status : invalid;
		parallel34.internal_status := 
			case
				count(decorator31.internal_status = failure, decorator32.internal_status = failure, decorator33.internal_status = failure, decorator34.internal_status = failure, parallel30.internal_status = failure) >= 1 : failure;
				count(decorator31.internal_status = success, decorator32.internal_status = success, decorator33.internal_status = success, decorator34.internal_status = success, parallel30.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel38.status := parallel38.active ? parallel38.internal_status : invalid;
		parallel38.internal_status := 
			case
				count(decorator35.internal_status = failure, decorator36.internal_status = failure, decorator37.internal_status = failure, decorator38.internal_status = failure, parallel34.internal_status = failure) >= 1 : failure;
				count(decorator35.internal_status = success, decorator36.internal_status = success, decorator37.internal_status = success, decorator38.internal_status = success, parallel34.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel42.status := parallel42.active ? parallel42.internal_status : invalid;
		parallel42.internal_status := 
			case
				count(decorator39.internal_status = failure, decorator40.internal_status = failure, decorator41.internal_status = failure, decorator42.internal_status = failure, parallel38.internal_status = failure) >= 1 : failure;
				count(decorator39.internal_status = success, decorator40.internal_status = success, decorator41.internal_status = success, decorator42.internal_status = success, parallel38.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel46.status := parallel46.active ? parallel46.internal_status : invalid;
		parallel46.internal_status := 
			case
				count(decorator43.internal_status = failure, decorator44.internal_status = failure, decorator45.internal_status = failure, decorator46.internal_status = failure, parallel42.internal_status = failure) >= 1 : failure;
				count(decorator43.internal_status = success, decorator44.internal_status = success, decorator45.internal_status = success, decorator46.internal_status = success, parallel42.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel50.status := parallel50.active ? parallel50.internal_status : invalid;
		parallel50.internal_status := 
			case
				count(decorator47.internal_status = failure, decorator48.internal_status = failure, decorator49.internal_status = failure, decorator50.internal_status = failure, parallel46.internal_status = failure) >= 1 : failure;
				count(decorator47.internal_status = success, decorator48.internal_status = success, decorator49.internal_status = success, decorator50.internal_status = success, parallel46.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel54.status := parallel54.active ? parallel54.internal_status : invalid;
		parallel54.internal_status := 
			case
				count(decorator51.internal_status = failure, decorator52.internal_status = failure, decorator53.internal_status = failure, decorator54.internal_status = failure, parallel50.internal_status = failure) >= 1 : failure;
				count(decorator51.internal_status = success, decorator52.internal_status = success, decorator53.internal_status = success, decorator54.internal_status = success, parallel50.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel58.status := parallel58.active ? parallel58.internal_status : invalid;
		parallel58.internal_status := 
			case
				count(decorator55.internal_status = failure, decorator56.internal_status = failure, decorator57.internal_status = failure, decorator58.internal_status = failure, parallel54.internal_status = failure) >= 1 : failure;
				count(decorator55.internal_status = success, decorator56.internal_status = success, decorator57.internal_status = success, decorator58.internal_status = success, parallel54.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel6.status := parallel6.active ? parallel6.internal_status : invalid;
		parallel6.internal_status := 
			case
				count(decorator3.internal_status = failure, decorator4.internal_status = failure, decorator5.internal_status = failure, decorator6.internal_status = failure, parallel2.internal_status = failure) >= 1 : failure;
				count(decorator3.internal_status = success, decorator4.internal_status = success, decorator5.internal_status = success, decorator6.internal_status = success, parallel2.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel62.status := parallel62.active ? parallel62.internal_status : invalid;
		parallel62.internal_status := 
			case
				count(decorator59.internal_status = failure, decorator60.internal_status = failure, decorator61.internal_status = failure, decorator62.internal_status = failure, parallel58.internal_status = failure) >= 1 : failure;
				count(decorator59.internal_status = success, decorator60.internal_status = success, decorator61.internal_status = success, decorator62.internal_status = success, parallel58.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel66.status := parallel66.active ? parallel66.internal_status : invalid;
		parallel66.internal_status := 
			case
				count(decorator63.internal_status = failure, decorator64.internal_status = failure, decorator65.internal_status = failure, decorator66.internal_status = failure, parallel62.internal_status = failure) >= 1 : failure;
				count(decorator63.internal_status = success, decorator64.internal_status = success, decorator65.internal_status = success, decorator66.internal_status = success, parallel62.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel70.status := parallel70.active ? parallel70.internal_status : invalid;
		parallel70.internal_status := 
			case
				count(decorator67.internal_status = failure, decorator68.internal_status = failure, decorator69.internal_status = failure, decorator70.internal_status = failure, parallel66.internal_status = failure) >= 1 : failure;
				count(decorator67.internal_status = success, decorator68.internal_status = success, decorator69.internal_status = success, decorator70.internal_status = success, parallel66.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel74.status := parallel74.active ? parallel74.internal_status : invalid;
		parallel74.internal_status := 
			case
				count(decorator71.internal_status = failure, decorator72.internal_status = failure, decorator73.internal_status = failure, decorator74.internal_status = failure, parallel70.internal_status = failure) >= 1 : failure;
				count(decorator71.internal_status = success, decorator72.internal_status = success, decorator73.internal_status = success, decorator74.internal_status = success, parallel70.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel78.status := parallel78.active ? parallel78.internal_status : invalid;
		parallel78.internal_status := 
			case
				count(decorator75.internal_status = failure, decorator76.internal_status = failure, decorator77.internal_status = failure, decorator78.internal_status = failure, parallel74.internal_status = failure) >= 1 : failure;
				count(decorator75.internal_status = success, decorator76.internal_status = success, decorator77.internal_status = success, decorator78.internal_status = success, parallel74.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel82.status := parallel82.active ? parallel82.internal_status : invalid;
		parallel82.internal_status := 
			case
				count(decorator79.internal_status = failure, decorator80.internal_status = failure, decorator81.internal_status = failure, decorator82.internal_status = failure, parallel78.internal_status = failure) >= 1 : failure;
				count(decorator79.internal_status = success, decorator80.internal_status = success, decorator81.internal_status = success, decorator82.internal_status = success, parallel78.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel86.status := parallel86.active ? parallel86.internal_status : invalid;
		parallel86.internal_status := 
			case
				count(decorator83.internal_status = failure, decorator84.internal_status = failure, decorator85.internal_status = failure, decorator86.internal_status = failure, parallel82.internal_status = failure) >= 1 : failure;
				count(decorator83.internal_status = success, decorator84.internal_status = success, decorator85.internal_status = success, decorator86.internal_status = success, parallel82.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel90.status := parallel90.active ? parallel90.internal_status : invalid;
		parallel90.internal_status := 
			case
				count(decorator87.internal_status = failure, decorator88.internal_status = failure, decorator89.internal_status = failure, decorator90.internal_status = failure, parallel86.internal_status = failure) >= 1 : failure;
				count(decorator87.internal_status = success, decorator88.internal_status = success, decorator89.internal_status = success, decorator90.internal_status = success, parallel86.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel94.status := parallel94.active ? parallel94.internal_status : invalid;
		parallel94.internal_status := 
			case
				count(decorator91.internal_status = failure, decorator92.internal_status = failure, decorator93.internal_status = failure, decorator94.internal_status = failure, parallel90.internal_status = failure) >= 1 : failure;
				count(decorator91.internal_status = success, decorator92.internal_status = success, decorator93.internal_status = success, decorator94.internal_status = success, parallel90.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel98.status := parallel98.active ? parallel98.internal_status : invalid;
		parallel98.internal_status := 
			case
				count(decorator95.internal_status = failure, decorator96.internal_status = failure, decorator97.internal_status = failure, decorator98.internal_status = failure, parallel94.internal_status = failure) >= 1 : failure;
				count(decorator95.internal_status = success, decorator96.internal_status = success, decorator97.internal_status = success, decorator98.internal_status = success, parallel94.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		var_biggest_fish_stage_1 := 
			case
				!(bigger_fish.active) : var_biggest_fish;
				TRUE : min((1 + var_biggest_fish), 199);
			esac;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is10 : biggest_fish_is10_module(var_biggest_fish);
		biggest_fish_is100 : biggest_fish_is100_module(var_biggest_fish);
		biggest_fish_is101 : biggest_fish_is101_module(var_biggest_fish);
		biggest_fish_is102 : biggest_fish_is102_module(var_biggest_fish);
		biggest_fish_is103 : biggest_fish_is103_module(var_biggest_fish);
		biggest_fish_is104 : biggest_fish_is104_module(var_biggest_fish);
		biggest_fish_is105 : biggest_fish_is105_module(var_biggest_fish);
		biggest_fish_is106 : biggest_fish_is106_module(var_biggest_fish);
		biggest_fish_is107 : biggest_fish_is107_module(var_biggest_fish);
		biggest_fish_is108 : biggest_fish_is108_module(var_biggest_fish);
		biggest_fish_is109 : biggest_fish_is109_module(var_biggest_fish);
		biggest_fish_is11 : biggest_fish_is11_module(var_biggest_fish);
		biggest_fish_is110 : biggest_fish_is110_module(var_biggest_fish);
		biggest_fish_is111 : biggest_fish_is111_module(var_biggest_fish);
		biggest_fish_is112 : biggest_fish_is112_module(var_biggest_fish);
		biggest_fish_is113 : biggest_fish_is113_module(var_biggest_fish);
		biggest_fish_is114 : biggest_fish_is114_module(var_biggest_fish);
		biggest_fish_is115 : biggest_fish_is115_module(var_biggest_fish);
		biggest_fish_is116 : biggest_fish_is116_module(var_biggest_fish);
		biggest_fish_is117 : biggest_fish_is117_module(var_biggest_fish);
		biggest_fish_is118 : biggest_fish_is118_module(var_biggest_fish);
		biggest_fish_is119 : biggest_fish_is119_module(var_biggest_fish);
		biggest_fish_is12 : biggest_fish_is12_module(var_biggest_fish);
		biggest_fish_is120 : biggest_fish_is120_module(var_biggest_fish);
		biggest_fish_is121 : biggest_fish_is121_module(var_biggest_fish);
		biggest_fish_is122 : biggest_fish_is122_module(var_biggest_fish);
		biggest_fish_is123 : biggest_fish_is123_module(var_biggest_fish);
		biggest_fish_is124 : biggest_fish_is124_module(var_biggest_fish);
		biggest_fish_is125 : biggest_fish_is125_module(var_biggest_fish);
		biggest_fish_is126 : biggest_fish_is126_module(var_biggest_fish);
		biggest_fish_is127 : biggest_fish_is127_module(var_biggest_fish);
		biggest_fish_is128 : biggest_fish_is128_module(var_biggest_fish);
		biggest_fish_is129 : biggest_fish_is129_module(var_biggest_fish);
		biggest_fish_is13 : biggest_fish_is13_module(var_biggest_fish);
		biggest_fish_is130 : biggest_fish_is130_module(var_biggest_fish);
		biggest_fish_is131 : biggest_fish_is131_module(var_biggest_fish);
		biggest_fish_is132 : biggest_fish_is132_module(var_biggest_fish);
		biggest_fish_is133 : biggest_fish_is133_module(var_biggest_fish);
		biggest_fish_is134 : biggest_fish_is134_module(var_biggest_fish);
		biggest_fish_is135 : biggest_fish_is135_module(var_biggest_fish);
		biggest_fish_is136 : biggest_fish_is136_module(var_biggest_fish);
		biggest_fish_is137 : biggest_fish_is137_module(var_biggest_fish);
		biggest_fish_is138 : biggest_fish_is138_module(var_biggest_fish);
		biggest_fish_is139 : biggest_fish_is139_module(var_biggest_fish);
		biggest_fish_is14 : biggest_fish_is14_module(var_biggest_fish);
		biggest_fish_is140 : biggest_fish_is140_module(var_biggest_fish);
		biggest_fish_is141 : biggest_fish_is141_module(var_biggest_fish);
		biggest_fish_is142 : biggest_fish_is142_module(var_biggest_fish);
		biggest_fish_is143 : biggest_fish_is143_module(var_biggest_fish);
		biggest_fish_is144 : biggest_fish_is144_module(var_biggest_fish);
		biggest_fish_is145 : biggest_fish_is145_module(var_biggest_fish);
		biggest_fish_is146 : biggest_fish_is146_module(var_biggest_fish);
		biggest_fish_is147 : biggest_fish_is147_module(var_biggest_fish);
		biggest_fish_is148 : biggest_fish_is148_module(var_biggest_fish);
		biggest_fish_is149 : biggest_fish_is149_module(var_biggest_fish);
		biggest_fish_is15 : biggest_fish_is15_module(var_biggest_fish);
		biggest_fish_is150 : biggest_fish_is150_module(var_biggest_fish);
		biggest_fish_is151 : biggest_fish_is151_module(var_biggest_fish);
		biggest_fish_is152 : biggest_fish_is152_module(var_biggest_fish);
		biggest_fish_is153 : biggest_fish_is153_module(var_biggest_fish);
		biggest_fish_is154 : biggest_fish_is154_module(var_biggest_fish);
		biggest_fish_is155 : biggest_fish_is155_module(var_biggest_fish);
		biggest_fish_is156 : biggest_fish_is156_module(var_biggest_fish);
		biggest_fish_is157 : biggest_fish_is157_module(var_biggest_fish);
		biggest_fish_is158 : biggest_fish_is158_module(var_biggest_fish);
		biggest_fish_is159 : biggest_fish_is159_module(var_biggest_fish);
		biggest_fish_is16 : biggest_fish_is16_module(var_biggest_fish);
		biggest_fish_is160 : biggest_fish_is160_module(var_biggest_fish);
		biggest_fish_is161 : biggest_fish_is161_module(var_biggest_fish);
		biggest_fish_is162 : biggest_fish_is162_module(var_biggest_fish);
		biggest_fish_is163 : biggest_fish_is163_module(var_biggest_fish);
		biggest_fish_is164 : biggest_fish_is164_module(var_biggest_fish);
		biggest_fish_is165 : biggest_fish_is165_module(var_biggest_fish);
		biggest_fish_is166 : biggest_fish_is166_module(var_biggest_fish);
		biggest_fish_is167 : biggest_fish_is167_module(var_biggest_fish);
		biggest_fish_is168 : biggest_fish_is168_module(var_biggest_fish);
		biggest_fish_is169 : biggest_fish_is169_module(var_biggest_fish);
		biggest_fish_is17 : biggest_fish_is17_module(var_biggest_fish);
		biggest_fish_is170 : biggest_fish_is170_module(var_biggest_fish);
		biggest_fish_is171 : biggest_fish_is171_module(var_biggest_fish);
		biggest_fish_is172 : biggest_fish_is172_module(var_biggest_fish);
		biggest_fish_is173 : biggest_fish_is173_module(var_biggest_fish);
		biggest_fish_is174 : biggest_fish_is174_module(var_biggest_fish);
		biggest_fish_is175 : biggest_fish_is175_module(var_biggest_fish);
		biggest_fish_is176 : biggest_fish_is176_module(var_biggest_fish);
		biggest_fish_is177 : biggest_fish_is177_module(var_biggest_fish);
		biggest_fish_is178 : biggest_fish_is178_module(var_biggest_fish);
		biggest_fish_is179 : biggest_fish_is179_module(var_biggest_fish);
		biggest_fish_is18 : biggest_fish_is18_module(var_biggest_fish);
		biggest_fish_is180 : biggest_fish_is180_module(var_biggest_fish);
		biggest_fish_is181 : biggest_fish_is181_module(var_biggest_fish);
		biggest_fish_is182 : biggest_fish_is182_module(var_biggest_fish);
		biggest_fish_is183 : biggest_fish_is183_module(var_biggest_fish);
		biggest_fish_is184 : biggest_fish_is184_module(var_biggest_fish);
		biggest_fish_is185 : biggest_fish_is185_module(var_biggest_fish);
		biggest_fish_is186 : biggest_fish_is186_module(var_biggest_fish);
		biggest_fish_is187 : biggest_fish_is187_module(var_biggest_fish);
		biggest_fish_is188 : biggest_fish_is188_module(var_biggest_fish);
		biggest_fish_is189 : biggest_fish_is189_module(var_biggest_fish);
		biggest_fish_is19 : biggest_fish_is19_module(var_biggest_fish);
		biggest_fish_is190 : biggest_fish_is190_module(var_biggest_fish);
		biggest_fish_is191 : biggest_fish_is191_module(var_biggest_fish);
		biggest_fish_is192 : biggest_fish_is192_module(var_biggest_fish);
		biggest_fish_is193 : biggest_fish_is193_module(var_biggest_fish);
		biggest_fish_is194 : biggest_fish_is194_module(var_biggest_fish);
		biggest_fish_is195 : biggest_fish_is195_module(var_biggest_fish);
		biggest_fish_is196 : biggest_fish_is196_module(var_biggest_fish);
		biggest_fish_is197 : biggest_fish_is197_module(var_biggest_fish);
		biggest_fish_is198 : biggest_fish_is198_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is20 : biggest_fish_is20_module(var_biggest_fish);
		biggest_fish_is21 : biggest_fish_is21_module(var_biggest_fish);
		biggest_fish_is22 : biggest_fish_is22_module(var_biggest_fish);
		biggest_fish_is23 : biggest_fish_is23_module(var_biggest_fish);
		biggest_fish_is24 : biggest_fish_is24_module(var_biggest_fish);
		biggest_fish_is25 : biggest_fish_is25_module(var_biggest_fish);
		biggest_fish_is26 : biggest_fish_is26_module(var_biggest_fish);
		biggest_fish_is27 : biggest_fish_is27_module(var_biggest_fish);
		biggest_fish_is28 : biggest_fish_is28_module(var_biggest_fish);
		biggest_fish_is29 : biggest_fish_is29_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is30 : biggest_fish_is30_module(var_biggest_fish);
		biggest_fish_is31 : biggest_fish_is31_module(var_biggest_fish);
		biggest_fish_is32 : biggest_fish_is32_module(var_biggest_fish);
		biggest_fish_is33 : biggest_fish_is33_module(var_biggest_fish);
		biggest_fish_is34 : biggest_fish_is34_module(var_biggest_fish);
		biggest_fish_is35 : biggest_fish_is35_module(var_biggest_fish);
		biggest_fish_is36 : biggest_fish_is36_module(var_biggest_fish);
		biggest_fish_is37 : biggest_fish_is37_module(var_biggest_fish);
		biggest_fish_is38 : biggest_fish_is38_module(var_biggest_fish);
		biggest_fish_is39 : biggest_fish_is39_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		biggest_fish_is40 : biggest_fish_is40_module(var_biggest_fish);
		biggest_fish_is41 : biggest_fish_is41_module(var_biggest_fish);
		biggest_fish_is42 : biggest_fish_is42_module(var_biggest_fish);
		biggest_fish_is43 : biggest_fish_is43_module(var_biggest_fish);
		biggest_fish_is44 : biggest_fish_is44_module(var_biggest_fish);
		biggest_fish_is45 : biggest_fish_is45_module(var_biggest_fish);
		biggest_fish_is46 : biggest_fish_is46_module(var_biggest_fish);
		biggest_fish_is47 : biggest_fish_is47_module(var_biggest_fish);
		biggest_fish_is48 : biggest_fish_is48_module(var_biggest_fish);
		biggest_fish_is49 : biggest_fish_is49_module(var_biggest_fish);
		biggest_fish_is5 : biggest_fish_is5_module(var_biggest_fish);
		biggest_fish_is50 : biggest_fish_is50_module(var_biggest_fish);
		biggest_fish_is51 : biggest_fish_is51_module(var_biggest_fish);
		biggest_fish_is52 : biggest_fish_is52_module(var_biggest_fish);
		biggest_fish_is53 : biggest_fish_is53_module(var_biggest_fish);
		biggest_fish_is54 : biggest_fish_is54_module(var_biggest_fish);
		biggest_fish_is55 : biggest_fish_is55_module(var_biggest_fish);
		biggest_fish_is56 : biggest_fish_is56_module(var_biggest_fish);
		biggest_fish_is57 : biggest_fish_is57_module(var_biggest_fish);
		biggest_fish_is58 : biggest_fish_is58_module(var_biggest_fish);
		biggest_fish_is59 : biggest_fish_is59_module(var_biggest_fish);
		biggest_fish_is6 : biggest_fish_is6_module(var_biggest_fish);
		biggest_fish_is60 : biggest_fish_is60_module(var_biggest_fish);
		biggest_fish_is61 : biggest_fish_is61_module(var_biggest_fish);
		biggest_fish_is62 : biggest_fish_is62_module(var_biggest_fish);
		biggest_fish_is63 : biggest_fish_is63_module(var_biggest_fish);
		biggest_fish_is64 : biggest_fish_is64_module(var_biggest_fish);
		biggest_fish_is65 : biggest_fish_is65_module(var_biggest_fish);
		biggest_fish_is66 : biggest_fish_is66_module(var_biggest_fish);
		biggest_fish_is67 : biggest_fish_is67_module(var_biggest_fish);
		biggest_fish_is68 : biggest_fish_is68_module(var_biggest_fish);
		biggest_fish_is69 : biggest_fish_is69_module(var_biggest_fish);
		biggest_fish_is7 : biggest_fish_is7_module(var_biggest_fish);
		biggest_fish_is70 : biggest_fish_is70_module(var_biggest_fish);
		biggest_fish_is71 : biggest_fish_is71_module(var_biggest_fish);
		biggest_fish_is72 : biggest_fish_is72_module(var_biggest_fish);
		biggest_fish_is73 : biggest_fish_is73_module(var_biggest_fish);
		biggest_fish_is74 : biggest_fish_is74_module(var_biggest_fish);
		biggest_fish_is75 : biggest_fish_is75_module(var_biggest_fish);
		biggest_fish_is76 : biggest_fish_is76_module(var_biggest_fish);
		biggest_fish_is77 : biggest_fish_is77_module(var_biggest_fish);
		biggest_fish_is78 : biggest_fish_is78_module(var_biggest_fish);
		biggest_fish_is79 : biggest_fish_is79_module(var_biggest_fish);
		biggest_fish_is8 : biggest_fish_is8_module(var_biggest_fish);
		biggest_fish_is80 : biggest_fish_is80_module(var_biggest_fish);
		biggest_fish_is81 : biggest_fish_is81_module(var_biggest_fish);
		biggest_fish_is82 : biggest_fish_is82_module(var_biggest_fish);
		biggest_fish_is83 : biggest_fish_is83_module(var_biggest_fish);
		biggest_fish_is84 : biggest_fish_is84_module(var_biggest_fish);
		biggest_fish_is85 : biggest_fish_is85_module(var_biggest_fish);
		biggest_fish_is86 : biggest_fish_is86_module(var_biggest_fish);
		biggest_fish_is87 : biggest_fish_is87_module(var_biggest_fish);
		biggest_fish_is88 : biggest_fish_is88_module(var_biggest_fish);
		biggest_fish_is89 : biggest_fish_is89_module(var_biggest_fish);
		biggest_fish_is9 : biggest_fish_is9_module(var_biggest_fish);
		biggest_fish_is90 : biggest_fish_is90_module(var_biggest_fish);
		biggest_fish_is91 : biggest_fish_is91_module(var_biggest_fish);
		biggest_fish_is92 : biggest_fish_is92_module(var_biggest_fish);
		biggest_fish_is93 : biggest_fish_is93_module(var_biggest_fish);
		biggest_fish_is94 : biggest_fish_is94_module(var_biggest_fish);
		biggest_fish_is95 : biggest_fish_is95_module(var_biggest_fish);
		biggest_fish_is96 : biggest_fish_is96_module(var_biggest_fish);
		biggest_fish_is97 : biggest_fish_is97_module(var_biggest_fish);
		biggest_fish_is98 : biggest_fish_is98_module(var_biggest_fish);
		biggest_fish_is99 : biggest_fish_is99_module(var_biggest_fish);
		biggest_fish_sequence_NEXT_2 : composite_sequence_without_memory_END;
		biggest_fish_sequence_NEXT_1 : composite_sequence_without_memory(biggest_fish_sequence_NEXT_2, bigger_fish);
		biggest_fish_sequence : composite_sequence_without_memory(biggest_fish_sequence_NEXT_1, special_decorator);
		decorator0 : decorator_X_is_Y(biggest_fish_is0, failure, running);
		decorator1 : decorator_X_is_Y(biggest_fish_is1, failure, running);
		decorator10 : decorator_X_is_Y(biggest_fish_is10, failure, running);
		decorator100 : decorator_X_is_Y(biggest_fish_is100, failure, running);
		decorator101 : decorator_X_is_Y(biggest_fish_is101, failure, running);
		decorator102 : decorator_X_is_Y(biggest_fish_is102, failure, running);
		decorator103 : decorator_X_is_Y(biggest_fish_is103, failure, running);
		decorator104 : decorator_X_is_Y(biggest_fish_is104, failure, running);
		decorator105 : decorator_X_is_Y(biggest_fish_is105, failure, running);
		decorator106 : decorator_X_is_Y(biggest_fish_is106, failure, running);
		decorator107 : decorator_X_is_Y(biggest_fish_is107, failure, running);
		decorator108 : decorator_X_is_Y(biggest_fish_is108, failure, running);
		decorator109 : decorator_X_is_Y(biggest_fish_is109, failure, running);
		decorator11 : decorator_X_is_Y(biggest_fish_is11, failure, running);
		decorator110 : decorator_X_is_Y(biggest_fish_is110, failure, running);
		decorator111 : decorator_X_is_Y(biggest_fish_is111, failure, running);
		decorator112 : decorator_X_is_Y(biggest_fish_is112, failure, running);
		decorator113 : decorator_X_is_Y(biggest_fish_is113, failure, running);
		decorator114 : decorator_X_is_Y(biggest_fish_is114, failure, running);
		decorator115 : decorator_X_is_Y(biggest_fish_is115, failure, running);
		decorator116 : decorator_X_is_Y(biggest_fish_is116, failure, running);
		decorator117 : decorator_X_is_Y(biggest_fish_is117, failure, running);
		decorator118 : decorator_X_is_Y(biggest_fish_is118, failure, running);
		decorator119 : decorator_X_is_Y(biggest_fish_is119, failure, running);
		decorator12 : decorator_X_is_Y(biggest_fish_is12, failure, running);
		decorator120 : decorator_X_is_Y(biggest_fish_is120, failure, running);
		decorator121 : decorator_X_is_Y(biggest_fish_is121, failure, running);
		decorator122 : decorator_X_is_Y(biggest_fish_is122, failure, running);
		decorator123 : decorator_X_is_Y(biggest_fish_is123, failure, running);
		decorator124 : decorator_X_is_Y(biggest_fish_is124, failure, running);
		decorator125 : decorator_X_is_Y(biggest_fish_is125, failure, running);
		decorator126 : decorator_X_is_Y(biggest_fish_is126, failure, running);
		decorator127 : decorator_X_is_Y(biggest_fish_is127, failure, running);
		decorator128 : decorator_X_is_Y(biggest_fish_is128, failure, running);
		decorator129 : decorator_X_is_Y(biggest_fish_is129, failure, running);
		decorator13 : decorator_X_is_Y(biggest_fish_is13, failure, running);
		decorator130 : decorator_X_is_Y(biggest_fish_is130, failure, running);
		decorator131 : decorator_X_is_Y(biggest_fish_is131, failure, running);
		decorator132 : decorator_X_is_Y(biggest_fish_is132, failure, running);
		decorator133 : decorator_X_is_Y(biggest_fish_is133, failure, running);
		decorator134 : decorator_X_is_Y(biggest_fish_is134, failure, running);
		decorator135 : decorator_X_is_Y(biggest_fish_is135, failure, running);
		decorator136 : decorator_X_is_Y(biggest_fish_is136, failure, running);
		decorator137 : decorator_X_is_Y(biggest_fish_is137, failure, running);
		decorator138 : decorator_X_is_Y(biggest_fish_is138, failure, running);
		decorator139 : decorator_X_is_Y(biggest_fish_is139, failure, running);
		decorator14 : decorator_X_is_Y(biggest_fish_is14, failure, running);
		decorator140 : decorator_X_is_Y(biggest_fish_is140, failure, running);
		decorator141 : decorator_X_is_Y(biggest_fish_is141, failure, running);
		decorator142 : decorator_X_is_Y(biggest_fish_is142, failure, running);
		decorator143 : decorator_X_is_Y(biggest_fish_is143, failure, running);
		decorator144 : decorator_X_is_Y(biggest_fish_is144, failure, running);
		decorator145 : decorator_X_is_Y(biggest_fish_is145, failure, running);
		decorator146 : decorator_X_is_Y(biggest_fish_is146, failure, running);
		decorator147 : decorator_X_is_Y(biggest_fish_is147, failure, running);
		decorator148 : decorator_X_is_Y(biggest_fish_is148, failure, running);
		decorator149 : decorator_X_is_Y(biggest_fish_is149, failure, running);
		decorator15 : decorator_X_is_Y(biggest_fish_is15, failure, running);
		decorator150 : decorator_X_is_Y(biggest_fish_is150, failure, running);
		decorator151 : decorator_X_is_Y(biggest_fish_is151, failure, running);
		decorator152 : decorator_X_is_Y(biggest_fish_is152, failure, running);
		decorator153 : decorator_X_is_Y(biggest_fish_is153, failure, running);
		decorator154 : decorator_X_is_Y(biggest_fish_is154, failure, running);
		decorator155 : decorator_X_is_Y(biggest_fish_is155, failure, running);
		decorator156 : decorator_X_is_Y(biggest_fish_is156, failure, running);
		decorator157 : decorator_X_is_Y(biggest_fish_is157, failure, running);
		decorator158 : decorator_X_is_Y(biggest_fish_is158, failure, running);
		decorator159 : decorator_X_is_Y(biggest_fish_is159, failure, running);
		decorator16 : decorator_X_is_Y(biggest_fish_is16, failure, running);
		decorator160 : decorator_X_is_Y(biggest_fish_is160, failure, running);
		decorator161 : decorator_X_is_Y(biggest_fish_is161, failure, running);
		decorator162 : decorator_X_is_Y(biggest_fish_is162, failure, running);
		decorator163 : decorator_X_is_Y(biggest_fish_is163, failure, running);
		decorator164 : decorator_X_is_Y(biggest_fish_is164, failure, running);
		decorator165 : decorator_X_is_Y(biggest_fish_is165, failure, running);
		decorator166 : decorator_X_is_Y(biggest_fish_is166, failure, running);
		decorator167 : decorator_X_is_Y(biggest_fish_is167, failure, running);
		decorator168 : decorator_X_is_Y(biggest_fish_is168, failure, running);
		decorator169 : decorator_X_is_Y(biggest_fish_is169, failure, running);
		decorator17 : decorator_X_is_Y(biggest_fish_is17, failure, running);
		decorator170 : decorator_X_is_Y(biggest_fish_is170, failure, running);
		decorator171 : decorator_X_is_Y(biggest_fish_is171, failure, running);
		decorator172 : decorator_X_is_Y(biggest_fish_is172, failure, running);
		decorator173 : decorator_X_is_Y(biggest_fish_is173, failure, running);
		decorator174 : decorator_X_is_Y(biggest_fish_is174, failure, running);
		decorator175 : decorator_X_is_Y(biggest_fish_is175, failure, running);
		decorator176 : decorator_X_is_Y(biggest_fish_is176, failure, running);
		decorator177 : decorator_X_is_Y(biggest_fish_is177, failure, running);
		decorator178 : decorator_X_is_Y(biggest_fish_is178, failure, running);
		decorator179 : decorator_X_is_Y(biggest_fish_is179, failure, running);
		decorator18 : decorator_X_is_Y(biggest_fish_is18, failure, running);
		decorator180 : decorator_X_is_Y(biggest_fish_is180, failure, running);
		decorator181 : decorator_X_is_Y(biggest_fish_is181, failure, running);
		decorator182 : decorator_X_is_Y(biggest_fish_is182, failure, running);
		decorator183 : decorator_X_is_Y(biggest_fish_is183, failure, running);
		decorator184 : decorator_X_is_Y(biggest_fish_is184, failure, running);
		decorator185 : decorator_X_is_Y(biggest_fish_is185, failure, running);
		decorator186 : decorator_X_is_Y(biggest_fish_is186, failure, running);
		decorator187 : decorator_X_is_Y(biggest_fish_is187, failure, running);
		decorator188 : decorator_X_is_Y(biggest_fish_is188, failure, running);
		decorator189 : decorator_X_is_Y(biggest_fish_is189, failure, running);
		decorator19 : decorator_X_is_Y(biggest_fish_is19, failure, running);
		decorator190 : decorator_X_is_Y(biggest_fish_is190, failure, running);
		decorator191 : decorator_X_is_Y(biggest_fish_is191, failure, running);
		decorator192 : decorator_X_is_Y(biggest_fish_is192, failure, running);
		decorator193 : decorator_X_is_Y(biggest_fish_is193, failure, running);
		decorator194 : decorator_X_is_Y(biggest_fish_is194, failure, running);
		decorator195 : decorator_X_is_Y(biggest_fish_is195, failure, running);
		decorator196 : decorator_X_is_Y(biggest_fish_is196, failure, running);
		decorator197 : decorator_X_is_Y(biggest_fish_is197, failure, running);
		decorator198 : decorator_X_is_Y(biggest_fish_is198, failure, running);
		decorator2 : decorator_X_is_Y(biggest_fish_is2, failure, running);
		decorator20 : decorator_X_is_Y(biggest_fish_is20, failure, running);
		decorator21 : decorator_X_is_Y(biggest_fish_is21, failure, running);
		decorator22 : decorator_X_is_Y(biggest_fish_is22, failure, running);
		decorator23 : decorator_X_is_Y(biggest_fish_is23, failure, running);
		decorator24 : decorator_X_is_Y(biggest_fish_is24, failure, running);
		decorator25 : decorator_X_is_Y(biggest_fish_is25, failure, running);
		decorator26 : decorator_X_is_Y(biggest_fish_is26, failure, running);
		decorator27 : decorator_X_is_Y(biggest_fish_is27, failure, running);
		decorator28 : decorator_X_is_Y(biggest_fish_is28, failure, running);
		decorator29 : decorator_X_is_Y(biggest_fish_is29, failure, running);
		decorator3 : decorator_X_is_Y(biggest_fish_is3, failure, running);
		decorator30 : decorator_X_is_Y(biggest_fish_is30, failure, running);
		decorator31 : decorator_X_is_Y(biggest_fish_is31, failure, running);
		decorator32 : decorator_X_is_Y(biggest_fish_is32, failure, running);
		decorator33 : decorator_X_is_Y(biggest_fish_is33, failure, running);
		decorator34 : decorator_X_is_Y(biggest_fish_is34, failure, running);
		decorator35 : decorator_X_is_Y(biggest_fish_is35, failure, running);
		decorator36 : decorator_X_is_Y(biggest_fish_is36, failure, running);
		decorator37 : decorator_X_is_Y(biggest_fish_is37, failure, running);
		decorator38 : decorator_X_is_Y(biggest_fish_is38, failure, running);
		decorator39 : decorator_X_is_Y(biggest_fish_is39, failure, running);
		decorator4 : decorator_X_is_Y(biggest_fish_is4, failure, running);
		decorator40 : decorator_X_is_Y(biggest_fish_is40, failure, running);
		decorator41 : decorator_X_is_Y(biggest_fish_is41, failure, running);
		decorator42 : decorator_X_is_Y(biggest_fish_is42, failure, running);
		decorator43 : decorator_X_is_Y(biggest_fish_is43, failure, running);
		decorator44 : decorator_X_is_Y(biggest_fish_is44, failure, running);
		decorator45 : decorator_X_is_Y(biggest_fish_is45, failure, running);
		decorator46 : decorator_X_is_Y(biggest_fish_is46, failure, running);
		decorator47 : decorator_X_is_Y(biggest_fish_is47, failure, running);
		decorator48 : decorator_X_is_Y(biggest_fish_is48, failure, running);
		decorator49 : decorator_X_is_Y(biggest_fish_is49, failure, running);
		decorator5 : decorator_X_is_Y(biggest_fish_is5, failure, running);
		decorator50 : decorator_X_is_Y(biggest_fish_is50, failure, running);
		decorator51 : decorator_X_is_Y(biggest_fish_is51, failure, running);
		decorator52 : decorator_X_is_Y(biggest_fish_is52, failure, running);
		decorator53 : decorator_X_is_Y(biggest_fish_is53, failure, running);
		decorator54 : decorator_X_is_Y(biggest_fish_is54, failure, running);
		decorator55 : decorator_X_is_Y(biggest_fish_is55, failure, running);
		decorator56 : decorator_X_is_Y(biggest_fish_is56, failure, running);
		decorator57 : decorator_X_is_Y(biggest_fish_is57, failure, running);
		decorator58 : decorator_X_is_Y(biggest_fish_is58, failure, running);
		decorator59 : decorator_X_is_Y(biggest_fish_is59, failure, running);
		decorator6 : decorator_X_is_Y(biggest_fish_is6, failure, running);
		decorator60 : decorator_X_is_Y(biggest_fish_is60, failure, running);
		decorator61 : decorator_X_is_Y(biggest_fish_is61, failure, running);
		decorator62 : decorator_X_is_Y(biggest_fish_is62, failure, running);
		decorator63 : decorator_X_is_Y(biggest_fish_is63, failure, running);
		decorator64 : decorator_X_is_Y(biggest_fish_is64, failure, running);
		decorator65 : decorator_X_is_Y(biggest_fish_is65, failure, running);
		decorator66 : decorator_X_is_Y(biggest_fish_is66, failure, running);
		decorator67 : decorator_X_is_Y(biggest_fish_is67, failure, running);
		decorator68 : decorator_X_is_Y(biggest_fish_is68, failure, running);
		decorator69 : decorator_X_is_Y(biggest_fish_is69, failure, running);
		decorator7 : decorator_X_is_Y(biggest_fish_is7, failure, running);
		decorator70 : decorator_X_is_Y(biggest_fish_is70, failure, running);
		decorator71 : decorator_X_is_Y(biggest_fish_is71, failure, running);
		decorator72 : decorator_X_is_Y(biggest_fish_is72, failure, running);
		decorator73 : decorator_X_is_Y(biggest_fish_is73, failure, running);
		decorator74 : decorator_X_is_Y(biggest_fish_is74, failure, running);
		decorator75 : decorator_X_is_Y(biggest_fish_is75, failure, running);
		decorator76 : decorator_X_is_Y(biggest_fish_is76, failure, running);
		decorator77 : decorator_X_is_Y(biggest_fish_is77, failure, running);
		decorator78 : decorator_X_is_Y(biggest_fish_is78, failure, running);
		decorator79 : decorator_X_is_Y(biggest_fish_is79, failure, running);
		decorator8 : decorator_X_is_Y(biggest_fish_is8, failure, running);
		decorator80 : decorator_X_is_Y(biggest_fish_is80, failure, running);
		decorator81 : decorator_X_is_Y(biggest_fish_is81, failure, running);
		decorator82 : decorator_X_is_Y(biggest_fish_is82, failure, running);
		decorator83 : decorator_X_is_Y(biggest_fish_is83, failure, running);
		decorator84 : decorator_X_is_Y(biggest_fish_is84, failure, running);
		decorator85 : decorator_X_is_Y(biggest_fish_is85, failure, running);
		decorator86 : decorator_X_is_Y(biggest_fish_is86, failure, running);
		decorator87 : decorator_X_is_Y(biggest_fish_is87, failure, running);
		decorator88 : decorator_X_is_Y(biggest_fish_is88, failure, running);
		decorator89 : decorator_X_is_Y(biggest_fish_is89, failure, running);
		decorator9 : decorator_X_is_Y(biggest_fish_is9, failure, running);
		decorator90 : decorator_X_is_Y(biggest_fish_is90, failure, running);
		decorator91 : decorator_X_is_Y(biggest_fish_is91, failure, running);
		decorator92 : decorator_X_is_Y(biggest_fish_is92, failure, running);
		decorator93 : decorator_X_is_Y(biggest_fish_is93, failure, running);
		decorator94 : decorator_X_is_Y(biggest_fish_is94, failure, running);
		decorator95 : decorator_X_is_Y(biggest_fish_is95, failure, running);
		decorator96 : decorator_X_is_Y(biggest_fish_is96, failure, running);
		decorator97 : decorator_X_is_Y(biggest_fish_is97, failure, running);
		decorator98 : decorator_X_is_Y(biggest_fish_is98, failure, running);
		decorator99 : decorator_X_is_Y(biggest_fish_is99, failure, running);
		parallel10_NEXT_5 : composite_parallel_without_memory_END;
		parallel10_NEXT_4 : composite_parallel_without_memory(parallel10_NEXT_5, parallel6);
		parallel10_NEXT_3 : composite_parallel_without_memory(parallel10_NEXT_4, decorator10);
		parallel10_NEXT_2 : composite_parallel_without_memory(parallel10_NEXT_3, decorator9);
		parallel10_NEXT_1 : composite_parallel_without_memory(parallel10_NEXT_2, decorator8);
		parallel10 : composite_parallel_without_memory(parallel10_NEXT_1, decorator7);
		parallel102_NEXT_5 : composite_parallel_without_memory_END;
		parallel102_NEXT_4 : composite_parallel_without_memory(parallel102_NEXT_5, parallel98);
		parallel102_NEXT_3 : composite_parallel_without_memory(parallel102_NEXT_4, decorator102);
		parallel102_NEXT_2 : composite_parallel_without_memory(parallel102_NEXT_3, decorator101);
		parallel102_NEXT_1 : composite_parallel_without_memory(parallel102_NEXT_2, decorator100);
		parallel102 : composite_parallel_without_memory(parallel102_NEXT_1, decorator99);
		parallel106_NEXT_5 : composite_parallel_without_memory_END;
		parallel106_NEXT_4 : composite_parallel_without_memory(parallel106_NEXT_5, parallel102);
		parallel106_NEXT_3 : composite_parallel_without_memory(parallel106_NEXT_4, decorator106);
		parallel106_NEXT_2 : composite_parallel_without_memory(parallel106_NEXT_3, decorator105);
		parallel106_NEXT_1 : composite_parallel_without_memory(parallel106_NEXT_2, decorator104);
		parallel106 : composite_parallel_without_memory(parallel106_NEXT_1, decorator103);
		parallel110_NEXT_5 : composite_parallel_without_memory_END;
		parallel110_NEXT_4 : composite_parallel_without_memory(parallel110_NEXT_5, parallel106);
		parallel110_NEXT_3 : composite_parallel_without_memory(parallel110_NEXT_4, decorator110);
		parallel110_NEXT_2 : composite_parallel_without_memory(parallel110_NEXT_3, decorator109);
		parallel110_NEXT_1 : composite_parallel_without_memory(parallel110_NEXT_2, decorator108);
		parallel110 : composite_parallel_without_memory(parallel110_NEXT_1, decorator107);
		parallel114_NEXT_5 : composite_parallel_without_memory_END;
		parallel114_NEXT_4 : composite_parallel_without_memory(parallel114_NEXT_5, parallel110);
		parallel114_NEXT_3 : composite_parallel_without_memory(parallel114_NEXT_4, decorator114);
		parallel114_NEXT_2 : composite_parallel_without_memory(parallel114_NEXT_3, decorator113);
		parallel114_NEXT_1 : composite_parallel_without_memory(parallel114_NEXT_2, decorator112);
		parallel114 : composite_parallel_without_memory(parallel114_NEXT_1, decorator111);
		parallel118_NEXT_5 : composite_parallel_without_memory_END;
		parallel118_NEXT_4 : composite_parallel_without_memory(parallel118_NEXT_5, parallel114);
		parallel118_NEXT_3 : composite_parallel_without_memory(parallel118_NEXT_4, decorator118);
		parallel118_NEXT_2 : composite_parallel_without_memory(parallel118_NEXT_3, decorator117);
		parallel118_NEXT_1 : composite_parallel_without_memory(parallel118_NEXT_2, decorator116);
		parallel118 : composite_parallel_without_memory(parallel118_NEXT_1, decorator115);
		parallel122_NEXT_5 : composite_parallel_without_memory_END;
		parallel122_NEXT_4 : composite_parallel_without_memory(parallel122_NEXT_5, parallel118);
		parallel122_NEXT_3 : composite_parallel_without_memory(parallel122_NEXT_4, decorator122);
		parallel122_NEXT_2 : composite_parallel_without_memory(parallel122_NEXT_3, decorator121);
		parallel122_NEXT_1 : composite_parallel_without_memory(parallel122_NEXT_2, decorator120);
		parallel122 : composite_parallel_without_memory(parallel122_NEXT_1, decorator119);
		parallel126_NEXT_5 : composite_parallel_without_memory_END;
		parallel126_NEXT_4 : composite_parallel_without_memory(parallel126_NEXT_5, parallel122);
		parallel126_NEXT_3 : composite_parallel_without_memory(parallel126_NEXT_4, decorator126);
		parallel126_NEXT_2 : composite_parallel_without_memory(parallel126_NEXT_3, decorator125);
		parallel126_NEXT_1 : composite_parallel_without_memory(parallel126_NEXT_2, decorator124);
		parallel126 : composite_parallel_without_memory(parallel126_NEXT_1, decorator123);
		parallel130_NEXT_5 : composite_parallel_without_memory_END;
		parallel130_NEXT_4 : composite_parallel_without_memory(parallel130_NEXT_5, parallel126);
		parallel130_NEXT_3 : composite_parallel_without_memory(parallel130_NEXT_4, decorator130);
		parallel130_NEXT_2 : composite_parallel_without_memory(parallel130_NEXT_3, decorator129);
		parallel130_NEXT_1 : composite_parallel_without_memory(parallel130_NEXT_2, decorator128);
		parallel130 : composite_parallel_without_memory(parallel130_NEXT_1, decorator127);
		parallel134_NEXT_5 : composite_parallel_without_memory_END;
		parallel134_NEXT_4 : composite_parallel_without_memory(parallel134_NEXT_5, parallel130);
		parallel134_NEXT_3 : composite_parallel_without_memory(parallel134_NEXT_4, decorator134);
		parallel134_NEXT_2 : composite_parallel_without_memory(parallel134_NEXT_3, decorator133);
		parallel134_NEXT_1 : composite_parallel_without_memory(parallel134_NEXT_2, decorator132);
		parallel134 : composite_parallel_without_memory(parallel134_NEXT_1, decorator131);
		parallel138_NEXT_5 : composite_parallel_without_memory_END;
		parallel138_NEXT_4 : composite_parallel_without_memory(parallel138_NEXT_5, parallel134);
		parallel138_NEXT_3 : composite_parallel_without_memory(parallel138_NEXT_4, decorator138);
		parallel138_NEXT_2 : composite_parallel_without_memory(parallel138_NEXT_3, decorator137);
		parallel138_NEXT_1 : composite_parallel_without_memory(parallel138_NEXT_2, decorator136);
		parallel138 : composite_parallel_without_memory(parallel138_NEXT_1, decorator135);
		parallel14_NEXT_5 : composite_parallel_without_memory_END;
		parallel14_NEXT_4 : composite_parallel_without_memory(parallel14_NEXT_5, parallel10);
		parallel14_NEXT_3 : composite_parallel_without_memory(parallel14_NEXT_4, decorator14);
		parallel14_NEXT_2 : composite_parallel_without_memory(parallel14_NEXT_3, decorator13);
		parallel14_NEXT_1 : composite_parallel_without_memory(parallel14_NEXT_2, decorator12);
		parallel14 : composite_parallel_without_memory(parallel14_NEXT_1, decorator11);
		parallel142_NEXT_5 : composite_parallel_without_memory_END;
		parallel142_NEXT_4 : composite_parallel_without_memory(parallel142_NEXT_5, parallel138);
		parallel142_NEXT_3 : composite_parallel_without_memory(parallel142_NEXT_4, decorator142);
		parallel142_NEXT_2 : composite_parallel_without_memory(parallel142_NEXT_3, decorator141);
		parallel142_NEXT_1 : composite_parallel_without_memory(parallel142_NEXT_2, decorator140);
		parallel142 : composite_parallel_without_memory(parallel142_NEXT_1, decorator139);
		parallel146_NEXT_5 : composite_parallel_without_memory_END;
		parallel146_NEXT_4 : composite_parallel_without_memory(parallel146_NEXT_5, parallel142);
		parallel146_NEXT_3 : composite_parallel_without_memory(parallel146_NEXT_4, decorator146);
		parallel146_NEXT_2 : composite_parallel_without_memory(parallel146_NEXT_3, decorator145);
		parallel146_NEXT_1 : composite_parallel_without_memory(parallel146_NEXT_2, decorator144);
		parallel146 : composite_parallel_without_memory(parallel146_NEXT_1, decorator143);
		parallel150_NEXT_5 : composite_parallel_without_memory_END;
		parallel150_NEXT_4 : composite_parallel_without_memory(parallel150_NEXT_5, parallel146);
		parallel150_NEXT_3 : composite_parallel_without_memory(parallel150_NEXT_4, decorator150);
		parallel150_NEXT_2 : composite_parallel_without_memory(parallel150_NEXT_3, decorator149);
		parallel150_NEXT_1 : composite_parallel_without_memory(parallel150_NEXT_2, decorator148);
		parallel150 : composite_parallel_without_memory(parallel150_NEXT_1, decorator147);
		parallel154_NEXT_5 : composite_parallel_without_memory_END;
		parallel154_NEXT_4 : composite_parallel_without_memory(parallel154_NEXT_5, parallel150);
		parallel154_NEXT_3 : composite_parallel_without_memory(parallel154_NEXT_4, decorator154);
		parallel154_NEXT_2 : composite_parallel_without_memory(parallel154_NEXT_3, decorator153);
		parallel154_NEXT_1 : composite_parallel_without_memory(parallel154_NEXT_2, decorator152);
		parallel154 : composite_parallel_without_memory(parallel154_NEXT_1, decorator151);
		parallel158_NEXT_5 : composite_parallel_without_memory_END;
		parallel158_NEXT_4 : composite_parallel_without_memory(parallel158_NEXT_5, parallel154);
		parallel158_NEXT_3 : composite_parallel_without_memory(parallel158_NEXT_4, decorator158);
		parallel158_NEXT_2 : composite_parallel_without_memory(parallel158_NEXT_3, decorator157);
		parallel158_NEXT_1 : composite_parallel_without_memory(parallel158_NEXT_2, decorator156);
		parallel158 : composite_parallel_without_memory(parallel158_NEXT_1, decorator155);
		parallel162_NEXT_5 : composite_parallel_without_memory_END;
		parallel162_NEXT_4 : composite_parallel_without_memory(parallel162_NEXT_5, parallel158);
		parallel162_NEXT_3 : composite_parallel_without_memory(parallel162_NEXT_4, decorator162);
		parallel162_NEXT_2 : composite_parallel_without_memory(parallel162_NEXT_3, decorator161);
		parallel162_NEXT_1 : composite_parallel_without_memory(parallel162_NEXT_2, decorator160);
		parallel162 : composite_parallel_without_memory(parallel162_NEXT_1, decorator159);
		parallel166_NEXT_5 : composite_parallel_without_memory_END;
		parallel166_NEXT_4 : composite_parallel_without_memory(parallel166_NEXT_5, parallel162);
		parallel166_NEXT_3 : composite_parallel_without_memory(parallel166_NEXT_4, decorator166);
		parallel166_NEXT_2 : composite_parallel_without_memory(parallel166_NEXT_3, decorator165);
		parallel166_NEXT_1 : composite_parallel_without_memory(parallel166_NEXT_2, decorator164);
		parallel166 : composite_parallel_without_memory(parallel166_NEXT_1, decorator163);
		parallel170_NEXT_5 : composite_parallel_without_memory_END;
		parallel170_NEXT_4 : composite_parallel_without_memory(parallel170_NEXT_5, parallel166);
		parallel170_NEXT_3 : composite_parallel_without_memory(parallel170_NEXT_4, decorator170);
		parallel170_NEXT_2 : composite_parallel_without_memory(parallel170_NEXT_3, decorator169);
		parallel170_NEXT_1 : composite_parallel_without_memory(parallel170_NEXT_2, decorator168);
		parallel170 : composite_parallel_without_memory(parallel170_NEXT_1, decorator167);
		parallel174_NEXT_5 : composite_parallel_without_memory_END;
		parallel174_NEXT_4 : composite_parallel_without_memory(parallel174_NEXT_5, parallel170);
		parallel174_NEXT_3 : composite_parallel_without_memory(parallel174_NEXT_4, decorator174);
		parallel174_NEXT_2 : composite_parallel_without_memory(parallel174_NEXT_3, decorator173);
		parallel174_NEXT_1 : composite_parallel_without_memory(parallel174_NEXT_2, decorator172);
		parallel174 : composite_parallel_without_memory(parallel174_NEXT_1, decorator171);
		parallel178_NEXT_5 : composite_parallel_without_memory_END;
		parallel178_NEXT_4 : composite_parallel_without_memory(parallel178_NEXT_5, parallel174);
		parallel178_NEXT_3 : composite_parallel_without_memory(parallel178_NEXT_4, decorator178);
		parallel178_NEXT_2 : composite_parallel_without_memory(parallel178_NEXT_3, decorator177);
		parallel178_NEXT_1 : composite_parallel_without_memory(parallel178_NEXT_2, decorator176);
		parallel178 : composite_parallel_without_memory(parallel178_NEXT_1, decorator175);
		parallel18_NEXT_5 : composite_parallel_without_memory_END;
		parallel18_NEXT_4 : composite_parallel_without_memory(parallel18_NEXT_5, parallel14);
		parallel18_NEXT_3 : composite_parallel_without_memory(parallel18_NEXT_4, decorator18);
		parallel18_NEXT_2 : composite_parallel_without_memory(parallel18_NEXT_3, decorator17);
		parallel18_NEXT_1 : composite_parallel_without_memory(parallel18_NEXT_2, decorator16);
		parallel18 : composite_parallel_without_memory(parallel18_NEXT_1, decorator15);
		parallel182_NEXT_5 : composite_parallel_without_memory_END;
		parallel182_NEXT_4 : composite_parallel_without_memory(parallel182_NEXT_5, parallel178);
		parallel182_NEXT_3 : composite_parallel_without_memory(parallel182_NEXT_4, decorator182);
		parallel182_NEXT_2 : composite_parallel_without_memory(parallel182_NEXT_3, decorator181);
		parallel182_NEXT_1 : composite_parallel_without_memory(parallel182_NEXT_2, decorator180);
		parallel182 : composite_parallel_without_memory(parallel182_NEXT_1, decorator179);
		parallel186_NEXT_5 : composite_parallel_without_memory_END;
		parallel186_NEXT_4 : composite_parallel_without_memory(parallel186_NEXT_5, parallel182);
		parallel186_NEXT_3 : composite_parallel_without_memory(parallel186_NEXT_4, decorator186);
		parallel186_NEXT_2 : composite_parallel_without_memory(parallel186_NEXT_3, decorator185);
		parallel186_NEXT_1 : composite_parallel_without_memory(parallel186_NEXT_2, decorator184);
		parallel186 : composite_parallel_without_memory(parallel186_NEXT_1, decorator183);
		parallel190_NEXT_5 : composite_parallel_without_memory_END;
		parallel190_NEXT_4 : composite_parallel_without_memory(parallel190_NEXT_5, parallel186);
		parallel190_NEXT_3 : composite_parallel_without_memory(parallel190_NEXT_4, decorator190);
		parallel190_NEXT_2 : composite_parallel_without_memory(parallel190_NEXT_3, decorator189);
		parallel190_NEXT_1 : composite_parallel_without_memory(parallel190_NEXT_2, decorator188);
		parallel190 : composite_parallel_without_memory(parallel190_NEXT_1, decorator187);
		parallel194_NEXT_5 : composite_parallel_without_memory_END;
		parallel194_NEXT_4 : composite_parallel_without_memory(parallel194_NEXT_5, parallel190);
		parallel194_NEXT_3 : composite_parallel_without_memory(parallel194_NEXT_4, decorator194);
		parallel194_NEXT_2 : composite_parallel_without_memory(parallel194_NEXT_3, decorator193);
		parallel194_NEXT_1 : composite_parallel_without_memory(parallel194_NEXT_2, decorator192);
		parallel194 : composite_parallel_without_memory(parallel194_NEXT_1, decorator191);
		parallel198_NEXT_5 : composite_parallel_without_memory_END;
		parallel198_NEXT_4 : composite_parallel_without_memory(parallel198_NEXT_5, parallel194);
		parallel198_NEXT_3 : composite_parallel_without_memory(parallel198_NEXT_4, decorator198);
		parallel198_NEXT_2 : composite_parallel_without_memory(parallel198_NEXT_3, decorator197);
		parallel198_NEXT_1 : composite_parallel_without_memory(parallel198_NEXT_2, decorator196);
		parallel198 : composite_parallel_without_memory(parallel198_NEXT_1, decorator195);
		parallel2_NEXT_3 : composite_parallel_without_memory_END;
		parallel2_NEXT_2 : composite_parallel_without_memory(parallel2_NEXT_3, decorator2);
		parallel2_NEXT_1 : composite_parallel_without_memory(parallel2_NEXT_2, decorator1);
		parallel2 : composite_parallel_without_memory(parallel2_NEXT_1, decorator0);
		parallel22_NEXT_5 : composite_parallel_without_memory_END;
		parallel22_NEXT_4 : composite_parallel_without_memory(parallel22_NEXT_5, parallel18);
		parallel22_NEXT_3 : composite_parallel_without_memory(parallel22_NEXT_4, decorator22);
		parallel22_NEXT_2 : composite_parallel_without_memory(parallel22_NEXT_3, decorator21);
		parallel22_NEXT_1 : composite_parallel_without_memory(parallel22_NEXT_2, decorator20);
		parallel22 : composite_parallel_without_memory(parallel22_NEXT_1, decorator19);
		parallel26_NEXT_5 : composite_parallel_without_memory_END;
		parallel26_NEXT_4 : composite_parallel_without_memory(parallel26_NEXT_5, parallel22);
		parallel26_NEXT_3 : composite_parallel_without_memory(parallel26_NEXT_4, decorator26);
		parallel26_NEXT_2 : composite_parallel_without_memory(parallel26_NEXT_3, decorator25);
		parallel26_NEXT_1 : composite_parallel_without_memory(parallel26_NEXT_2, decorator24);
		parallel26 : composite_parallel_without_memory(parallel26_NEXT_1, decorator23);
		parallel30_NEXT_5 : composite_parallel_without_memory_END;
		parallel30_NEXT_4 : composite_parallel_without_memory(parallel30_NEXT_5, parallel26);
		parallel30_NEXT_3 : composite_parallel_without_memory(parallel30_NEXT_4, decorator30);
		parallel30_NEXT_2 : composite_parallel_without_memory(parallel30_NEXT_3, decorator29);
		parallel30_NEXT_1 : composite_parallel_without_memory(parallel30_NEXT_2, decorator28);
		parallel30 : composite_parallel_without_memory(parallel30_NEXT_1, decorator27);
		parallel34_NEXT_5 : composite_parallel_without_memory_END;
		parallel34_NEXT_4 : composite_parallel_without_memory(parallel34_NEXT_5, parallel30);
		parallel34_NEXT_3 : composite_parallel_without_memory(parallel34_NEXT_4, decorator34);
		parallel34_NEXT_2 : composite_parallel_without_memory(parallel34_NEXT_3, decorator33);
		parallel34_NEXT_1 : composite_parallel_without_memory(parallel34_NEXT_2, decorator32);
		parallel34 : composite_parallel_without_memory(parallel34_NEXT_1, decorator31);
		parallel38_NEXT_5 : composite_parallel_without_memory_END;
		parallel38_NEXT_4 : composite_parallel_without_memory(parallel38_NEXT_5, parallel34);
		parallel38_NEXT_3 : composite_parallel_without_memory(parallel38_NEXT_4, decorator38);
		parallel38_NEXT_2 : composite_parallel_without_memory(parallel38_NEXT_3, decorator37);
		parallel38_NEXT_1 : composite_parallel_without_memory(parallel38_NEXT_2, decorator36);
		parallel38 : composite_parallel_without_memory(parallel38_NEXT_1, decorator35);
		parallel42_NEXT_5 : composite_parallel_without_memory_END;
		parallel42_NEXT_4 : composite_parallel_without_memory(parallel42_NEXT_5, parallel38);
		parallel42_NEXT_3 : composite_parallel_without_memory(parallel42_NEXT_4, decorator42);
		parallel42_NEXT_2 : composite_parallel_without_memory(parallel42_NEXT_3, decorator41);
		parallel42_NEXT_1 : composite_parallel_without_memory(parallel42_NEXT_2, decorator40);
		parallel42 : composite_parallel_without_memory(parallel42_NEXT_1, decorator39);
		parallel46_NEXT_5 : composite_parallel_without_memory_END;
		parallel46_NEXT_4 : composite_parallel_without_memory(parallel46_NEXT_5, parallel42);
		parallel46_NEXT_3 : composite_parallel_without_memory(parallel46_NEXT_4, decorator46);
		parallel46_NEXT_2 : composite_parallel_without_memory(parallel46_NEXT_3, decorator45);
		parallel46_NEXT_1 : composite_parallel_without_memory(parallel46_NEXT_2, decorator44);
		parallel46 : composite_parallel_without_memory(parallel46_NEXT_1, decorator43);
		parallel50_NEXT_5 : composite_parallel_without_memory_END;
		parallel50_NEXT_4 : composite_parallel_without_memory(parallel50_NEXT_5, parallel46);
		parallel50_NEXT_3 : composite_parallel_without_memory(parallel50_NEXT_4, decorator50);
		parallel50_NEXT_2 : composite_parallel_without_memory(parallel50_NEXT_3, decorator49);
		parallel50_NEXT_1 : composite_parallel_without_memory(parallel50_NEXT_2, decorator48);
		parallel50 : composite_parallel_without_memory(parallel50_NEXT_1, decorator47);
		parallel54_NEXT_5 : composite_parallel_without_memory_END;
		parallel54_NEXT_4 : composite_parallel_without_memory(parallel54_NEXT_5, parallel50);
		parallel54_NEXT_3 : composite_parallel_without_memory(parallel54_NEXT_4, decorator54);
		parallel54_NEXT_2 : composite_parallel_without_memory(parallel54_NEXT_3, decorator53);
		parallel54_NEXT_1 : composite_parallel_without_memory(parallel54_NEXT_2, decorator52);
		parallel54 : composite_parallel_without_memory(parallel54_NEXT_1, decorator51);
		parallel58_NEXT_5 : composite_parallel_without_memory_END;
		parallel58_NEXT_4 : composite_parallel_without_memory(parallel58_NEXT_5, parallel54);
		parallel58_NEXT_3 : composite_parallel_without_memory(parallel58_NEXT_4, decorator58);
		parallel58_NEXT_2 : composite_parallel_without_memory(parallel58_NEXT_3, decorator57);
		parallel58_NEXT_1 : composite_parallel_without_memory(parallel58_NEXT_2, decorator56);
		parallel58 : composite_parallel_without_memory(parallel58_NEXT_1, decorator55);
		parallel6_NEXT_5 : composite_parallel_without_memory_END;
		parallel6_NEXT_4 : composite_parallel_without_memory(parallel6_NEXT_5, parallel2);
		parallel6_NEXT_3 : composite_parallel_without_memory(parallel6_NEXT_4, decorator6);
		parallel6_NEXT_2 : composite_parallel_without_memory(parallel6_NEXT_3, decorator5);
		parallel6_NEXT_1 : composite_parallel_without_memory(parallel6_NEXT_2, decorator4);
		parallel6 : composite_parallel_without_memory(parallel6_NEXT_1, decorator3);
		parallel62_NEXT_5 : composite_parallel_without_memory_END;
		parallel62_NEXT_4 : composite_parallel_without_memory(parallel62_NEXT_5, parallel58);
		parallel62_NEXT_3 : composite_parallel_without_memory(parallel62_NEXT_4, decorator62);
		parallel62_NEXT_2 : composite_parallel_without_memory(parallel62_NEXT_3, decorator61);
		parallel62_NEXT_1 : composite_parallel_without_memory(parallel62_NEXT_2, decorator60);
		parallel62 : composite_parallel_without_memory(parallel62_NEXT_1, decorator59);
		parallel66_NEXT_5 : composite_parallel_without_memory_END;
		parallel66_NEXT_4 : composite_parallel_without_memory(parallel66_NEXT_5, parallel62);
		parallel66_NEXT_3 : composite_parallel_without_memory(parallel66_NEXT_4, decorator66);
		parallel66_NEXT_2 : composite_parallel_without_memory(parallel66_NEXT_3, decorator65);
		parallel66_NEXT_1 : composite_parallel_without_memory(parallel66_NEXT_2, decorator64);
		parallel66 : composite_parallel_without_memory(parallel66_NEXT_1, decorator63);
		parallel70_NEXT_5 : composite_parallel_without_memory_END;
		parallel70_NEXT_4 : composite_parallel_without_memory(parallel70_NEXT_5, parallel66);
		parallel70_NEXT_3 : composite_parallel_without_memory(parallel70_NEXT_4, decorator70);
		parallel70_NEXT_2 : composite_parallel_without_memory(parallel70_NEXT_3, decorator69);
		parallel70_NEXT_1 : composite_parallel_without_memory(parallel70_NEXT_2, decorator68);
		parallel70 : composite_parallel_without_memory(parallel70_NEXT_1, decorator67);
		parallel74_NEXT_5 : composite_parallel_without_memory_END;
		parallel74_NEXT_4 : composite_parallel_without_memory(parallel74_NEXT_5, parallel70);
		parallel74_NEXT_3 : composite_parallel_without_memory(parallel74_NEXT_4, decorator74);
		parallel74_NEXT_2 : composite_parallel_without_memory(parallel74_NEXT_3, decorator73);
		parallel74_NEXT_1 : composite_parallel_without_memory(parallel74_NEXT_2, decorator72);
		parallel74 : composite_parallel_without_memory(parallel74_NEXT_1, decorator71);
		parallel78_NEXT_5 : composite_parallel_without_memory_END;
		parallel78_NEXT_4 : composite_parallel_without_memory(parallel78_NEXT_5, parallel74);
		parallel78_NEXT_3 : composite_parallel_without_memory(parallel78_NEXT_4, decorator78);
		parallel78_NEXT_2 : composite_parallel_without_memory(parallel78_NEXT_3, decorator77);
		parallel78_NEXT_1 : composite_parallel_without_memory(parallel78_NEXT_2, decorator76);
		parallel78 : composite_parallel_without_memory(parallel78_NEXT_1, decorator75);
		parallel82_NEXT_5 : composite_parallel_without_memory_END;
		parallel82_NEXT_4 : composite_parallel_without_memory(parallel82_NEXT_5, parallel78);
		parallel82_NEXT_3 : composite_parallel_without_memory(parallel82_NEXT_4, decorator82);
		parallel82_NEXT_2 : composite_parallel_without_memory(parallel82_NEXT_3, decorator81);
		parallel82_NEXT_1 : composite_parallel_without_memory(parallel82_NEXT_2, decorator80);
		parallel82 : composite_parallel_without_memory(parallel82_NEXT_1, decorator79);
		parallel86_NEXT_5 : composite_parallel_without_memory_END;
		parallel86_NEXT_4 : composite_parallel_without_memory(parallel86_NEXT_5, parallel82);
		parallel86_NEXT_3 : composite_parallel_without_memory(parallel86_NEXT_4, decorator86);
		parallel86_NEXT_2 : composite_parallel_without_memory(parallel86_NEXT_3, decorator85);
		parallel86_NEXT_1 : composite_parallel_without_memory(parallel86_NEXT_2, decorator84);
		parallel86 : composite_parallel_without_memory(parallel86_NEXT_1, decorator83);
		parallel90_NEXT_5 : composite_parallel_without_memory_END;
		parallel90_NEXT_4 : composite_parallel_without_memory(parallel90_NEXT_5, parallel86);
		parallel90_NEXT_3 : composite_parallel_without_memory(parallel90_NEXT_4, decorator90);
		parallel90_NEXT_2 : composite_parallel_without_memory(parallel90_NEXT_3, decorator89);
		parallel90_NEXT_1 : composite_parallel_without_memory(parallel90_NEXT_2, decorator88);
		parallel90 : composite_parallel_without_memory(parallel90_NEXT_1, decorator87);
		parallel94_NEXT_5 : composite_parallel_without_memory_END;
		parallel94_NEXT_4 : composite_parallel_without_memory(parallel94_NEXT_5, parallel90);
		parallel94_NEXT_3 : composite_parallel_without_memory(parallel94_NEXT_4, decorator94);
		parallel94_NEXT_2 : composite_parallel_without_memory(parallel94_NEXT_3, decorator93);
		parallel94_NEXT_1 : composite_parallel_without_memory(parallel94_NEXT_2, decorator92);
		parallel94 : composite_parallel_without_memory(parallel94_NEXT_1, decorator91);
		parallel98_NEXT_5 : composite_parallel_without_memory_END;
		parallel98_NEXT_4 : composite_parallel_without_memory(parallel98_NEXT_5, parallel94);
		parallel98_NEXT_3 : composite_parallel_without_memory(parallel98_NEXT_4, decorator98);
		parallel98_NEXT_2 : composite_parallel_without_memory(parallel98_NEXT_3, decorator97);
		parallel98_NEXT_1 : composite_parallel_without_memory(parallel98_NEXT_2, decorator96);
		parallel98 : composite_parallel_without_memory(parallel98_NEXT_1, decorator95);
		special_decorator : decorator_X_is_Y(parallel198, running, failure);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..199;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) := var_biggest_fish_stage_1;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 199)));
CTLSPEC AF(AG((var_biggest_fish = 199)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel198 := 2;
		decorator195 := 3;
		biggest_fish_is195 := 4;
		decorator196 := 5;
		biggest_fish_is196 := 6;
		decorator197 := 7;
		biggest_fish_is197 := 8;
		decorator198 := 9;
		biggest_fish_is198 := 10;
		parallel194 := 11;
		decorator191 := 12;
		biggest_fish_is191 := 13;
		decorator192 := 14;
		biggest_fish_is192 := 15;
		decorator193 := 16;
		biggest_fish_is193 := 17;
		decorator194 := 18;
		biggest_fish_is194 := 19;
		parallel190 := 20;
		decorator187 := 21;
		biggest_fish_is187 := 22;
		decorator188 := 23;
		biggest_fish_is188 := 24;
		decorator189 := 25;
		biggest_fish_is189 := 26;
		decorator190 := 27;
		biggest_fish_is190 := 28;
		parallel186 := 29;
		decorator183 := 30;
		biggest_fish_is183 := 31;
		decorator184 := 32;
		biggest_fish_is184 := 33;
		decorator185 := 34;
		biggest_fish_is185 := 35;
		decorator186 := 36;
		biggest_fish_is186 := 37;
		parallel182 := 38;
		decorator179 := 39;
		biggest_fish_is179 := 40;
		decorator180 := 41;
		biggest_fish_is180 := 42;
		decorator181 := 43;
		biggest_fish_is181 := 44;
		decorator182 := 45;
		biggest_fish_is182 := 46;
		parallel178 := 47;
		decorator175 := 48;
		biggest_fish_is175 := 49;
		decorator176 := 50;
		biggest_fish_is176 := 51;
		decorator177 := 52;
		biggest_fish_is177 := 53;
		decorator178 := 54;
		biggest_fish_is178 := 55;
		parallel174 := 56;
		decorator171 := 57;
		biggest_fish_is171 := 58;
		decorator172 := 59;
		biggest_fish_is172 := 60;
		decorator173 := 61;
		biggest_fish_is173 := 62;
		decorator174 := 63;
		biggest_fish_is174 := 64;
		parallel170 := 65;
		decorator167 := 66;
		biggest_fish_is167 := 67;
		decorator168 := 68;
		biggest_fish_is168 := 69;
		decorator169 := 70;
		biggest_fish_is169 := 71;
		decorator170 := 72;
		biggest_fish_is170 := 73;
		parallel166 := 74;
		decorator163 := 75;
		biggest_fish_is163 := 76;
		decorator164 := 77;
		biggest_fish_is164 := 78;
		decorator165 := 79;
		biggest_fish_is165 := 80;
		decorator166 := 81;
		biggest_fish_is166 := 82;
		parallel162 := 83;
		decorator159 := 84;
		biggest_fish_is159 := 85;
		decorator160 := 86;
		biggest_fish_is160 := 87;
		decorator161 := 88;
		biggest_fish_is161 := 89;
		decorator162 := 90;
		biggest_fish_is162 := 91;
		parallel158 := 92;
		decorator155 := 93;
		biggest_fish_is155 := 94;
		decorator156 := 95;
		biggest_fish_is156 := 96;
		decorator157 := 97;
		biggest_fish_is157 := 98;
		decorator158 := 99;
		biggest_fish_is158 := 100;
		parallel154 := 101;
		decorator151 := 102;
		biggest_fish_is151 := 103;
		decorator152 := 104;
		biggest_fish_is152 := 105;
		decorator153 := 106;
		biggest_fish_is153 := 107;
		decorator154 := 108;
		biggest_fish_is154 := 109;
		parallel150 := 110;
		decorator147 := 111;
		biggest_fish_is147 := 112;
		decorator148 := 113;
		biggest_fish_is148 := 114;
		decorator149 := 115;
		biggest_fish_is149 := 116;
		decorator150 := 117;
		biggest_fish_is150 := 118;
		parallel146 := 119;
		decorator143 := 120;
		biggest_fish_is143 := 121;
		decorator144 := 122;
		biggest_fish_is144 := 123;
		decorator145 := 124;
		biggest_fish_is145 := 125;
		decorator146 := 126;
		biggest_fish_is146 := 127;
		parallel142 := 128;
		decorator139 := 129;
		biggest_fish_is139 := 130;
		decorator140 := 131;
		biggest_fish_is140 := 132;
		decorator141 := 133;
		biggest_fish_is141 := 134;
		decorator142 := 135;
		biggest_fish_is142 := 136;
		parallel138 := 137;
		decorator135 := 138;
		biggest_fish_is135 := 139;
		decorator136 := 140;
		biggest_fish_is136 := 141;
		decorator137 := 142;
		biggest_fish_is137 := 143;
		decorator138 := 144;
		biggest_fish_is138 := 145;
		parallel134 := 146;
		decorator131 := 147;
		biggest_fish_is131 := 148;
		decorator132 := 149;
		biggest_fish_is132 := 150;
		decorator133 := 151;
		biggest_fish_is133 := 152;
		decorator134 := 153;
		biggest_fish_is134 := 154;
		parallel130 := 155;
		decorator127 := 156;
		biggest_fish_is127 := 157;
		decorator128 := 158;
		biggest_fish_is128 := 159;
		decorator129 := 160;
		biggest_fish_is129 := 161;
		decorator130 := 162;
		biggest_fish_is130 := 163;
		parallel126 := 164;
		decorator123 := 165;
		biggest_fish_is123 := 166;
		decorator124 := 167;
		biggest_fish_is124 := 168;
		decorator125 := 169;
		biggest_fish_is125 := 170;
		decorator126 := 171;
		biggest_fish_is126 := 172;
		parallel122 := 173;
		decorator119 := 174;
		biggest_fish_is119 := 175;
		decorator120 := 176;
		biggest_fish_is120 := 177;
		decorator121 := 178;
		biggest_fish_is121 := 179;
		decorator122 := 180;
		biggest_fish_is122 := 181;
		parallel118 := 182;
		decorator115 := 183;
		biggest_fish_is115 := 184;
		decorator116 := 185;
		biggest_fish_is116 := 186;
		decorator117 := 187;
		biggest_fish_is117 := 188;
		decorator118 := 189;
		biggest_fish_is118 := 190;
		parallel114 := 191;
		decorator111 := 192;
		biggest_fish_is111 := 193;
		decorator112 := 194;
		biggest_fish_is112 := 195;
		decorator113 := 196;
		biggest_fish_is113 := 197;
		decorator114 := 198;
		biggest_fish_is114 := 199;
		parallel110 := 200;
		decorator107 := 201;
		biggest_fish_is107 := 202;
		decorator108 := 203;
		biggest_fish_is108 := 204;
		decorator109 := 205;
		biggest_fish_is109 := 206;
		decorator110 := 207;
		biggest_fish_is110 := 208;
		parallel106 := 209;
		decorator103 := 210;
		biggest_fish_is103 := 211;
		decorator104 := 212;
		biggest_fish_is104 := 213;
		decorator105 := 214;
		biggest_fish_is105 := 215;
		decorator106 := 216;
		biggest_fish_is106 := 217;
		parallel102 := 218;
		decorator99 := 219;
		biggest_fish_is99 := 220;
		decorator100 := 221;
		biggest_fish_is100 := 222;
		decorator101 := 223;
		biggest_fish_is101 := 224;
		decorator102 := 225;
		biggest_fish_is102 := 226;
		parallel98 := 227;
		decorator95 := 228;
		biggest_fish_is95 := 229;
		decorator96 := 230;
		biggest_fish_is96 := 231;
		decorator97 := 232;
		biggest_fish_is97 := 233;
		decorator98 := 234;
		biggest_fish_is98 := 235;
		parallel94 := 236;
		decorator91 := 237;
		biggest_fish_is91 := 238;
		decorator92 := 239;
		biggest_fish_is92 := 240;
		decorator93 := 241;
		biggest_fish_is93 := 242;
		decorator94 := 243;
		biggest_fish_is94 := 244;
		parallel90 := 245;
		decorator87 := 246;
		biggest_fish_is87 := 247;
		decorator88 := 248;
		biggest_fish_is88 := 249;
		decorator89 := 250;
		biggest_fish_is89 := 251;
		decorator90 := 252;
		biggest_fish_is90 := 253;
		parallel86 := 254;
		decorator83 := 255;
		biggest_fish_is83 := 256;
		decorator84 := 257;
		biggest_fish_is84 := 258;
		decorator85 := 259;
		biggest_fish_is85 := 260;
		decorator86 := 261;
		biggest_fish_is86 := 262;
		parallel82 := 263;
		decorator79 := 264;
		biggest_fish_is79 := 265;
		decorator80 := 266;
		biggest_fish_is80 := 267;
		decorator81 := 268;
		biggest_fish_is81 := 269;
		decorator82 := 270;
		biggest_fish_is82 := 271;
		parallel78 := 272;
		decorator75 := 273;
		biggest_fish_is75 := 274;
		decorator76 := 275;
		biggest_fish_is76 := 276;
		decorator77 := 277;
		biggest_fish_is77 := 278;
		decorator78 := 279;
		biggest_fish_is78 := 280;
		parallel74 := 281;
		decorator71 := 282;
		biggest_fish_is71 := 283;
		decorator72 := 284;
		biggest_fish_is72 := 285;
		decorator73 := 286;
		biggest_fish_is73 := 287;
		decorator74 := 288;
		biggest_fish_is74 := 289;
		parallel70 := 290;
		decorator67 := 291;
		biggest_fish_is67 := 292;
		decorator68 := 293;
		biggest_fish_is68 := 294;
		decorator69 := 295;
		biggest_fish_is69 := 296;
		decorator70 := 297;
		biggest_fish_is70 := 298;
		parallel66 := 299;
		decorator63 := 300;
		biggest_fish_is63 := 301;
		decorator64 := 302;
		biggest_fish_is64 := 303;
		decorator65 := 304;
		biggest_fish_is65 := 305;
		decorator66 := 306;
		biggest_fish_is66 := 307;
		parallel62 := 308;
		decorator59 := 309;
		biggest_fish_is59 := 310;
		decorator60 := 311;
		biggest_fish_is60 := 312;
		decorator61 := 313;
		biggest_fish_is61 := 314;
		decorator62 := 315;
		biggest_fish_is62 := 316;
		parallel58 := 317;
		decorator55 := 318;
		biggest_fish_is55 := 319;
		decorator56 := 320;
		biggest_fish_is56 := 321;
		decorator57 := 322;
		biggest_fish_is57 := 323;
		decorator58 := 324;
		biggest_fish_is58 := 325;
		parallel54 := 326;
		decorator51 := 327;
		biggest_fish_is51 := 328;
		decorator52 := 329;
		biggest_fish_is52 := 330;
		decorator53 := 331;
		biggest_fish_is53 := 332;
		decorator54 := 333;
		biggest_fish_is54 := 334;
		parallel50 := 335;
		decorator47 := 336;
		biggest_fish_is47 := 337;
		decorator48 := 338;
		biggest_fish_is48 := 339;
		decorator49 := 340;
		biggest_fish_is49 := 341;
		decorator50 := 342;
		biggest_fish_is50 := 343;
		parallel46 := 344;
		decorator43 := 345;
		biggest_fish_is43 := 346;
		decorator44 := 347;
		biggest_fish_is44 := 348;
		decorator45 := 349;
		biggest_fish_is45 := 350;
		decorator46 := 351;
		biggest_fish_is46 := 352;
		parallel42 := 353;
		decorator39 := 354;
		biggest_fish_is39 := 355;
		decorator40 := 356;
		biggest_fish_is40 := 357;
		decorator41 := 358;
		biggest_fish_is41 := 359;
		decorator42 := 360;
		biggest_fish_is42 := 361;
		parallel38 := 362;
		decorator35 := 363;
		biggest_fish_is35 := 364;
		decorator36 := 365;
		biggest_fish_is36 := 366;
		decorator37 := 367;
		biggest_fish_is37 := 368;
		decorator38 := 369;
		biggest_fish_is38 := 370;
		parallel34 := 371;
		decorator31 := 372;
		biggest_fish_is31 := 373;
		decorator32 := 374;
		biggest_fish_is32 := 375;
		decorator33 := 376;
		biggest_fish_is33 := 377;
		decorator34 := 378;
		biggest_fish_is34 := 379;
		parallel30 := 380;
		decorator27 := 381;
		biggest_fish_is27 := 382;
		decorator28 := 383;
		biggest_fish_is28 := 384;
		decorator29 := 385;
		biggest_fish_is29 := 386;
		decorator30 := 387;
		biggest_fish_is30 := 388;
		parallel26 := 389;
		decorator23 := 390;
		biggest_fish_is23 := 391;
		decorator24 := 392;
		biggest_fish_is24 := 393;
		decorator25 := 394;
		biggest_fish_is25 := 395;
		decorator26 := 396;
		biggest_fish_is26 := 397;
		parallel22 := 398;
		decorator19 := 399;
		biggest_fish_is19 := 400;
		decorator20 := 401;
		biggest_fish_is20 := 402;
		decorator21 := 403;
		biggest_fish_is21 := 404;
		decorator22 := 405;
		biggest_fish_is22 := 406;
		parallel18 := 407;
		decorator15 := 408;
		biggest_fish_is15 := 409;
		decorator16 := 410;
		biggest_fish_is16 := 411;
		decorator17 := 412;
		biggest_fish_is17 := 413;
		decorator18 := 414;
		biggest_fish_is18 := 415;
		parallel14 := 416;
		decorator11 := 417;
		biggest_fish_is11 := 418;
		decorator12 := 419;
		biggest_fish_is12 := 420;
		decorator13 := 421;
		biggest_fish_is13 := 422;
		decorator14 := 423;
		biggest_fish_is14 := 424;
		parallel10 := 425;
		decorator7 := 426;
		biggest_fish_is7 := 427;
		decorator8 := 428;
		biggest_fish_is8 := 429;
		decorator9 := 430;
		biggest_fish_is9 := 431;
		decorator10 := 432;
		biggest_fish_is10 := 433;
		parallel6 := 434;
		decorator3 := 435;
		biggest_fish_is3 := 436;
		decorator4 := 437;
		biggest_fish_is4 := 438;
		decorator5 := 439;
		biggest_fish_is5 := 440;
		decorator6 := 441;
		biggest_fish_is6 := 442;
		parallel2 := 443;
		decorator0 := 444;
		biggest_fish_is0 := 445;
		decorator1 := 446;
		biggest_fish_is1 := 447;
		decorator2 := 448;
		biggest_fish_is2 := 449;
		bigger_fish := 450;
MODULE decorator_X_is_Y(child_0, incoming_status, outgoing_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.status = incoming_status : outgoing_status;
				TRUE : child_0.status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_parallel_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		child.active := active;
		next_composite.active := active;

MODULE composite_parallel_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 0)) ? success : failure;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 1)) ? success : failure;
MODULE biggest_fish_is10_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 10)) ? success : failure;
MODULE biggest_fish_is100_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 100)) ? success : failure;
MODULE biggest_fish_is101_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 101)) ? success : failure;
MODULE biggest_fish_is102_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 102)) ? success : failure;
MODULE biggest_fish_is103_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 103)) ? success : failure;
MODULE biggest_fish_is104_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 104)) ? success : failure;
MODULE biggest_fish_is105_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 105)) ? success : failure;
MODULE biggest_fish_is106_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 106)) ? success : failure;
MODULE biggest_fish_is107_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 107)) ? success : failure;
MODULE biggest_fish_is108_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 108)) ? success : failure;
MODULE biggest_fish_is109_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 109)) ? success : failure;
MODULE biggest_fish_is11_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 11)) ? success : failure;
MODULE biggest_fish_is110_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 110)) ? success : failure;
MODULE biggest_fish_is111_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 111)) ? success : failure;
MODULE biggest_fish_is112_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 112)) ? success : failure;
MODULE biggest_fish_is113_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 113)) ? success : failure;
MODULE biggest_fish_is114_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 114)) ? success : failure;
MODULE biggest_fish_is115_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 115)) ? success : failure;
MODULE biggest_fish_is116_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 116)) ? success : failure;
MODULE biggest_fish_is117_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 117)) ? success : failure;
MODULE biggest_fish_is118_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 118)) ? success : failure;
MODULE biggest_fish_is119_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 119)) ? success : failure;
MODULE biggest_fish_is12_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 12)) ? success : failure;
MODULE biggest_fish_is120_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 120)) ? success : failure;
MODULE biggest_fish_is121_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 121)) ? success : failure;
MODULE biggest_fish_is122_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 122)) ? success : failure;
MODULE biggest_fish_is123_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 123)) ? success : failure;
MODULE biggest_fish_is124_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 124)) ? success : failure;
MODULE biggest_fish_is125_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 125)) ? success : failure;
MODULE biggest_fish_is126_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 126)) ? success : failure;
MODULE biggest_fish_is127_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 127)) ? success : failure;
MODULE biggest_fish_is128_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 128)) ? success : failure;
MODULE biggest_fish_is129_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 129)) ? success : failure;
MODULE biggest_fish_is13_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 13)) ? success : failure;
MODULE biggest_fish_is130_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 130)) ? success : failure;
MODULE biggest_fish_is131_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 131)) ? success : failure;
MODULE biggest_fish_is132_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 132)) ? success : failure;
MODULE biggest_fish_is133_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 133)) ? success : failure;
MODULE biggest_fish_is134_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 134)) ? success : failure;
MODULE biggest_fish_is135_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 135)) ? success : failure;
MODULE biggest_fish_is136_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 136)) ? success : failure;
MODULE biggest_fish_is137_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 137)) ? success : failure;
MODULE biggest_fish_is138_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 138)) ? success : failure;
MODULE biggest_fish_is139_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 139)) ? success : failure;
MODULE biggest_fish_is14_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 14)) ? success : failure;
MODULE biggest_fish_is140_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 140)) ? success : failure;
MODULE biggest_fish_is141_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 141)) ? success : failure;
MODULE biggest_fish_is142_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 142)) ? success : failure;
MODULE biggest_fish_is143_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 143)) ? success : failure;
MODULE biggest_fish_is144_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 144)) ? success : failure;
MODULE biggest_fish_is145_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 145)) ? success : failure;
MODULE biggest_fish_is146_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 146)) ? success : failure;
MODULE biggest_fish_is147_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 147)) ? success : failure;
MODULE biggest_fish_is148_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 148)) ? success : failure;
MODULE biggest_fish_is149_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 149)) ? success : failure;
MODULE biggest_fish_is15_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 15)) ? success : failure;
MODULE biggest_fish_is150_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 150)) ? success : failure;
MODULE biggest_fish_is151_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 151)) ? success : failure;
MODULE biggest_fish_is152_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 152)) ? success : failure;
MODULE biggest_fish_is153_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 153)) ? success : failure;
MODULE biggest_fish_is154_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 154)) ? success : failure;
MODULE biggest_fish_is155_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 155)) ? success : failure;
MODULE biggest_fish_is156_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 156)) ? success : failure;
MODULE biggest_fish_is157_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 157)) ? success : failure;
MODULE biggest_fish_is158_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 158)) ? success : failure;
MODULE biggest_fish_is159_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 159)) ? success : failure;
MODULE biggest_fish_is16_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 16)) ? success : failure;
MODULE biggest_fish_is160_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 160)) ? success : failure;
MODULE biggest_fish_is161_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 161)) ? success : failure;
MODULE biggest_fish_is162_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 162)) ? success : failure;
MODULE biggest_fish_is163_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 163)) ? success : failure;
MODULE biggest_fish_is164_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 164)) ? success : failure;
MODULE biggest_fish_is165_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 165)) ? success : failure;
MODULE biggest_fish_is166_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 166)) ? success : failure;
MODULE biggest_fish_is167_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 167)) ? success : failure;
MODULE biggest_fish_is168_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 168)) ? success : failure;
MODULE biggest_fish_is169_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 169)) ? success : failure;
MODULE biggest_fish_is17_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 17)) ? success : failure;
MODULE biggest_fish_is170_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 170)) ? success : failure;
MODULE biggest_fish_is171_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 171)) ? success : failure;
MODULE biggest_fish_is172_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 172)) ? success : failure;
MODULE biggest_fish_is173_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 173)) ? success : failure;
MODULE biggest_fish_is174_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 174)) ? success : failure;
MODULE biggest_fish_is175_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 175)) ? success : failure;
MODULE biggest_fish_is176_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 176)) ? success : failure;
MODULE biggest_fish_is177_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 177)) ? success : failure;
MODULE biggest_fish_is178_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 178)) ? success : failure;
MODULE biggest_fish_is179_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 179)) ? success : failure;
MODULE biggest_fish_is18_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 18)) ? success : failure;
MODULE biggest_fish_is180_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 180)) ? success : failure;
MODULE biggest_fish_is181_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 181)) ? success : failure;
MODULE biggest_fish_is182_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 182)) ? success : failure;
MODULE biggest_fish_is183_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 183)) ? success : failure;
MODULE biggest_fish_is184_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 184)) ? success : failure;
MODULE biggest_fish_is185_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 185)) ? success : failure;
MODULE biggest_fish_is186_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 186)) ? success : failure;
MODULE biggest_fish_is187_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 187)) ? success : failure;
MODULE biggest_fish_is188_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 188)) ? success : failure;
MODULE biggest_fish_is189_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 189)) ? success : failure;
MODULE biggest_fish_is19_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 19)) ? success : failure;
MODULE biggest_fish_is190_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 190)) ? success : failure;
MODULE biggest_fish_is191_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 191)) ? success : failure;
MODULE biggest_fish_is192_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 192)) ? success : failure;
MODULE biggest_fish_is193_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 193)) ? success : failure;
MODULE biggest_fish_is194_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 194)) ? success : failure;
MODULE biggest_fish_is195_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 195)) ? success : failure;
MODULE biggest_fish_is196_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 196)) ? success : failure;
MODULE biggest_fish_is197_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 197)) ? success : failure;
MODULE biggest_fish_is198_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 198)) ? success : failure;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 2)) ? success : failure;
MODULE biggest_fish_is20_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 20)) ? success : failure;
MODULE biggest_fish_is21_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 21)) ? success : failure;
MODULE biggest_fish_is22_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 22)) ? success : failure;
MODULE biggest_fish_is23_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 23)) ? success : failure;
MODULE biggest_fish_is24_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 24)) ? success : failure;
MODULE biggest_fish_is25_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 25)) ? success : failure;
MODULE biggest_fish_is26_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 26)) ? success : failure;
MODULE biggest_fish_is27_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 27)) ? success : failure;
MODULE biggest_fish_is28_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 28)) ? success : failure;
MODULE biggest_fish_is29_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 29)) ? success : failure;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 3)) ? success : failure;
MODULE biggest_fish_is30_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 30)) ? success : failure;
MODULE biggest_fish_is31_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 31)) ? success : failure;
MODULE biggest_fish_is32_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 32)) ? success : failure;
MODULE biggest_fish_is33_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 33)) ? success : failure;
MODULE biggest_fish_is34_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 34)) ? success : failure;
MODULE biggest_fish_is35_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 35)) ? success : failure;
MODULE biggest_fish_is36_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 36)) ? success : failure;
MODULE biggest_fish_is37_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 37)) ? success : failure;
MODULE biggest_fish_is38_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 38)) ? success : failure;
MODULE biggest_fish_is39_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 39)) ? success : failure;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 4)) ? success : failure;
MODULE biggest_fish_is40_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 40)) ? success : failure;
MODULE biggest_fish_is41_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 41)) ? success : failure;
MODULE biggest_fish_is42_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 42)) ? success : failure;
MODULE biggest_fish_is43_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 43)) ? success : failure;
MODULE biggest_fish_is44_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 44)) ? success : failure;
MODULE biggest_fish_is45_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 45)) ? success : failure;
MODULE biggest_fish_is46_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 46)) ? success : failure;
MODULE biggest_fish_is47_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 47)) ? success : failure;
MODULE biggest_fish_is48_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 48)) ? success : failure;
MODULE biggest_fish_is49_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 49)) ? success : failure;
MODULE biggest_fish_is5_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 5)) ? success : failure;
MODULE biggest_fish_is50_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 50)) ? success : failure;
MODULE biggest_fish_is51_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 51)) ? success : failure;
MODULE biggest_fish_is52_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 52)) ? success : failure;
MODULE biggest_fish_is53_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 53)) ? success : failure;
MODULE biggest_fish_is54_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 54)) ? success : failure;
MODULE biggest_fish_is55_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 55)) ? success : failure;
MODULE biggest_fish_is56_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 56)) ? success : failure;
MODULE biggest_fish_is57_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 57)) ? success : failure;
MODULE biggest_fish_is58_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 58)) ? success : failure;
MODULE biggest_fish_is59_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 59)) ? success : failure;
MODULE biggest_fish_is6_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 6)) ? success : failure;
MODULE biggest_fish_is60_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 60)) ? success : failure;
MODULE biggest_fish_is61_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 61)) ? success : failure;
MODULE biggest_fish_is62_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 62)) ? success : failure;
MODULE biggest_fish_is63_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 63)) ? success : failure;
MODULE biggest_fish_is64_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 64)) ? success : failure;
MODULE biggest_fish_is65_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 65)) ? success : failure;
MODULE biggest_fish_is66_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 66)) ? success : failure;
MODULE biggest_fish_is67_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 67)) ? success : failure;
MODULE biggest_fish_is68_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 68)) ? success : failure;
MODULE biggest_fish_is69_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 69)) ? success : failure;
MODULE biggest_fish_is7_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 7)) ? success : failure;
MODULE biggest_fish_is70_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 70)) ? success : failure;
MODULE biggest_fish_is71_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 71)) ? success : failure;
MODULE biggest_fish_is72_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 72)) ? success : failure;
MODULE biggest_fish_is73_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 73)) ? success : failure;
MODULE biggest_fish_is74_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 74)) ? success : failure;
MODULE biggest_fish_is75_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 75)) ? success : failure;
MODULE biggest_fish_is76_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 76)) ? success : failure;
MODULE biggest_fish_is77_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 77)) ? success : failure;
MODULE biggest_fish_is78_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 78)) ? success : failure;
MODULE biggest_fish_is79_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 79)) ? success : failure;
MODULE biggest_fish_is8_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 8)) ? success : failure;
MODULE biggest_fish_is80_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 80)) ? success : failure;
MODULE biggest_fish_is81_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 81)) ? success : failure;
MODULE biggest_fish_is82_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 82)) ? success : failure;
MODULE biggest_fish_is83_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 83)) ? success : failure;
MODULE biggest_fish_is84_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 84)) ? success : failure;
MODULE biggest_fish_is85_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 85)) ? success : failure;
MODULE biggest_fish_is86_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 86)) ? success : failure;
MODULE biggest_fish_is87_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 87)) ? success : failure;
MODULE biggest_fish_is88_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 88)) ? success : failure;
MODULE biggest_fish_is89_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 89)) ? success : failure;
MODULE biggest_fish_is9_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 9)) ? success : failure;
MODULE biggest_fish_is90_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 90)) ? success : failure;
MODULE biggest_fish_is91_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 91)) ? success : failure;
MODULE biggest_fish_is92_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 92)) ? success : failure;
MODULE biggest_fish_is93_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 93)) ? success : failure;
MODULE biggest_fish_is94_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 94)) ? success : failure;
MODULE biggest_fish_is95_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 95)) ? success : failure;
MODULE biggest_fish_is96_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 96)) ? success : failure;
MODULE biggest_fish_is97_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 97)) ? success : failure;
MODULE biggest_fish_is98_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 98)) ? success : failure;
MODULE biggest_fish_is99_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 99)) ? success : failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
