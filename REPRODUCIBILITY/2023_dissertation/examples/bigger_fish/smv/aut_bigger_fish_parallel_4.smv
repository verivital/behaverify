MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		status__bigger_fish := bigger_fish.status;
		status__biggest_fish_is0 := biggest_fish_is0.status;
		status__biggest_fish_is1 := biggest_fish_is1.status;
		status__biggest_fish_is2 := biggest_fish_is2.status;
		status__biggest_fish_is3 := biggest_fish_is3.status;
		status__biggest_fish_is4 := biggest_fish_is4.status;
		status__biggest_fish_sequence := 
			case
				status__special_decorator != success : status__special_decorator;
				status__bigger_fish != success : status__bigger_fish;
				TRUE : success;
			esac;
		status__decorator0 := status__biggest_fish_is0 = failure ? running : status__biggest_fish_is0;
		status__decorator1 := status__biggest_fish_is1 = failure ? running : status__biggest_fish_is1;
		status__decorator2 := status__biggest_fish_is2 = failure ? running : status__biggest_fish_is2;
		status__decorator3 := status__biggest_fish_is3 = failure ? running : status__biggest_fish_is3;
		status__decorator4 := status__biggest_fish_is4 = failure ? running : status__biggest_fish_is4;
		status__parallel4 := 
			case
				(status__decorator1 = failure) | (status__decorator1 = invalid) : status__decorator1;
				(status__decorator2 = failure) | (status__decorator2 = invalid) : status__decorator2;
				(status__decorator3 = failure) | (status__decorator3 = invalid) : status__decorator3;
				(status__decorator4 = failure) | (status__decorator4 = invalid) : status__decorator4;
				(status__decorator0 = failure) | (status__decorator0 = invalid) : status__decorator0;
				status__decorator1 = success : success;
				status__decorator2 = success : success;
				status__decorator3 = success : success;
				status__decorator4 = success : success;
				status__decorator0 = success : success;
				TRUE : running;
			esac;
		status__special_decorator := status__parallel4 = running ? failure : status__parallel4;
		next_child__biggest_fish_sequence := 
			case
				(status__special_decorator = invalid) : node_names.special_decorator;
				(status__bigger_fish = invalid) : node_names.bigger_fish;
			esac;
		next_child__decorator0 := node_names.biggest_fish_is0;
		next_child__decorator1 := node_names.biggest_fish_is1;
		next_child__decorator2 := node_names.biggest_fish_is2;
		next_child__decorator3 := node_names.biggest_fish_is3;
		next_child__decorator4 := node_names.biggest_fish_is4;
		next_child__parallel4 := 
			case
				(status__decorator1 = invalid) : node_names.decorator1;
				(status__decorator2 = invalid) : node_names.decorator2;
				(status__decorator3 = invalid) : node_names.decorator3;
				(status__decorator4 = invalid) : node_names.decorator4;
				(status__decorator0 = invalid) : node_names.decorator0;
			esac;
		next_child__special_decorator := node_names.parallel4;
		bigger_fish.active := active_node = node_names.bigger_fish;
		bigger_fish.reset := active_node = -1;
		biggest_fish_is0.active := active_node = node_names.biggest_fish_is0;
		biggest_fish_is0.reset := active_node = -1;
		biggest_fish_is1.active := active_node = node_names.biggest_fish_is1;
		biggest_fish_is1.reset := active_node = -1;
		biggest_fish_is2.active := active_node = node_names.biggest_fish_is2;
		biggest_fish_is2.reset := active_node = -1;
		biggest_fish_is3.active := active_node = node_names.biggest_fish_is3;
		biggest_fish_is3.reset := active_node = -1;
		biggest_fish_is4.active := active_node = node_names.biggest_fish_is4;
		biggest_fish_is4.reset := active_node = -1;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..14;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..199;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.biggest_fish_sequence;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.bigger_fish) & (status__bigger_fish != invalid) : node_names.biggest_fish_sequence;
				(active_node = node_names.biggest_fish_is0) & (status__biggest_fish_is0 != invalid) : node_names.decorator0;
				(active_node = node_names.biggest_fish_is1) & (status__biggest_fish_is1 != invalid) : node_names.decorator1;
				(active_node = node_names.biggest_fish_is2) & (status__biggest_fish_is2 != invalid) : node_names.decorator2;
				(active_node = node_names.biggest_fish_is3) & (status__biggest_fish_is3 != invalid) : node_names.decorator3;
				(active_node = node_names.biggest_fish_is4) & (status__biggest_fish_is4 != invalid) : node_names.decorator4;
				(active_node = node_names.biggest_fish_sequence) & (status__biggest_fish_sequence != invalid) : -1;
				(active_node = node_names.biggest_fish_sequence) & (status__biggest_fish_sequence = invalid) : next_child__biggest_fish_sequence;
				(active_node = node_names.decorator0) & (status__decorator0 != invalid) : node_names.parallel4;
				(active_node = node_names.decorator0) & (status__decorator0 = invalid) : next_child__decorator0;
				(active_node = node_names.decorator1) & (status__decorator1 != invalid) : node_names.parallel4;
				(active_node = node_names.decorator1) & (status__decorator1 = invalid) : next_child__decorator1;
				(active_node = node_names.decorator2) & (status__decorator2 != invalid) : node_names.parallel4;
				(active_node = node_names.decorator2) & (status__decorator2 = invalid) : next_child__decorator2;
				(active_node = node_names.decorator3) & (status__decorator3 != invalid) : node_names.parallel4;
				(active_node = node_names.decorator3) & (status__decorator3 = invalid) : next_child__decorator3;
				(active_node = node_names.decorator4) & (status__decorator4 != invalid) : node_names.parallel4;
				(active_node = node_names.decorator4) & (status__decorator4 = invalid) : next_child__decorator4;
				(active_node = node_names.parallel4) & (status__parallel4 != invalid) : node_names.special_decorator;
				(active_node = node_names.parallel4) & (status__parallel4 = invalid) : next_child__parallel4;
				(active_node = node_names.special_decorator) & (status__special_decorator != invalid) : node_names.biggest_fish_sequence;
				(active_node = node_names.special_decorator) & (status__special_decorator = invalid) : next_child__special_decorator;
				TRUE : active_node;
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) :=
			case
				(active_node = -1) & !(status__bigger_fish = invalid) & (TRUE) : min((1 + var_biggest_fish), 199);
				TRUE : var_biggest_fish;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 5)));
CTLSPEC AF(AG((var_biggest_fish = 5)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel4 := 2;
		decorator1 := 3;
		biggest_fish_is1 := 4;
		decorator2 := 5;
		biggest_fish_is2 := 6;
		decorator3 := 7;
		biggest_fish_is3 := 8;
		decorator4 := 9;
		biggest_fish_is4 := 10;
		decorator0 := 11;
		biggest_fish_is0 := 12;
		bigger_fish := 13;
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, failure, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				(var_biggest_fish = 0) : success;
				TRUE : failure;
			esac;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, failure, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				(var_biggest_fish = 1) : success;
				TRUE : failure;
			esac;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, failure, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				(var_biggest_fish = 2) : success;
				TRUE : failure;
			esac;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, failure, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				(var_biggest_fish = 3) : success;
				TRUE : failure;
			esac;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, failure, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				(var_biggest_fish = 4) : success;
				TRUE : failure;
			esac;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) := 
			case
				reset : invalid;
				active : {success};
				TRUE : status;
			esac;
