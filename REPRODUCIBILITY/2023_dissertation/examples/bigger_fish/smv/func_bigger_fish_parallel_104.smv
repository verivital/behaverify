MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator101 := -3;
		resume_from_here_in_subtree__decorator102 := -3;
		resume_from_here_in_subtree__decorator103 := -3;
		resume_from_here_in_subtree__decorator104 := -3;
		resume_from_here_in_subtree__parallel100 := -3;
		resume_from_here_in_subtree__decorator97 := -3;
		resume_from_here_in_subtree__decorator98 := -3;
		resume_from_here_in_subtree__decorator99 := -3;
		resume_from_here_in_subtree__decorator100 := -3;
		resume_from_here_in_subtree__parallel96 := -3;
		resume_from_here_in_subtree__decorator93 := -3;
		resume_from_here_in_subtree__decorator94 := -3;
		resume_from_here_in_subtree__decorator95 := -3;
		resume_from_here_in_subtree__decorator96 := -3;
		resume_from_here_in_subtree__parallel92 := -3;
		resume_from_here_in_subtree__decorator89 := -3;
		resume_from_here_in_subtree__decorator90 := -3;
		resume_from_here_in_subtree__decorator91 := -3;
		resume_from_here_in_subtree__decorator92 := -3;
		resume_from_here_in_subtree__parallel88 := -3;
		resume_from_here_in_subtree__decorator85 := -3;
		resume_from_here_in_subtree__decorator86 := -3;
		resume_from_here_in_subtree__decorator87 := -3;
		resume_from_here_in_subtree__decorator88 := -3;
		resume_from_here_in_subtree__parallel84 := -3;
		resume_from_here_in_subtree__decorator81 := -3;
		resume_from_here_in_subtree__decorator82 := -3;
		resume_from_here_in_subtree__decorator83 := -3;
		resume_from_here_in_subtree__decorator84 := -3;
		resume_from_here_in_subtree__parallel80 := -3;
		resume_from_here_in_subtree__decorator77 := -3;
		resume_from_here_in_subtree__decorator78 := -3;
		resume_from_here_in_subtree__decorator79 := -3;
		resume_from_here_in_subtree__decorator80 := -3;
		resume_from_here_in_subtree__parallel76 := -3;
		resume_from_here_in_subtree__decorator73 := -3;
		resume_from_here_in_subtree__decorator74 := -3;
		resume_from_here_in_subtree__decorator75 := -3;
		resume_from_here_in_subtree__decorator76 := -3;
		resume_from_here_in_subtree__parallel72 := -3;
		resume_from_here_in_subtree__decorator69 := -3;
		resume_from_here_in_subtree__decorator70 := -3;
		resume_from_here_in_subtree__decorator71 := -3;
		resume_from_here_in_subtree__decorator72 := -3;
		resume_from_here_in_subtree__parallel68 := -3;
		resume_from_here_in_subtree__decorator65 := -3;
		resume_from_here_in_subtree__decorator66 := -3;
		resume_from_here_in_subtree__decorator67 := -3;
		resume_from_here_in_subtree__decorator68 := -3;
		resume_from_here_in_subtree__parallel64 := -3;
		resume_from_here_in_subtree__decorator61 := -3;
		resume_from_here_in_subtree__decorator62 := -3;
		resume_from_here_in_subtree__decorator63 := -3;
		resume_from_here_in_subtree__decorator64 := -3;
		resume_from_here_in_subtree__parallel60 := -3;
		resume_from_here_in_subtree__decorator57 := -3;
		resume_from_here_in_subtree__decorator58 := -3;
		resume_from_here_in_subtree__decorator59 := -3;
		resume_from_here_in_subtree__decorator60 := -3;
		resume_from_here_in_subtree__parallel56 := -3;
		resume_from_here_in_subtree__decorator53 := -3;
		resume_from_here_in_subtree__decorator54 := -3;
		resume_from_here_in_subtree__decorator55 := -3;
		resume_from_here_in_subtree__decorator56 := -3;
		resume_from_here_in_subtree__parallel52 := -3;
		resume_from_here_in_subtree__decorator49 := -3;
		resume_from_here_in_subtree__decorator50 := -3;
		resume_from_here_in_subtree__decorator51 := -3;
		resume_from_here_in_subtree__decorator52 := -3;
		resume_from_here_in_subtree__parallel48 := -3;
		resume_from_here_in_subtree__decorator45 := -3;
		resume_from_here_in_subtree__decorator46 := -3;
		resume_from_here_in_subtree__decorator47 := -3;
		resume_from_here_in_subtree__decorator48 := -3;
		resume_from_here_in_subtree__parallel44 := -3;
		resume_from_here_in_subtree__decorator41 := -3;
		resume_from_here_in_subtree__decorator42 := -3;
		resume_from_here_in_subtree__decorator43 := -3;
		resume_from_here_in_subtree__decorator44 := -3;
		resume_from_here_in_subtree__parallel40 := -3;
		resume_from_here_in_subtree__decorator37 := -3;
		resume_from_here_in_subtree__decorator38 := -3;
		resume_from_here_in_subtree__decorator39 := -3;
		resume_from_here_in_subtree__decorator40 := -3;
		resume_from_here_in_subtree__parallel36 := -3;
		resume_from_here_in_subtree__decorator33 := -3;
		resume_from_here_in_subtree__decorator34 := -3;
		resume_from_here_in_subtree__decorator35 := -3;
		resume_from_here_in_subtree__decorator36 := -3;
		resume_from_here_in_subtree__parallel32 := -3;
		resume_from_here_in_subtree__decorator29 := -3;
		resume_from_here_in_subtree__decorator30 := -3;
		resume_from_here_in_subtree__decorator31 := -3;
		resume_from_here_in_subtree__decorator32 := -3;
		resume_from_here_in_subtree__parallel28 := -3;
		resume_from_here_in_subtree__decorator25 := -3;
		resume_from_here_in_subtree__decorator26 := -3;
		resume_from_here_in_subtree__decorator27 := -3;
		resume_from_here_in_subtree__decorator28 := -3;
		resume_from_here_in_subtree__parallel24 := -3;
		resume_from_here_in_subtree__decorator21 := -3;
		resume_from_here_in_subtree__decorator22 := -3;
		resume_from_here_in_subtree__decorator23 := -3;
		resume_from_here_in_subtree__decorator24 := -3;
		resume_from_here_in_subtree__parallel20 := -3;
		resume_from_here_in_subtree__decorator17 := -3;
		resume_from_here_in_subtree__decorator18 := -3;
		resume_from_here_in_subtree__decorator19 := -3;
		resume_from_here_in_subtree__decorator20 := -3;
		resume_from_here_in_subtree__parallel16 := -3;
		resume_from_here_in_subtree__decorator13 := -3;
		resume_from_here_in_subtree__decorator14 := -3;
		resume_from_here_in_subtree__decorator15 := -3;
		resume_from_here_in_subtree__decorator16 := -3;
		resume_from_here_in_subtree__parallel12 := -3;
		resume_from_here_in_subtree__decorator9 := -3;
		resume_from_here_in_subtree__decorator10 := -3;
		resume_from_here_in_subtree__decorator11 := -3;
		resume_from_here_in_subtree__decorator12 := -3;
		resume_from_here_in_subtree__parallel8 := -3;
		resume_from_here_in_subtree__decorator5 := -3;
		resume_from_here_in_subtree__decorator6 := -3;
		resume_from_here_in_subtree__decorator7 := -3;
		resume_from_here_in_subtree__decorator8 := -3;
		resume_from_here_in_subtree__parallel4 := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		biggest_fish_sequence.active := TRUE;
		parallel100.status := parallel100.active ? parallel100.internal_status : invalid;
		parallel100.internal_status := 
			case
				count(decorator97.internal_status = failure, decorator98.internal_status = failure, decorator99.internal_status = failure, decorator100.internal_status = failure, parallel96.internal_status = failure) >= 1 : failure;
				count(decorator97.internal_status = success, decorator98.internal_status = success, decorator99.internal_status = success, decorator100.internal_status = success, parallel96.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel104.status := parallel104.active ? parallel104.internal_status : invalid;
		parallel104.internal_status := 
			case
				count(decorator101.internal_status = failure, decorator102.internal_status = failure, decorator103.internal_status = failure, decorator104.internal_status = failure, parallel100.internal_status = failure) >= 1 : failure;
				count(decorator101.internal_status = success, decorator102.internal_status = success, decorator103.internal_status = success, decorator104.internal_status = success, parallel100.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel12.status := parallel12.active ? parallel12.internal_status : invalid;
		parallel12.internal_status := 
			case
				count(decorator9.internal_status = failure, decorator10.internal_status = failure, decorator11.internal_status = failure, decorator12.internal_status = failure, parallel8.internal_status = failure) >= 1 : failure;
				count(decorator9.internal_status = success, decorator10.internal_status = success, decorator11.internal_status = success, decorator12.internal_status = success, parallel8.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel16.status := parallel16.active ? parallel16.internal_status : invalid;
		parallel16.internal_status := 
			case
				count(decorator13.internal_status = failure, decorator14.internal_status = failure, decorator15.internal_status = failure, decorator16.internal_status = failure, parallel12.internal_status = failure) >= 1 : failure;
				count(decorator13.internal_status = success, decorator14.internal_status = success, decorator15.internal_status = success, decorator16.internal_status = success, parallel12.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel20.status := parallel20.active ? parallel20.internal_status : invalid;
		parallel20.internal_status := 
			case
				count(decorator17.internal_status = failure, decorator18.internal_status = failure, decorator19.internal_status = failure, decorator20.internal_status = failure, parallel16.internal_status = failure) >= 1 : failure;
				count(decorator17.internal_status = success, decorator18.internal_status = success, decorator19.internal_status = success, decorator20.internal_status = success, parallel16.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel24.status := parallel24.active ? parallel24.internal_status : invalid;
		parallel24.internal_status := 
			case
				count(decorator21.internal_status = failure, decorator22.internal_status = failure, decorator23.internal_status = failure, decorator24.internal_status = failure, parallel20.internal_status = failure) >= 1 : failure;
				count(decorator21.internal_status = success, decorator22.internal_status = success, decorator23.internal_status = success, decorator24.internal_status = success, parallel20.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel28.status := parallel28.active ? parallel28.internal_status : invalid;
		parallel28.internal_status := 
			case
				count(decorator25.internal_status = failure, decorator26.internal_status = failure, decorator27.internal_status = failure, decorator28.internal_status = failure, parallel24.internal_status = failure) >= 1 : failure;
				count(decorator25.internal_status = success, decorator26.internal_status = success, decorator27.internal_status = success, decorator28.internal_status = success, parallel24.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel32.status := parallel32.active ? parallel32.internal_status : invalid;
		parallel32.internal_status := 
			case
				count(decorator29.internal_status = failure, decorator30.internal_status = failure, decorator31.internal_status = failure, decorator32.internal_status = failure, parallel28.internal_status = failure) >= 1 : failure;
				count(decorator29.internal_status = success, decorator30.internal_status = success, decorator31.internal_status = success, decorator32.internal_status = success, parallel28.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel36.status := parallel36.active ? parallel36.internal_status : invalid;
		parallel36.internal_status := 
			case
				count(decorator33.internal_status = failure, decorator34.internal_status = failure, decorator35.internal_status = failure, decorator36.internal_status = failure, parallel32.internal_status = failure) >= 1 : failure;
				count(decorator33.internal_status = success, decorator34.internal_status = success, decorator35.internal_status = success, decorator36.internal_status = success, parallel32.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel4.status := parallel4.active ? parallel4.internal_status : invalid;
		parallel4.internal_status := 
			case
				count(decorator1.internal_status = failure, decorator2.internal_status = failure, decorator3.internal_status = failure, decorator4.internal_status = failure, decorator0.internal_status = failure) >= 1 : failure;
				count(decorator1.internal_status = success, decorator2.internal_status = success, decorator3.internal_status = success, decorator4.internal_status = success, decorator0.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel40.status := parallel40.active ? parallel40.internal_status : invalid;
		parallel40.internal_status := 
			case
				count(decorator37.internal_status = failure, decorator38.internal_status = failure, decorator39.internal_status = failure, decorator40.internal_status = failure, parallel36.internal_status = failure) >= 1 : failure;
				count(decorator37.internal_status = success, decorator38.internal_status = success, decorator39.internal_status = success, decorator40.internal_status = success, parallel36.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel44.status := parallel44.active ? parallel44.internal_status : invalid;
		parallel44.internal_status := 
			case
				count(decorator41.internal_status = failure, decorator42.internal_status = failure, decorator43.internal_status = failure, decorator44.internal_status = failure, parallel40.internal_status = failure) >= 1 : failure;
				count(decorator41.internal_status = success, decorator42.internal_status = success, decorator43.internal_status = success, decorator44.internal_status = success, parallel40.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel48.status := parallel48.active ? parallel48.internal_status : invalid;
		parallel48.internal_status := 
			case
				count(decorator45.internal_status = failure, decorator46.internal_status = failure, decorator47.internal_status = failure, decorator48.internal_status = failure, parallel44.internal_status = failure) >= 1 : failure;
				count(decorator45.internal_status = success, decorator46.internal_status = success, decorator47.internal_status = success, decorator48.internal_status = success, parallel44.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel52.status := parallel52.active ? parallel52.internal_status : invalid;
		parallel52.internal_status := 
			case
				count(decorator49.internal_status = failure, decorator50.internal_status = failure, decorator51.internal_status = failure, decorator52.internal_status = failure, parallel48.internal_status = failure) >= 1 : failure;
				count(decorator49.internal_status = success, decorator50.internal_status = success, decorator51.internal_status = success, decorator52.internal_status = success, parallel48.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel56.status := parallel56.active ? parallel56.internal_status : invalid;
		parallel56.internal_status := 
			case
				count(decorator53.internal_status = failure, decorator54.internal_status = failure, decorator55.internal_status = failure, decorator56.internal_status = failure, parallel52.internal_status = failure) >= 1 : failure;
				count(decorator53.internal_status = success, decorator54.internal_status = success, decorator55.internal_status = success, decorator56.internal_status = success, parallel52.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel60.status := parallel60.active ? parallel60.internal_status : invalid;
		parallel60.internal_status := 
			case
				count(decorator57.internal_status = failure, decorator58.internal_status = failure, decorator59.internal_status = failure, decorator60.internal_status = failure, parallel56.internal_status = failure) >= 1 : failure;
				count(decorator57.internal_status = success, decorator58.internal_status = success, decorator59.internal_status = success, decorator60.internal_status = success, parallel56.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel64.status := parallel64.active ? parallel64.internal_status : invalid;
		parallel64.internal_status := 
			case
				count(decorator61.internal_status = failure, decorator62.internal_status = failure, decorator63.internal_status = failure, decorator64.internal_status = failure, parallel60.internal_status = failure) >= 1 : failure;
				count(decorator61.internal_status = success, decorator62.internal_status = success, decorator63.internal_status = success, decorator64.internal_status = success, parallel60.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel68.status := parallel68.active ? parallel68.internal_status : invalid;
		parallel68.internal_status := 
			case
				count(decorator65.internal_status = failure, decorator66.internal_status = failure, decorator67.internal_status = failure, decorator68.internal_status = failure, parallel64.internal_status = failure) >= 1 : failure;
				count(decorator65.internal_status = success, decorator66.internal_status = success, decorator67.internal_status = success, decorator68.internal_status = success, parallel64.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel72.status := parallel72.active ? parallel72.internal_status : invalid;
		parallel72.internal_status := 
			case
				count(decorator69.internal_status = failure, decorator70.internal_status = failure, decorator71.internal_status = failure, decorator72.internal_status = failure, parallel68.internal_status = failure) >= 1 : failure;
				count(decorator69.internal_status = success, decorator70.internal_status = success, decorator71.internal_status = success, decorator72.internal_status = success, parallel68.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel76.status := parallel76.active ? parallel76.internal_status : invalid;
		parallel76.internal_status := 
			case
				count(decorator73.internal_status = failure, decorator74.internal_status = failure, decorator75.internal_status = failure, decorator76.internal_status = failure, parallel72.internal_status = failure) >= 1 : failure;
				count(decorator73.internal_status = success, decorator74.internal_status = success, decorator75.internal_status = success, decorator76.internal_status = success, parallel72.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel8.status := parallel8.active ? parallel8.internal_status : invalid;
		parallel8.internal_status := 
			case
				count(decorator5.internal_status = failure, decorator6.internal_status = failure, decorator7.internal_status = failure, decorator8.internal_status = failure, parallel4.internal_status = failure) >= 1 : failure;
				count(decorator5.internal_status = success, decorator6.internal_status = success, decorator7.internal_status = success, decorator8.internal_status = success, parallel4.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel80.status := parallel80.active ? parallel80.internal_status : invalid;
		parallel80.internal_status := 
			case
				count(decorator77.internal_status = failure, decorator78.internal_status = failure, decorator79.internal_status = failure, decorator80.internal_status = failure, parallel76.internal_status = failure) >= 1 : failure;
				count(decorator77.internal_status = success, decorator78.internal_status = success, decorator79.internal_status = success, decorator80.internal_status = success, parallel76.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel84.status := parallel84.active ? parallel84.internal_status : invalid;
		parallel84.internal_status := 
			case
				count(decorator81.internal_status = failure, decorator82.internal_status = failure, decorator83.internal_status = failure, decorator84.internal_status = failure, parallel80.internal_status = failure) >= 1 : failure;
				count(decorator81.internal_status = success, decorator82.internal_status = success, decorator83.internal_status = success, decorator84.internal_status = success, parallel80.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel88.status := parallel88.active ? parallel88.internal_status : invalid;
		parallel88.internal_status := 
			case
				count(decorator85.internal_status = failure, decorator86.internal_status = failure, decorator87.internal_status = failure, decorator88.internal_status = failure, parallel84.internal_status = failure) >= 1 : failure;
				count(decorator85.internal_status = success, decorator86.internal_status = success, decorator87.internal_status = success, decorator88.internal_status = success, parallel84.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel92.status := parallel92.active ? parallel92.internal_status : invalid;
		parallel92.internal_status := 
			case
				count(decorator89.internal_status = failure, decorator90.internal_status = failure, decorator91.internal_status = failure, decorator92.internal_status = failure, parallel88.internal_status = failure) >= 1 : failure;
				count(decorator89.internal_status = success, decorator90.internal_status = success, decorator91.internal_status = success, decorator92.internal_status = success, parallel88.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel96.status := parallel96.active ? parallel96.internal_status : invalid;
		parallel96.internal_status := 
			case
				count(decorator93.internal_status = failure, decorator94.internal_status = failure, decorator95.internal_status = failure, decorator96.internal_status = failure, parallel92.internal_status = failure) >= 1 : failure;
				count(decorator93.internal_status = success, decorator94.internal_status = success, decorator95.internal_status = success, decorator96.internal_status = success, parallel92.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		var_biggest_fish_stage_1 := 
			case
				!(bigger_fish.active) : var_biggest_fish;
				TRUE : min((1 + var_biggest_fish), 199);
			esac;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is10 : biggest_fish_is10_module(var_biggest_fish);
		biggest_fish_is100 : biggest_fish_is100_module(var_biggest_fish);
		biggest_fish_is101 : biggest_fish_is101_module(var_biggest_fish);
		biggest_fish_is102 : biggest_fish_is102_module(var_biggest_fish);
		biggest_fish_is103 : biggest_fish_is103_module(var_biggest_fish);
		biggest_fish_is104 : biggest_fish_is104_module(var_biggest_fish);
		biggest_fish_is11 : biggest_fish_is11_module(var_biggest_fish);
		biggest_fish_is12 : biggest_fish_is12_module(var_biggest_fish);
		biggest_fish_is13 : biggest_fish_is13_module(var_biggest_fish);
		biggest_fish_is14 : biggest_fish_is14_module(var_biggest_fish);
		biggest_fish_is15 : biggest_fish_is15_module(var_biggest_fish);
		biggest_fish_is16 : biggest_fish_is16_module(var_biggest_fish);
		biggest_fish_is17 : biggest_fish_is17_module(var_biggest_fish);
		biggest_fish_is18 : biggest_fish_is18_module(var_biggest_fish);
		biggest_fish_is19 : biggest_fish_is19_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is20 : biggest_fish_is20_module(var_biggest_fish);
		biggest_fish_is21 : biggest_fish_is21_module(var_biggest_fish);
		biggest_fish_is22 : biggest_fish_is22_module(var_biggest_fish);
		biggest_fish_is23 : biggest_fish_is23_module(var_biggest_fish);
		biggest_fish_is24 : biggest_fish_is24_module(var_biggest_fish);
		biggest_fish_is25 : biggest_fish_is25_module(var_biggest_fish);
		biggest_fish_is26 : biggest_fish_is26_module(var_biggest_fish);
		biggest_fish_is27 : biggest_fish_is27_module(var_biggest_fish);
		biggest_fish_is28 : biggest_fish_is28_module(var_biggest_fish);
		biggest_fish_is29 : biggest_fish_is29_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is30 : biggest_fish_is30_module(var_biggest_fish);
		biggest_fish_is31 : biggest_fish_is31_module(var_biggest_fish);
		biggest_fish_is32 : biggest_fish_is32_module(var_biggest_fish);
		biggest_fish_is33 : biggest_fish_is33_module(var_biggest_fish);
		biggest_fish_is34 : biggest_fish_is34_module(var_biggest_fish);
		biggest_fish_is35 : biggest_fish_is35_module(var_biggest_fish);
		biggest_fish_is36 : biggest_fish_is36_module(var_biggest_fish);
		biggest_fish_is37 : biggest_fish_is37_module(var_biggest_fish);
		biggest_fish_is38 : biggest_fish_is38_module(var_biggest_fish);
		biggest_fish_is39 : biggest_fish_is39_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		biggest_fish_is40 : biggest_fish_is40_module(var_biggest_fish);
		biggest_fish_is41 : biggest_fish_is41_module(var_biggest_fish);
		biggest_fish_is42 : biggest_fish_is42_module(var_biggest_fish);
		biggest_fish_is43 : biggest_fish_is43_module(var_biggest_fish);
		biggest_fish_is44 : biggest_fish_is44_module(var_biggest_fish);
		biggest_fish_is45 : biggest_fish_is45_module(var_biggest_fish);
		biggest_fish_is46 : biggest_fish_is46_module(var_biggest_fish);
		biggest_fish_is47 : biggest_fish_is47_module(var_biggest_fish);
		biggest_fish_is48 : biggest_fish_is48_module(var_biggest_fish);
		biggest_fish_is49 : biggest_fish_is49_module(var_biggest_fish);
		biggest_fish_is5 : biggest_fish_is5_module(var_biggest_fish);
		biggest_fish_is50 : biggest_fish_is50_module(var_biggest_fish);
		biggest_fish_is51 : biggest_fish_is51_module(var_biggest_fish);
		biggest_fish_is52 : biggest_fish_is52_module(var_biggest_fish);
		biggest_fish_is53 : biggest_fish_is53_module(var_biggest_fish);
		biggest_fish_is54 : biggest_fish_is54_module(var_biggest_fish);
		biggest_fish_is55 : biggest_fish_is55_module(var_biggest_fish);
		biggest_fish_is56 : biggest_fish_is56_module(var_biggest_fish);
		biggest_fish_is57 : biggest_fish_is57_module(var_biggest_fish);
		biggest_fish_is58 : biggest_fish_is58_module(var_biggest_fish);
		biggest_fish_is59 : biggest_fish_is59_module(var_biggest_fish);
		biggest_fish_is6 : biggest_fish_is6_module(var_biggest_fish);
		biggest_fish_is60 : biggest_fish_is60_module(var_biggest_fish);
		biggest_fish_is61 : biggest_fish_is61_module(var_biggest_fish);
		biggest_fish_is62 : biggest_fish_is62_module(var_biggest_fish);
		biggest_fish_is63 : biggest_fish_is63_module(var_biggest_fish);
		biggest_fish_is64 : biggest_fish_is64_module(var_biggest_fish);
		biggest_fish_is65 : biggest_fish_is65_module(var_biggest_fish);
		biggest_fish_is66 : biggest_fish_is66_module(var_biggest_fish);
		biggest_fish_is67 : biggest_fish_is67_module(var_biggest_fish);
		biggest_fish_is68 : biggest_fish_is68_module(var_biggest_fish);
		biggest_fish_is69 : biggest_fish_is69_module(var_biggest_fish);
		biggest_fish_is7 : biggest_fish_is7_module(var_biggest_fish);
		biggest_fish_is70 : biggest_fish_is70_module(var_biggest_fish);
		biggest_fish_is71 : biggest_fish_is71_module(var_biggest_fish);
		biggest_fish_is72 : biggest_fish_is72_module(var_biggest_fish);
		biggest_fish_is73 : biggest_fish_is73_module(var_biggest_fish);
		biggest_fish_is74 : biggest_fish_is74_module(var_biggest_fish);
		biggest_fish_is75 : biggest_fish_is75_module(var_biggest_fish);
		biggest_fish_is76 : biggest_fish_is76_module(var_biggest_fish);
		biggest_fish_is77 : biggest_fish_is77_module(var_biggest_fish);
		biggest_fish_is78 : biggest_fish_is78_module(var_biggest_fish);
		biggest_fish_is79 : biggest_fish_is79_module(var_biggest_fish);
		biggest_fish_is8 : biggest_fish_is8_module(var_biggest_fish);
		biggest_fish_is80 : biggest_fish_is80_module(var_biggest_fish);
		biggest_fish_is81 : biggest_fish_is81_module(var_biggest_fish);
		biggest_fish_is82 : biggest_fish_is82_module(var_biggest_fish);
		biggest_fish_is83 : biggest_fish_is83_module(var_biggest_fish);
		biggest_fish_is84 : biggest_fish_is84_module(var_biggest_fish);
		biggest_fish_is85 : biggest_fish_is85_module(var_biggest_fish);
		biggest_fish_is86 : biggest_fish_is86_module(var_biggest_fish);
		biggest_fish_is87 : biggest_fish_is87_module(var_biggest_fish);
		biggest_fish_is88 : biggest_fish_is88_module(var_biggest_fish);
		biggest_fish_is89 : biggest_fish_is89_module(var_biggest_fish);
		biggest_fish_is9 : biggest_fish_is9_module(var_biggest_fish);
		biggest_fish_is90 : biggest_fish_is90_module(var_biggest_fish);
		biggest_fish_is91 : biggest_fish_is91_module(var_biggest_fish);
		biggest_fish_is92 : biggest_fish_is92_module(var_biggest_fish);
		biggest_fish_is93 : biggest_fish_is93_module(var_biggest_fish);
		biggest_fish_is94 : biggest_fish_is94_module(var_biggest_fish);
		biggest_fish_is95 : biggest_fish_is95_module(var_biggest_fish);
		biggest_fish_is96 : biggest_fish_is96_module(var_biggest_fish);
		biggest_fish_is97 : biggest_fish_is97_module(var_biggest_fish);
		biggest_fish_is98 : biggest_fish_is98_module(var_biggest_fish);
		biggest_fish_is99 : biggest_fish_is99_module(var_biggest_fish);
		biggest_fish_sequence_NEXT_2 : composite_sequence_without_memory_END;
		biggest_fish_sequence_NEXT_1 : composite_sequence_without_memory(biggest_fish_sequence_NEXT_2, bigger_fish);
		biggest_fish_sequence : composite_sequence_without_memory(biggest_fish_sequence_NEXT_1, special_decorator);
		decorator0 : decorator_X_is_Y(biggest_fish_is0, failure, running);
		decorator1 : decorator_X_is_Y(biggest_fish_is1, failure, running);
		decorator10 : decorator_X_is_Y(biggest_fish_is10, failure, running);
		decorator100 : decorator_X_is_Y(biggest_fish_is100, failure, running);
		decorator101 : decorator_X_is_Y(biggest_fish_is101, failure, running);
		decorator102 : decorator_X_is_Y(biggest_fish_is102, failure, running);
		decorator103 : decorator_X_is_Y(biggest_fish_is103, failure, running);
		decorator104 : decorator_X_is_Y(biggest_fish_is104, failure, running);
		decorator11 : decorator_X_is_Y(biggest_fish_is11, failure, running);
		decorator12 : decorator_X_is_Y(biggest_fish_is12, failure, running);
		decorator13 : decorator_X_is_Y(biggest_fish_is13, failure, running);
		decorator14 : decorator_X_is_Y(biggest_fish_is14, failure, running);
		decorator15 : decorator_X_is_Y(biggest_fish_is15, failure, running);
		decorator16 : decorator_X_is_Y(biggest_fish_is16, failure, running);
		decorator17 : decorator_X_is_Y(biggest_fish_is17, failure, running);
		decorator18 : decorator_X_is_Y(biggest_fish_is18, failure, running);
		decorator19 : decorator_X_is_Y(biggest_fish_is19, failure, running);
		decorator2 : decorator_X_is_Y(biggest_fish_is2, failure, running);
		decorator20 : decorator_X_is_Y(biggest_fish_is20, failure, running);
		decorator21 : decorator_X_is_Y(biggest_fish_is21, failure, running);
		decorator22 : decorator_X_is_Y(biggest_fish_is22, failure, running);
		decorator23 : decorator_X_is_Y(biggest_fish_is23, failure, running);
		decorator24 : decorator_X_is_Y(biggest_fish_is24, failure, running);
		decorator25 : decorator_X_is_Y(biggest_fish_is25, failure, running);
		decorator26 : decorator_X_is_Y(biggest_fish_is26, failure, running);
		decorator27 : decorator_X_is_Y(biggest_fish_is27, failure, running);
		decorator28 : decorator_X_is_Y(biggest_fish_is28, failure, running);
		decorator29 : decorator_X_is_Y(biggest_fish_is29, failure, running);
		decorator3 : decorator_X_is_Y(biggest_fish_is3, failure, running);
		decorator30 : decorator_X_is_Y(biggest_fish_is30, failure, running);
		decorator31 : decorator_X_is_Y(biggest_fish_is31, failure, running);
		decorator32 : decorator_X_is_Y(biggest_fish_is32, failure, running);
		decorator33 : decorator_X_is_Y(biggest_fish_is33, failure, running);
		decorator34 : decorator_X_is_Y(biggest_fish_is34, failure, running);
		decorator35 : decorator_X_is_Y(biggest_fish_is35, failure, running);
		decorator36 : decorator_X_is_Y(biggest_fish_is36, failure, running);
		decorator37 : decorator_X_is_Y(biggest_fish_is37, failure, running);
		decorator38 : decorator_X_is_Y(biggest_fish_is38, failure, running);
		decorator39 : decorator_X_is_Y(biggest_fish_is39, failure, running);
		decorator4 : decorator_X_is_Y(biggest_fish_is4, failure, running);
		decorator40 : decorator_X_is_Y(biggest_fish_is40, failure, running);
		decorator41 : decorator_X_is_Y(biggest_fish_is41, failure, running);
		decorator42 : decorator_X_is_Y(biggest_fish_is42, failure, running);
		decorator43 : decorator_X_is_Y(biggest_fish_is43, failure, running);
		decorator44 : decorator_X_is_Y(biggest_fish_is44, failure, running);
		decorator45 : decorator_X_is_Y(biggest_fish_is45, failure, running);
		decorator46 : decorator_X_is_Y(biggest_fish_is46, failure, running);
		decorator47 : decorator_X_is_Y(biggest_fish_is47, failure, running);
		decorator48 : decorator_X_is_Y(biggest_fish_is48, failure, running);
		decorator49 : decorator_X_is_Y(biggest_fish_is49, failure, running);
		decorator5 : decorator_X_is_Y(biggest_fish_is5, failure, running);
		decorator50 : decorator_X_is_Y(biggest_fish_is50, failure, running);
		decorator51 : decorator_X_is_Y(biggest_fish_is51, failure, running);
		decorator52 : decorator_X_is_Y(biggest_fish_is52, failure, running);
		decorator53 : decorator_X_is_Y(biggest_fish_is53, failure, running);
		decorator54 : decorator_X_is_Y(biggest_fish_is54, failure, running);
		decorator55 : decorator_X_is_Y(biggest_fish_is55, failure, running);
		decorator56 : decorator_X_is_Y(biggest_fish_is56, failure, running);
		decorator57 : decorator_X_is_Y(biggest_fish_is57, failure, running);
		decorator58 : decorator_X_is_Y(biggest_fish_is58, failure, running);
		decorator59 : decorator_X_is_Y(biggest_fish_is59, failure, running);
		decorator6 : decorator_X_is_Y(biggest_fish_is6, failure, running);
		decorator60 : decorator_X_is_Y(biggest_fish_is60, failure, running);
		decorator61 : decorator_X_is_Y(biggest_fish_is61, failure, running);
		decorator62 : decorator_X_is_Y(biggest_fish_is62, failure, running);
		decorator63 : decorator_X_is_Y(biggest_fish_is63, failure, running);
		decorator64 : decorator_X_is_Y(biggest_fish_is64, failure, running);
		decorator65 : decorator_X_is_Y(biggest_fish_is65, failure, running);
		decorator66 : decorator_X_is_Y(biggest_fish_is66, failure, running);
		decorator67 : decorator_X_is_Y(biggest_fish_is67, failure, running);
		decorator68 : decorator_X_is_Y(biggest_fish_is68, failure, running);
		decorator69 : decorator_X_is_Y(biggest_fish_is69, failure, running);
		decorator7 : decorator_X_is_Y(biggest_fish_is7, failure, running);
		decorator70 : decorator_X_is_Y(biggest_fish_is70, failure, running);
		decorator71 : decorator_X_is_Y(biggest_fish_is71, failure, running);
		decorator72 : decorator_X_is_Y(biggest_fish_is72, failure, running);
		decorator73 : decorator_X_is_Y(biggest_fish_is73, failure, running);
		decorator74 : decorator_X_is_Y(biggest_fish_is74, failure, running);
		decorator75 : decorator_X_is_Y(biggest_fish_is75, failure, running);
		decorator76 : decorator_X_is_Y(biggest_fish_is76, failure, running);
		decorator77 : decorator_X_is_Y(biggest_fish_is77, failure, running);
		decorator78 : decorator_X_is_Y(biggest_fish_is78, failure, running);
		decorator79 : decorator_X_is_Y(biggest_fish_is79, failure, running);
		decorator8 : decorator_X_is_Y(biggest_fish_is8, failure, running);
		decorator80 : decorator_X_is_Y(biggest_fish_is80, failure, running);
		decorator81 : decorator_X_is_Y(biggest_fish_is81, failure, running);
		decorator82 : decorator_X_is_Y(biggest_fish_is82, failure, running);
		decorator83 : decorator_X_is_Y(biggest_fish_is83, failure, running);
		decorator84 : decorator_X_is_Y(biggest_fish_is84, failure, running);
		decorator85 : decorator_X_is_Y(biggest_fish_is85, failure, running);
		decorator86 : decorator_X_is_Y(biggest_fish_is86, failure, running);
		decorator87 : decorator_X_is_Y(biggest_fish_is87, failure, running);
		decorator88 : decorator_X_is_Y(biggest_fish_is88, failure, running);
		decorator89 : decorator_X_is_Y(biggest_fish_is89, failure, running);
		decorator9 : decorator_X_is_Y(biggest_fish_is9, failure, running);
		decorator90 : decorator_X_is_Y(biggest_fish_is90, failure, running);
		decorator91 : decorator_X_is_Y(biggest_fish_is91, failure, running);
		decorator92 : decorator_X_is_Y(biggest_fish_is92, failure, running);
		decorator93 : decorator_X_is_Y(biggest_fish_is93, failure, running);
		decorator94 : decorator_X_is_Y(biggest_fish_is94, failure, running);
		decorator95 : decorator_X_is_Y(biggest_fish_is95, failure, running);
		decorator96 : decorator_X_is_Y(biggest_fish_is96, failure, running);
		decorator97 : decorator_X_is_Y(biggest_fish_is97, failure, running);
		decorator98 : decorator_X_is_Y(biggest_fish_is98, failure, running);
		decorator99 : decorator_X_is_Y(biggest_fish_is99, failure, running);
		parallel100_NEXT_5 : composite_parallel_without_memory_END;
		parallel100_NEXT_4 : composite_parallel_without_memory(parallel100_NEXT_5, parallel96);
		parallel100_NEXT_3 : composite_parallel_without_memory(parallel100_NEXT_4, decorator100);
		parallel100_NEXT_2 : composite_parallel_without_memory(parallel100_NEXT_3, decorator99);
		parallel100_NEXT_1 : composite_parallel_without_memory(parallel100_NEXT_2, decorator98);
		parallel100 : composite_parallel_without_memory(parallel100_NEXT_1, decorator97);
		parallel104_NEXT_5 : composite_parallel_without_memory_END;
		parallel104_NEXT_4 : composite_parallel_without_memory(parallel104_NEXT_5, parallel100);
		parallel104_NEXT_3 : composite_parallel_without_memory(parallel104_NEXT_4, decorator104);
		parallel104_NEXT_2 : composite_parallel_without_memory(parallel104_NEXT_3, decorator103);
		parallel104_NEXT_1 : composite_parallel_without_memory(parallel104_NEXT_2, decorator102);
		parallel104 : composite_parallel_without_memory(parallel104_NEXT_1, decorator101);
		parallel12_NEXT_5 : composite_parallel_without_memory_END;
		parallel12_NEXT_4 : composite_parallel_without_memory(parallel12_NEXT_5, parallel8);
		parallel12_NEXT_3 : composite_parallel_without_memory(parallel12_NEXT_4, decorator12);
		parallel12_NEXT_2 : composite_parallel_without_memory(parallel12_NEXT_3, decorator11);
		parallel12_NEXT_1 : composite_parallel_without_memory(parallel12_NEXT_2, decorator10);
		parallel12 : composite_parallel_without_memory(parallel12_NEXT_1, decorator9);
		parallel16_NEXT_5 : composite_parallel_without_memory_END;
		parallel16_NEXT_4 : composite_parallel_without_memory(parallel16_NEXT_5, parallel12);
		parallel16_NEXT_3 : composite_parallel_without_memory(parallel16_NEXT_4, decorator16);
		parallel16_NEXT_2 : composite_parallel_without_memory(parallel16_NEXT_3, decorator15);
		parallel16_NEXT_1 : composite_parallel_without_memory(parallel16_NEXT_2, decorator14);
		parallel16 : composite_parallel_without_memory(parallel16_NEXT_1, decorator13);
		parallel20_NEXT_5 : composite_parallel_without_memory_END;
		parallel20_NEXT_4 : composite_parallel_without_memory(parallel20_NEXT_5, parallel16);
		parallel20_NEXT_3 : composite_parallel_without_memory(parallel20_NEXT_4, decorator20);
		parallel20_NEXT_2 : composite_parallel_without_memory(parallel20_NEXT_3, decorator19);
		parallel20_NEXT_1 : composite_parallel_without_memory(parallel20_NEXT_2, decorator18);
		parallel20 : composite_parallel_without_memory(parallel20_NEXT_1, decorator17);
		parallel24_NEXT_5 : composite_parallel_without_memory_END;
		parallel24_NEXT_4 : composite_parallel_without_memory(parallel24_NEXT_5, parallel20);
		parallel24_NEXT_3 : composite_parallel_without_memory(parallel24_NEXT_4, decorator24);
		parallel24_NEXT_2 : composite_parallel_without_memory(parallel24_NEXT_3, decorator23);
		parallel24_NEXT_1 : composite_parallel_without_memory(parallel24_NEXT_2, decorator22);
		parallel24 : composite_parallel_without_memory(parallel24_NEXT_1, decorator21);
		parallel28_NEXT_5 : composite_parallel_without_memory_END;
		parallel28_NEXT_4 : composite_parallel_without_memory(parallel28_NEXT_5, parallel24);
		parallel28_NEXT_3 : composite_parallel_without_memory(parallel28_NEXT_4, decorator28);
		parallel28_NEXT_2 : composite_parallel_without_memory(parallel28_NEXT_3, decorator27);
		parallel28_NEXT_1 : composite_parallel_without_memory(parallel28_NEXT_2, decorator26);
		parallel28 : composite_parallel_without_memory(parallel28_NEXT_1, decorator25);
		parallel32_NEXT_5 : composite_parallel_without_memory_END;
		parallel32_NEXT_4 : composite_parallel_without_memory(parallel32_NEXT_5, parallel28);
		parallel32_NEXT_3 : composite_parallel_without_memory(parallel32_NEXT_4, decorator32);
		parallel32_NEXT_2 : composite_parallel_without_memory(parallel32_NEXT_3, decorator31);
		parallel32_NEXT_1 : composite_parallel_without_memory(parallel32_NEXT_2, decorator30);
		parallel32 : composite_parallel_without_memory(parallel32_NEXT_1, decorator29);
		parallel36_NEXT_5 : composite_parallel_without_memory_END;
		parallel36_NEXT_4 : composite_parallel_without_memory(parallel36_NEXT_5, parallel32);
		parallel36_NEXT_3 : composite_parallel_without_memory(parallel36_NEXT_4, decorator36);
		parallel36_NEXT_2 : composite_parallel_without_memory(parallel36_NEXT_3, decorator35);
		parallel36_NEXT_1 : composite_parallel_without_memory(parallel36_NEXT_2, decorator34);
		parallel36 : composite_parallel_without_memory(parallel36_NEXT_1, decorator33);
		parallel4_NEXT_5 : composite_parallel_without_memory_END;
		parallel4_NEXT_4 : composite_parallel_without_memory(parallel4_NEXT_5, decorator0);
		parallel4_NEXT_3 : composite_parallel_without_memory(parallel4_NEXT_4, decorator4);
		parallel4_NEXT_2 : composite_parallel_without_memory(parallel4_NEXT_3, decorator3);
		parallel4_NEXT_1 : composite_parallel_without_memory(parallel4_NEXT_2, decorator2);
		parallel4 : composite_parallel_without_memory(parallel4_NEXT_1, decorator1);
		parallel40_NEXT_5 : composite_parallel_without_memory_END;
		parallel40_NEXT_4 : composite_parallel_without_memory(parallel40_NEXT_5, parallel36);
		parallel40_NEXT_3 : composite_parallel_without_memory(parallel40_NEXT_4, decorator40);
		parallel40_NEXT_2 : composite_parallel_without_memory(parallel40_NEXT_3, decorator39);
		parallel40_NEXT_1 : composite_parallel_without_memory(parallel40_NEXT_2, decorator38);
		parallel40 : composite_parallel_without_memory(parallel40_NEXT_1, decorator37);
		parallel44_NEXT_5 : composite_parallel_without_memory_END;
		parallel44_NEXT_4 : composite_parallel_without_memory(parallel44_NEXT_5, parallel40);
		parallel44_NEXT_3 : composite_parallel_without_memory(parallel44_NEXT_4, decorator44);
		parallel44_NEXT_2 : composite_parallel_without_memory(parallel44_NEXT_3, decorator43);
		parallel44_NEXT_1 : composite_parallel_without_memory(parallel44_NEXT_2, decorator42);
		parallel44 : composite_parallel_without_memory(parallel44_NEXT_1, decorator41);
		parallel48_NEXT_5 : composite_parallel_without_memory_END;
		parallel48_NEXT_4 : composite_parallel_without_memory(parallel48_NEXT_5, parallel44);
		parallel48_NEXT_3 : composite_parallel_without_memory(parallel48_NEXT_4, decorator48);
		parallel48_NEXT_2 : composite_parallel_without_memory(parallel48_NEXT_3, decorator47);
		parallel48_NEXT_1 : composite_parallel_without_memory(parallel48_NEXT_2, decorator46);
		parallel48 : composite_parallel_without_memory(parallel48_NEXT_1, decorator45);
		parallel52_NEXT_5 : composite_parallel_without_memory_END;
		parallel52_NEXT_4 : composite_parallel_without_memory(parallel52_NEXT_5, parallel48);
		parallel52_NEXT_3 : composite_parallel_without_memory(parallel52_NEXT_4, decorator52);
		parallel52_NEXT_2 : composite_parallel_without_memory(parallel52_NEXT_3, decorator51);
		parallel52_NEXT_1 : composite_parallel_without_memory(parallel52_NEXT_2, decorator50);
		parallel52 : composite_parallel_without_memory(parallel52_NEXT_1, decorator49);
		parallel56_NEXT_5 : composite_parallel_without_memory_END;
		parallel56_NEXT_4 : composite_parallel_without_memory(parallel56_NEXT_5, parallel52);
		parallel56_NEXT_3 : composite_parallel_without_memory(parallel56_NEXT_4, decorator56);
		parallel56_NEXT_2 : composite_parallel_without_memory(parallel56_NEXT_3, decorator55);
		parallel56_NEXT_1 : composite_parallel_without_memory(parallel56_NEXT_2, decorator54);
		parallel56 : composite_parallel_without_memory(parallel56_NEXT_1, decorator53);
		parallel60_NEXT_5 : composite_parallel_without_memory_END;
		parallel60_NEXT_4 : composite_parallel_without_memory(parallel60_NEXT_5, parallel56);
		parallel60_NEXT_3 : composite_parallel_without_memory(parallel60_NEXT_4, decorator60);
		parallel60_NEXT_2 : composite_parallel_without_memory(parallel60_NEXT_3, decorator59);
		parallel60_NEXT_1 : composite_parallel_without_memory(parallel60_NEXT_2, decorator58);
		parallel60 : composite_parallel_without_memory(parallel60_NEXT_1, decorator57);
		parallel64_NEXT_5 : composite_parallel_without_memory_END;
		parallel64_NEXT_4 : composite_parallel_without_memory(parallel64_NEXT_5, parallel60);
		parallel64_NEXT_3 : composite_parallel_without_memory(parallel64_NEXT_4, decorator64);
		parallel64_NEXT_2 : composite_parallel_without_memory(parallel64_NEXT_3, decorator63);
		parallel64_NEXT_1 : composite_parallel_without_memory(parallel64_NEXT_2, decorator62);
		parallel64 : composite_parallel_without_memory(parallel64_NEXT_1, decorator61);
		parallel68_NEXT_5 : composite_parallel_without_memory_END;
		parallel68_NEXT_4 : composite_parallel_without_memory(parallel68_NEXT_5, parallel64);
		parallel68_NEXT_3 : composite_parallel_without_memory(parallel68_NEXT_4, decorator68);
		parallel68_NEXT_2 : composite_parallel_without_memory(parallel68_NEXT_3, decorator67);
		parallel68_NEXT_1 : composite_parallel_without_memory(parallel68_NEXT_2, decorator66);
		parallel68 : composite_parallel_without_memory(parallel68_NEXT_1, decorator65);
		parallel72_NEXT_5 : composite_parallel_without_memory_END;
		parallel72_NEXT_4 : composite_parallel_without_memory(parallel72_NEXT_5, parallel68);
		parallel72_NEXT_3 : composite_parallel_without_memory(parallel72_NEXT_4, decorator72);
		parallel72_NEXT_2 : composite_parallel_without_memory(parallel72_NEXT_3, decorator71);
		parallel72_NEXT_1 : composite_parallel_without_memory(parallel72_NEXT_2, decorator70);
		parallel72 : composite_parallel_without_memory(parallel72_NEXT_1, decorator69);
		parallel76_NEXT_5 : composite_parallel_without_memory_END;
		parallel76_NEXT_4 : composite_parallel_without_memory(parallel76_NEXT_5, parallel72);
		parallel76_NEXT_3 : composite_parallel_without_memory(parallel76_NEXT_4, decorator76);
		parallel76_NEXT_2 : composite_parallel_without_memory(parallel76_NEXT_3, decorator75);
		parallel76_NEXT_1 : composite_parallel_without_memory(parallel76_NEXT_2, decorator74);
		parallel76 : composite_parallel_without_memory(parallel76_NEXT_1, decorator73);
		parallel8_NEXT_5 : composite_parallel_without_memory_END;
		parallel8_NEXT_4 : composite_parallel_without_memory(parallel8_NEXT_5, parallel4);
		parallel8_NEXT_3 : composite_parallel_without_memory(parallel8_NEXT_4, decorator8);
		parallel8_NEXT_2 : composite_parallel_without_memory(parallel8_NEXT_3, decorator7);
		parallel8_NEXT_1 : composite_parallel_without_memory(parallel8_NEXT_2, decorator6);
		parallel8 : composite_parallel_without_memory(parallel8_NEXT_1, decorator5);
		parallel80_NEXT_5 : composite_parallel_without_memory_END;
		parallel80_NEXT_4 : composite_parallel_without_memory(parallel80_NEXT_5, parallel76);
		parallel80_NEXT_3 : composite_parallel_without_memory(parallel80_NEXT_4, decorator80);
		parallel80_NEXT_2 : composite_parallel_without_memory(parallel80_NEXT_3, decorator79);
		parallel80_NEXT_1 : composite_parallel_without_memory(parallel80_NEXT_2, decorator78);
		parallel80 : composite_parallel_without_memory(parallel80_NEXT_1, decorator77);
		parallel84_NEXT_5 : composite_parallel_without_memory_END;
		parallel84_NEXT_4 : composite_parallel_without_memory(parallel84_NEXT_5, parallel80);
		parallel84_NEXT_3 : composite_parallel_without_memory(parallel84_NEXT_4, decorator84);
		parallel84_NEXT_2 : composite_parallel_without_memory(parallel84_NEXT_3, decorator83);
		parallel84_NEXT_1 : composite_parallel_without_memory(parallel84_NEXT_2, decorator82);
		parallel84 : composite_parallel_without_memory(parallel84_NEXT_1, decorator81);
		parallel88_NEXT_5 : composite_parallel_without_memory_END;
		parallel88_NEXT_4 : composite_parallel_without_memory(parallel88_NEXT_5, parallel84);
		parallel88_NEXT_3 : composite_parallel_without_memory(parallel88_NEXT_4, decorator88);
		parallel88_NEXT_2 : composite_parallel_without_memory(parallel88_NEXT_3, decorator87);
		parallel88_NEXT_1 : composite_parallel_without_memory(parallel88_NEXT_2, decorator86);
		parallel88 : composite_parallel_without_memory(parallel88_NEXT_1, decorator85);
		parallel92_NEXT_5 : composite_parallel_without_memory_END;
		parallel92_NEXT_4 : composite_parallel_without_memory(parallel92_NEXT_5, parallel88);
		parallel92_NEXT_3 : composite_parallel_without_memory(parallel92_NEXT_4, decorator92);
		parallel92_NEXT_2 : composite_parallel_without_memory(parallel92_NEXT_3, decorator91);
		parallel92_NEXT_1 : composite_parallel_without_memory(parallel92_NEXT_2, decorator90);
		parallel92 : composite_parallel_without_memory(parallel92_NEXT_1, decorator89);
		parallel96_NEXT_5 : composite_parallel_without_memory_END;
		parallel96_NEXT_4 : composite_parallel_without_memory(parallel96_NEXT_5, parallel92);
		parallel96_NEXT_3 : composite_parallel_without_memory(parallel96_NEXT_4, decorator96);
		parallel96_NEXT_2 : composite_parallel_without_memory(parallel96_NEXT_3, decorator95);
		parallel96_NEXT_1 : composite_parallel_without_memory(parallel96_NEXT_2, decorator94);
		parallel96 : composite_parallel_without_memory(parallel96_NEXT_1, decorator93);
		special_decorator : decorator_X_is_Y(parallel104, running, failure);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..199;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) := var_biggest_fish_stage_1;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 105)));
CTLSPEC AF(AG((var_biggest_fish = 105)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel104 := 2;
		decorator101 := 3;
		biggest_fish_is101 := 4;
		decorator102 := 5;
		biggest_fish_is102 := 6;
		decorator103 := 7;
		biggest_fish_is103 := 8;
		decorator104 := 9;
		biggest_fish_is104 := 10;
		parallel100 := 11;
		decorator97 := 12;
		biggest_fish_is97 := 13;
		decorator98 := 14;
		biggest_fish_is98 := 15;
		decorator99 := 16;
		biggest_fish_is99 := 17;
		decorator100 := 18;
		biggest_fish_is100 := 19;
		parallel96 := 20;
		decorator93 := 21;
		biggest_fish_is93 := 22;
		decorator94 := 23;
		biggest_fish_is94 := 24;
		decorator95 := 25;
		biggest_fish_is95 := 26;
		decorator96 := 27;
		biggest_fish_is96 := 28;
		parallel92 := 29;
		decorator89 := 30;
		biggest_fish_is89 := 31;
		decorator90 := 32;
		biggest_fish_is90 := 33;
		decorator91 := 34;
		biggest_fish_is91 := 35;
		decorator92 := 36;
		biggest_fish_is92 := 37;
		parallel88 := 38;
		decorator85 := 39;
		biggest_fish_is85 := 40;
		decorator86 := 41;
		biggest_fish_is86 := 42;
		decorator87 := 43;
		biggest_fish_is87 := 44;
		decorator88 := 45;
		biggest_fish_is88 := 46;
		parallel84 := 47;
		decorator81 := 48;
		biggest_fish_is81 := 49;
		decorator82 := 50;
		biggest_fish_is82 := 51;
		decorator83 := 52;
		biggest_fish_is83 := 53;
		decorator84 := 54;
		biggest_fish_is84 := 55;
		parallel80 := 56;
		decorator77 := 57;
		biggest_fish_is77 := 58;
		decorator78 := 59;
		biggest_fish_is78 := 60;
		decorator79 := 61;
		biggest_fish_is79 := 62;
		decorator80 := 63;
		biggest_fish_is80 := 64;
		parallel76 := 65;
		decorator73 := 66;
		biggest_fish_is73 := 67;
		decorator74 := 68;
		biggest_fish_is74 := 69;
		decorator75 := 70;
		biggest_fish_is75 := 71;
		decorator76 := 72;
		biggest_fish_is76 := 73;
		parallel72 := 74;
		decorator69 := 75;
		biggest_fish_is69 := 76;
		decorator70 := 77;
		biggest_fish_is70 := 78;
		decorator71 := 79;
		biggest_fish_is71 := 80;
		decorator72 := 81;
		biggest_fish_is72 := 82;
		parallel68 := 83;
		decorator65 := 84;
		biggest_fish_is65 := 85;
		decorator66 := 86;
		biggest_fish_is66 := 87;
		decorator67 := 88;
		biggest_fish_is67 := 89;
		decorator68 := 90;
		biggest_fish_is68 := 91;
		parallel64 := 92;
		decorator61 := 93;
		biggest_fish_is61 := 94;
		decorator62 := 95;
		biggest_fish_is62 := 96;
		decorator63 := 97;
		biggest_fish_is63 := 98;
		decorator64 := 99;
		biggest_fish_is64 := 100;
		parallel60 := 101;
		decorator57 := 102;
		biggest_fish_is57 := 103;
		decorator58 := 104;
		biggest_fish_is58 := 105;
		decorator59 := 106;
		biggest_fish_is59 := 107;
		decorator60 := 108;
		biggest_fish_is60 := 109;
		parallel56 := 110;
		decorator53 := 111;
		biggest_fish_is53 := 112;
		decorator54 := 113;
		biggest_fish_is54 := 114;
		decorator55 := 115;
		biggest_fish_is55 := 116;
		decorator56 := 117;
		biggest_fish_is56 := 118;
		parallel52 := 119;
		decorator49 := 120;
		biggest_fish_is49 := 121;
		decorator50 := 122;
		biggest_fish_is50 := 123;
		decorator51 := 124;
		biggest_fish_is51 := 125;
		decorator52 := 126;
		biggest_fish_is52 := 127;
		parallel48 := 128;
		decorator45 := 129;
		biggest_fish_is45 := 130;
		decorator46 := 131;
		biggest_fish_is46 := 132;
		decorator47 := 133;
		biggest_fish_is47 := 134;
		decorator48 := 135;
		biggest_fish_is48 := 136;
		parallel44 := 137;
		decorator41 := 138;
		biggest_fish_is41 := 139;
		decorator42 := 140;
		biggest_fish_is42 := 141;
		decorator43 := 142;
		biggest_fish_is43 := 143;
		decorator44 := 144;
		biggest_fish_is44 := 145;
		parallel40 := 146;
		decorator37 := 147;
		biggest_fish_is37 := 148;
		decorator38 := 149;
		biggest_fish_is38 := 150;
		decorator39 := 151;
		biggest_fish_is39 := 152;
		decorator40 := 153;
		biggest_fish_is40 := 154;
		parallel36 := 155;
		decorator33 := 156;
		biggest_fish_is33 := 157;
		decorator34 := 158;
		biggest_fish_is34 := 159;
		decorator35 := 160;
		biggest_fish_is35 := 161;
		decorator36 := 162;
		biggest_fish_is36 := 163;
		parallel32 := 164;
		decorator29 := 165;
		biggest_fish_is29 := 166;
		decorator30 := 167;
		biggest_fish_is30 := 168;
		decorator31 := 169;
		biggest_fish_is31 := 170;
		decorator32 := 171;
		biggest_fish_is32 := 172;
		parallel28 := 173;
		decorator25 := 174;
		biggest_fish_is25 := 175;
		decorator26 := 176;
		biggest_fish_is26 := 177;
		decorator27 := 178;
		biggest_fish_is27 := 179;
		decorator28 := 180;
		biggest_fish_is28 := 181;
		parallel24 := 182;
		decorator21 := 183;
		biggest_fish_is21 := 184;
		decorator22 := 185;
		biggest_fish_is22 := 186;
		decorator23 := 187;
		biggest_fish_is23 := 188;
		decorator24 := 189;
		biggest_fish_is24 := 190;
		parallel20 := 191;
		decorator17 := 192;
		biggest_fish_is17 := 193;
		decorator18 := 194;
		biggest_fish_is18 := 195;
		decorator19 := 196;
		biggest_fish_is19 := 197;
		decorator20 := 198;
		biggest_fish_is20 := 199;
		parallel16 := 200;
		decorator13 := 201;
		biggest_fish_is13 := 202;
		decorator14 := 203;
		biggest_fish_is14 := 204;
		decorator15 := 205;
		biggest_fish_is15 := 206;
		decorator16 := 207;
		biggest_fish_is16 := 208;
		parallel12 := 209;
		decorator9 := 210;
		biggest_fish_is9 := 211;
		decorator10 := 212;
		biggest_fish_is10 := 213;
		decorator11 := 214;
		biggest_fish_is11 := 215;
		decorator12 := 216;
		biggest_fish_is12 := 217;
		parallel8 := 218;
		decorator5 := 219;
		biggest_fish_is5 := 220;
		decorator6 := 221;
		biggest_fish_is6 := 222;
		decorator7 := 223;
		biggest_fish_is7 := 224;
		decorator8 := 225;
		biggest_fish_is8 := 226;
		parallel4 := 227;
		decorator1 := 228;
		biggest_fish_is1 := 229;
		decorator2 := 230;
		biggest_fish_is2 := 231;
		decorator3 := 232;
		biggest_fish_is3 := 233;
		decorator4 := 234;
		biggest_fish_is4 := 235;
		decorator0 := 236;
		biggest_fish_is0 := 237;
		bigger_fish := 238;
MODULE composite_parallel_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		child.active := active;
		next_composite.active := active;

MODULE composite_parallel_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
MODULE decorator_X_is_Y(child_0, incoming_status, outgoing_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.status = incoming_status : outgoing_status;
				TRUE : child_0.status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 0)) ? success : failure;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 1)) ? success : failure;
MODULE biggest_fish_is10_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 10)) ? success : failure;
MODULE biggest_fish_is100_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 100)) ? success : failure;
MODULE biggest_fish_is101_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 101)) ? success : failure;
MODULE biggest_fish_is102_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 102)) ? success : failure;
MODULE biggest_fish_is103_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 103)) ? success : failure;
MODULE biggest_fish_is104_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 104)) ? success : failure;
MODULE biggest_fish_is11_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 11)) ? success : failure;
MODULE biggest_fish_is12_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 12)) ? success : failure;
MODULE biggest_fish_is13_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 13)) ? success : failure;
MODULE biggest_fish_is14_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 14)) ? success : failure;
MODULE biggest_fish_is15_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 15)) ? success : failure;
MODULE biggest_fish_is16_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 16)) ? success : failure;
MODULE biggest_fish_is17_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 17)) ? success : failure;
MODULE biggest_fish_is18_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 18)) ? success : failure;
MODULE biggest_fish_is19_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 19)) ? success : failure;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 2)) ? success : failure;
MODULE biggest_fish_is20_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 20)) ? success : failure;
MODULE biggest_fish_is21_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 21)) ? success : failure;
MODULE biggest_fish_is22_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 22)) ? success : failure;
MODULE biggest_fish_is23_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 23)) ? success : failure;
MODULE biggest_fish_is24_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 24)) ? success : failure;
MODULE biggest_fish_is25_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 25)) ? success : failure;
MODULE biggest_fish_is26_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 26)) ? success : failure;
MODULE biggest_fish_is27_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 27)) ? success : failure;
MODULE biggest_fish_is28_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 28)) ? success : failure;
MODULE biggest_fish_is29_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 29)) ? success : failure;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 3)) ? success : failure;
MODULE biggest_fish_is30_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 30)) ? success : failure;
MODULE biggest_fish_is31_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 31)) ? success : failure;
MODULE biggest_fish_is32_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 32)) ? success : failure;
MODULE biggest_fish_is33_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 33)) ? success : failure;
MODULE biggest_fish_is34_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 34)) ? success : failure;
MODULE biggest_fish_is35_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 35)) ? success : failure;
MODULE biggest_fish_is36_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 36)) ? success : failure;
MODULE biggest_fish_is37_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 37)) ? success : failure;
MODULE biggest_fish_is38_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 38)) ? success : failure;
MODULE biggest_fish_is39_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 39)) ? success : failure;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 4)) ? success : failure;
MODULE biggest_fish_is40_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 40)) ? success : failure;
MODULE biggest_fish_is41_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 41)) ? success : failure;
MODULE biggest_fish_is42_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 42)) ? success : failure;
MODULE biggest_fish_is43_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 43)) ? success : failure;
MODULE biggest_fish_is44_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 44)) ? success : failure;
MODULE biggest_fish_is45_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 45)) ? success : failure;
MODULE biggest_fish_is46_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 46)) ? success : failure;
MODULE biggest_fish_is47_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 47)) ? success : failure;
MODULE biggest_fish_is48_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 48)) ? success : failure;
MODULE biggest_fish_is49_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 49)) ? success : failure;
MODULE biggest_fish_is5_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 5)) ? success : failure;
MODULE biggest_fish_is50_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 50)) ? success : failure;
MODULE biggest_fish_is51_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 51)) ? success : failure;
MODULE biggest_fish_is52_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 52)) ? success : failure;
MODULE biggest_fish_is53_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 53)) ? success : failure;
MODULE biggest_fish_is54_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 54)) ? success : failure;
MODULE biggest_fish_is55_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 55)) ? success : failure;
MODULE biggest_fish_is56_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 56)) ? success : failure;
MODULE biggest_fish_is57_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 57)) ? success : failure;
MODULE biggest_fish_is58_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 58)) ? success : failure;
MODULE biggest_fish_is59_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 59)) ? success : failure;
MODULE biggest_fish_is6_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 6)) ? success : failure;
MODULE biggest_fish_is60_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 60)) ? success : failure;
MODULE biggest_fish_is61_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 61)) ? success : failure;
MODULE biggest_fish_is62_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 62)) ? success : failure;
MODULE biggest_fish_is63_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 63)) ? success : failure;
MODULE biggest_fish_is64_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 64)) ? success : failure;
MODULE biggest_fish_is65_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 65)) ? success : failure;
MODULE biggest_fish_is66_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 66)) ? success : failure;
MODULE biggest_fish_is67_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 67)) ? success : failure;
MODULE biggest_fish_is68_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 68)) ? success : failure;
MODULE biggest_fish_is69_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 69)) ? success : failure;
MODULE biggest_fish_is7_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 7)) ? success : failure;
MODULE biggest_fish_is70_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 70)) ? success : failure;
MODULE biggest_fish_is71_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 71)) ? success : failure;
MODULE biggest_fish_is72_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 72)) ? success : failure;
MODULE biggest_fish_is73_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 73)) ? success : failure;
MODULE biggest_fish_is74_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 74)) ? success : failure;
MODULE biggest_fish_is75_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 75)) ? success : failure;
MODULE biggest_fish_is76_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 76)) ? success : failure;
MODULE biggest_fish_is77_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 77)) ? success : failure;
MODULE biggest_fish_is78_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 78)) ? success : failure;
MODULE biggest_fish_is79_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 79)) ? success : failure;
MODULE biggest_fish_is8_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 8)) ? success : failure;
MODULE biggest_fish_is80_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 80)) ? success : failure;
MODULE biggest_fish_is81_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 81)) ? success : failure;
MODULE biggest_fish_is82_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 82)) ? success : failure;
MODULE biggest_fish_is83_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 83)) ? success : failure;
MODULE biggest_fish_is84_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 84)) ? success : failure;
MODULE biggest_fish_is85_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 85)) ? success : failure;
MODULE biggest_fish_is86_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 86)) ? success : failure;
MODULE biggest_fish_is87_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 87)) ? success : failure;
MODULE biggest_fish_is88_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 88)) ? success : failure;
MODULE biggest_fish_is89_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 89)) ? success : failure;
MODULE biggest_fish_is9_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 9)) ? success : failure;
MODULE biggest_fish_is90_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 90)) ? success : failure;
MODULE biggest_fish_is91_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 91)) ? success : failure;
MODULE biggest_fish_is92_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 92)) ? success : failure;
MODULE biggest_fish_is93_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 93)) ? success : failure;
MODULE biggest_fish_is94_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 94)) ? success : failure;
MODULE biggest_fish_is95_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 95)) ? success : failure;
MODULE biggest_fish_is96_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 96)) ? success : failure;
MODULE biggest_fish_is97_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 97)) ? success : failure;
MODULE biggest_fish_is98_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 98)) ? success : failure;
MODULE biggest_fish_is99_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 99)) ? success : failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
