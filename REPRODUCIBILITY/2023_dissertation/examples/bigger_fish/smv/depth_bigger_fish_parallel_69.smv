MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator66 := -3;
		resume_from_here_in_subtree__decorator67 := -3;
		resume_from_here_in_subtree__decorator68 := -3;
		resume_from_here_in_subtree__decorator69 := -3;
		resume_from_here_in_subtree__parallel65 := -3;
		resume_from_here_in_subtree__decorator62 := -3;
		resume_from_here_in_subtree__decorator63 := -3;
		resume_from_here_in_subtree__decorator64 := -3;
		resume_from_here_in_subtree__decorator65 := -3;
		resume_from_here_in_subtree__parallel61 := -3;
		resume_from_here_in_subtree__decorator58 := -3;
		resume_from_here_in_subtree__decorator59 := -3;
		resume_from_here_in_subtree__decorator60 := -3;
		resume_from_here_in_subtree__decorator61 := -3;
		resume_from_here_in_subtree__parallel57 := -3;
		resume_from_here_in_subtree__decorator54 := -3;
		resume_from_here_in_subtree__decorator55 := -3;
		resume_from_here_in_subtree__decorator56 := -3;
		resume_from_here_in_subtree__decorator57 := -3;
		resume_from_here_in_subtree__parallel53 := -3;
		resume_from_here_in_subtree__decorator50 := -3;
		resume_from_here_in_subtree__decorator51 := -3;
		resume_from_here_in_subtree__decorator52 := -3;
		resume_from_here_in_subtree__decorator53 := -3;
		resume_from_here_in_subtree__parallel49 := -3;
		resume_from_here_in_subtree__decorator46 := -3;
		resume_from_here_in_subtree__decorator47 := -3;
		resume_from_here_in_subtree__decorator48 := -3;
		resume_from_here_in_subtree__decorator49 := -3;
		resume_from_here_in_subtree__parallel45 := -3;
		resume_from_here_in_subtree__decorator42 := -3;
		resume_from_here_in_subtree__decorator43 := -3;
		resume_from_here_in_subtree__decorator44 := -3;
		resume_from_here_in_subtree__decorator45 := -3;
		resume_from_here_in_subtree__parallel41 := -3;
		resume_from_here_in_subtree__decorator38 := -3;
		resume_from_here_in_subtree__decorator39 := -3;
		resume_from_here_in_subtree__decorator40 := -3;
		resume_from_here_in_subtree__decorator41 := -3;
		resume_from_here_in_subtree__parallel37 := -3;
		resume_from_here_in_subtree__decorator34 := -3;
		resume_from_here_in_subtree__decorator35 := -3;
		resume_from_here_in_subtree__decorator36 := -3;
		resume_from_here_in_subtree__decorator37 := -3;
		resume_from_here_in_subtree__parallel33 := -3;
		resume_from_here_in_subtree__decorator30 := -3;
		resume_from_here_in_subtree__decorator31 := -3;
		resume_from_here_in_subtree__decorator32 := -3;
		resume_from_here_in_subtree__decorator33 := -3;
		resume_from_here_in_subtree__parallel29 := -3;
		resume_from_here_in_subtree__decorator26 := -3;
		resume_from_here_in_subtree__decorator27 := -3;
		resume_from_here_in_subtree__decorator28 := -3;
		resume_from_here_in_subtree__decorator29 := -3;
		resume_from_here_in_subtree__parallel25 := -3;
		resume_from_here_in_subtree__decorator22 := -3;
		resume_from_here_in_subtree__decorator23 := -3;
		resume_from_here_in_subtree__decorator24 := -3;
		resume_from_here_in_subtree__decorator25 := -3;
		resume_from_here_in_subtree__parallel21 := -3;
		resume_from_here_in_subtree__decorator18 := -3;
		resume_from_here_in_subtree__decorator19 := -3;
		resume_from_here_in_subtree__decorator20 := -3;
		resume_from_here_in_subtree__decorator21 := -3;
		resume_from_here_in_subtree__parallel17 := -3;
		resume_from_here_in_subtree__decorator14 := -3;
		resume_from_here_in_subtree__decorator15 := -3;
		resume_from_here_in_subtree__decorator16 := -3;
		resume_from_here_in_subtree__decorator17 := -3;
		resume_from_here_in_subtree__parallel13 := -3;
		resume_from_here_in_subtree__decorator10 := -3;
		resume_from_here_in_subtree__decorator11 := -3;
		resume_from_here_in_subtree__decorator12 := -3;
		resume_from_here_in_subtree__decorator13 := -3;
		resume_from_here_in_subtree__parallel9 := -3;
		resume_from_here_in_subtree__decorator6 := -3;
		resume_from_here_in_subtree__decorator7 := -3;
		resume_from_here_in_subtree__decorator8 := -3;
		resume_from_here_in_subtree__decorator9 := -3;
		resume_from_here_in_subtree__parallel5 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator5 := -3;
		resume_from_here_in_subtree__parallel1 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		next_child__biggest_fish_sequence := 
			case
				(previous_node < node_names.special_decorator) : node_names.special_decorator;
				(previous_node < node_names.bigger_fish) : node_names.bigger_fish;
				TRUE : -1;
			esac;
		next_child__decorator0 := node_names.biggest_fish_is0;
		next_child__decorator1 := node_names.biggest_fish_is1;
		next_child__decorator10 := node_names.biggest_fish_is10;
		next_child__decorator11 := node_names.biggest_fish_is11;
		next_child__decorator12 := node_names.biggest_fish_is12;
		next_child__decorator13 := node_names.biggest_fish_is13;
		next_child__decorator14 := node_names.biggest_fish_is14;
		next_child__decorator15 := node_names.biggest_fish_is15;
		next_child__decorator16 := node_names.biggest_fish_is16;
		next_child__decorator17 := node_names.biggest_fish_is17;
		next_child__decorator18 := node_names.biggest_fish_is18;
		next_child__decorator19 := node_names.biggest_fish_is19;
		next_child__decorator2 := node_names.biggest_fish_is2;
		next_child__decorator20 := node_names.biggest_fish_is20;
		next_child__decorator21 := node_names.biggest_fish_is21;
		next_child__decorator22 := node_names.biggest_fish_is22;
		next_child__decorator23 := node_names.biggest_fish_is23;
		next_child__decorator24 := node_names.biggest_fish_is24;
		next_child__decorator25 := node_names.biggest_fish_is25;
		next_child__decorator26 := node_names.biggest_fish_is26;
		next_child__decorator27 := node_names.biggest_fish_is27;
		next_child__decorator28 := node_names.biggest_fish_is28;
		next_child__decorator29 := node_names.biggest_fish_is29;
		next_child__decorator3 := node_names.biggest_fish_is3;
		next_child__decorator30 := node_names.biggest_fish_is30;
		next_child__decorator31 := node_names.biggest_fish_is31;
		next_child__decorator32 := node_names.biggest_fish_is32;
		next_child__decorator33 := node_names.biggest_fish_is33;
		next_child__decorator34 := node_names.biggest_fish_is34;
		next_child__decorator35 := node_names.biggest_fish_is35;
		next_child__decorator36 := node_names.biggest_fish_is36;
		next_child__decorator37 := node_names.biggest_fish_is37;
		next_child__decorator38 := node_names.biggest_fish_is38;
		next_child__decorator39 := node_names.biggest_fish_is39;
		next_child__decorator4 := node_names.biggest_fish_is4;
		next_child__decorator40 := node_names.biggest_fish_is40;
		next_child__decorator41 := node_names.biggest_fish_is41;
		next_child__decorator42 := node_names.biggest_fish_is42;
		next_child__decorator43 := node_names.biggest_fish_is43;
		next_child__decorator44 := node_names.biggest_fish_is44;
		next_child__decorator45 := node_names.biggest_fish_is45;
		next_child__decorator46 := node_names.biggest_fish_is46;
		next_child__decorator47 := node_names.biggest_fish_is47;
		next_child__decorator48 := node_names.biggest_fish_is48;
		next_child__decorator49 := node_names.biggest_fish_is49;
		next_child__decorator5 := node_names.biggest_fish_is5;
		next_child__decorator50 := node_names.biggest_fish_is50;
		next_child__decorator51 := node_names.biggest_fish_is51;
		next_child__decorator52 := node_names.biggest_fish_is52;
		next_child__decorator53 := node_names.biggest_fish_is53;
		next_child__decorator54 := node_names.biggest_fish_is54;
		next_child__decorator55 := node_names.biggest_fish_is55;
		next_child__decorator56 := node_names.biggest_fish_is56;
		next_child__decorator57 := node_names.biggest_fish_is57;
		next_child__decorator58 := node_names.biggest_fish_is58;
		next_child__decorator59 := node_names.biggest_fish_is59;
		next_child__decorator6 := node_names.biggest_fish_is6;
		next_child__decorator60 := node_names.biggest_fish_is60;
		next_child__decorator61 := node_names.biggest_fish_is61;
		next_child__decorator62 := node_names.biggest_fish_is62;
		next_child__decorator63 := node_names.biggest_fish_is63;
		next_child__decorator64 := node_names.biggest_fish_is64;
		next_child__decorator65 := node_names.biggest_fish_is65;
		next_child__decorator66 := node_names.biggest_fish_is66;
		next_child__decorator67 := node_names.biggest_fish_is67;
		next_child__decorator68 := node_names.biggest_fish_is68;
		next_child__decorator69 := node_names.biggest_fish_is69;
		next_child__decorator7 := node_names.biggest_fish_is7;
		next_child__decorator8 := node_names.biggest_fish_is8;
		next_child__decorator9 := node_names.biggest_fish_is9;
		next_child__parallel1 := 
			case
				(previous_node < node_names.decorator0) : node_names.decorator0;
				(previous_node < node_names.decorator1) : node_names.decorator1;
				TRUE : -1;
			esac;
		next_child__parallel13 := 
			case
				(previous_node < node_names.decorator10) : node_names.decorator10;
				(previous_node < node_names.decorator11) : node_names.decorator11;
				(previous_node < node_names.decorator12) : node_names.decorator12;
				(previous_node < node_names.decorator13) : node_names.decorator13;
				(previous_node < node_names.parallel9) : node_names.parallel9;
				TRUE : -1;
			esac;
		next_child__parallel17 := 
			case
				(previous_node < node_names.decorator14) : node_names.decorator14;
				(previous_node < node_names.decorator15) : node_names.decorator15;
				(previous_node < node_names.decorator16) : node_names.decorator16;
				(previous_node < node_names.decorator17) : node_names.decorator17;
				(previous_node < node_names.parallel13) : node_names.parallel13;
				TRUE : -1;
			esac;
		next_child__parallel21 := 
			case
				(previous_node < node_names.decorator18) : node_names.decorator18;
				(previous_node < node_names.decorator19) : node_names.decorator19;
				(previous_node < node_names.decorator20) : node_names.decorator20;
				(previous_node < node_names.decorator21) : node_names.decorator21;
				(previous_node < node_names.parallel17) : node_names.parallel17;
				TRUE : -1;
			esac;
		next_child__parallel25 := 
			case
				(previous_node < node_names.decorator22) : node_names.decorator22;
				(previous_node < node_names.decorator23) : node_names.decorator23;
				(previous_node < node_names.decorator24) : node_names.decorator24;
				(previous_node < node_names.decorator25) : node_names.decorator25;
				(previous_node < node_names.parallel21) : node_names.parallel21;
				TRUE : -1;
			esac;
		next_child__parallel29 := 
			case
				(previous_node < node_names.decorator26) : node_names.decorator26;
				(previous_node < node_names.decorator27) : node_names.decorator27;
				(previous_node < node_names.decorator28) : node_names.decorator28;
				(previous_node < node_names.decorator29) : node_names.decorator29;
				(previous_node < node_names.parallel25) : node_names.parallel25;
				TRUE : -1;
			esac;
		next_child__parallel33 := 
			case
				(previous_node < node_names.decorator30) : node_names.decorator30;
				(previous_node < node_names.decorator31) : node_names.decorator31;
				(previous_node < node_names.decorator32) : node_names.decorator32;
				(previous_node < node_names.decorator33) : node_names.decorator33;
				(previous_node < node_names.parallel29) : node_names.parallel29;
				TRUE : -1;
			esac;
		next_child__parallel37 := 
			case
				(previous_node < node_names.decorator34) : node_names.decorator34;
				(previous_node < node_names.decorator35) : node_names.decorator35;
				(previous_node < node_names.decorator36) : node_names.decorator36;
				(previous_node < node_names.decorator37) : node_names.decorator37;
				(previous_node < node_names.parallel33) : node_names.parallel33;
				TRUE : -1;
			esac;
		next_child__parallel41 := 
			case
				(previous_node < node_names.decorator38) : node_names.decorator38;
				(previous_node < node_names.decorator39) : node_names.decorator39;
				(previous_node < node_names.decorator40) : node_names.decorator40;
				(previous_node < node_names.decorator41) : node_names.decorator41;
				(previous_node < node_names.parallel37) : node_names.parallel37;
				TRUE : -1;
			esac;
		next_child__parallel45 := 
			case
				(previous_node < node_names.decorator42) : node_names.decorator42;
				(previous_node < node_names.decorator43) : node_names.decorator43;
				(previous_node < node_names.decorator44) : node_names.decorator44;
				(previous_node < node_names.decorator45) : node_names.decorator45;
				(previous_node < node_names.parallel41) : node_names.parallel41;
				TRUE : -1;
			esac;
		next_child__parallel49 := 
			case
				(previous_node < node_names.decorator46) : node_names.decorator46;
				(previous_node < node_names.decorator47) : node_names.decorator47;
				(previous_node < node_names.decorator48) : node_names.decorator48;
				(previous_node < node_names.decorator49) : node_names.decorator49;
				(previous_node < node_names.parallel45) : node_names.parallel45;
				TRUE : -1;
			esac;
		next_child__parallel5 := 
			case
				(previous_node < node_names.decorator2) : node_names.decorator2;
				(previous_node < node_names.decorator3) : node_names.decorator3;
				(previous_node < node_names.decorator4) : node_names.decorator4;
				(previous_node < node_names.decorator5) : node_names.decorator5;
				(previous_node < node_names.parallel1) : node_names.parallel1;
				TRUE : -1;
			esac;
		next_child__parallel53 := 
			case
				(previous_node < node_names.decorator50) : node_names.decorator50;
				(previous_node < node_names.decorator51) : node_names.decorator51;
				(previous_node < node_names.decorator52) : node_names.decorator52;
				(previous_node < node_names.decorator53) : node_names.decorator53;
				(previous_node < node_names.parallel49) : node_names.parallel49;
				TRUE : -1;
			esac;
		next_child__parallel57 := 
			case
				(previous_node < node_names.decorator54) : node_names.decorator54;
				(previous_node < node_names.decorator55) : node_names.decorator55;
				(previous_node < node_names.decorator56) : node_names.decorator56;
				(previous_node < node_names.decorator57) : node_names.decorator57;
				(previous_node < node_names.parallel53) : node_names.parallel53;
				TRUE : -1;
			esac;
		next_child__parallel61 := 
			case
				(previous_node < node_names.decorator58) : node_names.decorator58;
				(previous_node < node_names.decorator59) : node_names.decorator59;
				(previous_node < node_names.decorator60) : node_names.decorator60;
				(previous_node < node_names.decorator61) : node_names.decorator61;
				(previous_node < node_names.parallel57) : node_names.parallel57;
				TRUE : -1;
			esac;
		next_child__parallel65 := 
			case
				(previous_node < node_names.decorator62) : node_names.decorator62;
				(previous_node < node_names.decorator63) : node_names.decorator63;
				(previous_node < node_names.decorator64) : node_names.decorator64;
				(previous_node < node_names.decorator65) : node_names.decorator65;
				(previous_node < node_names.parallel61) : node_names.parallel61;
				TRUE : -1;
			esac;
		next_child__parallel69 := 
			case
				(previous_node < node_names.decorator66) : node_names.decorator66;
				(previous_node < node_names.decorator67) : node_names.decorator67;
				(previous_node < node_names.decorator68) : node_names.decorator68;
				(previous_node < node_names.decorator69) : node_names.decorator69;
				(previous_node < node_names.parallel65) : node_names.parallel65;
				TRUE : -1;
			esac;
		next_child__parallel9 := 
			case
				(previous_node < node_names.decorator6) : node_names.decorator6;
				(previous_node < node_names.decorator7) : node_names.decorator7;
				(previous_node < node_names.decorator8) : node_names.decorator8;
				(previous_node < node_names.decorator9) : node_names.decorator9;
				(previous_node < node_names.parallel5) : node_names.parallel5;
				TRUE : -1;
			esac;
		next_child__special_decorator := node_names.parallel69;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..161;
		previous_node : -1..161;
		current_status : {success, running, failure, invalid};
		previous_status : {success, running, failure, invalid};
		parallel_status_depth__0 : {success, running, failure};
		parallel_status_depth__1 : {success, running, failure};
		parallel_status_depth__2 : {success, running, failure};
		parallel_status_depth__3 : {success, running, failure};
		parallel_status_depth__4 : {success, running, failure};
		parallel_status_depth__5 : {success, running, failure};
		parallel_status_depth__6 : {success, running, failure};
		parallel_status_depth__7 : {success, running, failure};
		parallel_status_depth__8 : {success, running, failure};
		parallel_status_depth__9 : {success, running, failure};
		parallel_status_depth__10 : {success, running, failure};
		parallel_status_depth__11 : {success, running, failure};
		parallel_status_depth__12 : {success, running, failure};
		parallel_status_depth__13 : {success, running, failure};
		parallel_status_depth__14 : {success, running, failure};
		parallel_status_depth__15 : {success, running, failure};
		parallel_status_depth__16 : {success, running, failure};
		parallel_status_depth__17 : {success, running, failure};
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..199;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		init(parallel_status_depth__0) := failure;
		init(parallel_status_depth__1) := failure;
		init(parallel_status_depth__2) := failure;
		init(parallel_status_depth__3) := failure;
		init(parallel_status_depth__4) := failure;
		init(parallel_status_depth__5) := failure;
		init(parallel_status_depth__6) := failure;
		init(parallel_status_depth__7) := failure;
		init(parallel_status_depth__8) := failure;
		init(parallel_status_depth__9) := failure;
		init(parallel_status_depth__10) := failure;
		init(parallel_status_depth__11) := failure;
		init(parallel_status_depth__12) := failure;
		init(parallel_status_depth__13) := failure;
		init(parallel_status_depth__14) := failure;
		init(parallel_status_depth__15) := failure;
		init(parallel_status_depth__16) := failure;
		init(parallel_status_depth__17) := failure;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.biggest_fish_sequence;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.bigger_fish) & (current_status != invalid) : node_names.biggest_fish_sequence;
				(active_node = node_names.biggest_fish_is0) & (current_status != invalid) : node_names.decorator0;
				(active_node = node_names.biggest_fish_is1) & (current_status != invalid) : node_names.decorator1;
				(active_node = node_names.biggest_fish_is10) & (current_status != invalid) : node_names.decorator10;
				(active_node = node_names.biggest_fish_is11) & (current_status != invalid) : node_names.decorator11;
				(active_node = node_names.biggest_fish_is12) & (current_status != invalid) : node_names.decorator12;
				(active_node = node_names.biggest_fish_is13) & (current_status != invalid) : node_names.decorator13;
				(active_node = node_names.biggest_fish_is14) & (current_status != invalid) : node_names.decorator14;
				(active_node = node_names.biggest_fish_is15) & (current_status != invalid) : node_names.decorator15;
				(active_node = node_names.biggest_fish_is16) & (current_status != invalid) : node_names.decorator16;
				(active_node = node_names.biggest_fish_is17) & (current_status != invalid) : node_names.decorator17;
				(active_node = node_names.biggest_fish_is18) & (current_status != invalid) : node_names.decorator18;
				(active_node = node_names.biggest_fish_is19) & (current_status != invalid) : node_names.decorator19;
				(active_node = node_names.biggest_fish_is2) & (current_status != invalid) : node_names.decorator2;
				(active_node = node_names.biggest_fish_is20) & (current_status != invalid) : node_names.decorator20;
				(active_node = node_names.biggest_fish_is21) & (current_status != invalid) : node_names.decorator21;
				(active_node = node_names.biggest_fish_is22) & (current_status != invalid) : node_names.decorator22;
				(active_node = node_names.biggest_fish_is23) & (current_status != invalid) : node_names.decorator23;
				(active_node = node_names.biggest_fish_is24) & (current_status != invalid) : node_names.decorator24;
				(active_node = node_names.biggest_fish_is25) & (current_status != invalid) : node_names.decorator25;
				(active_node = node_names.biggest_fish_is26) & (current_status != invalid) : node_names.decorator26;
				(active_node = node_names.biggest_fish_is27) & (current_status != invalid) : node_names.decorator27;
				(active_node = node_names.biggest_fish_is28) & (current_status != invalid) : node_names.decorator28;
				(active_node = node_names.biggest_fish_is29) & (current_status != invalid) : node_names.decorator29;
				(active_node = node_names.biggest_fish_is3) & (current_status != invalid) : node_names.decorator3;
				(active_node = node_names.biggest_fish_is30) & (current_status != invalid) : node_names.decorator30;
				(active_node = node_names.biggest_fish_is31) & (current_status != invalid) : node_names.decorator31;
				(active_node = node_names.biggest_fish_is32) & (current_status != invalid) : node_names.decorator32;
				(active_node = node_names.biggest_fish_is33) & (current_status != invalid) : node_names.decorator33;
				(active_node = node_names.biggest_fish_is34) & (current_status != invalid) : node_names.decorator34;
				(active_node = node_names.biggest_fish_is35) & (current_status != invalid) : node_names.decorator35;
				(active_node = node_names.biggest_fish_is36) & (current_status != invalid) : node_names.decorator36;
				(active_node = node_names.biggest_fish_is37) & (current_status != invalid) : node_names.decorator37;
				(active_node = node_names.biggest_fish_is38) & (current_status != invalid) : node_names.decorator38;
				(active_node = node_names.biggest_fish_is39) & (current_status != invalid) : node_names.decorator39;
				(active_node = node_names.biggest_fish_is4) & (current_status != invalid) : node_names.decorator4;
				(active_node = node_names.biggest_fish_is40) & (current_status != invalid) : node_names.decorator40;
				(active_node = node_names.biggest_fish_is41) & (current_status != invalid) : node_names.decorator41;
				(active_node = node_names.biggest_fish_is42) & (current_status != invalid) : node_names.decorator42;
				(active_node = node_names.biggest_fish_is43) & (current_status != invalid) : node_names.decorator43;
				(active_node = node_names.biggest_fish_is44) & (current_status != invalid) : node_names.decorator44;
				(active_node = node_names.biggest_fish_is45) & (current_status != invalid) : node_names.decorator45;
				(active_node = node_names.biggest_fish_is46) & (current_status != invalid) : node_names.decorator46;
				(active_node = node_names.biggest_fish_is47) & (current_status != invalid) : node_names.decorator47;
				(active_node = node_names.biggest_fish_is48) & (current_status != invalid) : node_names.decorator48;
				(active_node = node_names.biggest_fish_is49) & (current_status != invalid) : node_names.decorator49;
				(active_node = node_names.biggest_fish_is5) & (current_status != invalid) : node_names.decorator5;
				(active_node = node_names.biggest_fish_is50) & (current_status != invalid) : node_names.decorator50;
				(active_node = node_names.biggest_fish_is51) & (current_status != invalid) : node_names.decorator51;
				(active_node = node_names.biggest_fish_is52) & (current_status != invalid) : node_names.decorator52;
				(active_node = node_names.biggest_fish_is53) & (current_status != invalid) : node_names.decorator53;
				(active_node = node_names.biggest_fish_is54) & (current_status != invalid) : node_names.decorator54;
				(active_node = node_names.biggest_fish_is55) & (current_status != invalid) : node_names.decorator55;
				(active_node = node_names.biggest_fish_is56) & (current_status != invalid) : node_names.decorator56;
				(active_node = node_names.biggest_fish_is57) & (current_status != invalid) : node_names.decorator57;
				(active_node = node_names.biggest_fish_is58) & (current_status != invalid) : node_names.decorator58;
				(active_node = node_names.biggest_fish_is59) & (current_status != invalid) : node_names.decorator59;
				(active_node = node_names.biggest_fish_is6) & (current_status != invalid) : node_names.decorator6;
				(active_node = node_names.biggest_fish_is60) & (current_status != invalid) : node_names.decorator60;
				(active_node = node_names.biggest_fish_is61) & (current_status != invalid) : node_names.decorator61;
				(active_node = node_names.biggest_fish_is62) & (current_status != invalid) : node_names.decorator62;
				(active_node = node_names.biggest_fish_is63) & (current_status != invalid) : node_names.decorator63;
				(active_node = node_names.biggest_fish_is64) & (current_status != invalid) : node_names.decorator64;
				(active_node = node_names.biggest_fish_is65) & (current_status != invalid) : node_names.decorator65;
				(active_node = node_names.biggest_fish_is66) & (current_status != invalid) : node_names.decorator66;
				(active_node = node_names.biggest_fish_is67) & (current_status != invalid) : node_names.decorator67;
				(active_node = node_names.biggest_fish_is68) & (current_status != invalid) : node_names.decorator68;
				(active_node = node_names.biggest_fish_is69) & (current_status != invalid) : node_names.decorator69;
				(active_node = node_names.biggest_fish_is7) & (current_status != invalid) : node_names.decorator7;
				(active_node = node_names.biggest_fish_is8) & (current_status != invalid) : node_names.decorator8;
				(active_node = node_names.biggest_fish_is9) & (current_status != invalid) : node_names.decorator9;
				(active_node = node_names.biggest_fish_sequence) & (current_status != invalid) : -1;
				(active_node = node_names.biggest_fish_sequence) & (current_status = invalid) : next_child__biggest_fish_sequence;
				(active_node = node_names.decorator0) & (current_status != invalid) : node_names.parallel1;
				(active_node = node_names.decorator0) & (current_status = invalid) : next_child__decorator0;
				(active_node = node_names.decorator1) & (current_status != invalid) : node_names.parallel1;
				(active_node = node_names.decorator1) & (current_status = invalid) : next_child__decorator1;
				(active_node = node_names.decorator10) & (current_status != invalid) : node_names.parallel13;
				(active_node = node_names.decorator10) & (current_status = invalid) : next_child__decorator10;
				(active_node = node_names.decorator11) & (current_status != invalid) : node_names.parallel13;
				(active_node = node_names.decorator11) & (current_status = invalid) : next_child__decorator11;
				(active_node = node_names.decorator12) & (current_status != invalid) : node_names.parallel13;
				(active_node = node_names.decorator12) & (current_status = invalid) : next_child__decorator12;
				(active_node = node_names.decorator13) & (current_status != invalid) : node_names.parallel13;
				(active_node = node_names.decorator13) & (current_status = invalid) : next_child__decorator13;
				(active_node = node_names.decorator14) & (current_status != invalid) : node_names.parallel17;
				(active_node = node_names.decorator14) & (current_status = invalid) : next_child__decorator14;
				(active_node = node_names.decorator15) & (current_status != invalid) : node_names.parallel17;
				(active_node = node_names.decorator15) & (current_status = invalid) : next_child__decorator15;
				(active_node = node_names.decorator16) & (current_status != invalid) : node_names.parallel17;
				(active_node = node_names.decorator16) & (current_status = invalid) : next_child__decorator16;
				(active_node = node_names.decorator17) & (current_status != invalid) : node_names.parallel17;
				(active_node = node_names.decorator17) & (current_status = invalid) : next_child__decorator17;
				(active_node = node_names.decorator18) & (current_status != invalid) : node_names.parallel21;
				(active_node = node_names.decorator18) & (current_status = invalid) : next_child__decorator18;
				(active_node = node_names.decorator19) & (current_status != invalid) : node_names.parallel21;
				(active_node = node_names.decorator19) & (current_status = invalid) : next_child__decorator19;
				(active_node = node_names.decorator2) & (current_status != invalid) : node_names.parallel5;
				(active_node = node_names.decorator2) & (current_status = invalid) : next_child__decorator2;
				(active_node = node_names.decorator20) & (current_status != invalid) : node_names.parallel21;
				(active_node = node_names.decorator20) & (current_status = invalid) : next_child__decorator20;
				(active_node = node_names.decorator21) & (current_status != invalid) : node_names.parallel21;
				(active_node = node_names.decorator21) & (current_status = invalid) : next_child__decorator21;
				(active_node = node_names.decorator22) & (current_status != invalid) : node_names.parallel25;
				(active_node = node_names.decorator22) & (current_status = invalid) : next_child__decorator22;
				(active_node = node_names.decorator23) & (current_status != invalid) : node_names.parallel25;
				(active_node = node_names.decorator23) & (current_status = invalid) : next_child__decorator23;
				(active_node = node_names.decorator24) & (current_status != invalid) : node_names.parallel25;
				(active_node = node_names.decorator24) & (current_status = invalid) : next_child__decorator24;
				(active_node = node_names.decorator25) & (current_status != invalid) : node_names.parallel25;
				(active_node = node_names.decorator25) & (current_status = invalid) : next_child__decorator25;
				(active_node = node_names.decorator26) & (current_status != invalid) : node_names.parallel29;
				(active_node = node_names.decorator26) & (current_status = invalid) : next_child__decorator26;
				(active_node = node_names.decorator27) & (current_status != invalid) : node_names.parallel29;
				(active_node = node_names.decorator27) & (current_status = invalid) : next_child__decorator27;
				(active_node = node_names.decorator28) & (current_status != invalid) : node_names.parallel29;
				(active_node = node_names.decorator28) & (current_status = invalid) : next_child__decorator28;
				(active_node = node_names.decorator29) & (current_status != invalid) : node_names.parallel29;
				(active_node = node_names.decorator29) & (current_status = invalid) : next_child__decorator29;
				(active_node = node_names.decorator3) & (current_status != invalid) : node_names.parallel5;
				(active_node = node_names.decorator3) & (current_status = invalid) : next_child__decorator3;
				(active_node = node_names.decorator30) & (current_status != invalid) : node_names.parallel33;
				(active_node = node_names.decorator30) & (current_status = invalid) : next_child__decorator30;
				(active_node = node_names.decorator31) & (current_status != invalid) : node_names.parallel33;
				(active_node = node_names.decorator31) & (current_status = invalid) : next_child__decorator31;
				(active_node = node_names.decorator32) & (current_status != invalid) : node_names.parallel33;
				(active_node = node_names.decorator32) & (current_status = invalid) : next_child__decorator32;
				(active_node = node_names.decorator33) & (current_status != invalid) : node_names.parallel33;
				(active_node = node_names.decorator33) & (current_status = invalid) : next_child__decorator33;
				(active_node = node_names.decorator34) & (current_status != invalid) : node_names.parallel37;
				(active_node = node_names.decorator34) & (current_status = invalid) : next_child__decorator34;
				(active_node = node_names.decorator35) & (current_status != invalid) : node_names.parallel37;
				(active_node = node_names.decorator35) & (current_status = invalid) : next_child__decorator35;
				(active_node = node_names.decorator36) & (current_status != invalid) : node_names.parallel37;
				(active_node = node_names.decorator36) & (current_status = invalid) : next_child__decorator36;
				(active_node = node_names.decorator37) & (current_status != invalid) : node_names.parallel37;
				(active_node = node_names.decorator37) & (current_status = invalid) : next_child__decorator37;
				(active_node = node_names.decorator38) & (current_status != invalid) : node_names.parallel41;
				(active_node = node_names.decorator38) & (current_status = invalid) : next_child__decorator38;
				(active_node = node_names.decorator39) & (current_status != invalid) : node_names.parallel41;
				(active_node = node_names.decorator39) & (current_status = invalid) : next_child__decorator39;
				(active_node = node_names.decorator4) & (current_status != invalid) : node_names.parallel5;
				(active_node = node_names.decorator4) & (current_status = invalid) : next_child__decorator4;
				(active_node = node_names.decorator40) & (current_status != invalid) : node_names.parallel41;
				(active_node = node_names.decorator40) & (current_status = invalid) : next_child__decorator40;
				(active_node = node_names.decorator41) & (current_status != invalid) : node_names.parallel41;
				(active_node = node_names.decorator41) & (current_status = invalid) : next_child__decorator41;
				(active_node = node_names.decorator42) & (current_status != invalid) : node_names.parallel45;
				(active_node = node_names.decorator42) & (current_status = invalid) : next_child__decorator42;
				(active_node = node_names.decorator43) & (current_status != invalid) : node_names.parallel45;
				(active_node = node_names.decorator43) & (current_status = invalid) : next_child__decorator43;
				(active_node = node_names.decorator44) & (current_status != invalid) : node_names.parallel45;
				(active_node = node_names.decorator44) & (current_status = invalid) : next_child__decorator44;
				(active_node = node_names.decorator45) & (current_status != invalid) : node_names.parallel45;
				(active_node = node_names.decorator45) & (current_status = invalid) : next_child__decorator45;
				(active_node = node_names.decorator46) & (current_status != invalid) : node_names.parallel49;
				(active_node = node_names.decorator46) & (current_status = invalid) : next_child__decorator46;
				(active_node = node_names.decorator47) & (current_status != invalid) : node_names.parallel49;
				(active_node = node_names.decorator47) & (current_status = invalid) : next_child__decorator47;
				(active_node = node_names.decorator48) & (current_status != invalid) : node_names.parallel49;
				(active_node = node_names.decorator48) & (current_status = invalid) : next_child__decorator48;
				(active_node = node_names.decorator49) & (current_status != invalid) : node_names.parallel49;
				(active_node = node_names.decorator49) & (current_status = invalid) : next_child__decorator49;
				(active_node = node_names.decorator5) & (current_status != invalid) : node_names.parallel5;
				(active_node = node_names.decorator5) & (current_status = invalid) : next_child__decorator5;
				(active_node = node_names.decorator50) & (current_status != invalid) : node_names.parallel53;
				(active_node = node_names.decorator50) & (current_status = invalid) : next_child__decorator50;
				(active_node = node_names.decorator51) & (current_status != invalid) : node_names.parallel53;
				(active_node = node_names.decorator51) & (current_status = invalid) : next_child__decorator51;
				(active_node = node_names.decorator52) & (current_status != invalid) : node_names.parallel53;
				(active_node = node_names.decorator52) & (current_status = invalid) : next_child__decorator52;
				(active_node = node_names.decorator53) & (current_status != invalid) : node_names.parallel53;
				(active_node = node_names.decorator53) & (current_status = invalid) : next_child__decorator53;
				(active_node = node_names.decorator54) & (current_status != invalid) : node_names.parallel57;
				(active_node = node_names.decorator54) & (current_status = invalid) : next_child__decorator54;
				(active_node = node_names.decorator55) & (current_status != invalid) : node_names.parallel57;
				(active_node = node_names.decorator55) & (current_status = invalid) : next_child__decorator55;
				(active_node = node_names.decorator56) & (current_status != invalid) : node_names.parallel57;
				(active_node = node_names.decorator56) & (current_status = invalid) : next_child__decorator56;
				(active_node = node_names.decorator57) & (current_status != invalid) : node_names.parallel57;
				(active_node = node_names.decorator57) & (current_status = invalid) : next_child__decorator57;
				(active_node = node_names.decorator58) & (current_status != invalid) : node_names.parallel61;
				(active_node = node_names.decorator58) & (current_status = invalid) : next_child__decorator58;
				(active_node = node_names.decorator59) & (current_status != invalid) : node_names.parallel61;
				(active_node = node_names.decorator59) & (current_status = invalid) : next_child__decorator59;
				(active_node = node_names.decorator6) & (current_status != invalid) : node_names.parallel9;
				(active_node = node_names.decorator6) & (current_status = invalid) : next_child__decorator6;
				(active_node = node_names.decorator60) & (current_status != invalid) : node_names.parallel61;
				(active_node = node_names.decorator60) & (current_status = invalid) : next_child__decorator60;
				(active_node = node_names.decorator61) & (current_status != invalid) : node_names.parallel61;
				(active_node = node_names.decorator61) & (current_status = invalid) : next_child__decorator61;
				(active_node = node_names.decorator62) & (current_status != invalid) : node_names.parallel65;
				(active_node = node_names.decorator62) & (current_status = invalid) : next_child__decorator62;
				(active_node = node_names.decorator63) & (current_status != invalid) : node_names.parallel65;
				(active_node = node_names.decorator63) & (current_status = invalid) : next_child__decorator63;
				(active_node = node_names.decorator64) & (current_status != invalid) : node_names.parallel65;
				(active_node = node_names.decorator64) & (current_status = invalid) : next_child__decorator64;
				(active_node = node_names.decorator65) & (current_status != invalid) : node_names.parallel65;
				(active_node = node_names.decorator65) & (current_status = invalid) : next_child__decorator65;
				(active_node = node_names.decorator66) & (current_status != invalid) : node_names.parallel69;
				(active_node = node_names.decorator66) & (current_status = invalid) : next_child__decorator66;
				(active_node = node_names.decorator67) & (current_status != invalid) : node_names.parallel69;
				(active_node = node_names.decorator67) & (current_status = invalid) : next_child__decorator67;
				(active_node = node_names.decorator68) & (current_status != invalid) : node_names.parallel69;
				(active_node = node_names.decorator68) & (current_status = invalid) : next_child__decorator68;
				(active_node = node_names.decorator69) & (current_status != invalid) : node_names.parallel69;
				(active_node = node_names.decorator69) & (current_status = invalid) : next_child__decorator69;
				(active_node = node_names.decorator7) & (current_status != invalid) : node_names.parallel9;
				(active_node = node_names.decorator7) & (current_status = invalid) : next_child__decorator7;
				(active_node = node_names.decorator8) & (current_status != invalid) : node_names.parallel9;
				(active_node = node_names.decorator8) & (current_status = invalid) : next_child__decorator8;
				(active_node = node_names.decorator9) & (current_status != invalid) : node_names.parallel9;
				(active_node = node_names.decorator9) & (current_status = invalid) : next_child__decorator9;
				(active_node = node_names.parallel1) & (current_status != invalid) : node_names.parallel5;
				(active_node = node_names.parallel1) & (current_status = invalid) : next_child__parallel1;
				(active_node = node_names.parallel13) & (current_status != invalid) : node_names.parallel17;
				(active_node = node_names.parallel13) & (current_status = invalid) : next_child__parallel13;
				(active_node = node_names.parallel17) & (current_status != invalid) : node_names.parallel21;
				(active_node = node_names.parallel17) & (current_status = invalid) : next_child__parallel17;
				(active_node = node_names.parallel21) & (current_status != invalid) : node_names.parallel25;
				(active_node = node_names.parallel21) & (current_status = invalid) : next_child__parallel21;
				(active_node = node_names.parallel25) & (current_status != invalid) : node_names.parallel29;
				(active_node = node_names.parallel25) & (current_status = invalid) : next_child__parallel25;
				(active_node = node_names.parallel29) & (current_status != invalid) : node_names.parallel33;
				(active_node = node_names.parallel29) & (current_status = invalid) : next_child__parallel29;
				(active_node = node_names.parallel33) & (current_status != invalid) : node_names.parallel37;
				(active_node = node_names.parallel33) & (current_status = invalid) : next_child__parallel33;
				(active_node = node_names.parallel37) & (current_status != invalid) : node_names.parallel41;
				(active_node = node_names.parallel37) & (current_status = invalid) : next_child__parallel37;
				(active_node = node_names.parallel41) & (current_status != invalid) : node_names.parallel45;
				(active_node = node_names.parallel41) & (current_status = invalid) : next_child__parallel41;
				(active_node = node_names.parallel45) & (current_status != invalid) : node_names.parallel49;
				(active_node = node_names.parallel45) & (current_status = invalid) : next_child__parallel45;
				(active_node = node_names.parallel49) & (current_status != invalid) : node_names.parallel53;
				(active_node = node_names.parallel49) & (current_status = invalid) : next_child__parallel49;
				(active_node = node_names.parallel5) & (current_status != invalid) : node_names.parallel9;
				(active_node = node_names.parallel5) & (current_status = invalid) : next_child__parallel5;
				(active_node = node_names.parallel53) & (current_status != invalid) : node_names.parallel57;
				(active_node = node_names.parallel53) & (current_status = invalid) : next_child__parallel53;
				(active_node = node_names.parallel57) & (current_status != invalid) : node_names.parallel61;
				(active_node = node_names.parallel57) & (current_status = invalid) : next_child__parallel57;
				(active_node = node_names.parallel61) & (current_status != invalid) : node_names.parallel65;
				(active_node = node_names.parallel61) & (current_status = invalid) : next_child__parallel61;
				(active_node = node_names.parallel65) & (current_status != invalid) : node_names.parallel69;
				(active_node = node_names.parallel65) & (current_status = invalid) : next_child__parallel65;
				(active_node = node_names.parallel69) & (current_status != invalid) : node_names.special_decorator;
				(active_node = node_names.parallel69) & (current_status = invalid) : next_child__parallel69;
				(active_node = node_names.parallel9) & (current_status != invalid) : node_names.parallel13;
				(active_node = node_names.parallel9) & (current_status = invalid) : next_child__parallel9;
				(active_node = node_names.special_decorator) & (current_status != invalid) : node_names.biggest_fish_sequence;
				(active_node = node_names.special_decorator) & (current_status = invalid) : next_child__special_decorator;
				TRUE : active_node;
			esac;
		next(previous_node) := active_node;
		current_status :=
			case
				(active_node = node_names.bigger_fish) : success;
				(active_node = node_names.biggest_fish_is0) & (var_biggest_fish = 0) : success;
				(active_node = node_names.biggest_fish_is0) & TRUE : failure;
				(active_node = node_names.biggest_fish_is1) & (var_biggest_fish = 1) : success;
				(active_node = node_names.biggest_fish_is1) & TRUE : failure;
				(active_node = node_names.biggest_fish_is10) & (var_biggest_fish = 10) : success;
				(active_node = node_names.biggest_fish_is10) & TRUE : failure;
				(active_node = node_names.biggest_fish_is11) & (var_biggest_fish = 11) : success;
				(active_node = node_names.biggest_fish_is11) & TRUE : failure;
				(active_node = node_names.biggest_fish_is12) & (var_biggest_fish = 12) : success;
				(active_node = node_names.biggest_fish_is12) & TRUE : failure;
				(active_node = node_names.biggest_fish_is13) & (var_biggest_fish = 13) : success;
				(active_node = node_names.biggest_fish_is13) & TRUE : failure;
				(active_node = node_names.biggest_fish_is14) & (var_biggest_fish = 14) : success;
				(active_node = node_names.biggest_fish_is14) & TRUE : failure;
				(active_node = node_names.biggest_fish_is15) & (var_biggest_fish = 15) : success;
				(active_node = node_names.biggest_fish_is15) & TRUE : failure;
				(active_node = node_names.biggest_fish_is16) & (var_biggest_fish = 16) : success;
				(active_node = node_names.biggest_fish_is16) & TRUE : failure;
				(active_node = node_names.biggest_fish_is17) & (var_biggest_fish = 17) : success;
				(active_node = node_names.biggest_fish_is17) & TRUE : failure;
				(active_node = node_names.biggest_fish_is18) & (var_biggest_fish = 18) : success;
				(active_node = node_names.biggest_fish_is18) & TRUE : failure;
				(active_node = node_names.biggest_fish_is19) & (var_biggest_fish = 19) : success;
				(active_node = node_names.biggest_fish_is19) & TRUE : failure;
				(active_node = node_names.biggest_fish_is2) & (var_biggest_fish = 2) : success;
				(active_node = node_names.biggest_fish_is2) & TRUE : failure;
				(active_node = node_names.biggest_fish_is20) & (var_biggest_fish = 20) : success;
				(active_node = node_names.biggest_fish_is20) & TRUE : failure;
				(active_node = node_names.biggest_fish_is21) & (var_biggest_fish = 21) : success;
				(active_node = node_names.biggest_fish_is21) & TRUE : failure;
				(active_node = node_names.biggest_fish_is22) & (var_biggest_fish = 22) : success;
				(active_node = node_names.biggest_fish_is22) & TRUE : failure;
				(active_node = node_names.biggest_fish_is23) & (var_biggest_fish = 23) : success;
				(active_node = node_names.biggest_fish_is23) & TRUE : failure;
				(active_node = node_names.biggest_fish_is24) & (var_biggest_fish = 24) : success;
				(active_node = node_names.biggest_fish_is24) & TRUE : failure;
				(active_node = node_names.biggest_fish_is25) & (var_biggest_fish = 25) : success;
				(active_node = node_names.biggest_fish_is25) & TRUE : failure;
				(active_node = node_names.biggest_fish_is26) & (var_biggest_fish = 26) : success;
				(active_node = node_names.biggest_fish_is26) & TRUE : failure;
				(active_node = node_names.biggest_fish_is27) & (var_biggest_fish = 27) : success;
				(active_node = node_names.biggest_fish_is27) & TRUE : failure;
				(active_node = node_names.biggest_fish_is28) & (var_biggest_fish = 28) : success;
				(active_node = node_names.biggest_fish_is28) & TRUE : failure;
				(active_node = node_names.biggest_fish_is29) & (var_biggest_fish = 29) : success;
				(active_node = node_names.biggest_fish_is29) & TRUE : failure;
				(active_node = node_names.biggest_fish_is3) & (var_biggest_fish = 3) : success;
				(active_node = node_names.biggest_fish_is3) & TRUE : failure;
				(active_node = node_names.biggest_fish_is30) & (var_biggest_fish = 30) : success;
				(active_node = node_names.biggest_fish_is30) & TRUE : failure;
				(active_node = node_names.biggest_fish_is31) & (var_biggest_fish = 31) : success;
				(active_node = node_names.biggest_fish_is31) & TRUE : failure;
				(active_node = node_names.biggest_fish_is32) & (var_biggest_fish = 32) : success;
				(active_node = node_names.biggest_fish_is32) & TRUE : failure;
				(active_node = node_names.biggest_fish_is33) & (var_biggest_fish = 33) : success;
				(active_node = node_names.biggest_fish_is33) & TRUE : failure;
				(active_node = node_names.biggest_fish_is34) & (var_biggest_fish = 34) : success;
				(active_node = node_names.biggest_fish_is34) & TRUE : failure;
				(active_node = node_names.biggest_fish_is35) & (var_biggest_fish = 35) : success;
				(active_node = node_names.biggest_fish_is35) & TRUE : failure;
				(active_node = node_names.biggest_fish_is36) & (var_biggest_fish = 36) : success;
				(active_node = node_names.biggest_fish_is36) & TRUE : failure;
				(active_node = node_names.biggest_fish_is37) & (var_biggest_fish = 37) : success;
				(active_node = node_names.biggest_fish_is37) & TRUE : failure;
				(active_node = node_names.biggest_fish_is38) & (var_biggest_fish = 38) : success;
				(active_node = node_names.biggest_fish_is38) & TRUE : failure;
				(active_node = node_names.biggest_fish_is39) & (var_biggest_fish = 39) : success;
				(active_node = node_names.biggest_fish_is39) & TRUE : failure;
				(active_node = node_names.biggest_fish_is4) & (var_biggest_fish = 4) : success;
				(active_node = node_names.biggest_fish_is4) & TRUE : failure;
				(active_node = node_names.biggest_fish_is40) & (var_biggest_fish = 40) : success;
				(active_node = node_names.biggest_fish_is40) & TRUE : failure;
				(active_node = node_names.biggest_fish_is41) & (var_biggest_fish = 41) : success;
				(active_node = node_names.biggest_fish_is41) & TRUE : failure;
				(active_node = node_names.biggest_fish_is42) & (var_biggest_fish = 42) : success;
				(active_node = node_names.biggest_fish_is42) & TRUE : failure;
				(active_node = node_names.biggest_fish_is43) & (var_biggest_fish = 43) : success;
				(active_node = node_names.biggest_fish_is43) & TRUE : failure;
				(active_node = node_names.biggest_fish_is44) & (var_biggest_fish = 44) : success;
				(active_node = node_names.biggest_fish_is44) & TRUE : failure;
				(active_node = node_names.biggest_fish_is45) & (var_biggest_fish = 45) : success;
				(active_node = node_names.biggest_fish_is45) & TRUE : failure;
				(active_node = node_names.biggest_fish_is46) & (var_biggest_fish = 46) : success;
				(active_node = node_names.biggest_fish_is46) & TRUE : failure;
				(active_node = node_names.biggest_fish_is47) & (var_biggest_fish = 47) : success;
				(active_node = node_names.biggest_fish_is47) & TRUE : failure;
				(active_node = node_names.biggest_fish_is48) & (var_biggest_fish = 48) : success;
				(active_node = node_names.biggest_fish_is48) & TRUE : failure;
				(active_node = node_names.biggest_fish_is49) & (var_biggest_fish = 49) : success;
				(active_node = node_names.biggest_fish_is49) & TRUE : failure;
				(active_node = node_names.biggest_fish_is5) & (var_biggest_fish = 5) : success;
				(active_node = node_names.biggest_fish_is5) & TRUE : failure;
				(active_node = node_names.biggest_fish_is50) & (var_biggest_fish = 50) : success;
				(active_node = node_names.biggest_fish_is50) & TRUE : failure;
				(active_node = node_names.biggest_fish_is51) & (var_biggest_fish = 51) : success;
				(active_node = node_names.biggest_fish_is51) & TRUE : failure;
				(active_node = node_names.biggest_fish_is52) & (var_biggest_fish = 52) : success;
				(active_node = node_names.biggest_fish_is52) & TRUE : failure;
				(active_node = node_names.biggest_fish_is53) & (var_biggest_fish = 53) : success;
				(active_node = node_names.biggest_fish_is53) & TRUE : failure;
				(active_node = node_names.biggest_fish_is54) & (var_biggest_fish = 54) : success;
				(active_node = node_names.biggest_fish_is54) & TRUE : failure;
				(active_node = node_names.biggest_fish_is55) & (var_biggest_fish = 55) : success;
				(active_node = node_names.biggest_fish_is55) & TRUE : failure;
				(active_node = node_names.biggest_fish_is56) & (var_biggest_fish = 56) : success;
				(active_node = node_names.biggest_fish_is56) & TRUE : failure;
				(active_node = node_names.biggest_fish_is57) & (var_biggest_fish = 57) : success;
				(active_node = node_names.biggest_fish_is57) & TRUE : failure;
				(active_node = node_names.biggest_fish_is58) & (var_biggest_fish = 58) : success;
				(active_node = node_names.biggest_fish_is58) & TRUE : failure;
				(active_node = node_names.biggest_fish_is59) & (var_biggest_fish = 59) : success;
				(active_node = node_names.biggest_fish_is59) & TRUE : failure;
				(active_node = node_names.biggest_fish_is6) & (var_biggest_fish = 6) : success;
				(active_node = node_names.biggest_fish_is6) & TRUE : failure;
				(active_node = node_names.biggest_fish_is60) & (var_biggest_fish = 60) : success;
				(active_node = node_names.biggest_fish_is60) & TRUE : failure;
				(active_node = node_names.biggest_fish_is61) & (var_biggest_fish = 61) : success;
				(active_node = node_names.biggest_fish_is61) & TRUE : failure;
				(active_node = node_names.biggest_fish_is62) & (var_biggest_fish = 62) : success;
				(active_node = node_names.biggest_fish_is62) & TRUE : failure;
				(active_node = node_names.biggest_fish_is63) & (var_biggest_fish = 63) : success;
				(active_node = node_names.biggest_fish_is63) & TRUE : failure;
				(active_node = node_names.biggest_fish_is64) & (var_biggest_fish = 64) : success;
				(active_node = node_names.biggest_fish_is64) & TRUE : failure;
				(active_node = node_names.biggest_fish_is65) & (var_biggest_fish = 65) : success;
				(active_node = node_names.biggest_fish_is65) & TRUE : failure;
				(active_node = node_names.biggest_fish_is66) & (var_biggest_fish = 66) : success;
				(active_node = node_names.biggest_fish_is66) & TRUE : failure;
				(active_node = node_names.biggest_fish_is67) & (var_biggest_fish = 67) : success;
				(active_node = node_names.biggest_fish_is67) & TRUE : failure;
				(active_node = node_names.biggest_fish_is68) & (var_biggest_fish = 68) : success;
				(active_node = node_names.biggest_fish_is68) & TRUE : failure;
				(active_node = node_names.biggest_fish_is69) & (var_biggest_fish = 69) : success;
				(active_node = node_names.biggest_fish_is69) & TRUE : failure;
				(active_node = node_names.biggest_fish_is7) & (var_biggest_fish = 7) : success;
				(active_node = node_names.biggest_fish_is7) & TRUE : failure;
				(active_node = node_names.biggest_fish_is8) & (var_biggest_fish = 8) : success;
				(active_node = node_names.biggest_fish_is8) & TRUE : failure;
				(active_node = node_names.biggest_fish_is9) & (var_biggest_fish = 9) : success;
				(active_node = node_names.biggest_fish_is9) & TRUE : failure;
				(active_node = node_names.biggest_fish_sequence) & (previous_status = running) : running;
				(active_node = node_names.biggest_fish_sequence) & (previous_status = failure) : failure;
				(active_node = node_names.biggest_fish_sequence) & (next_child__biggest_fish_sequence = -1) : success;
				(active_node = node_names.biggest_fish_sequence) : invalid;
				(active_node = node_names.decorator0) & (previous_status = failure) : running;
				(active_node = node_names.decorator0) : previous_status;
				(active_node = node_names.decorator1) & (previous_status = failure) : running;
				(active_node = node_names.decorator1) : previous_status;
				(active_node = node_names.decorator10) & (previous_status = failure) : running;
				(active_node = node_names.decorator10) : previous_status;
				(active_node = node_names.decorator11) & (previous_status = failure) : running;
				(active_node = node_names.decorator11) : previous_status;
				(active_node = node_names.decorator12) & (previous_status = failure) : running;
				(active_node = node_names.decorator12) : previous_status;
				(active_node = node_names.decorator13) & (previous_status = failure) : running;
				(active_node = node_names.decorator13) : previous_status;
				(active_node = node_names.decorator14) & (previous_status = failure) : running;
				(active_node = node_names.decorator14) : previous_status;
				(active_node = node_names.decorator15) & (previous_status = failure) : running;
				(active_node = node_names.decorator15) : previous_status;
				(active_node = node_names.decorator16) & (previous_status = failure) : running;
				(active_node = node_names.decorator16) : previous_status;
				(active_node = node_names.decorator17) & (previous_status = failure) : running;
				(active_node = node_names.decorator17) : previous_status;
				(active_node = node_names.decorator18) & (previous_status = failure) : running;
				(active_node = node_names.decorator18) : previous_status;
				(active_node = node_names.decorator19) & (previous_status = failure) : running;
				(active_node = node_names.decorator19) : previous_status;
				(active_node = node_names.decorator2) & (previous_status = failure) : running;
				(active_node = node_names.decorator2) : previous_status;
				(active_node = node_names.decorator20) & (previous_status = failure) : running;
				(active_node = node_names.decorator20) : previous_status;
				(active_node = node_names.decorator21) & (previous_status = failure) : running;
				(active_node = node_names.decorator21) : previous_status;
				(active_node = node_names.decorator22) & (previous_status = failure) : running;
				(active_node = node_names.decorator22) : previous_status;
				(active_node = node_names.decorator23) & (previous_status = failure) : running;
				(active_node = node_names.decorator23) : previous_status;
				(active_node = node_names.decorator24) & (previous_status = failure) : running;
				(active_node = node_names.decorator24) : previous_status;
				(active_node = node_names.decorator25) & (previous_status = failure) : running;
				(active_node = node_names.decorator25) : previous_status;
				(active_node = node_names.decorator26) & (previous_status = failure) : running;
				(active_node = node_names.decorator26) : previous_status;
				(active_node = node_names.decorator27) & (previous_status = failure) : running;
				(active_node = node_names.decorator27) : previous_status;
				(active_node = node_names.decorator28) & (previous_status = failure) : running;
				(active_node = node_names.decorator28) : previous_status;
				(active_node = node_names.decorator29) & (previous_status = failure) : running;
				(active_node = node_names.decorator29) : previous_status;
				(active_node = node_names.decorator3) & (previous_status = failure) : running;
				(active_node = node_names.decorator3) : previous_status;
				(active_node = node_names.decorator30) & (previous_status = failure) : running;
				(active_node = node_names.decorator30) : previous_status;
				(active_node = node_names.decorator31) & (previous_status = failure) : running;
				(active_node = node_names.decorator31) : previous_status;
				(active_node = node_names.decorator32) & (previous_status = failure) : running;
				(active_node = node_names.decorator32) : previous_status;
				(active_node = node_names.decorator33) & (previous_status = failure) : running;
				(active_node = node_names.decorator33) : previous_status;
				(active_node = node_names.decorator34) & (previous_status = failure) : running;
				(active_node = node_names.decorator34) : previous_status;
				(active_node = node_names.decorator35) & (previous_status = failure) : running;
				(active_node = node_names.decorator35) : previous_status;
				(active_node = node_names.decorator36) & (previous_status = failure) : running;
				(active_node = node_names.decorator36) : previous_status;
				(active_node = node_names.decorator37) & (previous_status = failure) : running;
				(active_node = node_names.decorator37) : previous_status;
				(active_node = node_names.decorator38) & (previous_status = failure) : running;
				(active_node = node_names.decorator38) : previous_status;
				(active_node = node_names.decorator39) & (previous_status = failure) : running;
				(active_node = node_names.decorator39) : previous_status;
				(active_node = node_names.decorator4) & (previous_status = failure) : running;
				(active_node = node_names.decorator4) : previous_status;
				(active_node = node_names.decorator40) & (previous_status = failure) : running;
				(active_node = node_names.decorator40) : previous_status;
				(active_node = node_names.decorator41) & (previous_status = failure) : running;
				(active_node = node_names.decorator41) : previous_status;
				(active_node = node_names.decorator42) & (previous_status = failure) : running;
				(active_node = node_names.decorator42) : previous_status;
				(active_node = node_names.decorator43) & (previous_status = failure) : running;
				(active_node = node_names.decorator43) : previous_status;
				(active_node = node_names.decorator44) & (previous_status = failure) : running;
				(active_node = node_names.decorator44) : previous_status;
				(active_node = node_names.decorator45) & (previous_status = failure) : running;
				(active_node = node_names.decorator45) : previous_status;
				(active_node = node_names.decorator46) & (previous_status = failure) : running;
				(active_node = node_names.decorator46) : previous_status;
				(active_node = node_names.decorator47) & (previous_status = failure) : running;
				(active_node = node_names.decorator47) : previous_status;
				(active_node = node_names.decorator48) & (previous_status = failure) : running;
				(active_node = node_names.decorator48) : previous_status;
				(active_node = node_names.decorator49) & (previous_status = failure) : running;
				(active_node = node_names.decorator49) : previous_status;
				(active_node = node_names.decorator5) & (previous_status = failure) : running;
				(active_node = node_names.decorator5) : previous_status;
				(active_node = node_names.decorator50) & (previous_status = failure) : running;
				(active_node = node_names.decorator50) : previous_status;
				(active_node = node_names.decorator51) & (previous_status = failure) : running;
				(active_node = node_names.decorator51) : previous_status;
				(active_node = node_names.decorator52) & (previous_status = failure) : running;
				(active_node = node_names.decorator52) : previous_status;
				(active_node = node_names.decorator53) & (previous_status = failure) : running;
				(active_node = node_names.decorator53) : previous_status;
				(active_node = node_names.decorator54) & (previous_status = failure) : running;
				(active_node = node_names.decorator54) : previous_status;
				(active_node = node_names.decorator55) & (previous_status = failure) : running;
				(active_node = node_names.decorator55) : previous_status;
				(active_node = node_names.decorator56) & (previous_status = failure) : running;
				(active_node = node_names.decorator56) : previous_status;
				(active_node = node_names.decorator57) & (previous_status = failure) : running;
				(active_node = node_names.decorator57) : previous_status;
				(active_node = node_names.decorator58) & (previous_status = failure) : running;
				(active_node = node_names.decorator58) : previous_status;
				(active_node = node_names.decorator59) & (previous_status = failure) : running;
				(active_node = node_names.decorator59) : previous_status;
				(active_node = node_names.decorator6) & (previous_status = failure) : running;
				(active_node = node_names.decorator6) : previous_status;
				(active_node = node_names.decorator60) & (previous_status = failure) : running;
				(active_node = node_names.decorator60) : previous_status;
				(active_node = node_names.decorator61) & (previous_status = failure) : running;
				(active_node = node_names.decorator61) : previous_status;
				(active_node = node_names.decorator62) & (previous_status = failure) : running;
				(active_node = node_names.decorator62) : previous_status;
				(active_node = node_names.decorator63) & (previous_status = failure) : running;
				(active_node = node_names.decorator63) : previous_status;
				(active_node = node_names.decorator64) & (previous_status = failure) : running;
				(active_node = node_names.decorator64) : previous_status;
				(active_node = node_names.decorator65) & (previous_status = failure) : running;
				(active_node = node_names.decorator65) : previous_status;
				(active_node = node_names.decorator66) & (previous_status = failure) : running;
				(active_node = node_names.decorator66) : previous_status;
				(active_node = node_names.decorator67) & (previous_status = failure) : running;
				(active_node = node_names.decorator67) : previous_status;
				(active_node = node_names.decorator68) & (previous_status = failure) : running;
				(active_node = node_names.decorator68) : previous_status;
				(active_node = node_names.decorator69) & (previous_status = failure) : running;
				(active_node = node_names.decorator69) : previous_status;
				(active_node = node_names.decorator7) & (previous_status = failure) : running;
				(active_node = node_names.decorator7) : previous_status;
				(active_node = node_names.decorator8) & (previous_status = failure) : running;
				(active_node = node_names.decorator8) : previous_status;
				(active_node = node_names.decorator9) & (previous_status = failure) : running;
				(active_node = node_names.decorator9) : previous_status;
				(active_node = node_names.parallel1) & (next_child__parallel1 = -1) : parallel_status_depth__17;
				(active_node = node_names.parallel1) : invalid;
				(active_node = node_names.parallel13) & (next_child__parallel13 = -1) : parallel_status_depth__14;
				(active_node = node_names.parallel13) : invalid;
				(active_node = node_names.parallel17) & (next_child__parallel17 = -1) : parallel_status_depth__13;
				(active_node = node_names.parallel17) : invalid;
				(active_node = node_names.parallel21) & (next_child__parallel21 = -1) : parallel_status_depth__12;
				(active_node = node_names.parallel21) : invalid;
				(active_node = node_names.parallel25) & (next_child__parallel25 = -1) : parallel_status_depth__11;
				(active_node = node_names.parallel25) : invalid;
				(active_node = node_names.parallel29) & (next_child__parallel29 = -1) : parallel_status_depth__10;
				(active_node = node_names.parallel29) : invalid;
				(active_node = node_names.parallel33) & (next_child__parallel33 = -1) : parallel_status_depth__9;
				(active_node = node_names.parallel33) : invalid;
				(active_node = node_names.parallel37) & (next_child__parallel37 = -1) : parallel_status_depth__8;
				(active_node = node_names.parallel37) : invalid;
				(active_node = node_names.parallel41) & (next_child__parallel41 = -1) : parallel_status_depth__7;
				(active_node = node_names.parallel41) : invalid;
				(active_node = node_names.parallel45) & (next_child__parallel45 = -1) : parallel_status_depth__6;
				(active_node = node_names.parallel45) : invalid;
				(active_node = node_names.parallel49) & (next_child__parallel49 = -1) : parallel_status_depth__5;
				(active_node = node_names.parallel49) : invalid;
				(active_node = node_names.parallel5) & (next_child__parallel5 = -1) : parallel_status_depth__16;
				(active_node = node_names.parallel5) : invalid;
				(active_node = node_names.parallel53) & (next_child__parallel53 = -1) : parallel_status_depth__4;
				(active_node = node_names.parallel53) : invalid;
				(active_node = node_names.parallel57) & (next_child__parallel57 = -1) : parallel_status_depth__3;
				(active_node = node_names.parallel57) : invalid;
				(active_node = node_names.parallel61) & (next_child__parallel61 = -1) : parallel_status_depth__2;
				(active_node = node_names.parallel61) : invalid;
				(active_node = node_names.parallel65) & (next_child__parallel65 = -1) : parallel_status_depth__1;
				(active_node = node_names.parallel65) : invalid;
				(active_node = node_names.parallel69) & (next_child__parallel69 = -1) : parallel_status_depth__0;
				(active_node = node_names.parallel69) : invalid;
				(active_node = node_names.parallel9) & (next_child__parallel9 = -1) : parallel_status_depth__15;
				(active_node = node_names.parallel9) : invalid;
				(active_node = node_names.special_decorator) & (previous_status = running) : failure;
				(active_node = node_names.special_decorator) : previous_status;
				TRUE : invalid;
			esac;
		next(previous_status) := current_status;
		next(parallel_status_depth__17) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel1) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel1) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel1) & (current_status = success) : success;
				TRUE : parallel_status_depth__17;
			esac;
		next(parallel_status_depth__14) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel13) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel13) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel13) & (current_status = success) : success;
				TRUE : parallel_status_depth__14;
			esac;
		next(parallel_status_depth__13) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel17) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel17) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel17) & (current_status = success) : success;
				TRUE : parallel_status_depth__13;
			esac;
		next(parallel_status_depth__12) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel21) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel21) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel21) & (current_status = success) : success;
				TRUE : parallel_status_depth__12;
			esac;
		next(parallel_status_depth__11) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel25) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel25) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel25) & (current_status = success) : success;
				TRUE : parallel_status_depth__11;
			esac;
		next(parallel_status_depth__10) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel29) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel29) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel29) & (current_status = success) : success;
				TRUE : parallel_status_depth__10;
			esac;
		next(parallel_status_depth__9) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel33) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel33) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel33) & (current_status = success) : success;
				TRUE : parallel_status_depth__9;
			esac;
		next(parallel_status_depth__8) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel37) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel37) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel37) & (current_status = success) : success;
				TRUE : parallel_status_depth__8;
			esac;
		next(parallel_status_depth__7) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel41) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel41) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel41) & (current_status = success) : success;
				TRUE : parallel_status_depth__7;
			esac;
		next(parallel_status_depth__6) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel45) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel45) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel45) & (current_status = success) : success;
				TRUE : parallel_status_depth__6;
			esac;
		next(parallel_status_depth__5) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel49) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel49) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel49) & (current_status = success) : success;
				TRUE : parallel_status_depth__5;
			esac;
		next(parallel_status_depth__16) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel5) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel5) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel5) & (current_status = success) : success;
				TRUE : parallel_status_depth__16;
			esac;
		next(parallel_status_depth__4) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel53) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel53) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel53) & (current_status = success) : success;
				TRUE : parallel_status_depth__4;
			esac;
		next(parallel_status_depth__3) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel57) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel57) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel57) & (current_status = success) : success;
				TRUE : parallel_status_depth__3;
			esac;
		next(parallel_status_depth__2) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel61) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel61) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel61) & (current_status = success) : success;
				TRUE : parallel_status_depth__2;
			esac;
		next(parallel_status_depth__1) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel65) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel65) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel65) & (current_status = success) : success;
				TRUE : parallel_status_depth__1;
			esac;
		next(parallel_status_depth__0) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel69) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel69) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel69) & (current_status = success) : success;
				TRUE : parallel_status_depth__0;
			esac;
		next(parallel_status_depth__15) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parallel9) & (current_status = invalid) : running;
				(next(active_node) = node_names.parallel9) & (current_status = failure) : failure;
				(next(active_node) = node_names.parallel9) & (current_status = success) : success;
				TRUE : parallel_status_depth__15;
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) :=
			case
				(active_node = node_names.bigger_fish) & !(current_status = invalid) & (TRUE) : min((1 + var_biggest_fish), 199);
				TRUE : var_biggest_fish;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 70)));
CTLSPEC AF(AG((var_biggest_fish = 70)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel69 := 2;
		decorator66 := 3;
		biggest_fish_is66 := 4;
		decorator67 := 5;
		biggest_fish_is67 := 6;
		decorator68 := 7;
		biggest_fish_is68 := 8;
		decorator69 := 9;
		biggest_fish_is69 := 10;
		parallel65 := 11;
		decorator62 := 12;
		biggest_fish_is62 := 13;
		decorator63 := 14;
		biggest_fish_is63 := 15;
		decorator64 := 16;
		biggest_fish_is64 := 17;
		decorator65 := 18;
		biggest_fish_is65 := 19;
		parallel61 := 20;
		decorator58 := 21;
		biggest_fish_is58 := 22;
		decorator59 := 23;
		biggest_fish_is59 := 24;
		decorator60 := 25;
		biggest_fish_is60 := 26;
		decorator61 := 27;
		biggest_fish_is61 := 28;
		parallel57 := 29;
		decorator54 := 30;
		biggest_fish_is54 := 31;
		decorator55 := 32;
		biggest_fish_is55 := 33;
		decorator56 := 34;
		biggest_fish_is56 := 35;
		decorator57 := 36;
		biggest_fish_is57 := 37;
		parallel53 := 38;
		decorator50 := 39;
		biggest_fish_is50 := 40;
		decorator51 := 41;
		biggest_fish_is51 := 42;
		decorator52 := 43;
		biggest_fish_is52 := 44;
		decorator53 := 45;
		biggest_fish_is53 := 46;
		parallel49 := 47;
		decorator46 := 48;
		biggest_fish_is46 := 49;
		decorator47 := 50;
		biggest_fish_is47 := 51;
		decorator48 := 52;
		biggest_fish_is48 := 53;
		decorator49 := 54;
		biggest_fish_is49 := 55;
		parallel45 := 56;
		decorator42 := 57;
		biggest_fish_is42 := 58;
		decorator43 := 59;
		biggest_fish_is43 := 60;
		decorator44 := 61;
		biggest_fish_is44 := 62;
		decorator45 := 63;
		biggest_fish_is45 := 64;
		parallel41 := 65;
		decorator38 := 66;
		biggest_fish_is38 := 67;
		decorator39 := 68;
		biggest_fish_is39 := 69;
		decorator40 := 70;
		biggest_fish_is40 := 71;
		decorator41 := 72;
		biggest_fish_is41 := 73;
		parallel37 := 74;
		decorator34 := 75;
		biggest_fish_is34 := 76;
		decorator35 := 77;
		biggest_fish_is35 := 78;
		decorator36 := 79;
		biggest_fish_is36 := 80;
		decorator37 := 81;
		biggest_fish_is37 := 82;
		parallel33 := 83;
		decorator30 := 84;
		biggest_fish_is30 := 85;
		decorator31 := 86;
		biggest_fish_is31 := 87;
		decorator32 := 88;
		biggest_fish_is32 := 89;
		decorator33 := 90;
		biggest_fish_is33 := 91;
		parallel29 := 92;
		decorator26 := 93;
		biggest_fish_is26 := 94;
		decorator27 := 95;
		biggest_fish_is27 := 96;
		decorator28 := 97;
		biggest_fish_is28 := 98;
		decorator29 := 99;
		biggest_fish_is29 := 100;
		parallel25 := 101;
		decorator22 := 102;
		biggest_fish_is22 := 103;
		decorator23 := 104;
		biggest_fish_is23 := 105;
		decorator24 := 106;
		biggest_fish_is24 := 107;
		decorator25 := 108;
		biggest_fish_is25 := 109;
		parallel21 := 110;
		decorator18 := 111;
		biggest_fish_is18 := 112;
		decorator19 := 113;
		biggest_fish_is19 := 114;
		decorator20 := 115;
		biggest_fish_is20 := 116;
		decorator21 := 117;
		biggest_fish_is21 := 118;
		parallel17 := 119;
		decorator14 := 120;
		biggest_fish_is14 := 121;
		decorator15 := 122;
		biggest_fish_is15 := 123;
		decorator16 := 124;
		biggest_fish_is16 := 125;
		decorator17 := 126;
		biggest_fish_is17 := 127;
		parallel13 := 128;
		decorator10 := 129;
		biggest_fish_is10 := 130;
		decorator11 := 131;
		biggest_fish_is11 := 132;
		decorator12 := 133;
		biggest_fish_is12 := 134;
		decorator13 := 135;
		biggest_fish_is13 := 136;
		parallel9 := 137;
		decorator6 := 138;
		biggest_fish_is6 := 139;
		decorator7 := 140;
		biggest_fish_is7 := 141;
		decorator8 := 142;
		biggest_fish_is8 := 143;
		decorator9 := 144;
		biggest_fish_is9 := 145;
		parallel5 := 146;
		decorator2 := 147;
		biggest_fish_is2 := 148;
		decorator3 := 149;
		biggest_fish_is3 := 150;
		decorator4 := 151;
		biggest_fish_is4 := 152;
		decorator5 := 153;
		biggest_fish_is5 := 154;
		parallel1 := 155;
		decorator0 := 156;
		biggest_fish_is0 := 157;
		decorator1 := 158;
		biggest_fish_is1 := 159;
		bigger_fish := 160;
