MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__biggest_fish_sequence := -3;
		resume_from_here_in_subtree__decorator142 := -3;
		resume_from_here_in_subtree__decorator143 := -3;
		resume_from_here_in_subtree__decorator144 := -3;
		resume_from_here_in_subtree__decorator145 := -3;
		resume_from_here_in_subtree__parallel141 := -3;
		resume_from_here_in_subtree__decorator138 := -3;
		resume_from_here_in_subtree__decorator139 := -3;
		resume_from_here_in_subtree__decorator140 := -3;
		resume_from_here_in_subtree__decorator141 := -3;
		resume_from_here_in_subtree__parallel137 := -3;
		resume_from_here_in_subtree__decorator134 := -3;
		resume_from_here_in_subtree__decorator135 := -3;
		resume_from_here_in_subtree__decorator136 := -3;
		resume_from_here_in_subtree__decorator137 := -3;
		resume_from_here_in_subtree__parallel133 := -3;
		resume_from_here_in_subtree__decorator130 := -3;
		resume_from_here_in_subtree__decorator131 := -3;
		resume_from_here_in_subtree__decorator132 := -3;
		resume_from_here_in_subtree__decorator133 := -3;
		resume_from_here_in_subtree__parallel129 := -3;
		resume_from_here_in_subtree__decorator126 := -3;
		resume_from_here_in_subtree__decorator127 := -3;
		resume_from_here_in_subtree__decorator128 := -3;
		resume_from_here_in_subtree__decorator129 := -3;
		resume_from_here_in_subtree__parallel125 := -3;
		resume_from_here_in_subtree__decorator122 := -3;
		resume_from_here_in_subtree__decorator123 := -3;
		resume_from_here_in_subtree__decorator124 := -3;
		resume_from_here_in_subtree__decorator125 := -3;
		resume_from_here_in_subtree__parallel121 := -3;
		resume_from_here_in_subtree__decorator118 := -3;
		resume_from_here_in_subtree__decorator119 := -3;
		resume_from_here_in_subtree__decorator120 := -3;
		resume_from_here_in_subtree__decorator121 := -3;
		resume_from_here_in_subtree__parallel117 := -3;
		resume_from_here_in_subtree__decorator114 := -3;
		resume_from_here_in_subtree__decorator115 := -3;
		resume_from_here_in_subtree__decorator116 := -3;
		resume_from_here_in_subtree__decorator117 := -3;
		resume_from_here_in_subtree__parallel113 := -3;
		resume_from_here_in_subtree__decorator110 := -3;
		resume_from_here_in_subtree__decorator111 := -3;
		resume_from_here_in_subtree__decorator112 := -3;
		resume_from_here_in_subtree__decorator113 := -3;
		resume_from_here_in_subtree__parallel109 := -3;
		resume_from_here_in_subtree__decorator106 := -3;
		resume_from_here_in_subtree__decorator107 := -3;
		resume_from_here_in_subtree__decorator108 := -3;
		resume_from_here_in_subtree__decorator109 := -3;
		resume_from_here_in_subtree__parallel105 := -3;
		resume_from_here_in_subtree__decorator102 := -3;
		resume_from_here_in_subtree__decorator103 := -3;
		resume_from_here_in_subtree__decorator104 := -3;
		resume_from_here_in_subtree__decorator105 := -3;
		resume_from_here_in_subtree__parallel101 := -3;
		resume_from_here_in_subtree__decorator98 := -3;
		resume_from_here_in_subtree__decorator99 := -3;
		resume_from_here_in_subtree__decorator100 := -3;
		resume_from_here_in_subtree__decorator101 := -3;
		resume_from_here_in_subtree__parallel97 := -3;
		resume_from_here_in_subtree__decorator94 := -3;
		resume_from_here_in_subtree__decorator95 := -3;
		resume_from_here_in_subtree__decorator96 := -3;
		resume_from_here_in_subtree__decorator97 := -3;
		resume_from_here_in_subtree__parallel93 := -3;
		resume_from_here_in_subtree__decorator90 := -3;
		resume_from_here_in_subtree__decorator91 := -3;
		resume_from_here_in_subtree__decorator92 := -3;
		resume_from_here_in_subtree__decorator93 := -3;
		resume_from_here_in_subtree__parallel89 := -3;
		resume_from_here_in_subtree__decorator86 := -3;
		resume_from_here_in_subtree__decorator87 := -3;
		resume_from_here_in_subtree__decorator88 := -3;
		resume_from_here_in_subtree__decorator89 := -3;
		resume_from_here_in_subtree__parallel85 := -3;
		resume_from_here_in_subtree__decorator82 := -3;
		resume_from_here_in_subtree__decorator83 := -3;
		resume_from_here_in_subtree__decorator84 := -3;
		resume_from_here_in_subtree__decorator85 := -3;
		resume_from_here_in_subtree__parallel81 := -3;
		resume_from_here_in_subtree__decorator78 := -3;
		resume_from_here_in_subtree__decorator79 := -3;
		resume_from_here_in_subtree__decorator80 := -3;
		resume_from_here_in_subtree__decorator81 := -3;
		resume_from_here_in_subtree__parallel77 := -3;
		resume_from_here_in_subtree__decorator74 := -3;
		resume_from_here_in_subtree__decorator75 := -3;
		resume_from_here_in_subtree__decorator76 := -3;
		resume_from_here_in_subtree__decorator77 := -3;
		resume_from_here_in_subtree__parallel73 := -3;
		resume_from_here_in_subtree__decorator70 := -3;
		resume_from_here_in_subtree__decorator71 := -3;
		resume_from_here_in_subtree__decorator72 := -3;
		resume_from_here_in_subtree__decorator73 := -3;
		resume_from_here_in_subtree__parallel69 := -3;
		resume_from_here_in_subtree__decorator66 := -3;
		resume_from_here_in_subtree__decorator67 := -3;
		resume_from_here_in_subtree__decorator68 := -3;
		resume_from_here_in_subtree__decorator69 := -3;
		resume_from_here_in_subtree__parallel65 := -3;
		resume_from_here_in_subtree__decorator62 := -3;
		resume_from_here_in_subtree__decorator63 := -3;
		resume_from_here_in_subtree__decorator64 := -3;
		resume_from_here_in_subtree__decorator65 := -3;
		resume_from_here_in_subtree__parallel61 := -3;
		resume_from_here_in_subtree__decorator58 := -3;
		resume_from_here_in_subtree__decorator59 := -3;
		resume_from_here_in_subtree__decorator60 := -3;
		resume_from_here_in_subtree__decorator61 := -3;
		resume_from_here_in_subtree__parallel57 := -3;
		resume_from_here_in_subtree__decorator54 := -3;
		resume_from_here_in_subtree__decorator55 := -3;
		resume_from_here_in_subtree__decorator56 := -3;
		resume_from_here_in_subtree__decorator57 := -3;
		resume_from_here_in_subtree__parallel53 := -3;
		resume_from_here_in_subtree__decorator50 := -3;
		resume_from_here_in_subtree__decorator51 := -3;
		resume_from_here_in_subtree__decorator52 := -3;
		resume_from_here_in_subtree__decorator53 := -3;
		resume_from_here_in_subtree__parallel49 := -3;
		resume_from_here_in_subtree__decorator46 := -3;
		resume_from_here_in_subtree__decorator47 := -3;
		resume_from_here_in_subtree__decorator48 := -3;
		resume_from_here_in_subtree__decorator49 := -3;
		resume_from_here_in_subtree__parallel45 := -3;
		resume_from_here_in_subtree__decorator42 := -3;
		resume_from_here_in_subtree__decorator43 := -3;
		resume_from_here_in_subtree__decorator44 := -3;
		resume_from_here_in_subtree__decorator45 := -3;
		resume_from_here_in_subtree__parallel41 := -3;
		resume_from_here_in_subtree__decorator38 := -3;
		resume_from_here_in_subtree__decorator39 := -3;
		resume_from_here_in_subtree__decorator40 := -3;
		resume_from_here_in_subtree__decorator41 := -3;
		resume_from_here_in_subtree__parallel37 := -3;
		resume_from_here_in_subtree__decorator34 := -3;
		resume_from_here_in_subtree__decorator35 := -3;
		resume_from_here_in_subtree__decorator36 := -3;
		resume_from_here_in_subtree__decorator37 := -3;
		resume_from_here_in_subtree__parallel33 := -3;
		resume_from_here_in_subtree__decorator30 := -3;
		resume_from_here_in_subtree__decorator31 := -3;
		resume_from_here_in_subtree__decorator32 := -3;
		resume_from_here_in_subtree__decorator33 := -3;
		resume_from_here_in_subtree__parallel29 := -3;
		resume_from_here_in_subtree__decorator26 := -3;
		resume_from_here_in_subtree__decorator27 := -3;
		resume_from_here_in_subtree__decorator28 := -3;
		resume_from_here_in_subtree__decorator29 := -3;
		resume_from_here_in_subtree__parallel25 := -3;
		resume_from_here_in_subtree__decorator22 := -3;
		resume_from_here_in_subtree__decorator23 := -3;
		resume_from_here_in_subtree__decorator24 := -3;
		resume_from_here_in_subtree__decorator25 := -3;
		resume_from_here_in_subtree__parallel21 := -3;
		resume_from_here_in_subtree__decorator18 := -3;
		resume_from_here_in_subtree__decorator19 := -3;
		resume_from_here_in_subtree__decorator20 := -3;
		resume_from_here_in_subtree__decorator21 := -3;
		resume_from_here_in_subtree__parallel17 := -3;
		resume_from_here_in_subtree__decorator14 := -3;
		resume_from_here_in_subtree__decorator15 := -3;
		resume_from_here_in_subtree__decorator16 := -3;
		resume_from_here_in_subtree__decorator17 := -3;
		resume_from_here_in_subtree__parallel13 := -3;
		resume_from_here_in_subtree__decorator10 := -3;
		resume_from_here_in_subtree__decorator11 := -3;
		resume_from_here_in_subtree__decorator12 := -3;
		resume_from_here_in_subtree__decorator13 := -3;
		resume_from_here_in_subtree__parallel9 := -3;
		resume_from_here_in_subtree__decorator6 := -3;
		resume_from_here_in_subtree__decorator7 := -3;
		resume_from_here_in_subtree__decorator8 := -3;
		resume_from_here_in_subtree__decorator9 := -3;
		resume_from_here_in_subtree__parallel5 := -3;
		resume_from_here_in_subtree__decorator2 := -3;
		resume_from_here_in_subtree__decorator3 := -3;
		resume_from_here_in_subtree__decorator4 := -3;
		resume_from_here_in_subtree__decorator5 := -3;
		resume_from_here_in_subtree__parallel1 := -3;
		resume_from_here_in_subtree__decorator0 := -3;
		resume_from_here_in_subtree__decorator1 := -3;
		biggest_fish_sequence.active := TRUE;
		parallel1.status := parallel1.active ? parallel1.internal_status : invalid;
		parallel1.internal_status := 
			case
				count(decorator0.internal_status = failure, decorator1.internal_status = failure) >= 1 : failure;
				count(decorator0.internal_status = success, decorator1.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel101.status := parallel101.active ? parallel101.internal_status : invalid;
		parallel101.internal_status := 
			case
				count(decorator98.internal_status = failure, decorator99.internal_status = failure, decorator100.internal_status = failure, decorator101.internal_status = failure, parallel97.internal_status = failure) >= 1 : failure;
				count(decorator98.internal_status = success, decorator99.internal_status = success, decorator100.internal_status = success, decorator101.internal_status = success, parallel97.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel105.status := parallel105.active ? parallel105.internal_status : invalid;
		parallel105.internal_status := 
			case
				count(decorator102.internal_status = failure, decorator103.internal_status = failure, decorator104.internal_status = failure, decorator105.internal_status = failure, parallel101.internal_status = failure) >= 1 : failure;
				count(decorator102.internal_status = success, decorator103.internal_status = success, decorator104.internal_status = success, decorator105.internal_status = success, parallel101.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel109.status := parallel109.active ? parallel109.internal_status : invalid;
		parallel109.internal_status := 
			case
				count(decorator106.internal_status = failure, decorator107.internal_status = failure, decorator108.internal_status = failure, decorator109.internal_status = failure, parallel105.internal_status = failure) >= 1 : failure;
				count(decorator106.internal_status = success, decorator107.internal_status = success, decorator108.internal_status = success, decorator109.internal_status = success, parallel105.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel113.status := parallel113.active ? parallel113.internal_status : invalid;
		parallel113.internal_status := 
			case
				count(decorator110.internal_status = failure, decorator111.internal_status = failure, decorator112.internal_status = failure, decorator113.internal_status = failure, parallel109.internal_status = failure) >= 1 : failure;
				count(decorator110.internal_status = success, decorator111.internal_status = success, decorator112.internal_status = success, decorator113.internal_status = success, parallel109.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel117.status := parallel117.active ? parallel117.internal_status : invalid;
		parallel117.internal_status := 
			case
				count(decorator114.internal_status = failure, decorator115.internal_status = failure, decorator116.internal_status = failure, decorator117.internal_status = failure, parallel113.internal_status = failure) >= 1 : failure;
				count(decorator114.internal_status = success, decorator115.internal_status = success, decorator116.internal_status = success, decorator117.internal_status = success, parallel113.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel121.status := parallel121.active ? parallel121.internal_status : invalid;
		parallel121.internal_status := 
			case
				count(decorator118.internal_status = failure, decorator119.internal_status = failure, decorator120.internal_status = failure, decorator121.internal_status = failure, parallel117.internal_status = failure) >= 1 : failure;
				count(decorator118.internal_status = success, decorator119.internal_status = success, decorator120.internal_status = success, decorator121.internal_status = success, parallel117.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel125.status := parallel125.active ? parallel125.internal_status : invalid;
		parallel125.internal_status := 
			case
				count(decorator122.internal_status = failure, decorator123.internal_status = failure, decorator124.internal_status = failure, decorator125.internal_status = failure, parallel121.internal_status = failure) >= 1 : failure;
				count(decorator122.internal_status = success, decorator123.internal_status = success, decorator124.internal_status = success, decorator125.internal_status = success, parallel121.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel129.status := parallel129.active ? parallel129.internal_status : invalid;
		parallel129.internal_status := 
			case
				count(decorator126.internal_status = failure, decorator127.internal_status = failure, decorator128.internal_status = failure, decorator129.internal_status = failure, parallel125.internal_status = failure) >= 1 : failure;
				count(decorator126.internal_status = success, decorator127.internal_status = success, decorator128.internal_status = success, decorator129.internal_status = success, parallel125.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel13.status := parallel13.active ? parallel13.internal_status : invalid;
		parallel13.internal_status := 
			case
				count(decorator10.internal_status = failure, decorator11.internal_status = failure, decorator12.internal_status = failure, decorator13.internal_status = failure, parallel9.internal_status = failure) >= 1 : failure;
				count(decorator10.internal_status = success, decorator11.internal_status = success, decorator12.internal_status = success, decorator13.internal_status = success, parallel9.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel133.status := parallel133.active ? parallel133.internal_status : invalid;
		parallel133.internal_status := 
			case
				count(decorator130.internal_status = failure, decorator131.internal_status = failure, decorator132.internal_status = failure, decorator133.internal_status = failure, parallel129.internal_status = failure) >= 1 : failure;
				count(decorator130.internal_status = success, decorator131.internal_status = success, decorator132.internal_status = success, decorator133.internal_status = success, parallel129.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel137.status := parallel137.active ? parallel137.internal_status : invalid;
		parallel137.internal_status := 
			case
				count(decorator134.internal_status = failure, decorator135.internal_status = failure, decorator136.internal_status = failure, decorator137.internal_status = failure, parallel133.internal_status = failure) >= 1 : failure;
				count(decorator134.internal_status = success, decorator135.internal_status = success, decorator136.internal_status = success, decorator137.internal_status = success, parallel133.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel141.status := parallel141.active ? parallel141.internal_status : invalid;
		parallel141.internal_status := 
			case
				count(decorator138.internal_status = failure, decorator139.internal_status = failure, decorator140.internal_status = failure, decorator141.internal_status = failure, parallel137.internal_status = failure) >= 1 : failure;
				count(decorator138.internal_status = success, decorator139.internal_status = success, decorator140.internal_status = success, decorator141.internal_status = success, parallel137.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel145.status := parallel145.active ? parallel145.internal_status : invalid;
		parallel145.internal_status := 
			case
				count(decorator142.internal_status = failure, decorator143.internal_status = failure, decorator144.internal_status = failure, decorator145.internal_status = failure, parallel141.internal_status = failure) >= 1 : failure;
				count(decorator142.internal_status = success, decorator143.internal_status = success, decorator144.internal_status = success, decorator145.internal_status = success, parallel141.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel17.status := parallel17.active ? parallel17.internal_status : invalid;
		parallel17.internal_status := 
			case
				count(decorator14.internal_status = failure, decorator15.internal_status = failure, decorator16.internal_status = failure, decorator17.internal_status = failure, parallel13.internal_status = failure) >= 1 : failure;
				count(decorator14.internal_status = success, decorator15.internal_status = success, decorator16.internal_status = success, decorator17.internal_status = success, parallel13.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel21.status := parallel21.active ? parallel21.internal_status : invalid;
		parallel21.internal_status := 
			case
				count(decorator18.internal_status = failure, decorator19.internal_status = failure, decorator20.internal_status = failure, decorator21.internal_status = failure, parallel17.internal_status = failure) >= 1 : failure;
				count(decorator18.internal_status = success, decorator19.internal_status = success, decorator20.internal_status = success, decorator21.internal_status = success, parallel17.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel25.status := parallel25.active ? parallel25.internal_status : invalid;
		parallel25.internal_status := 
			case
				count(decorator22.internal_status = failure, decorator23.internal_status = failure, decorator24.internal_status = failure, decorator25.internal_status = failure, parallel21.internal_status = failure) >= 1 : failure;
				count(decorator22.internal_status = success, decorator23.internal_status = success, decorator24.internal_status = success, decorator25.internal_status = success, parallel21.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel29.status := parallel29.active ? parallel29.internal_status : invalid;
		parallel29.internal_status := 
			case
				count(decorator26.internal_status = failure, decorator27.internal_status = failure, decorator28.internal_status = failure, decorator29.internal_status = failure, parallel25.internal_status = failure) >= 1 : failure;
				count(decorator26.internal_status = success, decorator27.internal_status = success, decorator28.internal_status = success, decorator29.internal_status = success, parallel25.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel33.status := parallel33.active ? parallel33.internal_status : invalid;
		parallel33.internal_status := 
			case
				count(decorator30.internal_status = failure, decorator31.internal_status = failure, decorator32.internal_status = failure, decorator33.internal_status = failure, parallel29.internal_status = failure) >= 1 : failure;
				count(decorator30.internal_status = success, decorator31.internal_status = success, decorator32.internal_status = success, decorator33.internal_status = success, parallel29.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel37.status := parallel37.active ? parallel37.internal_status : invalid;
		parallel37.internal_status := 
			case
				count(decorator34.internal_status = failure, decorator35.internal_status = failure, decorator36.internal_status = failure, decorator37.internal_status = failure, parallel33.internal_status = failure) >= 1 : failure;
				count(decorator34.internal_status = success, decorator35.internal_status = success, decorator36.internal_status = success, decorator37.internal_status = success, parallel33.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel41.status := parallel41.active ? parallel41.internal_status : invalid;
		parallel41.internal_status := 
			case
				count(decorator38.internal_status = failure, decorator39.internal_status = failure, decorator40.internal_status = failure, decorator41.internal_status = failure, parallel37.internal_status = failure) >= 1 : failure;
				count(decorator38.internal_status = success, decorator39.internal_status = success, decorator40.internal_status = success, decorator41.internal_status = success, parallel37.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel45.status := parallel45.active ? parallel45.internal_status : invalid;
		parallel45.internal_status := 
			case
				count(decorator42.internal_status = failure, decorator43.internal_status = failure, decorator44.internal_status = failure, decorator45.internal_status = failure, parallel41.internal_status = failure) >= 1 : failure;
				count(decorator42.internal_status = success, decorator43.internal_status = success, decorator44.internal_status = success, decorator45.internal_status = success, parallel41.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel49.status := parallel49.active ? parallel49.internal_status : invalid;
		parallel49.internal_status := 
			case
				count(decorator46.internal_status = failure, decorator47.internal_status = failure, decorator48.internal_status = failure, decorator49.internal_status = failure, parallel45.internal_status = failure) >= 1 : failure;
				count(decorator46.internal_status = success, decorator47.internal_status = success, decorator48.internal_status = success, decorator49.internal_status = success, parallel45.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel5.status := parallel5.active ? parallel5.internal_status : invalid;
		parallel5.internal_status := 
			case
				count(decorator2.internal_status = failure, decorator3.internal_status = failure, decorator4.internal_status = failure, decorator5.internal_status = failure, parallel1.internal_status = failure) >= 1 : failure;
				count(decorator2.internal_status = success, decorator3.internal_status = success, decorator4.internal_status = success, decorator5.internal_status = success, parallel1.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel53.status := parallel53.active ? parallel53.internal_status : invalid;
		parallel53.internal_status := 
			case
				count(decorator50.internal_status = failure, decorator51.internal_status = failure, decorator52.internal_status = failure, decorator53.internal_status = failure, parallel49.internal_status = failure) >= 1 : failure;
				count(decorator50.internal_status = success, decorator51.internal_status = success, decorator52.internal_status = success, decorator53.internal_status = success, parallel49.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel57.status := parallel57.active ? parallel57.internal_status : invalid;
		parallel57.internal_status := 
			case
				count(decorator54.internal_status = failure, decorator55.internal_status = failure, decorator56.internal_status = failure, decorator57.internal_status = failure, parallel53.internal_status = failure) >= 1 : failure;
				count(decorator54.internal_status = success, decorator55.internal_status = success, decorator56.internal_status = success, decorator57.internal_status = success, parallel53.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel61.status := parallel61.active ? parallel61.internal_status : invalid;
		parallel61.internal_status := 
			case
				count(decorator58.internal_status = failure, decorator59.internal_status = failure, decorator60.internal_status = failure, decorator61.internal_status = failure, parallel57.internal_status = failure) >= 1 : failure;
				count(decorator58.internal_status = success, decorator59.internal_status = success, decorator60.internal_status = success, decorator61.internal_status = success, parallel57.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel65.status := parallel65.active ? parallel65.internal_status : invalid;
		parallel65.internal_status := 
			case
				count(decorator62.internal_status = failure, decorator63.internal_status = failure, decorator64.internal_status = failure, decorator65.internal_status = failure, parallel61.internal_status = failure) >= 1 : failure;
				count(decorator62.internal_status = success, decorator63.internal_status = success, decorator64.internal_status = success, decorator65.internal_status = success, parallel61.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel69.status := parallel69.active ? parallel69.internal_status : invalid;
		parallel69.internal_status := 
			case
				count(decorator66.internal_status = failure, decorator67.internal_status = failure, decorator68.internal_status = failure, decorator69.internal_status = failure, parallel65.internal_status = failure) >= 1 : failure;
				count(decorator66.internal_status = success, decorator67.internal_status = success, decorator68.internal_status = success, decorator69.internal_status = success, parallel65.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel73.status := parallel73.active ? parallel73.internal_status : invalid;
		parallel73.internal_status := 
			case
				count(decorator70.internal_status = failure, decorator71.internal_status = failure, decorator72.internal_status = failure, decorator73.internal_status = failure, parallel69.internal_status = failure) >= 1 : failure;
				count(decorator70.internal_status = success, decorator71.internal_status = success, decorator72.internal_status = success, decorator73.internal_status = success, parallel69.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel77.status := parallel77.active ? parallel77.internal_status : invalid;
		parallel77.internal_status := 
			case
				count(decorator74.internal_status = failure, decorator75.internal_status = failure, decorator76.internal_status = failure, decorator77.internal_status = failure, parallel73.internal_status = failure) >= 1 : failure;
				count(decorator74.internal_status = success, decorator75.internal_status = success, decorator76.internal_status = success, decorator77.internal_status = success, parallel73.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel81.status := parallel81.active ? parallel81.internal_status : invalid;
		parallel81.internal_status := 
			case
				count(decorator78.internal_status = failure, decorator79.internal_status = failure, decorator80.internal_status = failure, decorator81.internal_status = failure, parallel77.internal_status = failure) >= 1 : failure;
				count(decorator78.internal_status = success, decorator79.internal_status = success, decorator80.internal_status = success, decorator81.internal_status = success, parallel77.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel85.status := parallel85.active ? parallel85.internal_status : invalid;
		parallel85.internal_status := 
			case
				count(decorator82.internal_status = failure, decorator83.internal_status = failure, decorator84.internal_status = failure, decorator85.internal_status = failure, parallel81.internal_status = failure) >= 1 : failure;
				count(decorator82.internal_status = success, decorator83.internal_status = success, decorator84.internal_status = success, decorator85.internal_status = success, parallel81.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel89.status := parallel89.active ? parallel89.internal_status : invalid;
		parallel89.internal_status := 
			case
				count(decorator86.internal_status = failure, decorator87.internal_status = failure, decorator88.internal_status = failure, decorator89.internal_status = failure, parallel85.internal_status = failure) >= 1 : failure;
				count(decorator86.internal_status = success, decorator87.internal_status = success, decorator88.internal_status = success, decorator89.internal_status = success, parallel85.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel9.status := parallel9.active ? parallel9.internal_status : invalid;
		parallel9.internal_status := 
			case
				count(decorator6.internal_status = failure, decorator7.internal_status = failure, decorator8.internal_status = failure, decorator9.internal_status = failure, parallel5.internal_status = failure) >= 1 : failure;
				count(decorator6.internal_status = success, decorator7.internal_status = success, decorator8.internal_status = success, decorator9.internal_status = success, parallel5.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel93.status := parallel93.active ? parallel93.internal_status : invalid;
		parallel93.internal_status := 
			case
				count(decorator90.internal_status = failure, decorator91.internal_status = failure, decorator92.internal_status = failure, decorator93.internal_status = failure, parallel89.internal_status = failure) >= 1 : failure;
				count(decorator90.internal_status = success, decorator91.internal_status = success, decorator92.internal_status = success, decorator93.internal_status = success, parallel89.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		parallel97.status := parallel97.active ? parallel97.internal_status : invalid;
		parallel97.internal_status := 
			case
				count(decorator94.internal_status = failure, decorator95.internal_status = failure, decorator96.internal_status = failure, decorator97.internal_status = failure, parallel93.internal_status = failure) >= 1 : failure;
				count(decorator94.internal_status = success, decorator95.internal_status = success, decorator96.internal_status = success, decorator97.internal_status = success, parallel93.internal_status = success) >= 1 : success;
				TRUE : running;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		var_biggest_fish_stage_1 := 
			case
				!(bigger_fish.active) : var_biggest_fish;
				TRUE : min((1 + var_biggest_fish), 199);
			esac;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		bigger_fish : success_DEFAULT_module;
		biggest_fish_is0 : biggest_fish_is0_module(var_biggest_fish);
		biggest_fish_is1 : biggest_fish_is1_module(var_biggest_fish);
		biggest_fish_is10 : biggest_fish_is10_module(var_biggest_fish);
		biggest_fish_is100 : biggest_fish_is100_module(var_biggest_fish);
		biggest_fish_is101 : biggest_fish_is101_module(var_biggest_fish);
		biggest_fish_is102 : biggest_fish_is102_module(var_biggest_fish);
		biggest_fish_is103 : biggest_fish_is103_module(var_biggest_fish);
		biggest_fish_is104 : biggest_fish_is104_module(var_biggest_fish);
		biggest_fish_is105 : biggest_fish_is105_module(var_biggest_fish);
		biggest_fish_is106 : biggest_fish_is106_module(var_biggest_fish);
		biggest_fish_is107 : biggest_fish_is107_module(var_biggest_fish);
		biggest_fish_is108 : biggest_fish_is108_module(var_biggest_fish);
		biggest_fish_is109 : biggest_fish_is109_module(var_biggest_fish);
		biggest_fish_is11 : biggest_fish_is11_module(var_biggest_fish);
		biggest_fish_is110 : biggest_fish_is110_module(var_biggest_fish);
		biggest_fish_is111 : biggest_fish_is111_module(var_biggest_fish);
		biggest_fish_is112 : biggest_fish_is112_module(var_biggest_fish);
		biggest_fish_is113 : biggest_fish_is113_module(var_biggest_fish);
		biggest_fish_is114 : biggest_fish_is114_module(var_biggest_fish);
		biggest_fish_is115 : biggest_fish_is115_module(var_biggest_fish);
		biggest_fish_is116 : biggest_fish_is116_module(var_biggest_fish);
		biggest_fish_is117 : biggest_fish_is117_module(var_biggest_fish);
		biggest_fish_is118 : biggest_fish_is118_module(var_biggest_fish);
		biggest_fish_is119 : biggest_fish_is119_module(var_biggest_fish);
		biggest_fish_is12 : biggest_fish_is12_module(var_biggest_fish);
		biggest_fish_is120 : biggest_fish_is120_module(var_biggest_fish);
		biggest_fish_is121 : biggest_fish_is121_module(var_biggest_fish);
		biggest_fish_is122 : biggest_fish_is122_module(var_biggest_fish);
		biggest_fish_is123 : biggest_fish_is123_module(var_biggest_fish);
		biggest_fish_is124 : biggest_fish_is124_module(var_biggest_fish);
		biggest_fish_is125 : biggest_fish_is125_module(var_biggest_fish);
		biggest_fish_is126 : biggest_fish_is126_module(var_biggest_fish);
		biggest_fish_is127 : biggest_fish_is127_module(var_biggest_fish);
		biggest_fish_is128 : biggest_fish_is128_module(var_biggest_fish);
		biggest_fish_is129 : biggest_fish_is129_module(var_biggest_fish);
		biggest_fish_is13 : biggest_fish_is13_module(var_biggest_fish);
		biggest_fish_is130 : biggest_fish_is130_module(var_biggest_fish);
		biggest_fish_is131 : biggest_fish_is131_module(var_biggest_fish);
		biggest_fish_is132 : biggest_fish_is132_module(var_biggest_fish);
		biggest_fish_is133 : biggest_fish_is133_module(var_biggest_fish);
		biggest_fish_is134 : biggest_fish_is134_module(var_biggest_fish);
		biggest_fish_is135 : biggest_fish_is135_module(var_biggest_fish);
		biggest_fish_is136 : biggest_fish_is136_module(var_biggest_fish);
		biggest_fish_is137 : biggest_fish_is137_module(var_biggest_fish);
		biggest_fish_is138 : biggest_fish_is138_module(var_biggest_fish);
		biggest_fish_is139 : biggest_fish_is139_module(var_biggest_fish);
		biggest_fish_is14 : biggest_fish_is14_module(var_biggest_fish);
		biggest_fish_is140 : biggest_fish_is140_module(var_biggest_fish);
		biggest_fish_is141 : biggest_fish_is141_module(var_biggest_fish);
		biggest_fish_is142 : biggest_fish_is142_module(var_biggest_fish);
		biggest_fish_is143 : biggest_fish_is143_module(var_biggest_fish);
		biggest_fish_is144 : biggest_fish_is144_module(var_biggest_fish);
		biggest_fish_is145 : biggest_fish_is145_module(var_biggest_fish);
		biggest_fish_is15 : biggest_fish_is15_module(var_biggest_fish);
		biggest_fish_is16 : biggest_fish_is16_module(var_biggest_fish);
		biggest_fish_is17 : biggest_fish_is17_module(var_biggest_fish);
		biggest_fish_is18 : biggest_fish_is18_module(var_biggest_fish);
		biggest_fish_is19 : biggest_fish_is19_module(var_biggest_fish);
		biggest_fish_is2 : biggest_fish_is2_module(var_biggest_fish);
		biggest_fish_is20 : biggest_fish_is20_module(var_biggest_fish);
		biggest_fish_is21 : biggest_fish_is21_module(var_biggest_fish);
		biggest_fish_is22 : biggest_fish_is22_module(var_biggest_fish);
		biggest_fish_is23 : biggest_fish_is23_module(var_biggest_fish);
		biggest_fish_is24 : biggest_fish_is24_module(var_biggest_fish);
		biggest_fish_is25 : biggest_fish_is25_module(var_biggest_fish);
		biggest_fish_is26 : biggest_fish_is26_module(var_biggest_fish);
		biggest_fish_is27 : biggest_fish_is27_module(var_biggest_fish);
		biggest_fish_is28 : biggest_fish_is28_module(var_biggest_fish);
		biggest_fish_is29 : biggest_fish_is29_module(var_biggest_fish);
		biggest_fish_is3 : biggest_fish_is3_module(var_biggest_fish);
		biggest_fish_is30 : biggest_fish_is30_module(var_biggest_fish);
		biggest_fish_is31 : biggest_fish_is31_module(var_biggest_fish);
		biggest_fish_is32 : biggest_fish_is32_module(var_biggest_fish);
		biggest_fish_is33 : biggest_fish_is33_module(var_biggest_fish);
		biggest_fish_is34 : biggest_fish_is34_module(var_biggest_fish);
		biggest_fish_is35 : biggest_fish_is35_module(var_biggest_fish);
		biggest_fish_is36 : biggest_fish_is36_module(var_biggest_fish);
		biggest_fish_is37 : biggest_fish_is37_module(var_biggest_fish);
		biggest_fish_is38 : biggest_fish_is38_module(var_biggest_fish);
		biggest_fish_is39 : biggest_fish_is39_module(var_biggest_fish);
		biggest_fish_is4 : biggest_fish_is4_module(var_biggest_fish);
		biggest_fish_is40 : biggest_fish_is40_module(var_biggest_fish);
		biggest_fish_is41 : biggest_fish_is41_module(var_biggest_fish);
		biggest_fish_is42 : biggest_fish_is42_module(var_biggest_fish);
		biggest_fish_is43 : biggest_fish_is43_module(var_biggest_fish);
		biggest_fish_is44 : biggest_fish_is44_module(var_biggest_fish);
		biggest_fish_is45 : biggest_fish_is45_module(var_biggest_fish);
		biggest_fish_is46 : biggest_fish_is46_module(var_biggest_fish);
		biggest_fish_is47 : biggest_fish_is47_module(var_biggest_fish);
		biggest_fish_is48 : biggest_fish_is48_module(var_biggest_fish);
		biggest_fish_is49 : biggest_fish_is49_module(var_biggest_fish);
		biggest_fish_is5 : biggest_fish_is5_module(var_biggest_fish);
		biggest_fish_is50 : biggest_fish_is50_module(var_biggest_fish);
		biggest_fish_is51 : biggest_fish_is51_module(var_biggest_fish);
		biggest_fish_is52 : biggest_fish_is52_module(var_biggest_fish);
		biggest_fish_is53 : biggest_fish_is53_module(var_biggest_fish);
		biggest_fish_is54 : biggest_fish_is54_module(var_biggest_fish);
		biggest_fish_is55 : biggest_fish_is55_module(var_biggest_fish);
		biggest_fish_is56 : biggest_fish_is56_module(var_biggest_fish);
		biggest_fish_is57 : biggest_fish_is57_module(var_biggest_fish);
		biggest_fish_is58 : biggest_fish_is58_module(var_biggest_fish);
		biggest_fish_is59 : biggest_fish_is59_module(var_biggest_fish);
		biggest_fish_is6 : biggest_fish_is6_module(var_biggest_fish);
		biggest_fish_is60 : biggest_fish_is60_module(var_biggest_fish);
		biggest_fish_is61 : biggest_fish_is61_module(var_biggest_fish);
		biggest_fish_is62 : biggest_fish_is62_module(var_biggest_fish);
		biggest_fish_is63 : biggest_fish_is63_module(var_biggest_fish);
		biggest_fish_is64 : biggest_fish_is64_module(var_biggest_fish);
		biggest_fish_is65 : biggest_fish_is65_module(var_biggest_fish);
		biggest_fish_is66 : biggest_fish_is66_module(var_biggest_fish);
		biggest_fish_is67 : biggest_fish_is67_module(var_biggest_fish);
		biggest_fish_is68 : biggest_fish_is68_module(var_biggest_fish);
		biggest_fish_is69 : biggest_fish_is69_module(var_biggest_fish);
		biggest_fish_is7 : biggest_fish_is7_module(var_biggest_fish);
		biggest_fish_is70 : biggest_fish_is70_module(var_biggest_fish);
		biggest_fish_is71 : biggest_fish_is71_module(var_biggest_fish);
		biggest_fish_is72 : biggest_fish_is72_module(var_biggest_fish);
		biggest_fish_is73 : biggest_fish_is73_module(var_biggest_fish);
		biggest_fish_is74 : biggest_fish_is74_module(var_biggest_fish);
		biggest_fish_is75 : biggest_fish_is75_module(var_biggest_fish);
		biggest_fish_is76 : biggest_fish_is76_module(var_biggest_fish);
		biggest_fish_is77 : biggest_fish_is77_module(var_biggest_fish);
		biggest_fish_is78 : biggest_fish_is78_module(var_biggest_fish);
		biggest_fish_is79 : biggest_fish_is79_module(var_biggest_fish);
		biggest_fish_is8 : biggest_fish_is8_module(var_biggest_fish);
		biggest_fish_is80 : biggest_fish_is80_module(var_biggest_fish);
		biggest_fish_is81 : biggest_fish_is81_module(var_biggest_fish);
		biggest_fish_is82 : biggest_fish_is82_module(var_biggest_fish);
		biggest_fish_is83 : biggest_fish_is83_module(var_biggest_fish);
		biggest_fish_is84 : biggest_fish_is84_module(var_biggest_fish);
		biggest_fish_is85 : biggest_fish_is85_module(var_biggest_fish);
		biggest_fish_is86 : biggest_fish_is86_module(var_biggest_fish);
		biggest_fish_is87 : biggest_fish_is87_module(var_biggest_fish);
		biggest_fish_is88 : biggest_fish_is88_module(var_biggest_fish);
		biggest_fish_is89 : biggest_fish_is89_module(var_biggest_fish);
		biggest_fish_is9 : biggest_fish_is9_module(var_biggest_fish);
		biggest_fish_is90 : biggest_fish_is90_module(var_biggest_fish);
		biggest_fish_is91 : biggest_fish_is91_module(var_biggest_fish);
		biggest_fish_is92 : biggest_fish_is92_module(var_biggest_fish);
		biggest_fish_is93 : biggest_fish_is93_module(var_biggest_fish);
		biggest_fish_is94 : biggest_fish_is94_module(var_biggest_fish);
		biggest_fish_is95 : biggest_fish_is95_module(var_biggest_fish);
		biggest_fish_is96 : biggest_fish_is96_module(var_biggest_fish);
		biggest_fish_is97 : biggest_fish_is97_module(var_biggest_fish);
		biggest_fish_is98 : biggest_fish_is98_module(var_biggest_fish);
		biggest_fish_is99 : biggest_fish_is99_module(var_biggest_fish);
		biggest_fish_sequence_NEXT_2 : composite_sequence_without_memory_END;
		biggest_fish_sequence_NEXT_1 : composite_sequence_without_memory(biggest_fish_sequence_NEXT_2, bigger_fish);
		biggest_fish_sequence : composite_sequence_without_memory(biggest_fish_sequence_NEXT_1, special_decorator);
		decorator0 : decorator_X_is_Y(biggest_fish_is0, failure, running);
		decorator1 : decorator_X_is_Y(biggest_fish_is1, failure, running);
		decorator10 : decorator_X_is_Y(biggest_fish_is10, failure, running);
		decorator100 : decorator_X_is_Y(biggest_fish_is100, failure, running);
		decorator101 : decorator_X_is_Y(biggest_fish_is101, failure, running);
		decorator102 : decorator_X_is_Y(biggest_fish_is102, failure, running);
		decorator103 : decorator_X_is_Y(biggest_fish_is103, failure, running);
		decorator104 : decorator_X_is_Y(biggest_fish_is104, failure, running);
		decorator105 : decorator_X_is_Y(biggest_fish_is105, failure, running);
		decorator106 : decorator_X_is_Y(biggest_fish_is106, failure, running);
		decorator107 : decorator_X_is_Y(biggest_fish_is107, failure, running);
		decorator108 : decorator_X_is_Y(biggest_fish_is108, failure, running);
		decorator109 : decorator_X_is_Y(biggest_fish_is109, failure, running);
		decorator11 : decorator_X_is_Y(biggest_fish_is11, failure, running);
		decorator110 : decorator_X_is_Y(biggest_fish_is110, failure, running);
		decorator111 : decorator_X_is_Y(biggest_fish_is111, failure, running);
		decorator112 : decorator_X_is_Y(biggest_fish_is112, failure, running);
		decorator113 : decorator_X_is_Y(biggest_fish_is113, failure, running);
		decorator114 : decorator_X_is_Y(biggest_fish_is114, failure, running);
		decorator115 : decorator_X_is_Y(biggest_fish_is115, failure, running);
		decorator116 : decorator_X_is_Y(biggest_fish_is116, failure, running);
		decorator117 : decorator_X_is_Y(biggest_fish_is117, failure, running);
		decorator118 : decorator_X_is_Y(biggest_fish_is118, failure, running);
		decorator119 : decorator_X_is_Y(biggest_fish_is119, failure, running);
		decorator12 : decorator_X_is_Y(biggest_fish_is12, failure, running);
		decorator120 : decorator_X_is_Y(biggest_fish_is120, failure, running);
		decorator121 : decorator_X_is_Y(biggest_fish_is121, failure, running);
		decorator122 : decorator_X_is_Y(biggest_fish_is122, failure, running);
		decorator123 : decorator_X_is_Y(biggest_fish_is123, failure, running);
		decorator124 : decorator_X_is_Y(biggest_fish_is124, failure, running);
		decorator125 : decorator_X_is_Y(biggest_fish_is125, failure, running);
		decorator126 : decorator_X_is_Y(biggest_fish_is126, failure, running);
		decorator127 : decorator_X_is_Y(biggest_fish_is127, failure, running);
		decorator128 : decorator_X_is_Y(biggest_fish_is128, failure, running);
		decorator129 : decorator_X_is_Y(biggest_fish_is129, failure, running);
		decorator13 : decorator_X_is_Y(biggest_fish_is13, failure, running);
		decorator130 : decorator_X_is_Y(biggest_fish_is130, failure, running);
		decorator131 : decorator_X_is_Y(biggest_fish_is131, failure, running);
		decorator132 : decorator_X_is_Y(biggest_fish_is132, failure, running);
		decorator133 : decorator_X_is_Y(biggest_fish_is133, failure, running);
		decorator134 : decorator_X_is_Y(biggest_fish_is134, failure, running);
		decorator135 : decorator_X_is_Y(biggest_fish_is135, failure, running);
		decorator136 : decorator_X_is_Y(biggest_fish_is136, failure, running);
		decorator137 : decorator_X_is_Y(biggest_fish_is137, failure, running);
		decorator138 : decorator_X_is_Y(biggest_fish_is138, failure, running);
		decorator139 : decorator_X_is_Y(biggest_fish_is139, failure, running);
		decorator14 : decorator_X_is_Y(biggest_fish_is14, failure, running);
		decorator140 : decorator_X_is_Y(biggest_fish_is140, failure, running);
		decorator141 : decorator_X_is_Y(biggest_fish_is141, failure, running);
		decorator142 : decorator_X_is_Y(biggest_fish_is142, failure, running);
		decorator143 : decorator_X_is_Y(biggest_fish_is143, failure, running);
		decorator144 : decorator_X_is_Y(biggest_fish_is144, failure, running);
		decorator145 : decorator_X_is_Y(biggest_fish_is145, failure, running);
		decorator15 : decorator_X_is_Y(biggest_fish_is15, failure, running);
		decorator16 : decorator_X_is_Y(biggest_fish_is16, failure, running);
		decorator17 : decorator_X_is_Y(biggest_fish_is17, failure, running);
		decorator18 : decorator_X_is_Y(biggest_fish_is18, failure, running);
		decorator19 : decorator_X_is_Y(biggest_fish_is19, failure, running);
		decorator2 : decorator_X_is_Y(biggest_fish_is2, failure, running);
		decorator20 : decorator_X_is_Y(biggest_fish_is20, failure, running);
		decorator21 : decorator_X_is_Y(biggest_fish_is21, failure, running);
		decorator22 : decorator_X_is_Y(biggest_fish_is22, failure, running);
		decorator23 : decorator_X_is_Y(biggest_fish_is23, failure, running);
		decorator24 : decorator_X_is_Y(biggest_fish_is24, failure, running);
		decorator25 : decorator_X_is_Y(biggest_fish_is25, failure, running);
		decorator26 : decorator_X_is_Y(biggest_fish_is26, failure, running);
		decorator27 : decorator_X_is_Y(biggest_fish_is27, failure, running);
		decorator28 : decorator_X_is_Y(biggest_fish_is28, failure, running);
		decorator29 : decorator_X_is_Y(biggest_fish_is29, failure, running);
		decorator3 : decorator_X_is_Y(biggest_fish_is3, failure, running);
		decorator30 : decorator_X_is_Y(biggest_fish_is30, failure, running);
		decorator31 : decorator_X_is_Y(biggest_fish_is31, failure, running);
		decorator32 : decorator_X_is_Y(biggest_fish_is32, failure, running);
		decorator33 : decorator_X_is_Y(biggest_fish_is33, failure, running);
		decorator34 : decorator_X_is_Y(biggest_fish_is34, failure, running);
		decorator35 : decorator_X_is_Y(biggest_fish_is35, failure, running);
		decorator36 : decorator_X_is_Y(biggest_fish_is36, failure, running);
		decorator37 : decorator_X_is_Y(biggest_fish_is37, failure, running);
		decorator38 : decorator_X_is_Y(biggest_fish_is38, failure, running);
		decorator39 : decorator_X_is_Y(biggest_fish_is39, failure, running);
		decorator4 : decorator_X_is_Y(biggest_fish_is4, failure, running);
		decorator40 : decorator_X_is_Y(biggest_fish_is40, failure, running);
		decorator41 : decorator_X_is_Y(biggest_fish_is41, failure, running);
		decorator42 : decorator_X_is_Y(biggest_fish_is42, failure, running);
		decorator43 : decorator_X_is_Y(biggest_fish_is43, failure, running);
		decorator44 : decorator_X_is_Y(biggest_fish_is44, failure, running);
		decorator45 : decorator_X_is_Y(biggest_fish_is45, failure, running);
		decorator46 : decorator_X_is_Y(biggest_fish_is46, failure, running);
		decorator47 : decorator_X_is_Y(biggest_fish_is47, failure, running);
		decorator48 : decorator_X_is_Y(biggest_fish_is48, failure, running);
		decorator49 : decorator_X_is_Y(biggest_fish_is49, failure, running);
		decorator5 : decorator_X_is_Y(biggest_fish_is5, failure, running);
		decorator50 : decorator_X_is_Y(biggest_fish_is50, failure, running);
		decorator51 : decorator_X_is_Y(biggest_fish_is51, failure, running);
		decorator52 : decorator_X_is_Y(biggest_fish_is52, failure, running);
		decorator53 : decorator_X_is_Y(biggest_fish_is53, failure, running);
		decorator54 : decorator_X_is_Y(biggest_fish_is54, failure, running);
		decorator55 : decorator_X_is_Y(biggest_fish_is55, failure, running);
		decorator56 : decorator_X_is_Y(biggest_fish_is56, failure, running);
		decorator57 : decorator_X_is_Y(biggest_fish_is57, failure, running);
		decorator58 : decorator_X_is_Y(biggest_fish_is58, failure, running);
		decorator59 : decorator_X_is_Y(biggest_fish_is59, failure, running);
		decorator6 : decorator_X_is_Y(biggest_fish_is6, failure, running);
		decorator60 : decorator_X_is_Y(biggest_fish_is60, failure, running);
		decorator61 : decorator_X_is_Y(biggest_fish_is61, failure, running);
		decorator62 : decorator_X_is_Y(biggest_fish_is62, failure, running);
		decorator63 : decorator_X_is_Y(biggest_fish_is63, failure, running);
		decorator64 : decorator_X_is_Y(biggest_fish_is64, failure, running);
		decorator65 : decorator_X_is_Y(biggest_fish_is65, failure, running);
		decorator66 : decorator_X_is_Y(biggest_fish_is66, failure, running);
		decorator67 : decorator_X_is_Y(biggest_fish_is67, failure, running);
		decorator68 : decorator_X_is_Y(biggest_fish_is68, failure, running);
		decorator69 : decorator_X_is_Y(biggest_fish_is69, failure, running);
		decorator7 : decorator_X_is_Y(biggest_fish_is7, failure, running);
		decorator70 : decorator_X_is_Y(biggest_fish_is70, failure, running);
		decorator71 : decorator_X_is_Y(biggest_fish_is71, failure, running);
		decorator72 : decorator_X_is_Y(biggest_fish_is72, failure, running);
		decorator73 : decorator_X_is_Y(biggest_fish_is73, failure, running);
		decorator74 : decorator_X_is_Y(biggest_fish_is74, failure, running);
		decorator75 : decorator_X_is_Y(biggest_fish_is75, failure, running);
		decorator76 : decorator_X_is_Y(biggest_fish_is76, failure, running);
		decorator77 : decorator_X_is_Y(biggest_fish_is77, failure, running);
		decorator78 : decorator_X_is_Y(biggest_fish_is78, failure, running);
		decorator79 : decorator_X_is_Y(biggest_fish_is79, failure, running);
		decorator8 : decorator_X_is_Y(biggest_fish_is8, failure, running);
		decorator80 : decorator_X_is_Y(biggest_fish_is80, failure, running);
		decorator81 : decorator_X_is_Y(biggest_fish_is81, failure, running);
		decorator82 : decorator_X_is_Y(biggest_fish_is82, failure, running);
		decorator83 : decorator_X_is_Y(biggest_fish_is83, failure, running);
		decorator84 : decorator_X_is_Y(biggest_fish_is84, failure, running);
		decorator85 : decorator_X_is_Y(biggest_fish_is85, failure, running);
		decorator86 : decorator_X_is_Y(biggest_fish_is86, failure, running);
		decorator87 : decorator_X_is_Y(biggest_fish_is87, failure, running);
		decorator88 : decorator_X_is_Y(biggest_fish_is88, failure, running);
		decorator89 : decorator_X_is_Y(biggest_fish_is89, failure, running);
		decorator9 : decorator_X_is_Y(biggest_fish_is9, failure, running);
		decorator90 : decorator_X_is_Y(biggest_fish_is90, failure, running);
		decorator91 : decorator_X_is_Y(biggest_fish_is91, failure, running);
		decorator92 : decorator_X_is_Y(biggest_fish_is92, failure, running);
		decorator93 : decorator_X_is_Y(biggest_fish_is93, failure, running);
		decorator94 : decorator_X_is_Y(biggest_fish_is94, failure, running);
		decorator95 : decorator_X_is_Y(biggest_fish_is95, failure, running);
		decorator96 : decorator_X_is_Y(biggest_fish_is96, failure, running);
		decorator97 : decorator_X_is_Y(biggest_fish_is97, failure, running);
		decorator98 : decorator_X_is_Y(biggest_fish_is98, failure, running);
		decorator99 : decorator_X_is_Y(biggest_fish_is99, failure, running);
		parallel1_NEXT_2 : composite_parallel_without_memory_END;
		parallel1_NEXT_1 : composite_parallel_without_memory(parallel1_NEXT_2, decorator1);
		parallel1 : composite_parallel_without_memory(parallel1_NEXT_1, decorator0);
		parallel101_NEXT_5 : composite_parallel_without_memory_END;
		parallel101_NEXT_4 : composite_parallel_without_memory(parallel101_NEXT_5, parallel97);
		parallel101_NEXT_3 : composite_parallel_without_memory(parallel101_NEXT_4, decorator101);
		parallel101_NEXT_2 : composite_parallel_without_memory(parallel101_NEXT_3, decorator100);
		parallel101_NEXT_1 : composite_parallel_without_memory(parallel101_NEXT_2, decorator99);
		parallel101 : composite_parallel_without_memory(parallel101_NEXT_1, decorator98);
		parallel105_NEXT_5 : composite_parallel_without_memory_END;
		parallel105_NEXT_4 : composite_parallel_without_memory(parallel105_NEXT_5, parallel101);
		parallel105_NEXT_3 : composite_parallel_without_memory(parallel105_NEXT_4, decorator105);
		parallel105_NEXT_2 : composite_parallel_without_memory(parallel105_NEXT_3, decorator104);
		parallel105_NEXT_1 : composite_parallel_without_memory(parallel105_NEXT_2, decorator103);
		parallel105 : composite_parallel_without_memory(parallel105_NEXT_1, decorator102);
		parallel109_NEXT_5 : composite_parallel_without_memory_END;
		parallel109_NEXT_4 : composite_parallel_without_memory(parallel109_NEXT_5, parallel105);
		parallel109_NEXT_3 : composite_parallel_without_memory(parallel109_NEXT_4, decorator109);
		parallel109_NEXT_2 : composite_parallel_without_memory(parallel109_NEXT_3, decorator108);
		parallel109_NEXT_1 : composite_parallel_without_memory(parallel109_NEXT_2, decorator107);
		parallel109 : composite_parallel_without_memory(parallel109_NEXT_1, decorator106);
		parallel113_NEXT_5 : composite_parallel_without_memory_END;
		parallel113_NEXT_4 : composite_parallel_without_memory(parallel113_NEXT_5, parallel109);
		parallel113_NEXT_3 : composite_parallel_without_memory(parallel113_NEXT_4, decorator113);
		parallel113_NEXT_2 : composite_parallel_without_memory(parallel113_NEXT_3, decorator112);
		parallel113_NEXT_1 : composite_parallel_without_memory(parallel113_NEXT_2, decorator111);
		parallel113 : composite_parallel_without_memory(parallel113_NEXT_1, decorator110);
		parallel117_NEXT_5 : composite_parallel_without_memory_END;
		parallel117_NEXT_4 : composite_parallel_without_memory(parallel117_NEXT_5, parallel113);
		parallel117_NEXT_3 : composite_parallel_without_memory(parallel117_NEXT_4, decorator117);
		parallel117_NEXT_2 : composite_parallel_without_memory(parallel117_NEXT_3, decorator116);
		parallel117_NEXT_1 : composite_parallel_without_memory(parallel117_NEXT_2, decorator115);
		parallel117 : composite_parallel_without_memory(parallel117_NEXT_1, decorator114);
		parallel121_NEXT_5 : composite_parallel_without_memory_END;
		parallel121_NEXT_4 : composite_parallel_without_memory(parallel121_NEXT_5, parallel117);
		parallel121_NEXT_3 : composite_parallel_without_memory(parallel121_NEXT_4, decorator121);
		parallel121_NEXT_2 : composite_parallel_without_memory(parallel121_NEXT_3, decorator120);
		parallel121_NEXT_1 : composite_parallel_without_memory(parallel121_NEXT_2, decorator119);
		parallel121 : composite_parallel_without_memory(parallel121_NEXT_1, decorator118);
		parallel125_NEXT_5 : composite_parallel_without_memory_END;
		parallel125_NEXT_4 : composite_parallel_without_memory(parallel125_NEXT_5, parallel121);
		parallel125_NEXT_3 : composite_parallel_without_memory(parallel125_NEXT_4, decorator125);
		parallel125_NEXT_2 : composite_parallel_without_memory(parallel125_NEXT_3, decorator124);
		parallel125_NEXT_1 : composite_parallel_without_memory(parallel125_NEXT_2, decorator123);
		parallel125 : composite_parallel_without_memory(parallel125_NEXT_1, decorator122);
		parallel129_NEXT_5 : composite_parallel_without_memory_END;
		parallel129_NEXT_4 : composite_parallel_without_memory(parallel129_NEXT_5, parallel125);
		parallel129_NEXT_3 : composite_parallel_without_memory(parallel129_NEXT_4, decorator129);
		parallel129_NEXT_2 : composite_parallel_without_memory(parallel129_NEXT_3, decorator128);
		parallel129_NEXT_1 : composite_parallel_without_memory(parallel129_NEXT_2, decorator127);
		parallel129 : composite_parallel_without_memory(parallel129_NEXT_1, decorator126);
		parallel13_NEXT_5 : composite_parallel_without_memory_END;
		parallel13_NEXT_4 : composite_parallel_without_memory(parallel13_NEXT_5, parallel9);
		parallel13_NEXT_3 : composite_parallel_without_memory(parallel13_NEXT_4, decorator13);
		parallel13_NEXT_2 : composite_parallel_without_memory(parallel13_NEXT_3, decorator12);
		parallel13_NEXT_1 : composite_parallel_without_memory(parallel13_NEXT_2, decorator11);
		parallel13 : composite_parallel_without_memory(parallel13_NEXT_1, decorator10);
		parallel133_NEXT_5 : composite_parallel_without_memory_END;
		parallel133_NEXT_4 : composite_parallel_without_memory(parallel133_NEXT_5, parallel129);
		parallel133_NEXT_3 : composite_parallel_without_memory(parallel133_NEXT_4, decorator133);
		parallel133_NEXT_2 : composite_parallel_without_memory(parallel133_NEXT_3, decorator132);
		parallel133_NEXT_1 : composite_parallel_without_memory(parallel133_NEXT_2, decorator131);
		parallel133 : composite_parallel_without_memory(parallel133_NEXT_1, decorator130);
		parallel137_NEXT_5 : composite_parallel_without_memory_END;
		parallel137_NEXT_4 : composite_parallel_without_memory(parallel137_NEXT_5, parallel133);
		parallel137_NEXT_3 : composite_parallel_without_memory(parallel137_NEXT_4, decorator137);
		parallel137_NEXT_2 : composite_parallel_without_memory(parallel137_NEXT_3, decorator136);
		parallel137_NEXT_1 : composite_parallel_without_memory(parallel137_NEXT_2, decorator135);
		parallel137 : composite_parallel_without_memory(parallel137_NEXT_1, decorator134);
		parallel141_NEXT_5 : composite_parallel_without_memory_END;
		parallel141_NEXT_4 : composite_parallel_without_memory(parallel141_NEXT_5, parallel137);
		parallel141_NEXT_3 : composite_parallel_without_memory(parallel141_NEXT_4, decorator141);
		parallel141_NEXT_2 : composite_parallel_without_memory(parallel141_NEXT_3, decorator140);
		parallel141_NEXT_1 : composite_parallel_without_memory(parallel141_NEXT_2, decorator139);
		parallel141 : composite_parallel_without_memory(parallel141_NEXT_1, decorator138);
		parallel145_NEXT_5 : composite_parallel_without_memory_END;
		parallel145_NEXT_4 : composite_parallel_without_memory(parallel145_NEXT_5, parallel141);
		parallel145_NEXT_3 : composite_parallel_without_memory(parallel145_NEXT_4, decorator145);
		parallel145_NEXT_2 : composite_parallel_without_memory(parallel145_NEXT_3, decorator144);
		parallel145_NEXT_1 : composite_parallel_without_memory(parallel145_NEXT_2, decorator143);
		parallel145 : composite_parallel_without_memory(parallel145_NEXT_1, decorator142);
		parallel17_NEXT_5 : composite_parallel_without_memory_END;
		parallel17_NEXT_4 : composite_parallel_without_memory(parallel17_NEXT_5, parallel13);
		parallel17_NEXT_3 : composite_parallel_without_memory(parallel17_NEXT_4, decorator17);
		parallel17_NEXT_2 : composite_parallel_without_memory(parallel17_NEXT_3, decorator16);
		parallel17_NEXT_1 : composite_parallel_without_memory(parallel17_NEXT_2, decorator15);
		parallel17 : composite_parallel_without_memory(parallel17_NEXT_1, decorator14);
		parallel21_NEXT_5 : composite_parallel_without_memory_END;
		parallel21_NEXT_4 : composite_parallel_without_memory(parallel21_NEXT_5, parallel17);
		parallel21_NEXT_3 : composite_parallel_without_memory(parallel21_NEXT_4, decorator21);
		parallel21_NEXT_2 : composite_parallel_without_memory(parallel21_NEXT_3, decorator20);
		parallel21_NEXT_1 : composite_parallel_without_memory(parallel21_NEXT_2, decorator19);
		parallel21 : composite_parallel_without_memory(parallel21_NEXT_1, decorator18);
		parallel25_NEXT_5 : composite_parallel_without_memory_END;
		parallel25_NEXT_4 : composite_parallel_without_memory(parallel25_NEXT_5, parallel21);
		parallel25_NEXT_3 : composite_parallel_without_memory(parallel25_NEXT_4, decorator25);
		parallel25_NEXT_2 : composite_parallel_without_memory(parallel25_NEXT_3, decorator24);
		parallel25_NEXT_1 : composite_parallel_without_memory(parallel25_NEXT_2, decorator23);
		parallel25 : composite_parallel_without_memory(parallel25_NEXT_1, decorator22);
		parallel29_NEXT_5 : composite_parallel_without_memory_END;
		parallel29_NEXT_4 : composite_parallel_without_memory(parallel29_NEXT_5, parallel25);
		parallel29_NEXT_3 : composite_parallel_without_memory(parallel29_NEXT_4, decorator29);
		parallel29_NEXT_2 : composite_parallel_without_memory(parallel29_NEXT_3, decorator28);
		parallel29_NEXT_1 : composite_parallel_without_memory(parallel29_NEXT_2, decorator27);
		parallel29 : composite_parallel_without_memory(parallel29_NEXT_1, decorator26);
		parallel33_NEXT_5 : composite_parallel_without_memory_END;
		parallel33_NEXT_4 : composite_parallel_without_memory(parallel33_NEXT_5, parallel29);
		parallel33_NEXT_3 : composite_parallel_without_memory(parallel33_NEXT_4, decorator33);
		parallel33_NEXT_2 : composite_parallel_without_memory(parallel33_NEXT_3, decorator32);
		parallel33_NEXT_1 : composite_parallel_without_memory(parallel33_NEXT_2, decorator31);
		parallel33 : composite_parallel_without_memory(parallel33_NEXT_1, decorator30);
		parallel37_NEXT_5 : composite_parallel_without_memory_END;
		parallel37_NEXT_4 : composite_parallel_without_memory(parallel37_NEXT_5, parallel33);
		parallel37_NEXT_3 : composite_parallel_without_memory(parallel37_NEXT_4, decorator37);
		parallel37_NEXT_2 : composite_parallel_without_memory(parallel37_NEXT_3, decorator36);
		parallel37_NEXT_1 : composite_parallel_without_memory(parallel37_NEXT_2, decorator35);
		parallel37 : composite_parallel_without_memory(parallel37_NEXT_1, decorator34);
		parallel41_NEXT_5 : composite_parallel_without_memory_END;
		parallel41_NEXT_4 : composite_parallel_without_memory(parallel41_NEXT_5, parallel37);
		parallel41_NEXT_3 : composite_parallel_without_memory(parallel41_NEXT_4, decorator41);
		parallel41_NEXT_2 : composite_parallel_without_memory(parallel41_NEXT_3, decorator40);
		parallel41_NEXT_1 : composite_parallel_without_memory(parallel41_NEXT_2, decorator39);
		parallel41 : composite_parallel_without_memory(parallel41_NEXT_1, decorator38);
		parallel45_NEXT_5 : composite_parallel_without_memory_END;
		parallel45_NEXT_4 : composite_parallel_without_memory(parallel45_NEXT_5, parallel41);
		parallel45_NEXT_3 : composite_parallel_without_memory(parallel45_NEXT_4, decorator45);
		parallel45_NEXT_2 : composite_parallel_without_memory(parallel45_NEXT_3, decorator44);
		parallel45_NEXT_1 : composite_parallel_without_memory(parallel45_NEXT_2, decorator43);
		parallel45 : composite_parallel_without_memory(parallel45_NEXT_1, decorator42);
		parallel49_NEXT_5 : composite_parallel_without_memory_END;
		parallel49_NEXT_4 : composite_parallel_without_memory(parallel49_NEXT_5, parallel45);
		parallel49_NEXT_3 : composite_parallel_without_memory(parallel49_NEXT_4, decorator49);
		parallel49_NEXT_2 : composite_parallel_without_memory(parallel49_NEXT_3, decorator48);
		parallel49_NEXT_1 : composite_parallel_without_memory(parallel49_NEXT_2, decorator47);
		parallel49 : composite_parallel_without_memory(parallel49_NEXT_1, decorator46);
		parallel5_NEXT_5 : composite_parallel_without_memory_END;
		parallel5_NEXT_4 : composite_parallel_without_memory(parallel5_NEXT_5, parallel1);
		parallel5_NEXT_3 : composite_parallel_without_memory(parallel5_NEXT_4, decorator5);
		parallel5_NEXT_2 : composite_parallel_without_memory(parallel5_NEXT_3, decorator4);
		parallel5_NEXT_1 : composite_parallel_without_memory(parallel5_NEXT_2, decorator3);
		parallel5 : composite_parallel_without_memory(parallel5_NEXT_1, decorator2);
		parallel53_NEXT_5 : composite_parallel_without_memory_END;
		parallel53_NEXT_4 : composite_parallel_without_memory(parallel53_NEXT_5, parallel49);
		parallel53_NEXT_3 : composite_parallel_without_memory(parallel53_NEXT_4, decorator53);
		parallel53_NEXT_2 : composite_parallel_without_memory(parallel53_NEXT_3, decorator52);
		parallel53_NEXT_1 : composite_parallel_without_memory(parallel53_NEXT_2, decorator51);
		parallel53 : composite_parallel_without_memory(parallel53_NEXT_1, decorator50);
		parallel57_NEXT_5 : composite_parallel_without_memory_END;
		parallel57_NEXT_4 : composite_parallel_without_memory(parallel57_NEXT_5, parallel53);
		parallel57_NEXT_3 : composite_parallel_without_memory(parallel57_NEXT_4, decorator57);
		parallel57_NEXT_2 : composite_parallel_without_memory(parallel57_NEXT_3, decorator56);
		parallel57_NEXT_1 : composite_parallel_without_memory(parallel57_NEXT_2, decorator55);
		parallel57 : composite_parallel_without_memory(parallel57_NEXT_1, decorator54);
		parallel61_NEXT_5 : composite_parallel_without_memory_END;
		parallel61_NEXT_4 : composite_parallel_without_memory(parallel61_NEXT_5, parallel57);
		parallel61_NEXT_3 : composite_parallel_without_memory(parallel61_NEXT_4, decorator61);
		parallel61_NEXT_2 : composite_parallel_without_memory(parallel61_NEXT_3, decorator60);
		parallel61_NEXT_1 : composite_parallel_without_memory(parallel61_NEXT_2, decorator59);
		parallel61 : composite_parallel_without_memory(parallel61_NEXT_1, decorator58);
		parallel65_NEXT_5 : composite_parallel_without_memory_END;
		parallel65_NEXT_4 : composite_parallel_without_memory(parallel65_NEXT_5, parallel61);
		parallel65_NEXT_3 : composite_parallel_without_memory(parallel65_NEXT_4, decorator65);
		parallel65_NEXT_2 : composite_parallel_without_memory(parallel65_NEXT_3, decorator64);
		parallel65_NEXT_1 : composite_parallel_without_memory(parallel65_NEXT_2, decorator63);
		parallel65 : composite_parallel_without_memory(parallel65_NEXT_1, decorator62);
		parallel69_NEXT_5 : composite_parallel_without_memory_END;
		parallel69_NEXT_4 : composite_parallel_without_memory(parallel69_NEXT_5, parallel65);
		parallel69_NEXT_3 : composite_parallel_without_memory(parallel69_NEXT_4, decorator69);
		parallel69_NEXT_2 : composite_parallel_without_memory(parallel69_NEXT_3, decorator68);
		parallel69_NEXT_1 : composite_parallel_without_memory(parallel69_NEXT_2, decorator67);
		parallel69 : composite_parallel_without_memory(parallel69_NEXT_1, decorator66);
		parallel73_NEXT_5 : composite_parallel_without_memory_END;
		parallel73_NEXT_4 : composite_parallel_without_memory(parallel73_NEXT_5, parallel69);
		parallel73_NEXT_3 : composite_parallel_without_memory(parallel73_NEXT_4, decorator73);
		parallel73_NEXT_2 : composite_parallel_without_memory(parallel73_NEXT_3, decorator72);
		parallel73_NEXT_1 : composite_parallel_without_memory(parallel73_NEXT_2, decorator71);
		parallel73 : composite_parallel_without_memory(parallel73_NEXT_1, decorator70);
		parallel77_NEXT_5 : composite_parallel_without_memory_END;
		parallel77_NEXT_4 : composite_parallel_without_memory(parallel77_NEXT_5, parallel73);
		parallel77_NEXT_3 : composite_parallel_without_memory(parallel77_NEXT_4, decorator77);
		parallel77_NEXT_2 : composite_parallel_without_memory(parallel77_NEXT_3, decorator76);
		parallel77_NEXT_1 : composite_parallel_without_memory(parallel77_NEXT_2, decorator75);
		parallel77 : composite_parallel_without_memory(parallel77_NEXT_1, decorator74);
		parallel81_NEXT_5 : composite_parallel_without_memory_END;
		parallel81_NEXT_4 : composite_parallel_without_memory(parallel81_NEXT_5, parallel77);
		parallel81_NEXT_3 : composite_parallel_without_memory(parallel81_NEXT_4, decorator81);
		parallel81_NEXT_2 : composite_parallel_without_memory(parallel81_NEXT_3, decorator80);
		parallel81_NEXT_1 : composite_parallel_without_memory(parallel81_NEXT_2, decorator79);
		parallel81 : composite_parallel_without_memory(parallel81_NEXT_1, decorator78);
		parallel85_NEXT_5 : composite_parallel_without_memory_END;
		parallel85_NEXT_4 : composite_parallel_without_memory(parallel85_NEXT_5, parallel81);
		parallel85_NEXT_3 : composite_parallel_without_memory(parallel85_NEXT_4, decorator85);
		parallel85_NEXT_2 : composite_parallel_without_memory(parallel85_NEXT_3, decorator84);
		parallel85_NEXT_1 : composite_parallel_without_memory(parallel85_NEXT_2, decorator83);
		parallel85 : composite_parallel_without_memory(parallel85_NEXT_1, decorator82);
		parallel89_NEXT_5 : composite_parallel_without_memory_END;
		parallel89_NEXT_4 : composite_parallel_without_memory(parallel89_NEXT_5, parallel85);
		parallel89_NEXT_3 : composite_parallel_without_memory(parallel89_NEXT_4, decorator89);
		parallel89_NEXT_2 : composite_parallel_without_memory(parallel89_NEXT_3, decorator88);
		parallel89_NEXT_1 : composite_parallel_without_memory(parallel89_NEXT_2, decorator87);
		parallel89 : composite_parallel_without_memory(parallel89_NEXT_1, decorator86);
		parallel9_NEXT_5 : composite_parallel_without_memory_END;
		parallel9_NEXT_4 : composite_parallel_without_memory(parallel9_NEXT_5, parallel5);
		parallel9_NEXT_3 : composite_parallel_without_memory(parallel9_NEXT_4, decorator9);
		parallel9_NEXT_2 : composite_parallel_without_memory(parallel9_NEXT_3, decorator8);
		parallel9_NEXT_1 : composite_parallel_without_memory(parallel9_NEXT_2, decorator7);
		parallel9 : composite_parallel_without_memory(parallel9_NEXT_1, decorator6);
		parallel93_NEXT_5 : composite_parallel_without_memory_END;
		parallel93_NEXT_4 : composite_parallel_without_memory(parallel93_NEXT_5, parallel89);
		parallel93_NEXT_3 : composite_parallel_without_memory(parallel93_NEXT_4, decorator93);
		parallel93_NEXT_2 : composite_parallel_without_memory(parallel93_NEXT_3, decorator92);
		parallel93_NEXT_1 : composite_parallel_without_memory(parallel93_NEXT_2, decorator91);
		parallel93 : composite_parallel_without_memory(parallel93_NEXT_1, decorator90);
		parallel97_NEXT_5 : composite_parallel_without_memory_END;
		parallel97_NEXT_4 : composite_parallel_without_memory(parallel97_NEXT_5, parallel93);
		parallel97_NEXT_3 : composite_parallel_without_memory(parallel97_NEXT_4, decorator97);
		parallel97_NEXT_2 : composite_parallel_without_memory(parallel97_NEXT_3, decorator96);
		parallel97_NEXT_1 : composite_parallel_without_memory(parallel97_NEXT_2, decorator95);
		parallel97 : composite_parallel_without_memory(parallel97_NEXT_1, decorator94);
		special_decorator : decorator_X_is_Y(parallel145, running, failure);
		--START OF BLACKBOARD VARIABLES DECLARATION
		var_biggest_fish : 0..199;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(var_biggest_fish) := 
			case
				TRUE : 0;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(var_biggest_fish) := var_biggest_fish_stage_1;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC F(G((var_biggest_fish = 146)));
CTLSPEC AF(AG((var_biggest_fish = 146)));
MODULE define_nodes
	DEFINE
		biggest_fish_sequence := 0;
		special_decorator := 1;
		parallel145 := 2;
		decorator142 := 3;
		biggest_fish_is142 := 4;
		decorator143 := 5;
		biggest_fish_is143 := 6;
		decorator144 := 7;
		biggest_fish_is144 := 8;
		decorator145 := 9;
		biggest_fish_is145 := 10;
		parallel141 := 11;
		decorator138 := 12;
		biggest_fish_is138 := 13;
		decorator139 := 14;
		biggest_fish_is139 := 15;
		decorator140 := 16;
		biggest_fish_is140 := 17;
		decorator141 := 18;
		biggest_fish_is141 := 19;
		parallel137 := 20;
		decorator134 := 21;
		biggest_fish_is134 := 22;
		decorator135 := 23;
		biggest_fish_is135 := 24;
		decorator136 := 25;
		biggest_fish_is136 := 26;
		decorator137 := 27;
		biggest_fish_is137 := 28;
		parallel133 := 29;
		decorator130 := 30;
		biggest_fish_is130 := 31;
		decorator131 := 32;
		biggest_fish_is131 := 33;
		decorator132 := 34;
		biggest_fish_is132 := 35;
		decorator133 := 36;
		biggest_fish_is133 := 37;
		parallel129 := 38;
		decorator126 := 39;
		biggest_fish_is126 := 40;
		decorator127 := 41;
		biggest_fish_is127 := 42;
		decorator128 := 43;
		biggest_fish_is128 := 44;
		decorator129 := 45;
		biggest_fish_is129 := 46;
		parallel125 := 47;
		decorator122 := 48;
		biggest_fish_is122 := 49;
		decorator123 := 50;
		biggest_fish_is123 := 51;
		decorator124 := 52;
		biggest_fish_is124 := 53;
		decorator125 := 54;
		biggest_fish_is125 := 55;
		parallel121 := 56;
		decorator118 := 57;
		biggest_fish_is118 := 58;
		decorator119 := 59;
		biggest_fish_is119 := 60;
		decorator120 := 61;
		biggest_fish_is120 := 62;
		decorator121 := 63;
		biggest_fish_is121 := 64;
		parallel117 := 65;
		decorator114 := 66;
		biggest_fish_is114 := 67;
		decorator115 := 68;
		biggest_fish_is115 := 69;
		decorator116 := 70;
		biggest_fish_is116 := 71;
		decorator117 := 72;
		biggest_fish_is117 := 73;
		parallel113 := 74;
		decorator110 := 75;
		biggest_fish_is110 := 76;
		decorator111 := 77;
		biggest_fish_is111 := 78;
		decorator112 := 79;
		biggest_fish_is112 := 80;
		decorator113 := 81;
		biggest_fish_is113 := 82;
		parallel109 := 83;
		decorator106 := 84;
		biggest_fish_is106 := 85;
		decorator107 := 86;
		biggest_fish_is107 := 87;
		decorator108 := 88;
		biggest_fish_is108 := 89;
		decorator109 := 90;
		biggest_fish_is109 := 91;
		parallel105 := 92;
		decorator102 := 93;
		biggest_fish_is102 := 94;
		decorator103 := 95;
		biggest_fish_is103 := 96;
		decorator104 := 97;
		biggest_fish_is104 := 98;
		decorator105 := 99;
		biggest_fish_is105 := 100;
		parallel101 := 101;
		decorator98 := 102;
		biggest_fish_is98 := 103;
		decorator99 := 104;
		biggest_fish_is99 := 105;
		decorator100 := 106;
		biggest_fish_is100 := 107;
		decorator101 := 108;
		biggest_fish_is101 := 109;
		parallel97 := 110;
		decorator94 := 111;
		biggest_fish_is94 := 112;
		decorator95 := 113;
		biggest_fish_is95 := 114;
		decorator96 := 115;
		biggest_fish_is96 := 116;
		decorator97 := 117;
		biggest_fish_is97 := 118;
		parallel93 := 119;
		decorator90 := 120;
		biggest_fish_is90 := 121;
		decorator91 := 122;
		biggest_fish_is91 := 123;
		decorator92 := 124;
		biggest_fish_is92 := 125;
		decorator93 := 126;
		biggest_fish_is93 := 127;
		parallel89 := 128;
		decorator86 := 129;
		biggest_fish_is86 := 130;
		decorator87 := 131;
		biggest_fish_is87 := 132;
		decorator88 := 133;
		biggest_fish_is88 := 134;
		decorator89 := 135;
		biggest_fish_is89 := 136;
		parallel85 := 137;
		decorator82 := 138;
		biggest_fish_is82 := 139;
		decorator83 := 140;
		biggest_fish_is83 := 141;
		decorator84 := 142;
		biggest_fish_is84 := 143;
		decorator85 := 144;
		biggest_fish_is85 := 145;
		parallel81 := 146;
		decorator78 := 147;
		biggest_fish_is78 := 148;
		decorator79 := 149;
		biggest_fish_is79 := 150;
		decorator80 := 151;
		biggest_fish_is80 := 152;
		decorator81 := 153;
		biggest_fish_is81 := 154;
		parallel77 := 155;
		decorator74 := 156;
		biggest_fish_is74 := 157;
		decorator75 := 158;
		biggest_fish_is75 := 159;
		decorator76 := 160;
		biggest_fish_is76 := 161;
		decorator77 := 162;
		biggest_fish_is77 := 163;
		parallel73 := 164;
		decorator70 := 165;
		biggest_fish_is70 := 166;
		decorator71 := 167;
		biggest_fish_is71 := 168;
		decorator72 := 169;
		biggest_fish_is72 := 170;
		decorator73 := 171;
		biggest_fish_is73 := 172;
		parallel69 := 173;
		decorator66 := 174;
		biggest_fish_is66 := 175;
		decorator67 := 176;
		biggest_fish_is67 := 177;
		decorator68 := 178;
		biggest_fish_is68 := 179;
		decorator69 := 180;
		biggest_fish_is69 := 181;
		parallel65 := 182;
		decorator62 := 183;
		biggest_fish_is62 := 184;
		decorator63 := 185;
		biggest_fish_is63 := 186;
		decorator64 := 187;
		biggest_fish_is64 := 188;
		decorator65 := 189;
		biggest_fish_is65 := 190;
		parallel61 := 191;
		decorator58 := 192;
		biggest_fish_is58 := 193;
		decorator59 := 194;
		biggest_fish_is59 := 195;
		decorator60 := 196;
		biggest_fish_is60 := 197;
		decorator61 := 198;
		biggest_fish_is61 := 199;
		parallel57 := 200;
		decorator54 := 201;
		biggest_fish_is54 := 202;
		decorator55 := 203;
		biggest_fish_is55 := 204;
		decorator56 := 205;
		biggest_fish_is56 := 206;
		decorator57 := 207;
		biggest_fish_is57 := 208;
		parallel53 := 209;
		decorator50 := 210;
		biggest_fish_is50 := 211;
		decorator51 := 212;
		biggest_fish_is51 := 213;
		decorator52 := 214;
		biggest_fish_is52 := 215;
		decorator53 := 216;
		biggest_fish_is53 := 217;
		parallel49 := 218;
		decorator46 := 219;
		biggest_fish_is46 := 220;
		decorator47 := 221;
		biggest_fish_is47 := 222;
		decorator48 := 223;
		biggest_fish_is48 := 224;
		decorator49 := 225;
		biggest_fish_is49 := 226;
		parallel45 := 227;
		decorator42 := 228;
		biggest_fish_is42 := 229;
		decorator43 := 230;
		biggest_fish_is43 := 231;
		decorator44 := 232;
		biggest_fish_is44 := 233;
		decorator45 := 234;
		biggest_fish_is45 := 235;
		parallel41 := 236;
		decorator38 := 237;
		biggest_fish_is38 := 238;
		decorator39 := 239;
		biggest_fish_is39 := 240;
		decorator40 := 241;
		biggest_fish_is40 := 242;
		decorator41 := 243;
		biggest_fish_is41 := 244;
		parallel37 := 245;
		decorator34 := 246;
		biggest_fish_is34 := 247;
		decorator35 := 248;
		biggest_fish_is35 := 249;
		decorator36 := 250;
		biggest_fish_is36 := 251;
		decorator37 := 252;
		biggest_fish_is37 := 253;
		parallel33 := 254;
		decorator30 := 255;
		biggest_fish_is30 := 256;
		decorator31 := 257;
		biggest_fish_is31 := 258;
		decorator32 := 259;
		biggest_fish_is32 := 260;
		decorator33 := 261;
		biggest_fish_is33 := 262;
		parallel29 := 263;
		decorator26 := 264;
		biggest_fish_is26 := 265;
		decorator27 := 266;
		biggest_fish_is27 := 267;
		decorator28 := 268;
		biggest_fish_is28 := 269;
		decorator29 := 270;
		biggest_fish_is29 := 271;
		parallel25 := 272;
		decorator22 := 273;
		biggest_fish_is22 := 274;
		decorator23 := 275;
		biggest_fish_is23 := 276;
		decorator24 := 277;
		biggest_fish_is24 := 278;
		decorator25 := 279;
		biggest_fish_is25 := 280;
		parallel21 := 281;
		decorator18 := 282;
		biggest_fish_is18 := 283;
		decorator19 := 284;
		biggest_fish_is19 := 285;
		decorator20 := 286;
		biggest_fish_is20 := 287;
		decorator21 := 288;
		biggest_fish_is21 := 289;
		parallel17 := 290;
		decorator14 := 291;
		biggest_fish_is14 := 292;
		decorator15 := 293;
		biggest_fish_is15 := 294;
		decorator16 := 295;
		biggest_fish_is16 := 296;
		decorator17 := 297;
		biggest_fish_is17 := 298;
		parallel13 := 299;
		decorator10 := 300;
		biggest_fish_is10 := 301;
		decorator11 := 302;
		biggest_fish_is11 := 303;
		decorator12 := 304;
		biggest_fish_is12 := 305;
		decorator13 := 306;
		biggest_fish_is13 := 307;
		parallel9 := 308;
		decorator6 := 309;
		biggest_fish_is6 := 310;
		decorator7 := 311;
		biggest_fish_is7 := 312;
		decorator8 := 313;
		biggest_fish_is8 := 314;
		decorator9 := 315;
		biggest_fish_is9 := 316;
		parallel5 := 317;
		decorator2 := 318;
		biggest_fish_is2 := 319;
		decorator3 := 320;
		biggest_fish_is3 := 321;
		decorator4 := 322;
		biggest_fish_is4 := 323;
		decorator5 := 324;
		biggest_fish_is5 := 325;
		parallel1 := 326;
		decorator0 := 327;
		biggest_fish_is0 := 328;
		decorator1 := 329;
		biggest_fish_is1 := 330;
		bigger_fish := 331;
MODULE decorator_X_is_Y(child_0, incoming_status, outgoing_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.status = incoming_status : outgoing_status;
				TRUE : child_0.status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE composite_parallel_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		child.active := active;
		next_composite.active := active;

MODULE composite_parallel_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
MODULE biggest_fish_is0_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 0)) ? success : failure;
MODULE biggest_fish_is1_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 1)) ? success : failure;
MODULE biggest_fish_is10_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 10)) ? success : failure;
MODULE biggest_fish_is100_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 100)) ? success : failure;
MODULE biggest_fish_is101_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 101)) ? success : failure;
MODULE biggest_fish_is102_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 102)) ? success : failure;
MODULE biggest_fish_is103_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 103)) ? success : failure;
MODULE biggest_fish_is104_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 104)) ? success : failure;
MODULE biggest_fish_is105_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 105)) ? success : failure;
MODULE biggest_fish_is106_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 106)) ? success : failure;
MODULE biggest_fish_is107_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 107)) ? success : failure;
MODULE biggest_fish_is108_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 108)) ? success : failure;
MODULE biggest_fish_is109_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 109)) ? success : failure;
MODULE biggest_fish_is11_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 11)) ? success : failure;
MODULE biggest_fish_is110_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 110)) ? success : failure;
MODULE biggest_fish_is111_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 111)) ? success : failure;
MODULE biggest_fish_is112_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 112)) ? success : failure;
MODULE biggest_fish_is113_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 113)) ? success : failure;
MODULE biggest_fish_is114_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 114)) ? success : failure;
MODULE biggest_fish_is115_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 115)) ? success : failure;
MODULE biggest_fish_is116_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 116)) ? success : failure;
MODULE biggest_fish_is117_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 117)) ? success : failure;
MODULE biggest_fish_is118_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 118)) ? success : failure;
MODULE biggest_fish_is119_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 119)) ? success : failure;
MODULE biggest_fish_is12_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 12)) ? success : failure;
MODULE biggest_fish_is120_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 120)) ? success : failure;
MODULE biggest_fish_is121_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 121)) ? success : failure;
MODULE biggest_fish_is122_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 122)) ? success : failure;
MODULE biggest_fish_is123_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 123)) ? success : failure;
MODULE biggest_fish_is124_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 124)) ? success : failure;
MODULE biggest_fish_is125_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 125)) ? success : failure;
MODULE biggest_fish_is126_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 126)) ? success : failure;
MODULE biggest_fish_is127_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 127)) ? success : failure;
MODULE biggest_fish_is128_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 128)) ? success : failure;
MODULE biggest_fish_is129_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 129)) ? success : failure;
MODULE biggest_fish_is13_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 13)) ? success : failure;
MODULE biggest_fish_is130_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 130)) ? success : failure;
MODULE biggest_fish_is131_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 131)) ? success : failure;
MODULE biggest_fish_is132_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 132)) ? success : failure;
MODULE biggest_fish_is133_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 133)) ? success : failure;
MODULE biggest_fish_is134_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 134)) ? success : failure;
MODULE biggest_fish_is135_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 135)) ? success : failure;
MODULE biggest_fish_is136_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 136)) ? success : failure;
MODULE biggest_fish_is137_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 137)) ? success : failure;
MODULE biggest_fish_is138_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 138)) ? success : failure;
MODULE biggest_fish_is139_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 139)) ? success : failure;
MODULE biggest_fish_is14_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 14)) ? success : failure;
MODULE biggest_fish_is140_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 140)) ? success : failure;
MODULE biggest_fish_is141_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 141)) ? success : failure;
MODULE biggest_fish_is142_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 142)) ? success : failure;
MODULE biggest_fish_is143_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 143)) ? success : failure;
MODULE biggest_fish_is144_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 144)) ? success : failure;
MODULE biggest_fish_is145_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 145)) ? success : failure;
MODULE biggest_fish_is15_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 15)) ? success : failure;
MODULE biggest_fish_is16_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 16)) ? success : failure;
MODULE biggest_fish_is17_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 17)) ? success : failure;
MODULE biggest_fish_is18_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 18)) ? success : failure;
MODULE biggest_fish_is19_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 19)) ? success : failure;
MODULE biggest_fish_is2_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 2)) ? success : failure;
MODULE biggest_fish_is20_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 20)) ? success : failure;
MODULE biggest_fish_is21_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 21)) ? success : failure;
MODULE biggest_fish_is22_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 22)) ? success : failure;
MODULE biggest_fish_is23_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 23)) ? success : failure;
MODULE biggest_fish_is24_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 24)) ? success : failure;
MODULE biggest_fish_is25_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 25)) ? success : failure;
MODULE biggest_fish_is26_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 26)) ? success : failure;
MODULE biggest_fish_is27_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 27)) ? success : failure;
MODULE biggest_fish_is28_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 28)) ? success : failure;
MODULE biggest_fish_is29_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 29)) ? success : failure;
MODULE biggest_fish_is3_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 3)) ? success : failure;
MODULE biggest_fish_is30_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 30)) ? success : failure;
MODULE biggest_fish_is31_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 31)) ? success : failure;
MODULE biggest_fish_is32_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 32)) ? success : failure;
MODULE biggest_fish_is33_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 33)) ? success : failure;
MODULE biggest_fish_is34_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 34)) ? success : failure;
MODULE biggest_fish_is35_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 35)) ? success : failure;
MODULE biggest_fish_is36_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 36)) ? success : failure;
MODULE biggest_fish_is37_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 37)) ? success : failure;
MODULE biggest_fish_is38_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 38)) ? success : failure;
MODULE biggest_fish_is39_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 39)) ? success : failure;
MODULE biggest_fish_is4_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 4)) ? success : failure;
MODULE biggest_fish_is40_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 40)) ? success : failure;
MODULE biggest_fish_is41_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 41)) ? success : failure;
MODULE biggest_fish_is42_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 42)) ? success : failure;
MODULE biggest_fish_is43_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 43)) ? success : failure;
MODULE biggest_fish_is44_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 44)) ? success : failure;
MODULE biggest_fish_is45_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 45)) ? success : failure;
MODULE biggest_fish_is46_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 46)) ? success : failure;
MODULE biggest_fish_is47_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 47)) ? success : failure;
MODULE biggest_fish_is48_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 48)) ? success : failure;
MODULE biggest_fish_is49_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 49)) ? success : failure;
MODULE biggest_fish_is5_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 5)) ? success : failure;
MODULE biggest_fish_is50_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 50)) ? success : failure;
MODULE biggest_fish_is51_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 51)) ? success : failure;
MODULE biggest_fish_is52_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 52)) ? success : failure;
MODULE biggest_fish_is53_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 53)) ? success : failure;
MODULE biggest_fish_is54_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 54)) ? success : failure;
MODULE biggest_fish_is55_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 55)) ? success : failure;
MODULE biggest_fish_is56_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 56)) ? success : failure;
MODULE biggest_fish_is57_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 57)) ? success : failure;
MODULE biggest_fish_is58_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 58)) ? success : failure;
MODULE biggest_fish_is59_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 59)) ? success : failure;
MODULE biggest_fish_is6_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 6)) ? success : failure;
MODULE biggest_fish_is60_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 60)) ? success : failure;
MODULE biggest_fish_is61_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 61)) ? success : failure;
MODULE biggest_fish_is62_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 62)) ? success : failure;
MODULE biggest_fish_is63_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 63)) ? success : failure;
MODULE biggest_fish_is64_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 64)) ? success : failure;
MODULE biggest_fish_is65_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 65)) ? success : failure;
MODULE biggest_fish_is66_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 66)) ? success : failure;
MODULE biggest_fish_is67_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 67)) ? success : failure;
MODULE biggest_fish_is68_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 68)) ? success : failure;
MODULE biggest_fish_is69_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 69)) ? success : failure;
MODULE biggest_fish_is7_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 7)) ? success : failure;
MODULE biggest_fish_is70_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 70)) ? success : failure;
MODULE biggest_fish_is71_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 71)) ? success : failure;
MODULE biggest_fish_is72_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 72)) ? success : failure;
MODULE biggest_fish_is73_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 73)) ? success : failure;
MODULE biggest_fish_is74_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 74)) ? success : failure;
MODULE biggest_fish_is75_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 75)) ? success : failure;
MODULE biggest_fish_is76_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 76)) ? success : failure;
MODULE biggest_fish_is77_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 77)) ? success : failure;
MODULE biggest_fish_is78_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 78)) ? success : failure;
MODULE biggest_fish_is79_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 79)) ? success : failure;
MODULE biggest_fish_is8_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 8)) ? success : failure;
MODULE biggest_fish_is80_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 80)) ? success : failure;
MODULE biggest_fish_is81_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 81)) ? success : failure;
MODULE biggest_fish_is82_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 82)) ? success : failure;
MODULE biggest_fish_is83_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 83)) ? success : failure;
MODULE biggest_fish_is84_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 84)) ? success : failure;
MODULE biggest_fish_is85_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 85)) ? success : failure;
MODULE biggest_fish_is86_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 86)) ? success : failure;
MODULE biggest_fish_is87_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 87)) ? success : failure;
MODULE biggest_fish_is88_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 88)) ? success : failure;
MODULE biggest_fish_is89_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 89)) ? success : failure;
MODULE biggest_fish_is9_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 9)) ? success : failure;
MODULE biggest_fish_is90_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 90)) ? success : failure;
MODULE biggest_fish_is91_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 91)) ? success : failure;
MODULE biggest_fish_is92_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 92)) ? success : failure;
MODULE biggest_fish_is93_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 93)) ? success : failure;
MODULE biggest_fish_is94_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 94)) ? success : failure;
MODULE biggest_fish_is95_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 95)) ? success : failure;
MODULE biggest_fish_is96_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 96)) ? success : failure;
MODULE biggest_fish_is97_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 97)) ? success : failure;
MODULE biggest_fish_is98_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 98)) ? success : failure;
MODULE biggest_fish_is99_module(var_biggest_fish)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := ((var_biggest_fish = 99)) ? success : failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
