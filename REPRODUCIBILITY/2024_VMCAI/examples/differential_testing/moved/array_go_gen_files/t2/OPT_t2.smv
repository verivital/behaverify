MODULE main
    VAR
        system : system_module;
--------------SPECIFICATIONS



--------------END OF SPECIFICATIONS

MODULE system_module
    CONSTANTS
        success, failure, running, invalid, no, yes, both;
    DEFINE
        resume_from_here_in_subtree__c1 := -3;
        c1.active := TRUE;
        --START OF BLACKBOARD DEFINITIONS
        --END OF BLACKBOARD DEFINITIONS
    FROZENVAR
        --START OF BLACKBOARD FROZENVAR
        blVAR0_stage_0 : -5..-2;
        blVAR2_stage_0 : {yes, no, both};
        blVAR3_stage_0_index_0 : {yes, no, both};
        blVAR3_stage_0_index_1 : {yes, no, both};
        --END OF BLACKBOARD FROZENVAR
    VAR
        node_names : define_nodes;
        c1 : c1_module();
        --START OF BLACKBOARD VARIABLES DECLARATION
        envVAR1_stage_0 : boolean;
        --END OF BLACKBOARD VARIABLES DECLARATION
    ASSIGN
        --START OF BLACKBOARD VARIABLES INITIALIZATION
        init(blVAR0_stage_0) := 
            case
                (FALSE xnor ((14 <= -3) != (31 >= 24))) : min(-2, max(-5, 97));
                TRUE : min(-2, max(-5, min(100, max(-100, (3 + 3 + 88 + -14)))));
            esac;
        init(envVAR1_stage_0) := 
            case
                TRUE : TRUE;
            esac;
        init(blVAR2_stage_0) := 
            case
                (FALSE & (min(100, max(-100, min(51, blVAR0_stage_0))) > blVAR0_stage_0)) : yes;
                (blVAR0_stage_0 < blVAR0_stage_0) : no;
                TRUE : no;
            esac;
        init(blVAR3_stage_0_index_0) := 
            case
                TRUE : both;
            esac;
        init(blVAR3_stage_0_index_1) := 
            case
                TRUE : both;
            esac;
        --END OF BLACKBOARD VARIABLES INITIALIZATION
        --START OF BLACKBOARD VARIABLES TRANSITION
        next(envVAR1_stage_0) := 
            case
                !(c1.active) : envVAR1_stage_0;
                TRUE : TRUE;
            esac;
        --END OF BLACKBOARD VARIABLES TRANSITION

MODULE define_nodes
    DEFINE
        c1 := 0;
MODULE c1_module()
    CONSTANTS
        success, failure, running, invalid;
    DEFINE
        status := active ? internal_status : invalid;
        internal_status := ((TRUE | FALSE)) ? success : failure;
