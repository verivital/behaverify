*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 17:48:12 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- specification  G (west_cars_stage_1 ->  F west_light_stage_1)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    fairness_counter_stage_0 = 0
    direction_stage_0 = east_to_west
    tunnel_state_stage_0 = empty
    tunnel_state_stage_1 = east_to_west
    east_cars_stage_0 = TRUE
    east_cars_stage_1 = FALSE
    west_cars_stage_0 = TRUE
    west_cars_stage_1 = TRUE
    west_light_stage_0 = FALSE
    east_light_stage_0 = FALSE
    east_light_stage_1 = TRUE
    west_light_stage_1 = FALSE
    west_and_east_cars_stage_0 = TRUE
    direction_stage_3 = east_to_west
    direction_stage_2 = east_to_west
    direction_stage_1 = east_to_west
    fairness_counter_stage_3 = 0
    fairness_counter_stage_2 = 0
    fairness_counter_stage_1 = 0
    light_controller.active = TRUE
    resume_from_here_in_subtree__light_controller = -3
    node_names.send_light_signal = 15
    node_names.check_safety = 14
    node_names.activate_light = 13
    node_names.set_east = 12
    node_names.check_east_cars = 11
    node_names.try_east = 10
    node_names.set_west = 9
    node_names.check_west_cars = 8
    node_names.try_west = 7
    node_names.swap_direction = 6
    node_names.check_fairness = 5
    node_names.choose_fairly = 4
    node_names.check_west_and_east_cars = 3
    node_names.try_west_and_east = 2
    node_names.select_direction = 1
    node_names.light_controller = 0
    check_west_and_east_cars.internal_status = success
    check_west_and_east_cars.status = success
    check_fairness.internal_status = success
    check_fairness.status = success
    swap_direction.internal_status = success
    swap_direction.status = invalid
    swap_direction.active = FALSE
    check_fairness.active = TRUE
    choose_fairly.internal_status = success
    choose_fairly.status = success
    choose_fairly.active = TRUE
    check_west_and_east_cars.active = TRUE
    try_west_and_east.internal_status = success
    try_west_and_east.status = success
    check_west_cars.internal_status = success
    check_west_cars.status = invalid
    set_west.internal_status = success
    set_west.status = invalid
    set_west.active = FALSE
    check_west_cars.active = FALSE
    try_west.internal_status = success
    try_west.status = invalid
    check_east_cars.internal_status = success
    check_east_cars.status = invalid
    set_east.internal_status = success
    set_east.status = invalid
    set_east.active = FALSE
    check_east_cars.active = FALSE
    try_east.internal_status = success
    try_east.status = invalid
    try_east.active = FALSE
    try_west.active = FALSE
    try_west_and_east.active = TRUE
    select_direction.internal_status = success
    select_direction.status = success
    check_safety.internal_status = success
    check_safety.status = success
    send_light_signal.internal_status = success
    send_light_signal.status = success
    send_light_signal.active = TRUE
    check_safety.active = TRUE
    activate_light.internal_status = success
    activate_light.status = success
    activate_light.active = TRUE
    select_direction.active = TRUE
    light_controller.internal_status = success
    light_controller.status = success
  -> State: 1.2 <-
    fairness_counter_stage_0 = 1
    tunnel_state_stage_0 = east_to_west
    east_cars_stage_0 = FALSE
    east_light_stage_0 = TRUE
    west_and_east_cars_stage_0 = FALSE
    direction_stage_3 = west_to_east
    direction_stage_2 = west_to_east
    fairness_counter_stage_1 = 1
    check_west_and_east_cars.internal_status = failure
    check_west_and_east_cars.status = failure
    check_fairness.status = invalid
    check_fairness.active = FALSE
    choose_fairly.status = invalid
    choose_fairly.active = FALSE
    try_west_and_east.internal_status = failure
    try_west_and_east.status = failure
    check_west_cars.status = success
    set_west.status = success
    set_west.active = TRUE
    check_west_cars.active = TRUE
    try_west.status = success
    check_east_cars.internal_status = failure
    try_east.internal_status = failure
    try_west.active = TRUE
    check_safety.internal_status = failure
    check_safety.status = failure
    send_light_signal.status = invalid
    send_light_signal.active = FALSE
    activate_light.internal_status = failure
    activate_light.status = failure
    light_controller.internal_status = failure
    light_controller.status = failure
  -- Loop starts here
  -> State: 1.3 <-
    fairness_counter_stage_0 = 0
    direction_stage_0 = west_to_east
    direction_stage_1 = west_to_east
    fairness_counter_stage_1 = 0
  -> State: 1.4 <-
-- specification  G (east_cars_stage_1 ->  F east_light_stage_1)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    fairness_counter_stage_0 = 0
    direction_stage_0 = east_to_west
    tunnel_state_stage_0 = empty
    tunnel_state_stage_1 = east_to_west
    east_cars_stage_0 = TRUE
    east_cars_stage_1 = FALSE
    west_cars_stage_0 = TRUE
    west_cars_stage_1 = TRUE
    west_light_stage_0 = FALSE
    east_light_stage_0 = FALSE
    east_light_stage_1 = TRUE
    west_light_stage_1 = FALSE
    west_and_east_cars_stage_0 = TRUE
    direction_stage_3 = east_to_west
    direction_stage_2 = east_to_west
    direction_stage_1 = east_to_west
    fairness_counter_stage_3 = 0
    fairness_counter_stage_2 = 0
    fairness_counter_stage_1 = 0
    light_controller.active = TRUE
    resume_from_here_in_subtree__light_controller = -3
    node_names.send_light_signal = 15
    node_names.check_safety = 14
    node_names.activate_light = 13
    node_names.set_east = 12
    node_names.check_east_cars = 11
    node_names.try_east = 10
    node_names.set_west = 9
    node_names.check_west_cars = 8
    node_names.try_west = 7
    node_names.swap_direction = 6
    node_names.check_fairness = 5
    node_names.choose_fairly = 4
    node_names.check_west_and_east_cars = 3
    node_names.try_west_and_east = 2
    node_names.select_direction = 1
    node_names.light_controller = 0
    check_west_and_east_cars.internal_status = success
    check_west_and_east_cars.status = success
    check_fairness.internal_status = success
    check_fairness.status = success
    swap_direction.internal_status = success
    swap_direction.status = invalid
    swap_direction.active = FALSE
    check_fairness.active = TRUE
    choose_fairly.internal_status = success
    choose_fairly.status = success
    choose_fairly.active = TRUE
    check_west_and_east_cars.active = TRUE
    try_west_and_east.internal_status = success
    try_west_and_east.status = success
    check_west_cars.internal_status = success
    check_west_cars.status = invalid
    set_west.internal_status = success
    set_west.status = invalid
    set_west.active = FALSE
    check_west_cars.active = FALSE
    try_west.internal_status = success
    try_west.status = invalid
    check_east_cars.internal_status = success
    check_east_cars.status = invalid
    set_east.internal_status = success
    set_east.status = invalid
    set_east.active = FALSE
    check_east_cars.active = FALSE
    try_east.internal_status = success
    try_east.status = invalid
    try_east.active = FALSE
    try_west.active = FALSE
    try_west_and_east.active = TRUE
    select_direction.internal_status = success
    select_direction.status = success
    check_safety.internal_status = success
    check_safety.status = success
    send_light_signal.internal_status = success
    send_light_signal.status = success
    send_light_signal.active = TRUE
    check_safety.active = TRUE
    activate_light.internal_status = success
    activate_light.status = success
    activate_light.active = TRUE
    select_direction.active = TRUE
    light_controller.internal_status = success
    light_controller.status = success
  -> State: 2.2 <-
    fairness_counter_stage_0 = 1
    tunnel_state_stage_0 = east_to_west
    tunnel_state_stage_1 = empty
    east_cars_stage_0 = FALSE
    east_light_stage_0 = TRUE
    west_and_east_cars_stage_0 = FALSE
    direction_stage_3 = west_to_east
    direction_stage_2 = west_to_east
    fairness_counter_stage_1 = 1
    check_west_and_east_cars.internal_status = failure
    check_west_and_east_cars.status = failure
    check_fairness.status = invalid
    check_fairness.active = FALSE
    choose_fairly.status = invalid
    choose_fairly.active = FALSE
    try_west_and_east.internal_status = failure
    try_west_and_east.status = failure
    check_west_cars.status = success
    set_west.status = success
    set_west.active = TRUE
    check_west_cars.active = TRUE
    try_west.status = success
    check_east_cars.internal_status = failure
    try_east.internal_status = failure
    try_west.active = TRUE
    check_safety.internal_status = failure
    check_safety.status = failure
    send_light_signal.status = invalid
    send_light_signal.active = FALSE
    activate_light.internal_status = failure
    activate_light.status = failure
    light_controller.internal_status = failure
    light_controller.status = failure
  -> State: 2.3 <-
    fairness_counter_stage_0 = 0
    direction_stage_0 = west_to_east
    tunnel_state_stage_0 = empty
    tunnel_state_stage_1 = west_to_east
    east_cars_stage_1 = TRUE
    west_cars_stage_1 = FALSE
    east_light_stage_1 = FALSE
    west_light_stage_1 = TRUE
    direction_stage_1 = west_to_east
    fairness_counter_stage_1 = 0
    check_safety.internal_status = success
    check_safety.status = success
    send_light_signal.status = success
    send_light_signal.active = TRUE
    activate_light.internal_status = success
    activate_light.status = success
    light_controller.internal_status = success
    light_controller.status = success
  -> State: 2.4 <-
    fairness_counter_stage_0 = 1
    tunnel_state_stage_0 = west_to_east
    east_cars_stage_0 = TRUE
    west_cars_stage_0 = FALSE
    west_light_stage_0 = TRUE
    east_light_stage_0 = FALSE
    direction_stage_3 = east_to_west
    fairness_counter_stage_2 = 1
    fairness_counter_stage_1 = 1
    check_west_cars.internal_status = failure
    check_west_cars.status = failure
    set_west.status = invalid
    set_west.active = FALSE
    try_west.internal_status = failure
    try_west.status = failure
    check_east_cars.internal_status = success
    check_east_cars.status = success
    set_east.status = success
    set_east.active = TRUE
    check_east_cars.active = TRUE
    try_east.internal_status = success
    try_east.status = success
    try_east.active = TRUE
    check_safety.internal_status = failure
    check_safety.status = failure
    send_light_signal.status = invalid
    send_light_signal.active = FALSE
    activate_light.internal_status = failure
    activate_light.status = failure
    light_controller.internal_status = failure
    light_controller.status = failure
  -- Loop starts here
  -> State: 2.5 <-
    fairness_counter_stage_0 = 0
    direction_stage_0 = east_to_west
    direction_stage_2 = east_to_west
    direction_stage_1 = east_to_west
    fairness_counter_stage_2 = 0
    fairness_counter_stage_1 = 0
  -> State: 2.6 <-
-- specification ( G ( F tunnel_state_stage_1 = empty) ->  G (west_cars_stage_1 ->  F west_light_stage_1))  is true
-- specification ( G ( F tunnel_state_stage_1 = empty) ->  G (east_cars_stage_1 ->  F east_light_stage_1))  is true
