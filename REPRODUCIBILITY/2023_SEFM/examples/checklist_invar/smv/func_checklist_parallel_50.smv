MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__parLink49 := -3;
		resume_from_here_in_subtree__parLink47 := -3;
		resume_from_here_in_subtree__parLink43 := -3;
		resume_from_here_in_subtree__parLink35 := -3;
		resume_from_here_in_subtree__parLink19 := -3;
		resume_from_here_in_subtree__sel36 := -3;
		resume_from_here_in_subtree__sel37 := -3;
		resume_from_here_in_subtree__parLink20 := -3;
		resume_from_here_in_subtree__sel38 := -3;
		resume_from_here_in_subtree__sel39 := -3;
		resume_from_here_in_subtree__parLink36 := -3;
		resume_from_here_in_subtree__parLink21 := -3;
		resume_from_here_in_subtree__sel40 := -3;
		resume_from_here_in_subtree__sel41 := -3;
		resume_from_here_in_subtree__parLink22 := -3;
		resume_from_here_in_subtree__sel42 := -3;
		resume_from_here_in_subtree__sel43 := -3;
		resume_from_here_in_subtree__parLink44 := -3;
		resume_from_here_in_subtree__parLink37 := -3;
		resume_from_here_in_subtree__parLink23 := -3;
		resume_from_here_in_subtree__sel44 := -3;
		resume_from_here_in_subtree__sel45 := -3;
		resume_from_here_in_subtree__parLink24 := -3;
		resume_from_here_in_subtree__sel46 := -3;
		resume_from_here_in_subtree__sel47 := -3;
		resume_from_here_in_subtree__parLink38 := -3;
		resume_from_here_in_subtree__parLink25 := -3;
		resume_from_here_in_subtree__sel48 := -3;
		resume_from_here_in_subtree__sel49 := -3;
		resume_from_here_in_subtree__parLink26 := -3;
		resume_from_here_in_subtree__parLink1 := -3;
		resume_from_here_in_subtree__sel0 := -3;
		resume_from_here_in_subtree__sel1 := -3;
		resume_from_here_in_subtree__parLink2 := -3;
		resume_from_here_in_subtree__sel2 := -3;
		resume_from_here_in_subtree__sel3 := -3;
		resume_from_here_in_subtree__parLink48 := -3;
		resume_from_here_in_subtree__parLink45 := -3;
		resume_from_here_in_subtree__parLink39 := -3;
		resume_from_here_in_subtree__parLink27 := -3;
		resume_from_here_in_subtree__parLink3 := -3;
		resume_from_here_in_subtree__sel4 := -3;
		resume_from_here_in_subtree__sel5 := -3;
		resume_from_here_in_subtree__parLink4 := -3;
		resume_from_here_in_subtree__sel6 := -3;
		resume_from_here_in_subtree__sel7 := -3;
		resume_from_here_in_subtree__parLink28 := -3;
		resume_from_here_in_subtree__parLink5 := -3;
		resume_from_here_in_subtree__sel8 := -3;
		resume_from_here_in_subtree__sel9 := -3;
		resume_from_here_in_subtree__parLink6 := -3;
		resume_from_here_in_subtree__sel10 := -3;
		resume_from_here_in_subtree__sel11 := -3;
		resume_from_here_in_subtree__parLink40 := -3;
		resume_from_here_in_subtree__parLink29 := -3;
		resume_from_here_in_subtree__parLink7 := -3;
		resume_from_here_in_subtree__sel12 := -3;
		resume_from_here_in_subtree__sel13 := -3;
		resume_from_here_in_subtree__parLink8 := -3;
		resume_from_here_in_subtree__sel14 := -3;
		resume_from_here_in_subtree__sel15 := -3;
		resume_from_here_in_subtree__parLink30 := -3;
		resume_from_here_in_subtree__parLink9 := -3;
		resume_from_here_in_subtree__sel16 := -3;
		resume_from_here_in_subtree__sel17 := -3;
		resume_from_here_in_subtree__parLink10 := -3;
		resume_from_here_in_subtree__sel18 := -3;
		resume_from_here_in_subtree__sel19 := -3;
		resume_from_here_in_subtree__parLink46 := -3;
		resume_from_here_in_subtree__parLink41 := -3;
		resume_from_here_in_subtree__parLink31 := -3;
		resume_from_here_in_subtree__parLink11 := -3;
		resume_from_here_in_subtree__sel20 := -3;
		resume_from_here_in_subtree__sel21 := -3;
		resume_from_here_in_subtree__parLink12 := -3;
		resume_from_here_in_subtree__sel22 := -3;
		resume_from_here_in_subtree__sel23 := -3;
		resume_from_here_in_subtree__parLink32 := -3;
		resume_from_here_in_subtree__parLink13 := -3;
		resume_from_here_in_subtree__sel24 := -3;
		resume_from_here_in_subtree__sel25 := -3;
		resume_from_here_in_subtree__parLink14 := -3;
		resume_from_here_in_subtree__sel26 := -3;
		resume_from_here_in_subtree__sel27 := -3;
		resume_from_here_in_subtree__parLink42 := -3;
		resume_from_here_in_subtree__parLink33 := -3;
		resume_from_here_in_subtree__parLink15 := -3;
		resume_from_here_in_subtree__sel28 := -3;
		resume_from_here_in_subtree__sel29 := -3;
		resume_from_here_in_subtree__parLink16 := -3;
		resume_from_here_in_subtree__sel30 := -3;
		resume_from_here_in_subtree__sel31 := -3;
		resume_from_here_in_subtree__parLink34 := -3;
		resume_from_here_in_subtree__parLink17 := -3;
		resume_from_here_in_subtree__sel32 := -3;
		resume_from_here_in_subtree__sel33 := -3;
		resume_from_here_in_subtree__parLink18 := -3;
		resume_from_here_in_subtree__sel34 := -3;
		resume_from_here_in_subtree__sel35 := -3;
		parLink49.active := TRUE;
		--START OF BLACKBOARD DEFINITIONS
		success_failure_node_10_DOT_randomizer := success_failure_node_10_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_10_DOT_randomizer := success_failure_node_10_DOT_randomizer_stage_1;
		success_failure_node_11_DOT_randomizer := success_failure_node_11_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_11_DOT_randomizer := success_failure_node_11_DOT_randomizer_stage_1;
		success_failure_node_12_DOT_randomizer := success_failure_node_12_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_12_DOT_randomizer := success_failure_node_12_DOT_randomizer_stage_1;
		success_failure_node_13_DOT_randomizer := success_failure_node_13_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_13_DOT_randomizer := success_failure_node_13_DOT_randomizer_stage_1;
		success_failure_node_14_DOT_randomizer := success_failure_node_14_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_14_DOT_randomizer := success_failure_node_14_DOT_randomizer_stage_1;
		success_failure_node_15_DOT_randomizer := success_failure_node_15_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_15_DOT_randomizer := success_failure_node_15_DOT_randomizer_stage_1;
		success_failure_node_16_DOT_randomizer := success_failure_node_16_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_16_DOT_randomizer := success_failure_node_16_DOT_randomizer_stage_1;
		success_failure_node_17_DOT_randomizer := success_failure_node_17_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_17_DOT_randomizer := success_failure_node_17_DOT_randomizer_stage_1;
		success_failure_node_18_DOT_randomizer := success_failure_node_18_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_18_DOT_randomizer := success_failure_node_18_DOT_randomizer_stage_1;
		success_failure_node_19_DOT_randomizer := success_failure_node_19_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_19_DOT_randomizer := success_failure_node_19_DOT_randomizer_stage_1;
		success_failure_node_1_DOT_randomizer := success_failure_node_1_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_1_DOT_randomizer := success_failure_node_1_DOT_randomizer_stage_1;
		success_failure_node_20_DOT_randomizer := success_failure_node_20_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_20_DOT_randomizer := success_failure_node_20_DOT_randomizer_stage_1;
		success_failure_node_21_DOT_randomizer := success_failure_node_21_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_21_DOT_randomizer := success_failure_node_21_DOT_randomizer_stage_1;
		success_failure_node_22_DOT_randomizer := success_failure_node_22_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_22_DOT_randomizer := success_failure_node_22_DOT_randomizer_stage_1;
		success_failure_node_23_DOT_randomizer := success_failure_node_23_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_23_DOT_randomizer := success_failure_node_23_DOT_randomizer_stage_1;
		success_failure_node_24_DOT_randomizer := success_failure_node_24_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_24_DOT_randomizer := success_failure_node_24_DOT_randomizer_stage_1;
		success_failure_node_25_DOT_randomizer := success_failure_node_25_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_25_DOT_randomizer := success_failure_node_25_DOT_randomizer_stage_1;
		success_failure_node_26_DOT_randomizer := success_failure_node_26_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_26_DOT_randomizer := success_failure_node_26_DOT_randomizer_stage_1;
		success_failure_node_27_DOT_randomizer := success_failure_node_27_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_27_DOT_randomizer := success_failure_node_27_DOT_randomizer_stage_1;
		success_failure_node_28_DOT_randomizer := success_failure_node_28_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_28_DOT_randomizer := success_failure_node_28_DOT_randomizer_stage_1;
		success_failure_node_29_DOT_randomizer := success_failure_node_29_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_29_DOT_randomizer := success_failure_node_29_DOT_randomizer_stage_1;
		success_failure_node_2_DOT_randomizer := success_failure_node_2_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_2_DOT_randomizer := success_failure_node_2_DOT_randomizer_stage_1;
		success_failure_node_30_DOT_randomizer := success_failure_node_30_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_30_DOT_randomizer := success_failure_node_30_DOT_randomizer_stage_1;
		success_failure_node_31_DOT_randomizer := success_failure_node_31_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_31_DOT_randomizer := success_failure_node_31_DOT_randomizer_stage_1;
		success_failure_node_32_DOT_randomizer := success_failure_node_32_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_32_DOT_randomizer := success_failure_node_32_DOT_randomizer_stage_1;
		success_failure_node_33_DOT_randomizer := success_failure_node_33_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_33_DOT_randomizer := success_failure_node_33_DOT_randomizer_stage_1;
		success_failure_node_34_DOT_randomizer := success_failure_node_34_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_34_DOT_randomizer := success_failure_node_34_DOT_randomizer_stage_1;
		success_failure_node_35_DOT_randomizer := success_failure_node_35_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_35_DOT_randomizer := success_failure_node_35_DOT_randomizer_stage_1;
		success_failure_node_36_DOT_randomizer := success_failure_node_36_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_36_DOT_randomizer := success_failure_node_36_DOT_randomizer_stage_1;
		success_failure_node_37_DOT_randomizer := success_failure_node_37_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_37_DOT_randomizer := success_failure_node_37_DOT_randomizer_stage_1;
		success_failure_node_38_DOT_randomizer := success_failure_node_38_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_38_DOT_randomizer := success_failure_node_38_DOT_randomizer_stage_1;
		success_failure_node_39_DOT_randomizer := success_failure_node_39_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_39_DOT_randomizer := success_failure_node_39_DOT_randomizer_stage_1;
		success_failure_node_3_DOT_randomizer := success_failure_node_3_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_3_DOT_randomizer := success_failure_node_3_DOT_randomizer_stage_1;
		success_failure_node_40_DOT_randomizer := success_failure_node_40_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_40_DOT_randomizer := success_failure_node_40_DOT_randomizer_stage_1;
		success_failure_node_41_DOT_randomizer := success_failure_node_41_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_41_DOT_randomizer := success_failure_node_41_DOT_randomizer_stage_1;
		success_failure_node_42_DOT_randomizer := success_failure_node_42_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_42_DOT_randomizer := success_failure_node_42_DOT_randomizer_stage_1;
		success_failure_node_43_DOT_randomizer := success_failure_node_43_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_43_DOT_randomizer := success_failure_node_43_DOT_randomizer_stage_1;
		success_failure_node_44_DOT_randomizer := success_failure_node_44_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_44_DOT_randomizer := success_failure_node_44_DOT_randomizer_stage_1;
		success_failure_node_45_DOT_randomizer := success_failure_node_45_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_45_DOT_randomizer := success_failure_node_45_DOT_randomizer_stage_1;
		success_failure_node_46_DOT_randomizer := success_failure_node_46_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_46_DOT_randomizer := success_failure_node_46_DOT_randomizer_stage_1;
		success_failure_node_47_DOT_randomizer := success_failure_node_47_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_47_DOT_randomizer := success_failure_node_47_DOT_randomizer_stage_1;
		success_failure_node_48_DOT_randomizer := success_failure_node_48_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_48_DOT_randomizer := success_failure_node_48_DOT_randomizer_stage_1;
		success_failure_node_49_DOT_randomizer := success_failure_node_49_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_49_DOT_randomizer := success_failure_node_49_DOT_randomizer_stage_1;
		success_failure_node_4_DOT_randomizer := success_failure_node_4_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_4_DOT_randomizer := success_failure_node_4_DOT_randomizer_stage_1;
		success_failure_node_5_DOT_randomizer := success_failure_node_5_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_5_DOT_randomizer := success_failure_node_5_DOT_randomizer_stage_1;
		success_failure_node_6_DOT_randomizer := success_failure_node_6_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_6_DOT_randomizer := success_failure_node_6_DOT_randomizer_stage_1;
		success_failure_node_7_DOT_randomizer := success_failure_node_7_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_7_DOT_randomizer := success_failure_node_7_DOT_randomizer_stage_1;
		success_failure_node_8_DOT_randomizer := success_failure_node_8_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_8_DOT_randomizer := success_failure_node_8_DOT_randomizer_stage_1;
		success_failure_node_9_DOT_randomizer := success_failure_node_9_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_9_DOT_randomizer := success_failure_node_9_DOT_randomizer_stage_1;
		success_failure_node_DOT_randomizer := success_failure_node_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_DOT_randomizer := success_failure_node_DOT_randomizer_stage_1;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		parLink1 : composite_parallel_without_memory(parLink1_1, sel0, TRUE);
		parLink1_1 : composite_parallel_without_memory(parLink1_END, sel1, TRUE);
		parLink1_END : composite_parallel_without_memory_END(TRUE);
		parLink10 : composite_parallel_without_memory(parLink10_1, sel18, TRUE);
		parLink10_1 : composite_parallel_without_memory(parLink10_END, sel19, TRUE);
		parLink10_END : composite_parallel_without_memory_END(TRUE);
		parLink11 : composite_parallel_without_memory(parLink11_1, sel20, TRUE);
		parLink11_1 : composite_parallel_without_memory(parLink11_END, sel21, TRUE);
		parLink11_END : composite_parallel_without_memory_END(TRUE);
		parLink12 : composite_parallel_without_memory(parLink12_1, sel22, TRUE);
		parLink12_1 : composite_parallel_without_memory(parLink12_END, sel23, TRUE);
		parLink12_END : composite_parallel_without_memory_END(TRUE);
		parLink13 : composite_parallel_without_memory(parLink13_1, sel24, TRUE);
		parLink13_1 : composite_parallel_without_memory(parLink13_END, sel25, TRUE);
		parLink13_END : composite_parallel_without_memory_END(TRUE);
		parLink14 : composite_parallel_without_memory(parLink14_1, sel26, TRUE);
		parLink14_1 : composite_parallel_without_memory(parLink14_END, sel27, TRUE);
		parLink14_END : composite_parallel_without_memory_END(TRUE);
		parLink15 : composite_parallel_without_memory(parLink15_1, sel28, TRUE);
		parLink15_1 : composite_parallel_without_memory(parLink15_END, sel29, TRUE);
		parLink15_END : composite_parallel_without_memory_END(TRUE);
		parLink16 : composite_parallel_without_memory(parLink16_1, sel30, TRUE);
		parLink16_1 : composite_parallel_without_memory(parLink16_END, sel31, TRUE);
		parLink16_END : composite_parallel_without_memory_END(TRUE);
		parLink17 : composite_parallel_without_memory(parLink17_1, sel32, TRUE);
		parLink17_1 : composite_parallel_without_memory(parLink17_END, sel33, TRUE);
		parLink17_END : composite_parallel_without_memory_END(TRUE);
		parLink18 : composite_parallel_without_memory(parLink18_1, sel34, TRUE);
		parLink18_1 : composite_parallel_without_memory(parLink18_END, sel35, TRUE);
		parLink18_END : composite_parallel_without_memory_END(TRUE);
		parLink19 : composite_parallel_without_memory(parLink19_1, sel36, TRUE);
		parLink19_1 : composite_parallel_without_memory(parLink19_END, sel37, TRUE);
		parLink19_END : composite_parallel_without_memory_END(TRUE);
		parLink2 : composite_parallel_without_memory(parLink2_1, sel2, TRUE);
		parLink2_1 : composite_parallel_without_memory(parLink2_END, sel3, TRUE);
		parLink2_END : composite_parallel_without_memory_END(TRUE);
		parLink20 : composite_parallel_without_memory(parLink20_1, sel38, TRUE);
		parLink20_1 : composite_parallel_without_memory(parLink20_END, sel39, TRUE);
		parLink20_END : composite_parallel_without_memory_END(TRUE);
		parLink21 : composite_parallel_without_memory(parLink21_1, sel40, TRUE);
		parLink21_1 : composite_parallel_without_memory(parLink21_END, sel41, TRUE);
		parLink21_END : composite_parallel_without_memory_END(TRUE);
		parLink22 : composite_parallel_without_memory(parLink22_1, sel42, TRUE);
		parLink22_1 : composite_parallel_without_memory(parLink22_END, sel43, TRUE);
		parLink22_END : composite_parallel_without_memory_END(TRUE);
		parLink23 : composite_parallel_without_memory(parLink23_1, sel44, TRUE);
		parLink23_1 : composite_parallel_without_memory(parLink23_END, sel45, TRUE);
		parLink23_END : composite_parallel_without_memory_END(TRUE);
		parLink24 : composite_parallel_without_memory(parLink24_1, sel46, TRUE);
		parLink24_1 : composite_parallel_without_memory(parLink24_END, sel47, TRUE);
		parLink24_END : composite_parallel_without_memory_END(TRUE);
		parLink25 : composite_parallel_without_memory(parLink25_1, sel48, TRUE);
		parLink25_1 : composite_parallel_without_memory(parLink25_END, sel49, TRUE);
		parLink25_END : composite_parallel_without_memory_END(TRUE);
		parLink26 : composite_parallel_without_memory(parLink26_1, parLink1, TRUE);
		parLink26_1 : composite_parallel_without_memory(parLink26_END, parLink2, TRUE);
		parLink26_END : composite_parallel_without_memory_END(TRUE);
		parLink27 : composite_parallel_without_memory(parLink27_1, parLink3, TRUE);
		parLink27_1 : composite_parallel_without_memory(parLink27_END, parLink4, TRUE);
		parLink27_END : composite_parallel_without_memory_END(TRUE);
		parLink28 : composite_parallel_without_memory(parLink28_1, parLink5, TRUE);
		parLink28_1 : composite_parallel_without_memory(parLink28_END, parLink6, TRUE);
		parLink28_END : composite_parallel_without_memory_END(TRUE);
		parLink29 : composite_parallel_without_memory(parLink29_1, parLink7, TRUE);
		parLink29_1 : composite_parallel_without_memory(parLink29_END, parLink8, TRUE);
		parLink29_END : composite_parallel_without_memory_END(TRUE);
		parLink3 : composite_parallel_without_memory(parLink3_1, sel4, TRUE);
		parLink3_1 : composite_parallel_without_memory(parLink3_END, sel5, TRUE);
		parLink3_END : composite_parallel_without_memory_END(TRUE);
		parLink30 : composite_parallel_without_memory(parLink30_1, parLink9, TRUE);
		parLink30_1 : composite_parallel_without_memory(parLink30_END, parLink10, TRUE);
		parLink30_END : composite_parallel_without_memory_END(TRUE);
		parLink31 : composite_parallel_without_memory(parLink31_1, parLink11, TRUE);
		parLink31_1 : composite_parallel_without_memory(parLink31_END, parLink12, TRUE);
		parLink31_END : composite_parallel_without_memory_END(TRUE);
		parLink32 : composite_parallel_without_memory(parLink32_1, parLink13, TRUE);
		parLink32_1 : composite_parallel_without_memory(parLink32_END, parLink14, TRUE);
		parLink32_END : composite_parallel_without_memory_END(TRUE);
		parLink33 : composite_parallel_without_memory(parLink33_1, parLink15, TRUE);
		parLink33_1 : composite_parallel_without_memory(parLink33_END, parLink16, TRUE);
		parLink33_END : composite_parallel_without_memory_END(TRUE);
		parLink34 : composite_parallel_without_memory(parLink34_1, parLink17, TRUE);
		parLink34_1 : composite_parallel_without_memory(parLink34_END, parLink18, TRUE);
		parLink34_END : composite_parallel_without_memory_END(TRUE);
		parLink35 : composite_parallel_without_memory(parLink35_1, parLink19, TRUE);
		parLink35_1 : composite_parallel_without_memory(parLink35_END, parLink20, TRUE);
		parLink35_END : composite_parallel_without_memory_END(TRUE);
		parLink36 : composite_parallel_without_memory(parLink36_1, parLink21, TRUE);
		parLink36_1 : composite_parallel_without_memory(parLink36_END, parLink22, TRUE);
		parLink36_END : composite_parallel_without_memory_END(TRUE);
		parLink37 : composite_parallel_without_memory(parLink37_1, parLink23, TRUE);
		parLink37_1 : composite_parallel_without_memory(parLink37_END, parLink24, TRUE);
		parLink37_END : composite_parallel_without_memory_END(TRUE);
		parLink38 : composite_parallel_without_memory(parLink38_1, parLink25, TRUE);
		parLink38_1 : composite_parallel_without_memory(parLink38_END, parLink26, TRUE);
		parLink38_END : composite_parallel_without_memory_END(TRUE);
		parLink39 : composite_parallel_without_memory(parLink39_1, parLink27, TRUE);
		parLink39_1 : composite_parallel_without_memory(parLink39_END, parLink28, TRUE);
		parLink39_END : composite_parallel_without_memory_END(TRUE);
		parLink4 : composite_parallel_without_memory(parLink4_1, sel6, TRUE);
		parLink4_1 : composite_parallel_without_memory(parLink4_END, sel7, TRUE);
		parLink4_END : composite_parallel_without_memory_END(TRUE);
		parLink40 : composite_parallel_without_memory(parLink40_1, parLink29, TRUE);
		parLink40_1 : composite_parallel_without_memory(parLink40_END, parLink30, TRUE);
		parLink40_END : composite_parallel_without_memory_END(TRUE);
		parLink41 : composite_parallel_without_memory(parLink41_1, parLink31, TRUE);
		parLink41_1 : composite_parallel_without_memory(parLink41_END, parLink32, TRUE);
		parLink41_END : composite_parallel_without_memory_END(TRUE);
		parLink42 : composite_parallel_without_memory(parLink42_1, parLink33, TRUE);
		parLink42_1 : composite_parallel_without_memory(parLink42_END, parLink34, TRUE);
		parLink42_END : composite_parallel_without_memory_END(TRUE);
		parLink43 : composite_parallel_without_memory(parLink43_1, parLink35, TRUE);
		parLink43_1 : composite_parallel_without_memory(parLink43_END, parLink36, TRUE);
		parLink43_END : composite_parallel_without_memory_END(TRUE);
		parLink44 : composite_parallel_without_memory(parLink44_1, parLink37, TRUE);
		parLink44_1 : composite_parallel_without_memory(parLink44_END, parLink38, TRUE);
		parLink44_END : composite_parallel_without_memory_END(TRUE);
		parLink45 : composite_parallel_without_memory(parLink45_1, parLink39, TRUE);
		parLink45_1 : composite_parallel_without_memory(parLink45_END, parLink40, TRUE);
		parLink45_END : composite_parallel_without_memory_END(TRUE);
		parLink46 : composite_parallel_without_memory(parLink46_1, parLink41, TRUE);
		parLink46_1 : composite_parallel_without_memory(parLink46_END, parLink42, TRUE);
		parLink46_END : composite_parallel_without_memory_END(TRUE);
		parLink47 : composite_parallel_without_memory(parLink47_1, parLink43, TRUE);
		parLink47_1 : composite_parallel_without_memory(parLink47_END, parLink44, TRUE);
		parLink47_END : composite_parallel_without_memory_END(TRUE);
		parLink48 : composite_parallel_without_memory(parLink48_1, parLink45, TRUE);
		parLink48_1 : composite_parallel_without_memory(parLink48_END, parLink46, TRUE);
		parLink48_END : composite_parallel_without_memory_END(TRUE);
		parLink49 : composite_parallel_without_memory(parLink49_1, parLink47, TRUE);
		parLink49_1 : composite_parallel_without_memory(parLink49_END, parLink48, TRUE);
		parLink49_END : composite_parallel_without_memory_END(TRUE);
		parLink5 : composite_parallel_without_memory(parLink5_1, sel8, TRUE);
		parLink5_1 : composite_parallel_without_memory(parLink5_END, sel9, TRUE);
		parLink5_END : composite_parallel_without_memory_END(TRUE);
		parLink6 : composite_parallel_without_memory(parLink6_1, sel10, TRUE);
		parLink6_1 : composite_parallel_without_memory(parLink6_END, sel11, TRUE);
		parLink6_END : composite_parallel_without_memory_END(TRUE);
		parLink7 : composite_parallel_without_memory(parLink7_1, sel12, TRUE);
		parLink7_1 : composite_parallel_without_memory(parLink7_END, sel13, TRUE);
		parLink7_END : composite_parallel_without_memory_END(TRUE);
		parLink8 : composite_parallel_without_memory(parLink8_1, sel14, TRUE);
		parLink8_1 : composite_parallel_without_memory(parLink8_END, sel15, TRUE);
		parLink8_END : composite_parallel_without_memory_END(TRUE);
		parLink9 : composite_parallel_without_memory(parLink9_1, sel16, TRUE);
		parLink9_1 : composite_parallel_without_memory(parLink9_END, sel17, TRUE);
		parLink9_END : composite_parallel_without_memory_END(TRUE);
		sel0 : composite_selector_without_memory(sel0_1, success_failure_node_14);
		sel0_1 : composite_selector_without_memory(sel0_END, success_node_14);
		sel0_END : composite_selector_without_memory_END;
		sel1 : composite_selector_without_memory(sel1_1, success_failure_node_15);
		sel1_1 : composite_selector_without_memory(sel1_END, success_node_15);
		sel1_END : composite_selector_without_memory_END;
		sel10 : composite_selector_without_memory(sel10_1, success_failure_node_24);
		sel10_1 : composite_selector_without_memory(sel10_END, success_node_24);
		sel10_END : composite_selector_without_memory_END;
		sel11 : composite_selector_without_memory(sel11_1, success_failure_node_25);
		sel11_1 : composite_selector_without_memory(sel11_END, success_node_25);
		sel11_END : composite_selector_without_memory_END;
		sel12 : composite_selector_without_memory(sel12_1, success_failure_node_26);
		sel12_1 : composite_selector_without_memory(sel12_END, success_node_26);
		sel12_END : composite_selector_without_memory_END;
		sel13 : composite_selector_without_memory(sel13_1, success_failure_node_27);
		sel13_1 : composite_selector_without_memory(sel13_END, success_node_27);
		sel13_END : composite_selector_without_memory_END;
		sel14 : composite_selector_without_memory(sel14_1, success_failure_node_28);
		sel14_1 : composite_selector_without_memory(sel14_END, success_node_28);
		sel14_END : composite_selector_without_memory_END;
		sel15 : composite_selector_without_memory(sel15_1, success_failure_node_29);
		sel15_1 : composite_selector_without_memory(sel15_END, success_node_29);
		sel15_END : composite_selector_without_memory_END;
		sel16 : composite_selector_without_memory(sel16_1, success_failure_node_30);
		sel16_1 : composite_selector_without_memory(sel16_END, success_node_30);
		sel16_END : composite_selector_without_memory_END;
		sel17 : composite_selector_without_memory(sel17_1, success_failure_node_31);
		sel17_1 : composite_selector_without_memory(sel17_END, success_node_31);
		sel17_END : composite_selector_without_memory_END;
		sel18 : composite_selector_without_memory(sel18_1, success_failure_node_32);
		sel18_1 : composite_selector_without_memory(sel18_END, success_node_32);
		sel18_END : composite_selector_without_memory_END;
		sel19 : composite_selector_without_memory(sel19_1, success_failure_node_33);
		sel19_1 : composite_selector_without_memory(sel19_END, success_node_33);
		sel19_END : composite_selector_without_memory_END;
		sel2 : composite_selector_without_memory(sel2_1, success_failure_node_16);
		sel2_1 : composite_selector_without_memory(sel2_END, success_node_16);
		sel2_END : composite_selector_without_memory_END;
		sel20 : composite_selector_without_memory(sel20_1, success_failure_node_34);
		sel20_1 : composite_selector_without_memory(sel20_END, success_node_34);
		sel20_END : composite_selector_without_memory_END;
		sel21 : composite_selector_without_memory(sel21_1, success_failure_node_35);
		sel21_1 : composite_selector_without_memory(sel21_END, success_node_35);
		sel21_END : composite_selector_without_memory_END;
		sel22 : composite_selector_without_memory(sel22_1, success_failure_node_36);
		sel22_1 : composite_selector_without_memory(sel22_END, success_node_36);
		sel22_END : composite_selector_without_memory_END;
		sel23 : composite_selector_without_memory(sel23_1, success_failure_node_37);
		sel23_1 : composite_selector_without_memory(sel23_END, success_node_37);
		sel23_END : composite_selector_without_memory_END;
		sel24 : composite_selector_without_memory(sel24_1, success_failure_node_38);
		sel24_1 : composite_selector_without_memory(sel24_END, success_node_38);
		sel24_END : composite_selector_without_memory_END;
		sel25 : composite_selector_without_memory(sel25_1, success_failure_node_39);
		sel25_1 : composite_selector_without_memory(sel25_END, success_node_39);
		sel25_END : composite_selector_without_memory_END;
		sel26 : composite_selector_without_memory(sel26_1, success_failure_node_40);
		sel26_1 : composite_selector_without_memory(sel26_END, success_node_40);
		sel26_END : composite_selector_without_memory_END;
		sel27 : composite_selector_without_memory(sel27_1, success_failure_node_41);
		sel27_1 : composite_selector_without_memory(sel27_END, success_node_41);
		sel27_END : composite_selector_without_memory_END;
		sel28 : composite_selector_without_memory(sel28_1, success_failure_node_42);
		sel28_1 : composite_selector_without_memory(sel28_END, success_node_42);
		sel28_END : composite_selector_without_memory_END;
		sel29 : composite_selector_without_memory(sel29_1, success_failure_node_43);
		sel29_1 : composite_selector_without_memory(sel29_END, success_node_43);
		sel29_END : composite_selector_without_memory_END;
		sel3 : composite_selector_without_memory(sel3_1, success_failure_node_17);
		sel3_1 : composite_selector_without_memory(sel3_END, success_node_17);
		sel3_END : composite_selector_without_memory_END;
		sel30 : composite_selector_without_memory(sel30_1, success_failure_node_44);
		sel30_1 : composite_selector_without_memory(sel30_END, success_node_44);
		sel30_END : composite_selector_without_memory_END;
		sel31 : composite_selector_without_memory(sel31_1, success_failure_node_45);
		sel31_1 : composite_selector_without_memory(sel31_END, success_node_45);
		sel31_END : composite_selector_without_memory_END;
		sel32 : composite_selector_without_memory(sel32_1, success_failure_node_46);
		sel32_1 : composite_selector_without_memory(sel32_END, success_node_46);
		sel32_END : composite_selector_without_memory_END;
		sel33 : composite_selector_without_memory(sel33_1, success_failure_node_47);
		sel33_1 : composite_selector_without_memory(sel33_END, success_node_47);
		sel33_END : composite_selector_without_memory_END;
		sel34 : composite_selector_without_memory(sel34_1, success_failure_node_48);
		sel34_1 : composite_selector_without_memory(sel34_END, success_node_48);
		sel34_END : composite_selector_without_memory_END;
		sel35 : composite_selector_without_memory(sel35_1, success_failure_node_49);
		sel35_1 : composite_selector_without_memory(sel35_END, success_node_49);
		sel35_END : composite_selector_without_memory_END;
		sel36 : composite_selector_without_memory(sel36_1, success_failure_node);
		sel36_1 : composite_selector_without_memory(sel36_END, success_node);
		sel36_END : composite_selector_without_memory_END;
		sel37 : composite_selector_without_memory(sel37_1, success_failure_node_1);
		sel37_1 : composite_selector_without_memory(sel37_END, success_node_1);
		sel37_END : composite_selector_without_memory_END;
		sel38 : composite_selector_without_memory(sel38_1, success_failure_node_2);
		sel38_1 : composite_selector_without_memory(sel38_END, success_node_2);
		sel38_END : composite_selector_without_memory_END;
		sel39 : composite_selector_without_memory(sel39_1, success_failure_node_3);
		sel39_1 : composite_selector_without_memory(sel39_END, success_node_3);
		sel39_END : composite_selector_without_memory_END;
		sel4 : composite_selector_without_memory(sel4_1, success_failure_node_18);
		sel4_1 : composite_selector_without_memory(sel4_END, success_node_18);
		sel4_END : composite_selector_without_memory_END;
		sel40 : composite_selector_without_memory(sel40_1, success_failure_node_4);
		sel40_1 : composite_selector_without_memory(sel40_END, success_node_4);
		sel40_END : composite_selector_without_memory_END;
		sel41 : composite_selector_without_memory(sel41_1, success_failure_node_5);
		sel41_1 : composite_selector_without_memory(sel41_END, success_node_5);
		sel41_END : composite_selector_without_memory_END;
		sel42 : composite_selector_without_memory(sel42_1, success_failure_node_6);
		sel42_1 : composite_selector_without_memory(sel42_END, success_node_6);
		sel42_END : composite_selector_without_memory_END;
		sel43 : composite_selector_without_memory(sel43_1, success_failure_node_7);
		sel43_1 : composite_selector_without_memory(sel43_END, success_node_7);
		sel43_END : composite_selector_without_memory_END;
		sel44 : composite_selector_without_memory(sel44_1, success_failure_node_8);
		sel44_1 : composite_selector_without_memory(sel44_END, success_node_8);
		sel44_END : composite_selector_without_memory_END;
		sel45 : composite_selector_without_memory(sel45_1, success_failure_node_9);
		sel45_1 : composite_selector_without_memory(sel45_END, success_node_9);
		sel45_END : composite_selector_without_memory_END;
		sel46 : composite_selector_without_memory(sel46_1, success_failure_node_10);
		sel46_1 : composite_selector_without_memory(sel46_END, success_node_10);
		sel46_END : composite_selector_without_memory_END;
		sel47 : composite_selector_without_memory(sel47_1, success_failure_node_11);
		sel47_1 : composite_selector_without_memory(sel47_END, success_node_11);
		sel47_END : composite_selector_without_memory_END;
		sel48 : composite_selector_without_memory(sel48_1, success_failure_node_12);
		sel48_1 : composite_selector_without_memory(sel48_END, success_node_12);
		sel48_END : composite_selector_without_memory_END;
		sel49 : composite_selector_without_memory(sel49_1, success_failure_node_13);
		sel49_1 : composite_selector_without_memory(sel49_END, success_node_13);
		sel49_END : composite_selector_without_memory_END;
		sel5 : composite_selector_without_memory(sel5_1, success_failure_node_19);
		sel5_1 : composite_selector_without_memory(sel5_END, success_node_19);
		sel5_END : composite_selector_without_memory_END;
		sel6 : composite_selector_without_memory(sel6_1, success_failure_node_20);
		sel6_1 : composite_selector_without_memory(sel6_END, success_node_20);
		sel6_END : composite_selector_without_memory_END;
		sel7 : composite_selector_without_memory(sel7_1, success_failure_node_21);
		sel7_1 : composite_selector_without_memory(sel7_END, success_node_21);
		sel7_END : composite_selector_without_memory_END;
		sel8 : composite_selector_without_memory(sel8_1, success_failure_node_22);
		sel8_1 : composite_selector_without_memory(sel8_END, success_node_22);
		sel8_END : composite_selector_without_memory_END;
		sel9 : composite_selector_without_memory(sel9_1, success_failure_node_23);
		sel9_1 : composite_selector_without_memory(sel9_END, success_node_23);
		sel9_END : composite_selector_without_memory_END;
		success_failure_node : success_failure_node_module(success_failure_node_DOT_randomizer_stage_1);
		success_failure_node_1 : success_failure_node_1_module(success_failure_node_1_DOT_randomizer_stage_1);
		success_failure_node_10 : success_failure_node_10_module(success_failure_node_10_DOT_randomizer_stage_1);
		success_failure_node_11 : success_failure_node_11_module(success_failure_node_11_DOT_randomizer_stage_1);
		success_failure_node_12 : success_failure_node_12_module(success_failure_node_12_DOT_randomizer_stage_1);
		success_failure_node_13 : success_failure_node_13_module(success_failure_node_13_DOT_randomizer_stage_1);
		success_failure_node_14 : success_failure_node_14_module(success_failure_node_14_DOT_randomizer_stage_1);
		success_failure_node_15 : success_failure_node_15_module(success_failure_node_15_DOT_randomizer_stage_1);
		success_failure_node_16 : success_failure_node_16_module(success_failure_node_16_DOT_randomizer_stage_1);
		success_failure_node_17 : success_failure_node_17_module(success_failure_node_17_DOT_randomizer_stage_1);
		success_failure_node_18 : success_failure_node_18_module(success_failure_node_18_DOT_randomizer_stage_1);
		success_failure_node_19 : success_failure_node_19_module(success_failure_node_19_DOT_randomizer_stage_1);
		success_failure_node_2 : success_failure_node_2_module(success_failure_node_2_DOT_randomizer_stage_1);
		success_failure_node_20 : success_failure_node_20_module(success_failure_node_20_DOT_randomizer_stage_1);
		success_failure_node_21 : success_failure_node_21_module(success_failure_node_21_DOT_randomizer_stage_1);
		success_failure_node_22 : success_failure_node_22_module(success_failure_node_22_DOT_randomizer_stage_1);
		success_failure_node_23 : success_failure_node_23_module(success_failure_node_23_DOT_randomizer_stage_1);
		success_failure_node_24 : success_failure_node_24_module(success_failure_node_24_DOT_randomizer_stage_1);
		success_failure_node_25 : success_failure_node_25_module(success_failure_node_25_DOT_randomizer_stage_1);
		success_failure_node_26 : success_failure_node_26_module(success_failure_node_26_DOT_randomizer_stage_1);
		success_failure_node_27 : success_failure_node_27_module(success_failure_node_27_DOT_randomizer_stage_1);
		success_failure_node_28 : success_failure_node_28_module(success_failure_node_28_DOT_randomizer_stage_1);
		success_failure_node_29 : success_failure_node_29_module(success_failure_node_29_DOT_randomizer_stage_1);
		success_failure_node_3 : success_failure_node_3_module(success_failure_node_3_DOT_randomizer_stage_1);
		success_failure_node_30 : success_failure_node_30_module(success_failure_node_30_DOT_randomizer_stage_1);
		success_failure_node_31 : success_failure_node_31_module(success_failure_node_31_DOT_randomizer_stage_1);
		success_failure_node_32 : success_failure_node_32_module(success_failure_node_32_DOT_randomizer_stage_1);
		success_failure_node_33 : success_failure_node_33_module(success_failure_node_33_DOT_randomizer_stage_1);
		success_failure_node_34 : success_failure_node_34_module(success_failure_node_34_DOT_randomizer_stage_1);
		success_failure_node_35 : success_failure_node_35_module(success_failure_node_35_DOT_randomizer_stage_1);
		success_failure_node_36 : success_failure_node_36_module(success_failure_node_36_DOT_randomizer_stage_1);
		success_failure_node_37 : success_failure_node_37_module(success_failure_node_37_DOT_randomizer_stage_1);
		success_failure_node_38 : success_failure_node_38_module(success_failure_node_38_DOT_randomizer_stage_1);
		success_failure_node_39 : success_failure_node_39_module(success_failure_node_39_DOT_randomizer_stage_1);
		success_failure_node_4 : success_failure_node_4_module(success_failure_node_4_DOT_randomizer_stage_1);
		success_failure_node_40 : success_failure_node_40_module(success_failure_node_40_DOT_randomizer_stage_1);
		success_failure_node_41 : success_failure_node_41_module(success_failure_node_41_DOT_randomizer_stage_1);
		success_failure_node_42 : success_failure_node_42_module(success_failure_node_42_DOT_randomizer_stage_1);
		success_failure_node_43 : success_failure_node_43_module(success_failure_node_43_DOT_randomizer_stage_1);
		success_failure_node_44 : success_failure_node_44_module(success_failure_node_44_DOT_randomizer_stage_1);
		success_failure_node_45 : success_failure_node_45_module(success_failure_node_45_DOT_randomizer_stage_1);
		success_failure_node_46 : success_failure_node_46_module(success_failure_node_46_DOT_randomizer_stage_1);
		success_failure_node_47 : success_failure_node_47_module(success_failure_node_47_DOT_randomizer_stage_1);
		success_failure_node_48 : success_failure_node_48_module(success_failure_node_48_DOT_randomizer_stage_1);
		success_failure_node_49 : success_failure_node_49_module(success_failure_node_49_DOT_randomizer_stage_1);
		success_failure_node_5 : success_failure_node_5_module(success_failure_node_5_DOT_randomizer_stage_1);
		success_failure_node_6 : success_failure_node_6_module(success_failure_node_6_DOT_randomizer_stage_1);
		success_failure_node_7 : success_failure_node_7_module(success_failure_node_7_DOT_randomizer_stage_1);
		success_failure_node_8 : success_failure_node_8_module(success_failure_node_8_DOT_randomizer_stage_1);
		success_failure_node_9 : success_failure_node_9_module(success_failure_node_9_DOT_randomizer_stage_1);
		success_node : success_DEFAULT_module();
		success_node_1 : success_DEFAULT_module();
		success_node_10 : success_DEFAULT_module();
		success_node_11 : success_DEFAULT_module();
		success_node_12 : success_DEFAULT_module();
		success_node_13 : success_DEFAULT_module();
		success_node_14 : success_DEFAULT_module();
		success_node_15 : success_DEFAULT_module();
		success_node_16 : success_DEFAULT_module();
		success_node_17 : success_DEFAULT_module();
		success_node_18 : success_DEFAULT_module();
		success_node_19 : success_DEFAULT_module();
		success_node_2 : success_DEFAULT_module();
		success_node_20 : success_DEFAULT_module();
		success_node_21 : success_DEFAULT_module();
		success_node_22 : success_DEFAULT_module();
		success_node_23 : success_DEFAULT_module();
		success_node_24 : success_DEFAULT_module();
		success_node_25 : success_DEFAULT_module();
		success_node_26 : success_DEFAULT_module();
		success_node_27 : success_DEFAULT_module();
		success_node_28 : success_DEFAULT_module();
		success_node_29 : success_DEFAULT_module();
		success_node_3 : success_DEFAULT_module();
		success_node_30 : success_DEFAULT_module();
		success_node_31 : success_DEFAULT_module();
		success_node_32 : success_DEFAULT_module();
		success_node_33 : success_DEFAULT_module();
		success_node_34 : success_DEFAULT_module();
		success_node_35 : success_DEFAULT_module();
		success_node_36 : success_DEFAULT_module();
		success_node_37 : success_DEFAULT_module();
		success_node_38 : success_DEFAULT_module();
		success_node_39 : success_DEFAULT_module();
		success_node_4 : success_DEFAULT_module();
		success_node_40 : success_DEFAULT_module();
		success_node_41 : success_DEFAULT_module();
		success_node_42 : success_DEFAULT_module();
		success_node_43 : success_DEFAULT_module();
		success_node_44 : success_DEFAULT_module();
		success_node_45 : success_DEFAULT_module();
		success_node_46 : success_DEFAULT_module();
		success_node_47 : success_DEFAULT_module();
		success_node_48 : success_DEFAULT_module();
		success_node_49 : success_DEFAULT_module();
		success_node_5 : success_DEFAULT_module();
		success_node_6 : success_DEFAULT_module();
		success_node_7 : success_DEFAULT_module();
		success_node_8 : success_DEFAULT_module();
		success_node_9 : success_DEFAULT_module();
		--START OF BLACKBOARD VARIABLES DECLARATION
		success_failure_node_10_DOT_randomizer_stage_1 : boolean;
		success_failure_node_11_DOT_randomizer_stage_1 : boolean;
		success_failure_node_12_DOT_randomizer_stage_1 : boolean;
		success_failure_node_13_DOT_randomizer_stage_1 : boolean;
		success_failure_node_14_DOT_randomizer_stage_1 : boolean;
		success_failure_node_15_DOT_randomizer_stage_1 : boolean;
		success_failure_node_16_DOT_randomizer_stage_1 : boolean;
		success_failure_node_17_DOT_randomizer_stage_1 : boolean;
		success_failure_node_18_DOT_randomizer_stage_1 : boolean;
		success_failure_node_19_DOT_randomizer_stage_1 : boolean;
		success_failure_node_1_DOT_randomizer_stage_1 : boolean;
		success_failure_node_20_DOT_randomizer_stage_1 : boolean;
		success_failure_node_21_DOT_randomizer_stage_1 : boolean;
		success_failure_node_22_DOT_randomizer_stage_1 : boolean;
		success_failure_node_23_DOT_randomizer_stage_1 : boolean;
		success_failure_node_24_DOT_randomizer_stage_1 : boolean;
		success_failure_node_25_DOT_randomizer_stage_1 : boolean;
		success_failure_node_26_DOT_randomizer_stage_1 : boolean;
		success_failure_node_27_DOT_randomizer_stage_1 : boolean;
		success_failure_node_28_DOT_randomizer_stage_1 : boolean;
		success_failure_node_29_DOT_randomizer_stage_1 : boolean;
		success_failure_node_2_DOT_randomizer_stage_1 : boolean;
		success_failure_node_30_DOT_randomizer_stage_1 : boolean;
		success_failure_node_31_DOT_randomizer_stage_1 : boolean;
		success_failure_node_32_DOT_randomizer_stage_1 : boolean;
		success_failure_node_33_DOT_randomizer_stage_1 : boolean;
		success_failure_node_34_DOT_randomizer_stage_1 : boolean;
		success_failure_node_35_DOT_randomizer_stage_1 : boolean;
		success_failure_node_36_DOT_randomizer_stage_1 : boolean;
		success_failure_node_37_DOT_randomizer_stage_1 : boolean;
		success_failure_node_38_DOT_randomizer_stage_1 : boolean;
		success_failure_node_39_DOT_randomizer_stage_1 : boolean;
		success_failure_node_3_DOT_randomizer_stage_1 : boolean;
		success_failure_node_40_DOT_randomizer_stage_1 : boolean;
		success_failure_node_41_DOT_randomizer_stage_1 : boolean;
		success_failure_node_42_DOT_randomizer_stage_1 : boolean;
		success_failure_node_43_DOT_randomizer_stage_1 : boolean;
		success_failure_node_44_DOT_randomizer_stage_1 : boolean;
		success_failure_node_45_DOT_randomizer_stage_1 : boolean;
		success_failure_node_46_DOT_randomizer_stage_1 : boolean;
		success_failure_node_47_DOT_randomizer_stage_1 : boolean;
		success_failure_node_48_DOT_randomizer_stage_1 : boolean;
		success_failure_node_49_DOT_randomizer_stage_1 : boolean;
		success_failure_node_4_DOT_randomizer_stage_1 : boolean;
		success_failure_node_5_DOT_randomizer_stage_1 : boolean;
		success_failure_node_6_DOT_randomizer_stage_1 : boolean;
		success_failure_node_7_DOT_randomizer_stage_1 : boolean;
		success_failure_node_8_DOT_randomizer_stage_1 : boolean;
		success_failure_node_9_DOT_randomizer_stage_1 : boolean;
		success_failure_node_DOT_randomizer_stage_1 : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(success_failure_node_10_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_11_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_12_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_13_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_14_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_15_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_16_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_17_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_18_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_19_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_1_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_20_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_21_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_22_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_23_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_24_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_25_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_26_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_27_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_28_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_29_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_2_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_30_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_31_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_32_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_33_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_34_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_35_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_36_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_37_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_38_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_39_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_3_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_40_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_41_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_42_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_43_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_44_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_45_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_46_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_47_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_48_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_49_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_4_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_5_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_6_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_7_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_8_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_9_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(success_failure_node_10_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_10.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_10_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_11_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_11.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_11_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_12_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_12.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_12_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_13_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_13.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_13_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_14_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_14.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_14_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_15_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_15.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_15_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_16_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_16.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_16_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_17_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_17.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_17_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_18_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_18.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_18_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_19_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_19.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_19_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_1_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_1.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_1_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_20_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_20.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_20_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_21_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_21.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_21_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_22_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_22.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_22_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_23_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_23.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_23_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_24_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_24.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_24_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_25_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_25.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_25_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_26_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_26.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_26_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_27_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_27.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_27_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_28_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_28.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_28_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_29_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_29.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_29_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_2_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_2.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_2_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_30_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_30.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_30_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_31_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_31.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_31_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_32_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_32.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_32_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_33_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_33.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_33_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_34_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_34.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_34_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_35_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_35.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_35_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_36_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_36.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_36_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_37_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_37.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_37_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_38_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_38.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_38_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_39_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_39.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_39_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_3_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_3.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_3_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_40_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_40.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_40_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_41_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_41.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_41_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_42_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_42.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_42_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_43_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_43.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_43_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_44_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_44.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_44_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_45_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_45.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_45_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_46_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_46.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_46_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_47_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_47.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_47_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_48_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_48.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_48_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_49_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_49.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_49_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_4_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_4.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_4_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_5_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_5.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_5_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_6_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_6.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_6_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_7_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_7.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_7_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_8_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_8.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_8_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_9_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_9.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_9_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

INVARSPEC ((success_failure_node.status = failure) -> (success_node.status = success));
INVARSPEC ((success_failure_node.status = failure) -> !((success_node.status = success)));
INVARSPEC ((success_failure_node_1.status = failure) -> (success_node_1.status = success));
INVARSPEC ((success_failure_node_1.status = failure) -> !((success_node_1.status = success)));
INVARSPEC ((success_failure_node_2.status = failure) -> (success_node_2.status = success));
INVARSPEC ((success_failure_node_2.status = failure) -> !((success_node_2.status = success)));
INVARSPEC ((success_failure_node_3.status = failure) -> (success_node_3.status = success));
INVARSPEC ((success_failure_node_3.status = failure) -> !((success_node_3.status = success)));
INVARSPEC ((success_failure_node_4.status = failure) -> (success_node_4.status = success));
INVARSPEC ((success_failure_node_4.status = failure) -> !((success_node_4.status = success)));
INVARSPEC ((success_failure_node_5.status = failure) -> (success_node_5.status = success));
INVARSPEC ((success_failure_node_5.status = failure) -> !((success_node_5.status = success)));
INVARSPEC ((success_failure_node_6.status = failure) -> (success_node_6.status = success));
INVARSPEC ((success_failure_node_6.status = failure) -> !((success_node_6.status = success)));
INVARSPEC ((success_failure_node_7.status = failure) -> (success_node_7.status = success));
INVARSPEC ((success_failure_node_7.status = failure) -> !((success_node_7.status = success)));
INVARSPEC ((success_failure_node_8.status = failure) -> (success_node_8.status = success));
INVARSPEC ((success_failure_node_8.status = failure) -> !((success_node_8.status = success)));
INVARSPEC ((success_failure_node_9.status = failure) -> (success_node_9.status = success));
INVARSPEC ((success_failure_node_9.status = failure) -> !((success_node_9.status = success)));
INVARSPEC ((success_failure_node_10.status = failure) -> (success_node_10.status = success));
INVARSPEC ((success_failure_node_10.status = failure) -> !((success_node_10.status = success)));
INVARSPEC ((success_failure_node_11.status = failure) -> (success_node_11.status = success));
INVARSPEC ((success_failure_node_11.status = failure) -> !((success_node_11.status = success)));
INVARSPEC ((success_failure_node_12.status = failure) -> (success_node_12.status = success));
INVARSPEC ((success_failure_node_12.status = failure) -> !((success_node_12.status = success)));
INVARSPEC ((success_failure_node_13.status = failure) -> (success_node_13.status = success));
INVARSPEC ((success_failure_node_13.status = failure) -> !((success_node_13.status = success)));
INVARSPEC ((success_failure_node_14.status = failure) -> (success_node_14.status = success));
INVARSPEC ((success_failure_node_14.status = failure) -> !((success_node_14.status = success)));
INVARSPEC ((success_failure_node_15.status = failure) -> (success_node_15.status = success));
INVARSPEC ((success_failure_node_15.status = failure) -> !((success_node_15.status = success)));
INVARSPEC ((success_failure_node_16.status = failure) -> (success_node_16.status = success));
INVARSPEC ((success_failure_node_16.status = failure) -> !((success_node_16.status = success)));
INVARSPEC ((success_failure_node_17.status = failure) -> (success_node_17.status = success));
INVARSPEC ((success_failure_node_17.status = failure) -> !((success_node_17.status = success)));
INVARSPEC ((success_failure_node_18.status = failure) -> (success_node_18.status = success));
INVARSPEC ((success_failure_node_18.status = failure) -> !((success_node_18.status = success)));
INVARSPEC ((success_failure_node_19.status = failure) -> (success_node_19.status = success));
INVARSPEC ((success_failure_node_19.status = failure) -> !((success_node_19.status = success)));
INVARSPEC ((success_failure_node_20.status = failure) -> (success_node_20.status = success));
INVARSPEC ((success_failure_node_20.status = failure) -> !((success_node_20.status = success)));
INVARSPEC ((success_failure_node_21.status = failure) -> (success_node_21.status = success));
INVARSPEC ((success_failure_node_21.status = failure) -> !((success_node_21.status = success)));
INVARSPEC ((success_failure_node_22.status = failure) -> (success_node_22.status = success));
INVARSPEC ((success_failure_node_22.status = failure) -> !((success_node_22.status = success)));
INVARSPEC ((success_failure_node_23.status = failure) -> (success_node_23.status = success));
INVARSPEC ((success_failure_node_23.status = failure) -> !((success_node_23.status = success)));
INVARSPEC ((success_failure_node_24.status = failure) -> (success_node_24.status = success));
INVARSPEC ((success_failure_node_24.status = failure) -> !((success_node_24.status = success)));
INVARSPEC ((success_failure_node_25.status = failure) -> (success_node_25.status = success));
INVARSPEC ((success_failure_node_25.status = failure) -> !((success_node_25.status = success)));
INVARSPEC ((success_failure_node_26.status = failure) -> (success_node_26.status = success));
INVARSPEC ((success_failure_node_26.status = failure) -> !((success_node_26.status = success)));
INVARSPEC ((success_failure_node_27.status = failure) -> (success_node_27.status = success));
INVARSPEC ((success_failure_node_27.status = failure) -> !((success_node_27.status = success)));
INVARSPEC ((success_failure_node_28.status = failure) -> (success_node_28.status = success));
INVARSPEC ((success_failure_node_28.status = failure) -> !((success_node_28.status = success)));
INVARSPEC ((success_failure_node_29.status = failure) -> (success_node_29.status = success));
INVARSPEC ((success_failure_node_29.status = failure) -> !((success_node_29.status = success)));
INVARSPEC ((success_failure_node_30.status = failure) -> (success_node_30.status = success));
INVARSPEC ((success_failure_node_30.status = failure) -> !((success_node_30.status = success)));
INVARSPEC ((success_failure_node_31.status = failure) -> (success_node_31.status = success));
INVARSPEC ((success_failure_node_31.status = failure) -> !((success_node_31.status = success)));
INVARSPEC ((success_failure_node_32.status = failure) -> (success_node_32.status = success));
INVARSPEC ((success_failure_node_32.status = failure) -> !((success_node_32.status = success)));
INVARSPEC ((success_failure_node_33.status = failure) -> (success_node_33.status = success));
INVARSPEC ((success_failure_node_33.status = failure) -> !((success_node_33.status = success)));
INVARSPEC ((success_failure_node_34.status = failure) -> (success_node_34.status = success));
INVARSPEC ((success_failure_node_34.status = failure) -> !((success_node_34.status = success)));
INVARSPEC ((success_failure_node_35.status = failure) -> (success_node_35.status = success));
INVARSPEC ((success_failure_node_35.status = failure) -> !((success_node_35.status = success)));
INVARSPEC ((success_failure_node_36.status = failure) -> (success_node_36.status = success));
INVARSPEC ((success_failure_node_36.status = failure) -> !((success_node_36.status = success)));
INVARSPEC ((success_failure_node_37.status = failure) -> (success_node_37.status = success));
INVARSPEC ((success_failure_node_37.status = failure) -> !((success_node_37.status = success)));
INVARSPEC ((success_failure_node_38.status = failure) -> (success_node_38.status = success));
INVARSPEC ((success_failure_node_38.status = failure) -> !((success_node_38.status = success)));
INVARSPEC ((success_failure_node_39.status = failure) -> (success_node_39.status = success));
INVARSPEC ((success_failure_node_39.status = failure) -> !((success_node_39.status = success)));
INVARSPEC ((success_failure_node_40.status = failure) -> (success_node_40.status = success));
INVARSPEC ((success_failure_node_40.status = failure) -> !((success_node_40.status = success)));
INVARSPEC ((success_failure_node_41.status = failure) -> (success_node_41.status = success));
INVARSPEC ((success_failure_node_41.status = failure) -> !((success_node_41.status = success)));
INVARSPEC ((success_failure_node_42.status = failure) -> (success_node_42.status = success));
INVARSPEC ((success_failure_node_42.status = failure) -> !((success_node_42.status = success)));
INVARSPEC ((success_failure_node_43.status = failure) -> (success_node_43.status = success));
INVARSPEC ((success_failure_node_43.status = failure) -> !((success_node_43.status = success)));
INVARSPEC ((success_failure_node_44.status = failure) -> (success_node_44.status = success));
INVARSPEC ((success_failure_node_44.status = failure) -> !((success_node_44.status = success)));
INVARSPEC ((success_failure_node_45.status = failure) -> (success_node_45.status = success));
INVARSPEC ((success_failure_node_45.status = failure) -> !((success_node_45.status = success)));
INVARSPEC ((success_failure_node_46.status = failure) -> (success_node_46.status = success));
INVARSPEC ((success_failure_node_46.status = failure) -> !((success_node_46.status = success)));
INVARSPEC ((success_failure_node_47.status = failure) -> (success_node_47.status = success));
INVARSPEC ((success_failure_node_47.status = failure) -> !((success_node_47.status = success)));
INVARSPEC ((success_failure_node_48.status = failure) -> (success_node_48.status = success));
INVARSPEC ((success_failure_node_48.status = failure) -> !((success_node_48.status = success)));
INVARSPEC ((success_failure_node_49.status = failure) -> (success_node_49.status = success));
INVARSPEC ((success_failure_node_49.status = failure) -> !((success_node_49.status = success)));
MODULE define_nodes
	DEFINE
		parLink49 := 0;
		parLink47 := 1;
		parLink43 := 2;
		parLink35 := 3;
		parLink19 := 4;
		sel36 := 5;
		success_failure_node := 6;
		success_node := 7;
		sel37 := 8;
		success_failure_node_1 := 9;
		success_node_1 := 10;
		parLink20 := 11;
		sel38 := 12;
		success_failure_node_2 := 13;
		success_node_2 := 14;
		sel39 := 15;
		success_failure_node_3 := 16;
		success_node_3 := 17;
		parLink36 := 18;
		parLink21 := 19;
		sel40 := 20;
		success_failure_node_4 := 21;
		success_node_4 := 22;
		sel41 := 23;
		success_failure_node_5 := 24;
		success_node_5 := 25;
		parLink22 := 26;
		sel42 := 27;
		success_failure_node_6 := 28;
		success_node_6 := 29;
		sel43 := 30;
		success_failure_node_7 := 31;
		success_node_7 := 32;
		parLink44 := 33;
		parLink37 := 34;
		parLink23 := 35;
		sel44 := 36;
		success_failure_node_8 := 37;
		success_node_8 := 38;
		sel45 := 39;
		success_failure_node_9 := 40;
		success_node_9 := 41;
		parLink24 := 42;
		sel46 := 43;
		success_failure_node_10 := 44;
		success_node_10 := 45;
		sel47 := 46;
		success_failure_node_11 := 47;
		success_node_11 := 48;
		parLink38 := 49;
		parLink25 := 50;
		sel48 := 51;
		success_failure_node_12 := 52;
		success_node_12 := 53;
		sel49 := 54;
		success_failure_node_13 := 55;
		success_node_13 := 56;
		parLink26 := 57;
		parLink1 := 58;
		sel0 := 59;
		success_failure_node_14 := 60;
		success_node_14 := 61;
		sel1 := 62;
		success_failure_node_15 := 63;
		success_node_15 := 64;
		parLink2 := 65;
		sel2 := 66;
		success_failure_node_16 := 67;
		success_node_16 := 68;
		sel3 := 69;
		success_failure_node_17 := 70;
		success_node_17 := 71;
		parLink48 := 72;
		parLink45 := 73;
		parLink39 := 74;
		parLink27 := 75;
		parLink3 := 76;
		sel4 := 77;
		success_failure_node_18 := 78;
		success_node_18 := 79;
		sel5 := 80;
		success_failure_node_19 := 81;
		success_node_19 := 82;
		parLink4 := 83;
		sel6 := 84;
		success_failure_node_20 := 85;
		success_node_20 := 86;
		sel7 := 87;
		success_failure_node_21 := 88;
		success_node_21 := 89;
		parLink28 := 90;
		parLink5 := 91;
		sel8 := 92;
		success_failure_node_22 := 93;
		success_node_22 := 94;
		sel9 := 95;
		success_failure_node_23 := 96;
		success_node_23 := 97;
		parLink6 := 98;
		sel10 := 99;
		success_failure_node_24 := 100;
		success_node_24 := 101;
		sel11 := 102;
		success_failure_node_25 := 103;
		success_node_25 := 104;
		parLink40 := 105;
		parLink29 := 106;
		parLink7 := 107;
		sel12 := 108;
		success_failure_node_26 := 109;
		success_node_26 := 110;
		sel13 := 111;
		success_failure_node_27 := 112;
		success_node_27 := 113;
		parLink8 := 114;
		sel14 := 115;
		success_failure_node_28 := 116;
		success_node_28 := 117;
		sel15 := 118;
		success_failure_node_29 := 119;
		success_node_29 := 120;
		parLink30 := 121;
		parLink9 := 122;
		sel16 := 123;
		success_failure_node_30 := 124;
		success_node_30 := 125;
		sel17 := 126;
		success_failure_node_31 := 127;
		success_node_31 := 128;
		parLink10 := 129;
		sel18 := 130;
		success_failure_node_32 := 131;
		success_node_32 := 132;
		sel19 := 133;
		success_failure_node_33 := 134;
		success_node_33 := 135;
		parLink46 := 136;
		parLink41 := 137;
		parLink31 := 138;
		parLink11 := 139;
		sel20 := 140;
		success_failure_node_34 := 141;
		success_node_34 := 142;
		sel21 := 143;
		success_failure_node_35 := 144;
		success_node_35 := 145;
		parLink12 := 146;
		sel22 := 147;
		success_failure_node_36 := 148;
		success_node_36 := 149;
		sel23 := 150;
		success_failure_node_37 := 151;
		success_node_37 := 152;
		parLink32 := 153;
		parLink13 := 154;
		sel24 := 155;
		success_failure_node_38 := 156;
		success_node_38 := 157;
		sel25 := 158;
		success_failure_node_39 := 159;
		success_node_39 := 160;
		parLink14 := 161;
		sel26 := 162;
		success_failure_node_40 := 163;
		success_node_40 := 164;
		sel27 := 165;
		success_failure_node_41 := 166;
		success_node_41 := 167;
		parLink42 := 168;
		parLink33 := 169;
		parLink15 := 170;
		sel28 := 171;
		success_failure_node_42 := 172;
		success_node_42 := 173;
		sel29 := 174;
		success_failure_node_43 := 175;
		success_node_43 := 176;
		parLink16 := 177;
		sel30 := 178;
		success_failure_node_44 := 179;
		success_node_44 := 180;
		sel31 := 181;
		success_failure_node_45 := 182;
		success_node_45 := 183;
		parLink34 := 184;
		parLink17 := 185;
		sel32 := 186;
		success_failure_node_46 := 187;
		success_node_46 := 188;
		sel33 := 189;
		success_failure_node_47 := 190;
		success_node_47 := 191;
		parLink18 := 192;
		sel34 := 193;
		success_failure_node_48 := 194;
		success_node_48 := 195;
		sel35 := 196;
		success_failure_node_49 := 197;
		success_node_49 := 198;
MODULE composite_parallel_without_memory(next_composite, child, success_on_all)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = failure : failure;
				success_on_all & (child.internal_status = success) : next_composite.internal_status;
				success_on_all & (child.internal_status = running) : running;
				(child.internal_status = success) : success;
				TRUE : next_composite.internal_status;
			esac;
		child.active := active;
		next_composite.active := active;

MODULE composite_parallel_without_memory_END(success_on_all)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success_on_all ? success : running;
MODULE composite_selector_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = failure : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = failure);

MODULE composite_selector_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? failure : invalid;
		internal_status := failure;
MODULE success_failure_node_module(success_failure_node_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_1_module(success_failure_node_1_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_1_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_10_module(success_failure_node_10_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_10_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_11_module(success_failure_node_11_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_11_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_12_module(success_failure_node_12_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_12_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_13_module(success_failure_node_13_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_13_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_14_module(success_failure_node_14_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_14_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_15_module(success_failure_node_15_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_15_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_16_module(success_failure_node_16_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_16_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_17_module(success_failure_node_17_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_17_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_18_module(success_failure_node_18_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_18_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_19_module(success_failure_node_19_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_19_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_2_module(success_failure_node_2_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_2_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_20_module(success_failure_node_20_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_20_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_21_module(success_failure_node_21_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_21_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_22_module(success_failure_node_22_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_22_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_23_module(success_failure_node_23_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_23_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_24_module(success_failure_node_24_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_24_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_25_module(success_failure_node_25_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_25_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_26_module(success_failure_node_26_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_26_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_27_module(success_failure_node_27_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_27_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_28_module(success_failure_node_28_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_28_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_29_module(success_failure_node_29_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_29_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_3_module(success_failure_node_3_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_3_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_30_module(success_failure_node_30_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_30_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_31_module(success_failure_node_31_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_31_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_32_module(success_failure_node_32_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_32_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_33_module(success_failure_node_33_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_33_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_34_module(success_failure_node_34_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_34_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_35_module(success_failure_node_35_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_35_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_36_module(success_failure_node_36_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_36_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_37_module(success_failure_node_37_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_37_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_38_module(success_failure_node_38_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_38_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_39_module(success_failure_node_39_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_39_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_4_module(success_failure_node_4_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_4_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_40_module(success_failure_node_40_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_40_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_41_module(success_failure_node_41_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_41_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_42_module(success_failure_node_42_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_42_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_43_module(success_failure_node_43_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_43_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_44_module(success_failure_node_44_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_44_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_45_module(success_failure_node_45_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_45_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_46_module(success_failure_node_46_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_46_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_47_module(success_failure_node_47_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_47_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_48_module(success_failure_node_48_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_48_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_49_module(success_failure_node_49_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_49_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_5_module(success_failure_node_5_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_5_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_6_module(success_failure_node_6_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_6_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_7_module(success_failure_node_7_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_7_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_8_module(success_failure_node_8_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_8_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_9_module(success_failure_node_9_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_9_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
