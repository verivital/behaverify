*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 17:48:12 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- specification AG ((active_node = node_names.success_failure_node & current_status = failure) -> A [ active_node > 0 U (active_node = node_names.success_node & current_status = success) ] )  is true
-- specification AG ((active_node = node_names.success_failure_node & current_status = failure) -> !A [ active_node > 0 U (active_node = node_names.success_node & current_status = success) ] )  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    active_node = -1
    previous_node = -1
    current_status = invalid
    previous_status = invalid
    randomizer = FALSE
    next_child__seqLink4 = 1
    next_child__seqLink3 = 9
    next_child__seqLink1 = 13
    next_child__sel1 = 17
    next_child__sel0 = 14
    next_child__sel4 = 10
    next_child__seqLink2 = 2
    next_child__sel3 = 6
    next_child__sel2 = 3
    child_index_to_resume_from__seqLink4 = -2
    child_index_to_resume_from__seqLink3 = -2
    child_index_to_resume_from__seqLink1 = -2
    child_index_to_resume_from__sel1 = -2
    child_index_to_resume_from__sel0 = -2
    child_index_to_resume_from__sel4 = -2
    child_index_to_resume_from__seqLink2 = -2
    child_index_to_resume_from__sel3 = -2
    child_index_to_resume_from__sel2 = -2
    resume_from_here_in_subtree__seqLink4 = -3
    node_names.success_node_4 = 18
    node_names.success_failure_node_4 = 17
    node_names.sel1 = 16
    node_names.success_node_3 = 15
    node_names.success_failure_node_3 = 14
    node_names.sel0 = 13
    node_names.seqLink1 = 12
    node_names.success_node_2 = 11
    node_names.success_failure_node_2 = 10
    node_names.sel4 = 9
    node_names.seqLink3 = 8
    node_names.success_node_1 = 7
    node_names.success_failure_node_1 = 6
    node_names.sel3 = 5
    node_names.success_node = 4
    node_names.success_failure_node = 3
    node_names.sel2 = 2
    node_names.seqLink2 = 1
    node_names.seqLink4 = 0
  -> State: 1.2 <-
    active_node = 0
  -> State: 1.3 <-
    active_node = 1
    previous_node = 0
  -> State: 1.4 <-
    active_node = 2
    previous_node = 1
    next_child__seqLink4 = 8
  -> State: 1.5 <-
    active_node = 3
    previous_node = 2
    current_status = failure
    next_child__seqLink2 = 5
-- specification AG ((active_node = node_names.success_failure_node_1 & current_status = failure) -> A [ active_node > 0 U (active_node = node_names.success_node_1 & current_status = success) ] )  is true
-- specification AG ((active_node = node_names.success_failure_node_1 & current_status = failure) -> !A [ active_node > 0 U (active_node = node_names.success_node_1 & current_status = success) ] )  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    active_node = -1
    previous_node = -1
    current_status = invalid
    previous_status = invalid
    randomizer = FALSE
    next_child__seqLink4 = 1
    next_child__seqLink3 = 9
    next_child__seqLink1 = 13
    next_child__sel1 = 17
    next_child__sel0 = 14
    next_child__sel4 = 10
    next_child__seqLink2 = 2
    next_child__sel3 = 6
    next_child__sel2 = 3
    child_index_to_resume_from__seqLink4 = -2
    child_index_to_resume_from__seqLink3 = -2
    child_index_to_resume_from__seqLink1 = -2
    child_index_to_resume_from__sel1 = -2
    child_index_to_resume_from__sel0 = -2
    child_index_to_resume_from__sel4 = -2
    child_index_to_resume_from__seqLink2 = -2
    child_index_to_resume_from__sel3 = -2
    child_index_to_resume_from__sel2 = -2
    resume_from_here_in_subtree__seqLink4 = -3
    node_names.success_node_4 = 18
    node_names.success_failure_node_4 = 17
    node_names.sel1 = 16
    node_names.success_node_3 = 15
    node_names.success_failure_node_3 = 14
    node_names.sel0 = 13
    node_names.seqLink1 = 12
    node_names.success_node_2 = 11
    node_names.success_failure_node_2 = 10
    node_names.sel4 = 9
    node_names.seqLink3 = 8
    node_names.success_node_1 = 7
    node_names.success_failure_node_1 = 6
    node_names.sel3 = 5
    node_names.success_node = 4
    node_names.success_failure_node = 3
    node_names.sel2 = 2
    node_names.seqLink2 = 1
    node_names.seqLink4 = 0
  -> State: 2.2 <-
    active_node = 0
  -> State: 2.3 <-
    active_node = 1
    previous_node = 0
  -> State: 2.4 <-
    active_node = 2
    previous_node = 1
    next_child__seqLink4 = 8
  -> State: 2.5 <-
    active_node = 3
    previous_node = 2
    current_status = failure
    next_child__seqLink2 = 5
  -> State: 2.6 <-
    active_node = 2
    previous_node = 3
    current_status = invalid
    previous_status = failure
    next_child__sel2 = 4
  -> State: 2.7 <-
    active_node = 4
    previous_node = 2
    current_status = success
    previous_status = invalid
    next_child__sel2 = 3
  -> State: 2.8 <-
    active_node = 2
    previous_node = 4
    previous_status = success
    next_child__sel2 = -1
  -> State: 2.9 <-
    active_node = 1
    previous_node = 2
    current_status = invalid
    next_child__sel2 = 3
  -> State: 2.10 <-
    active_node = 5
    previous_node = 1
    previous_status = invalid
    next_child__seqLink2 = 2
  -> State: 2.11 <-
    active_node = 6
    previous_node = 5
    current_status = failure
    next_child__seqLink2 = -1
    next_child__sel2 = -1
-- specification AG ((active_node = node_names.success_failure_node_2 & current_status = failure) -> A [ active_node > 0 U (active_node = node_names.success_node_2 & current_status = success) ] )  is true
-- specification AG ((active_node = node_names.success_failure_node_2 & current_status = failure) -> !A [ active_node > 0 U (active_node = node_names.success_node_2 & current_status = success) ] )  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 3.1 <-
    active_node = -1
    previous_node = -1
    current_status = invalid
    previous_status = invalid
    randomizer = FALSE
    next_child__seqLink4 = 1
    next_child__seqLink3 = 9
    next_child__seqLink1 = 13
    next_child__sel1 = 17
    next_child__sel0 = 14
    next_child__sel4 = 10
    next_child__seqLink2 = 2
    next_child__sel3 = 6
    next_child__sel2 = 3
    child_index_to_resume_from__seqLink4 = -2
    child_index_to_resume_from__seqLink3 = -2
    child_index_to_resume_from__seqLink1 = -2
    child_index_to_resume_from__sel1 = -2
    child_index_to_resume_from__sel0 = -2
    child_index_to_resume_from__sel4 = -2
    child_index_to_resume_from__seqLink2 = -2
    child_index_to_resume_from__sel3 = -2
    child_index_to_resume_from__sel2 = -2
    resume_from_here_in_subtree__seqLink4 = -3
    node_names.success_node_4 = 18
    node_names.success_failure_node_4 = 17
    node_names.sel1 = 16
    node_names.success_node_3 = 15
    node_names.success_failure_node_3 = 14
    node_names.sel0 = 13
    node_names.seqLink1 = 12
    node_names.success_node_2 = 11
    node_names.success_failure_node_2 = 10
    node_names.sel4 = 9
    node_names.seqLink3 = 8
    node_names.success_node_1 = 7
    node_names.success_failure_node_1 = 6
    node_names.sel3 = 5
    node_names.success_node = 4
    node_names.success_failure_node = 3
    node_names.sel2 = 2
    node_names.seqLink2 = 1
    node_names.seqLink4 = 0
  -> State: 3.2 <-
    active_node = 0
  -> State: 3.3 <-
    active_node = 1
    previous_node = 0
  -> State: 3.4 <-
    active_node = 2
    previous_node = 1
    next_child__seqLink4 = 8
  -> State: 3.5 <-
    active_node = 3
    previous_node = 2
    current_status = failure
    next_child__seqLink2 = 5
  -> State: 3.6 <-
    active_node = 2
    previous_node = 3
    current_status = invalid
    previous_status = failure
    randomizer = TRUE
    next_child__sel2 = 4
  -> State: 3.7 <-
    active_node = 4
    previous_node = 2
    current_status = success
    previous_status = invalid
    next_child__sel2 = 3
  -> State: 3.8 <-
    active_node = 2
    previous_node = 4
    previous_status = success
    next_child__sel2 = -1
  -> State: 3.9 <-
    active_node = 1
    previous_node = 2
    current_status = invalid
    next_child__sel2 = 3
  -> State: 3.10 <-
    active_node = 5
    previous_node = 1
    previous_status = invalid
    next_child__seqLink2 = 2
  -> State: 3.11 <-
    active_node = 6
    previous_node = 5
    current_status = success
    next_child__seqLink2 = -1
    next_child__sel2 = -1
  -> State: 3.12 <-
    active_node = 5
    previous_node = 6
    previous_status = success
    randomizer = FALSE
    next_child__sel3 = 7
  -> State: 3.13 <-
    active_node = 1
    previous_node = 5
    next_child__sel3 = 6
  -> State: 3.14 <-
    active_node = 0
    previous_node = 1
    current_status = invalid
    next_child__seqLink2 = 2
    next_child__sel2 = 3
  -> State: 3.15 <-
    active_node = 8
    previous_node = 0
    previous_status = invalid
    next_child__seqLink4 = 1
  -> State: 3.16 <-
    active_node = 9
    previous_node = 8
    next_child__seqLink4 = -1
    next_child__seqLink2 = -1
    next_child__sel3 = -1
    next_child__sel2 = -1
  -> State: 3.17 <-
    active_node = 10
    previous_node = 9
    current_status = failure
    next_child__seqLink3 = 12
-- specification AG ((active_node = node_names.success_failure_node_3 & current_status = failure) -> A [ active_node > 0 U (active_node = node_names.success_node_3 & current_status = success) ] )  is true
-- specification AG ((active_node = node_names.success_failure_node_3 & current_status = failure) -> !A [ active_node > 0 U (active_node = node_names.success_node_3 & current_status = success) ] )  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 4.1 <-
    active_node = -1
    previous_node = -1
    current_status = invalid
    previous_status = invalid
    randomizer = FALSE
    next_child__seqLink4 = 1
    next_child__seqLink3 = 9
    next_child__seqLink1 = 13
    next_child__sel1 = 17
    next_child__sel0 = 14
    next_child__sel4 = 10
    next_child__seqLink2 = 2
    next_child__sel3 = 6
    next_child__sel2 = 3
    child_index_to_resume_from__seqLink4 = -2
    child_index_to_resume_from__seqLink3 = -2
    child_index_to_resume_from__seqLink1 = -2
    child_index_to_resume_from__sel1 = -2
    child_index_to_resume_from__sel0 = -2
    child_index_to_resume_from__sel4 = -2
    child_index_to_resume_from__seqLink2 = -2
    child_index_to_resume_from__sel3 = -2
    child_index_to_resume_from__sel2 = -2
    resume_from_here_in_subtree__seqLink4 = -3
    node_names.success_node_4 = 18
    node_names.success_failure_node_4 = 17
    node_names.sel1 = 16
    node_names.success_node_3 = 15
    node_names.success_failure_node_3 = 14
    node_names.sel0 = 13
    node_names.seqLink1 = 12
    node_names.success_node_2 = 11
    node_names.success_failure_node_2 = 10
    node_names.sel4 = 9
    node_names.seqLink3 = 8
    node_names.success_node_1 = 7
    node_names.success_failure_node_1 = 6
    node_names.sel3 = 5
    node_names.success_node = 4
    node_names.success_failure_node = 3
    node_names.sel2 = 2
    node_names.seqLink2 = 1
    node_names.seqLink4 = 0
  -> State: 4.2 <-
    active_node = 0
  -> State: 4.3 <-
    active_node = 1
    previous_node = 0
  -> State: 4.4 <-
    active_node = 2
    previous_node = 1
    next_child__seqLink4 = 8
  -> State: 4.5 <-
    active_node = 3
    previous_node = 2
    current_status = failure
    next_child__seqLink2 = 5
  -> State: 4.6 <-
    active_node = 2
    previous_node = 3
    current_status = invalid
    previous_status = failure
    randomizer = TRUE
    next_child__sel2 = 4
  -> State: 4.7 <-
    active_node = 4
    previous_node = 2
    current_status = success
    previous_status = invalid
    next_child__sel2 = 3
  -> State: 4.8 <-
    active_node = 2
    previous_node = 4
    previous_status = success
    next_child__sel2 = -1
  -> State: 4.9 <-
    active_node = 1
    previous_node = 2
    current_status = invalid
    next_child__sel2 = 3
  -> State: 4.10 <-
    active_node = 5
    previous_node = 1
    previous_status = invalid
    next_child__seqLink2 = 2
  -> State: 4.11 <-
    active_node = 6
    previous_node = 5
    current_status = success
    next_child__seqLink2 = -1
    next_child__sel2 = -1
  -> State: 4.12 <-
    active_node = 5
    previous_node = 6
    previous_status = success
    next_child__sel3 = 7
  -> State: 4.13 <-
    active_node = 1
    previous_node = 5
    next_child__sel3 = 6
  -> State: 4.14 <-
    active_node = 0
    previous_node = 1
    current_status = invalid
    next_child__seqLink2 = 2
    next_child__sel2 = 3
  -> State: 4.15 <-
    active_node = 8
    previous_node = 0
    previous_status = invalid
    next_child__seqLink4 = 1
  -> State: 4.16 <-
    active_node = 9
    previous_node = 8
    next_child__seqLink4 = -1
    next_child__seqLink2 = -1
    next_child__sel3 = -1
    next_child__sel2 = -1
  -> State: 4.17 <-
    active_node = 10
    previous_node = 9
    current_status = success
    next_child__seqLink3 = 12
  -> State: 4.18 <-
    active_node = 9
    previous_node = 10
    previous_status = success
    randomizer = FALSE
    next_child__sel4 = 11
  -> State: 4.19 <-
    active_node = 8
    previous_node = 9
    current_status = invalid
    next_child__sel4 = 10
  -> State: 4.20 <-
    active_node = 12
    previous_node = 8
    previous_status = invalid
    next_child__seqLink3 = 9
  -> State: 4.21 <-
    active_node = 13
    previous_node = 12
    next_child__seqLink3 = -1
    next_child__sel4 = -1
  -> State: 4.22 <-
    active_node = 14
    previous_node = 13
    current_status = failure
    next_child__seqLink1 = 16
-- specification AG ((active_node = node_names.success_failure_node_4 & current_status = failure) -> A [ active_node > 0 U (active_node = node_names.success_node_4 & current_status = success) ] )  is true
-- specification AG ((active_node = node_names.success_failure_node_4 & current_status = failure) -> !A [ active_node > 0 U (active_node = node_names.success_node_4 & current_status = success) ] )  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
  -> State: 5.1 <-
    active_node = -1
    previous_node = -1
    current_status = invalid
    previous_status = invalid
    randomizer = FALSE
    next_child__seqLink4 = 1
    next_child__seqLink3 = 9
    next_child__seqLink1 = 13
    next_child__sel1 = 17
    next_child__sel0 = 14
    next_child__sel4 = 10
    next_child__seqLink2 = 2
    next_child__sel3 = 6
    next_child__sel2 = 3
    child_index_to_resume_from__seqLink4 = -2
    child_index_to_resume_from__seqLink3 = -2
    child_index_to_resume_from__seqLink1 = -2
    child_index_to_resume_from__sel1 = -2
    child_index_to_resume_from__sel0 = -2
    child_index_to_resume_from__sel4 = -2
    child_index_to_resume_from__seqLink2 = -2
    child_index_to_resume_from__sel3 = -2
    child_index_to_resume_from__sel2 = -2
    resume_from_here_in_subtree__seqLink4 = -3
    node_names.success_node_4 = 18
    node_names.success_failure_node_4 = 17
    node_names.sel1 = 16
    node_names.success_node_3 = 15
    node_names.success_failure_node_3 = 14
    node_names.sel0 = 13
    node_names.seqLink1 = 12
    node_names.success_node_2 = 11
    node_names.success_failure_node_2 = 10
    node_names.sel4 = 9
    node_names.seqLink3 = 8
    node_names.success_node_1 = 7
    node_names.success_failure_node_1 = 6
    node_names.sel3 = 5
    node_names.success_node = 4
    node_names.success_failure_node = 3
    node_names.sel2 = 2
    node_names.seqLink2 = 1
    node_names.seqLink4 = 0
  -> State: 5.2 <-
    active_node = 0
  -> State: 5.3 <-
    active_node = 1
    previous_node = 0
  -> State: 5.4 <-
    active_node = 2
    previous_node = 1
    next_child__seqLink4 = 8
  -> State: 5.5 <-
    active_node = 3
    previous_node = 2
    current_status = failure
    next_child__seqLink2 = 5
  -> State: 5.6 <-
    active_node = 2
    previous_node = 3
    current_status = invalid
    previous_status = failure
    randomizer = TRUE
    next_child__sel2 = 4
  -> State: 5.7 <-
    active_node = 4
    previous_node = 2
    current_status = success
    previous_status = invalid
    next_child__sel2 = 3
  -> State: 5.8 <-
    active_node = 2
    previous_node = 4
    previous_status = success
    next_child__sel2 = -1
  -> State: 5.9 <-
    active_node = 1
    previous_node = 2
    current_status = invalid
    next_child__sel2 = 3
  -> State: 5.10 <-
    active_node = 5
    previous_node = 1
    previous_status = invalid
    next_child__seqLink2 = 2
  -> State: 5.11 <-
    active_node = 6
    previous_node = 5
    current_status = success
    next_child__seqLink2 = -1
    next_child__sel2 = -1
  -> State: 5.12 <-
    active_node = 5
    previous_node = 6
    previous_status = success
    next_child__sel3 = 7
  -> State: 5.13 <-
    active_node = 1
    previous_node = 5
    next_child__sel3 = 6
  -> State: 5.14 <-
    active_node = 0
    previous_node = 1
    current_status = invalid
    next_child__seqLink2 = 2
    next_child__sel2 = 3
  -> State: 5.15 <-
    active_node = 8
    previous_node = 0
    previous_status = invalid
    next_child__seqLink4 = 1
  -> State: 5.16 <-
    active_node = 9
    previous_node = 8
    next_child__seqLink4 = -1
    next_child__seqLink2 = -1
    next_child__sel3 = -1
    next_child__sel2 = -1
  -> State: 5.17 <-
    active_node = 10
    previous_node = 9
    current_status = success
    next_child__seqLink3 = 12
  -> State: 5.18 <-
    active_node = 9
    previous_node = 10
    previous_status = success
    next_child__sel4 = 11
  -> State: 5.19 <-
    active_node = 8
    previous_node = 9
    current_status = invalid
    next_child__sel4 = 10
  -> State: 5.20 <-
    active_node = 12
    previous_node = 8
    previous_status = invalid
    next_child__seqLink3 = 9
  -> State: 5.21 <-
    active_node = 13
    previous_node = 12
    next_child__seqLink3 = -1
    next_child__sel4 = -1
  -> State: 5.22 <-
    active_node = 14
    previous_node = 13
    current_status = success
    next_child__seqLink1 = 16
  -> State: 5.23 <-
    active_node = 13
    previous_node = 14
    previous_status = success
    randomizer = FALSE
    next_child__sel0 = 15
  -> State: 5.24 <-
    active_node = 12
    previous_node = 13
    current_status = invalid
    next_child__sel0 = 14
  -> State: 5.25 <-
    active_node = 16
    previous_node = 12
    previous_status = invalid
    next_child__seqLink1 = 13
  -> State: 5.26 <-
    active_node = 17
    previous_node = 16
    current_status = failure
    next_child__seqLink1 = -1
    next_child__sel0 = -1
