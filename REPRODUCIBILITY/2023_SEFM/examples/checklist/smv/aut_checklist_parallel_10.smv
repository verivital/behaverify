MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__parLink9 := -3;
		resume_from_here_in_subtree__parLink7 := -3;
		resume_from_here_in_subtree__parLink3 := -3;
		resume_from_here_in_subtree__sel4 := -3;
		resume_from_here_in_subtree__sel5 := -3;
		resume_from_here_in_subtree__parLink4 := -3;
		resume_from_here_in_subtree__sel6 := -3;
		resume_from_here_in_subtree__sel7 := -3;
		resume_from_here_in_subtree__parLink8 := -3;
		resume_from_here_in_subtree__parLink5 := -3;
		resume_from_here_in_subtree__sel8 := -3;
		resume_from_here_in_subtree__sel9 := -3;
		resume_from_here_in_subtree__parLink6 := -3;
		resume_from_here_in_subtree__parLink1 := -3;
		resume_from_here_in_subtree__sel0 := -3;
		resume_from_here_in_subtree__sel1 := -3;
		resume_from_here_in_subtree__parLink2 := -3;
		resume_from_here_in_subtree__sel2 := -3;
		resume_from_here_in_subtree__sel3 := -3;
		child_index_to_resume_from__sel4 := -2;
		child_index_to_resume_from__sel5 := -2;
		child_index_to_resume_from__sel6 := -2;
		child_index_to_resume_from__sel7 := -2;
		child_index_to_resume_from__sel8 := -2;
		child_index_to_resume_from__sel9 := -2;
		child_index_to_resume_from__sel0 := -2;
		child_index_to_resume_from__sel1 := -2;
		child_index_to_resume_from__sel2 := -2;
		child_index_to_resume_from__sel3 := -2;
		status__success_failure_node := success_failure_node.status;
		status__success_node := success_node.status;
		status__sel4 := 
			case
				status__success_failure_node != failure : status__success_failure_node;
				status__success_node != failure : status__success_node;
				TRUE : failure;
			esac;
		status__success_failure_node_1 := success_failure_node_1.status;
		status__success_node_1 := success_node_1.status;
		status__sel5 := 
			case
				status__success_failure_node_1 != failure : status__success_failure_node_1;
				status__success_node_1 != failure : status__success_node_1;
				TRUE : failure;
			esac;
		status__parLink3 := 
			case
				(status__sel4 = failure) | (status__sel4 = invalid) : status__sel4;
				(status__sel5 = failure) | (status__sel5 = invalid) : status__sel5;
				status__sel4 = running : running;
				status__sel5 = running : running;
				TRUE : success;
			esac;
		status__success_failure_node_2 := success_failure_node_2.status;
		status__success_node_2 := success_node_2.status;
		status__sel6 := 
			case
				status__success_failure_node_2 != failure : status__success_failure_node_2;
				status__success_node_2 != failure : status__success_node_2;
				TRUE : failure;
			esac;
		status__success_failure_node_3 := success_failure_node_3.status;
		status__success_node_3 := success_node_3.status;
		status__sel7 := 
			case
				status__success_failure_node_3 != failure : status__success_failure_node_3;
				status__success_node_3 != failure : status__success_node_3;
				TRUE : failure;
			esac;
		status__parLink4 := 
			case
				(status__sel6 = failure) | (status__sel6 = invalid) : status__sel6;
				(status__sel7 = failure) | (status__sel7 = invalid) : status__sel7;
				status__sel6 = running : running;
				status__sel7 = running : running;
				TRUE : success;
			esac;
		status__parLink7 := 
			case
				(status__parLink3 = failure) | (status__parLink3 = invalid) : status__parLink3;
				(status__parLink4 = failure) | (status__parLink4 = invalid) : status__parLink4;
				status__parLink3 = running : running;
				status__parLink4 = running : running;
				TRUE : success;
			esac;
		status__success_failure_node_4 := success_failure_node_4.status;
		status__success_node_4 := success_node_4.status;
		status__sel8 := 
			case
				status__success_failure_node_4 != failure : status__success_failure_node_4;
				status__success_node_4 != failure : status__success_node_4;
				TRUE : failure;
			esac;
		status__success_failure_node_5 := success_failure_node_5.status;
		status__success_node_5 := success_node_5.status;
		status__sel9 := 
			case
				status__success_failure_node_5 != failure : status__success_failure_node_5;
				status__success_node_5 != failure : status__success_node_5;
				TRUE : failure;
			esac;
		status__parLink5 := 
			case
				(status__sel8 = failure) | (status__sel8 = invalid) : status__sel8;
				(status__sel9 = failure) | (status__sel9 = invalid) : status__sel9;
				status__sel8 = running : running;
				status__sel9 = running : running;
				TRUE : success;
			esac;
		status__success_failure_node_6 := success_failure_node_6.status;
		status__success_node_6 := success_node_6.status;
		status__sel0 := 
			case
				status__success_failure_node_6 != failure : status__success_failure_node_6;
				status__success_node_6 != failure : status__success_node_6;
				TRUE : failure;
			esac;
		status__success_failure_node_7 := success_failure_node_7.status;
		status__success_node_7 := success_node_7.status;
		status__sel1 := 
			case
				status__success_failure_node_7 != failure : status__success_failure_node_7;
				status__success_node_7 != failure : status__success_node_7;
				TRUE : failure;
			esac;
		status__parLink1 := 
			case
				(status__sel0 = failure) | (status__sel0 = invalid) : status__sel0;
				(status__sel1 = failure) | (status__sel1 = invalid) : status__sel1;
				status__sel0 = running : running;
				status__sel1 = running : running;
				TRUE : success;
			esac;
		status__success_failure_node_8 := success_failure_node_8.status;
		status__success_node_8 := success_node_8.status;
		status__sel2 := 
			case
				status__success_failure_node_8 != failure : status__success_failure_node_8;
				status__success_node_8 != failure : status__success_node_8;
				TRUE : failure;
			esac;
		status__success_failure_node_9 := success_failure_node_9.status;
		status__success_node_9 := success_node_9.status;
		status__sel3 := 
			case
				status__success_failure_node_9 != failure : status__success_failure_node_9;
				status__success_node_9 != failure : status__success_node_9;
				TRUE : failure;
			esac;
		status__parLink2 := 
			case
				(status__sel2 = failure) | (status__sel2 = invalid) : status__sel2;
				(status__sel3 = failure) | (status__sel3 = invalid) : status__sel3;
				status__sel2 = running : running;
				status__sel3 = running : running;
				TRUE : success;
			esac;
		status__parLink6 := 
			case
				(status__parLink1 = failure) | (status__parLink1 = invalid) : status__parLink1;
				(status__parLink2 = failure) | (status__parLink2 = invalid) : status__parLink2;
				status__parLink1 = running : running;
				status__parLink2 = running : running;
				TRUE : success;
			esac;
		status__parLink8 := 
			case
				(status__parLink5 = failure) | (status__parLink5 = invalid) : status__parLink5;
				(status__parLink6 = failure) | (status__parLink6 = invalid) : status__parLink6;
				status__parLink5 = running : running;
				status__parLink6 = running : running;
				TRUE : success;
			esac;
		status__parLink9 := 
			case
				(status__parLink7 = failure) | (status__parLink7 = invalid) : status__parLink7;
				(status__parLink8 = failure) | (status__parLink8 = invalid) : status__parLink8;
				status__parLink7 = running : running;
				status__parLink8 = running : running;
				TRUE : success;
			esac;
		next_child__sel4 := 
			case
				(status__success_failure_node = invalid)& (child_index_to_resume_from__sel4 <= 0) : node_names.success_failure_node;
				(status__success_node = invalid)& (child_index_to_resume_from__sel4 <= 1) : node_names.success_node;
			esac;
		next_child__sel5 := 
			case
				(status__success_failure_node_1 = invalid)& (child_index_to_resume_from__sel5 <= 0) : node_names.success_failure_node_1;
				(status__success_node_1 = invalid)& (child_index_to_resume_from__sel5 <= 1) : node_names.success_node_1;
			esac;
		next_child__parLink3 := 
			case
				(status__sel4 = invalid)& !(resume_from_here_in_subtree__sel4 = -2) : node_names.sel4;
				(status__sel5 = invalid)& !(resume_from_here_in_subtree__sel5 = -2) : node_names.sel5;
			esac;
		next_child__sel6 := 
			case
				(status__success_failure_node_2 = invalid)& (child_index_to_resume_from__sel6 <= 0) : node_names.success_failure_node_2;
				(status__success_node_2 = invalid)& (child_index_to_resume_from__sel6 <= 1) : node_names.success_node_2;
			esac;
		next_child__sel7 := 
			case
				(status__success_failure_node_3 = invalid)& (child_index_to_resume_from__sel7 <= 0) : node_names.success_failure_node_3;
				(status__success_node_3 = invalid)& (child_index_to_resume_from__sel7 <= 1) : node_names.success_node_3;
			esac;
		next_child__parLink4 := 
			case
				(status__sel6 = invalid)& !(resume_from_here_in_subtree__sel6 = -2) : node_names.sel6;
				(status__sel7 = invalid)& !(resume_from_here_in_subtree__sel7 = -2) : node_names.sel7;
			esac;
		next_child__parLink7 := 
			case
				(status__parLink3 = invalid)& !(resume_from_here_in_subtree__parLink3 = -2) : node_names.parLink3;
				(status__parLink4 = invalid)& !(resume_from_here_in_subtree__parLink4 = -2) : node_names.parLink4;
			esac;
		next_child__sel8 := 
			case
				(status__success_failure_node_4 = invalid)& (child_index_to_resume_from__sel8 <= 0) : node_names.success_failure_node_4;
				(status__success_node_4 = invalid)& (child_index_to_resume_from__sel8 <= 1) : node_names.success_node_4;
			esac;
		next_child__sel9 := 
			case
				(status__success_failure_node_5 = invalid)& (child_index_to_resume_from__sel9 <= 0) : node_names.success_failure_node_5;
				(status__success_node_5 = invalid)& (child_index_to_resume_from__sel9 <= 1) : node_names.success_node_5;
			esac;
		next_child__parLink5 := 
			case
				(status__sel8 = invalid)& !(resume_from_here_in_subtree__sel8 = -2) : node_names.sel8;
				(status__sel9 = invalid)& !(resume_from_here_in_subtree__sel9 = -2) : node_names.sel9;
			esac;
		next_child__sel0 := 
			case
				(status__success_failure_node_6 = invalid)& (child_index_to_resume_from__sel0 <= 0) : node_names.success_failure_node_6;
				(status__success_node_6 = invalid)& (child_index_to_resume_from__sel0 <= 1) : node_names.success_node_6;
			esac;
		next_child__sel1 := 
			case
				(status__success_failure_node_7 = invalid)& (child_index_to_resume_from__sel1 <= 0) : node_names.success_failure_node_7;
				(status__success_node_7 = invalid)& (child_index_to_resume_from__sel1 <= 1) : node_names.success_node_7;
			esac;
		next_child__parLink1 := 
			case
				(status__sel0 = invalid)& !(resume_from_here_in_subtree__sel0 = -2) : node_names.sel0;
				(status__sel1 = invalid)& !(resume_from_here_in_subtree__sel1 = -2) : node_names.sel1;
			esac;
		next_child__sel2 := 
			case
				(status__success_failure_node_8 = invalid)& (child_index_to_resume_from__sel2 <= 0) : node_names.success_failure_node_8;
				(status__success_node_8 = invalid)& (child_index_to_resume_from__sel2 <= 1) : node_names.success_node_8;
			esac;
		next_child__sel3 := 
			case
				(status__success_failure_node_9 = invalid)& (child_index_to_resume_from__sel3 <= 0) : node_names.success_failure_node_9;
				(status__success_node_9 = invalid)& (child_index_to_resume_from__sel3 <= 1) : node_names.success_node_9;
			esac;
		next_child__parLink2 := 
			case
				(status__sel2 = invalid)& !(resume_from_here_in_subtree__sel2 = -2) : node_names.sel2;
				(status__sel3 = invalid)& !(resume_from_here_in_subtree__sel3 = -2) : node_names.sel3;
			esac;
		next_child__parLink6 := 
			case
				(status__parLink1 = invalid)& !(resume_from_here_in_subtree__parLink1 = -2) : node_names.parLink1;
				(status__parLink2 = invalid)& !(resume_from_here_in_subtree__parLink2 = -2) : node_names.parLink2;
			esac;
		next_child__parLink8 := 
			case
				(status__parLink5 = invalid)& !(resume_from_here_in_subtree__parLink5 = -2) : node_names.parLink5;
				(status__parLink6 = invalid)& !(resume_from_here_in_subtree__parLink6 = -2) : node_names.parLink6;
			esac;
		next_child__parLink9 := 
			case
				(status__parLink7 = invalid)& !(resume_from_here_in_subtree__parLink7 = -2) : node_names.parLink7;
				(status__parLink8 = invalid)& !(resume_from_here_in_subtree__parLink8 = -2) : node_names.parLink8;
			esac;
		success_failure_node.active := active_node = node_names.success_failure_node;
		success_failure_node.reset := active_node = -1;
		success_node.active := active_node = node_names.success_node;
		success_node.reset := active_node = -1;
		success_failure_node_1.active := active_node = node_names.success_failure_node_1;
		success_failure_node_1.reset := active_node = -1;
		success_node_1.active := active_node = node_names.success_node_1;
		success_node_1.reset := active_node = -1;
		success_failure_node_2.active := active_node = node_names.success_failure_node_2;
		success_failure_node_2.reset := active_node = -1;
		success_node_2.active := active_node = node_names.success_node_2;
		success_node_2.reset := active_node = -1;
		success_failure_node_3.active := active_node = node_names.success_failure_node_3;
		success_failure_node_3.reset := active_node = -1;
		success_node_3.active := active_node = node_names.success_node_3;
		success_node_3.reset := active_node = -1;
		success_failure_node_4.active := active_node = node_names.success_failure_node_4;
		success_failure_node_4.reset := active_node = -1;
		success_node_4.active := active_node = node_names.success_node_4;
		success_node_4.reset := active_node = -1;
		success_failure_node_5.active := active_node = node_names.success_failure_node_5;
		success_failure_node_5.reset := active_node = -1;
		success_node_5.active := active_node = node_names.success_node_5;
		success_node_5.reset := active_node = -1;
		success_failure_node_6.active := active_node = node_names.success_failure_node_6;
		success_failure_node_6.reset := active_node = -1;
		success_node_6.active := active_node = node_names.success_node_6;
		success_node_6.reset := active_node = -1;
		success_failure_node_7.active := active_node = node_names.success_failure_node_7;
		success_failure_node_7.reset := active_node = -1;
		success_node_7.active := active_node = node_names.success_node_7;
		success_node_7.reset := active_node = -1;
		success_failure_node_8.active := active_node = node_names.success_failure_node_8;
		success_failure_node_8.reset := active_node = -1;
		success_node_8.active := active_node = node_names.success_node_8;
		success_node_8.reset := active_node = -1;
		success_failure_node_9.active := active_node = node_names.success_failure_node_9;
		success_failure_node_9.reset := active_node = -1;
		success_node_9.active := active_node = node_names.success_node_9;
		success_node_9.reset := active_node = -1;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..39;
		success_failure_node : success_failure_node_module(randomizer);
		success_node : success_DEFAULT_module;
		success_failure_node_1 : success_failure_node_1_module(randomizer);
		success_node_1 : success_DEFAULT_module;
		success_failure_node_2 : success_failure_node_2_module(randomizer);
		success_node_2 : success_DEFAULT_module;
		success_failure_node_3 : success_failure_node_3_module(randomizer);
		success_node_3 : success_DEFAULT_module;
		success_failure_node_4 : success_failure_node_4_module(randomizer);
		success_node_4 : success_DEFAULT_module;
		success_failure_node_5 : success_failure_node_5_module(randomizer);
		success_node_5 : success_DEFAULT_module;
		success_failure_node_6 : success_failure_node_6_module(randomizer);
		success_node_6 : success_DEFAULT_module;
		success_failure_node_7 : success_failure_node_7_module(randomizer);
		success_node_7 : success_DEFAULT_module;
		success_failure_node_8 : success_failure_node_8_module(randomizer);
		success_node_8 : success_DEFAULT_module;
		success_failure_node_9 : success_failure_node_9_module(randomizer);
		success_node_9 : success_DEFAULT_module;
		--START OF BLACKBOARD VARIABLES DECLARATION
		randomizer : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(randomizer) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.parLink9;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.success_failure_node) & (status__success_failure_node != invalid) : node_names.sel4;
				(active_node = node_names.success_node) & (status__success_node != invalid) : node_names.sel4;
				(active_node = node_names.sel4) & (status__sel4 != invalid) : node_names.parLink3;
				(active_node = node_names.sel4) & (status__sel4 = invalid) : next_child__sel4;
				(active_node = node_names.success_failure_node_1) & (status__success_failure_node_1 != invalid) : node_names.sel5;
				(active_node = node_names.success_node_1) & (status__success_node_1 != invalid) : node_names.sel5;
				(active_node = node_names.sel5) & (status__sel5 != invalid) : node_names.parLink3;
				(active_node = node_names.sel5) & (status__sel5 = invalid) : next_child__sel5;
				(active_node = node_names.parLink3) & (status__parLink3 != invalid) : node_names.parLink7;
				(active_node = node_names.parLink3) & (status__parLink3 = invalid) : next_child__parLink3;
				(active_node = node_names.success_failure_node_2) & (status__success_failure_node_2 != invalid) : node_names.sel6;
				(active_node = node_names.success_node_2) & (status__success_node_2 != invalid) : node_names.sel6;
				(active_node = node_names.sel6) & (status__sel6 != invalid) : node_names.parLink4;
				(active_node = node_names.sel6) & (status__sel6 = invalid) : next_child__sel6;
				(active_node = node_names.success_failure_node_3) & (status__success_failure_node_3 != invalid) : node_names.sel7;
				(active_node = node_names.success_node_3) & (status__success_node_3 != invalid) : node_names.sel7;
				(active_node = node_names.sel7) & (status__sel7 != invalid) : node_names.parLink4;
				(active_node = node_names.sel7) & (status__sel7 = invalid) : next_child__sel7;
				(active_node = node_names.parLink4) & (status__parLink4 != invalid) : node_names.parLink7;
				(active_node = node_names.parLink4) & (status__parLink4 = invalid) : next_child__parLink4;
				(active_node = node_names.parLink7) & (status__parLink7 != invalid) : node_names.parLink9;
				(active_node = node_names.parLink7) & (status__parLink7 = invalid) : next_child__parLink7;
				(active_node = node_names.success_failure_node_4) & (status__success_failure_node_4 != invalid) : node_names.sel8;
				(active_node = node_names.success_node_4) & (status__success_node_4 != invalid) : node_names.sel8;
				(active_node = node_names.sel8) & (status__sel8 != invalid) : node_names.parLink5;
				(active_node = node_names.sel8) & (status__sel8 = invalid) : next_child__sel8;
				(active_node = node_names.success_failure_node_5) & (status__success_failure_node_5 != invalid) : node_names.sel9;
				(active_node = node_names.success_node_5) & (status__success_node_5 != invalid) : node_names.sel9;
				(active_node = node_names.sel9) & (status__sel9 != invalid) : node_names.parLink5;
				(active_node = node_names.sel9) & (status__sel9 = invalid) : next_child__sel9;
				(active_node = node_names.parLink5) & (status__parLink5 != invalid) : node_names.parLink8;
				(active_node = node_names.parLink5) & (status__parLink5 = invalid) : next_child__parLink5;
				(active_node = node_names.success_failure_node_6) & (status__success_failure_node_6 != invalid) : node_names.sel0;
				(active_node = node_names.success_node_6) & (status__success_node_6 != invalid) : node_names.sel0;
				(active_node = node_names.sel0) & (status__sel0 != invalid) : node_names.parLink1;
				(active_node = node_names.sel0) & (status__sel0 = invalid) : next_child__sel0;
				(active_node = node_names.success_failure_node_7) & (status__success_failure_node_7 != invalid) : node_names.sel1;
				(active_node = node_names.success_node_7) & (status__success_node_7 != invalid) : node_names.sel1;
				(active_node = node_names.sel1) & (status__sel1 != invalid) : node_names.parLink1;
				(active_node = node_names.sel1) & (status__sel1 = invalid) : next_child__sel1;
				(active_node = node_names.parLink1) & (status__parLink1 != invalid) : node_names.parLink6;
				(active_node = node_names.parLink1) & (status__parLink1 = invalid) : next_child__parLink1;
				(active_node = node_names.success_failure_node_8) & (status__success_failure_node_8 != invalid) : node_names.sel2;
				(active_node = node_names.success_node_8) & (status__success_node_8 != invalid) : node_names.sel2;
				(active_node = node_names.sel2) & (status__sel2 != invalid) : node_names.parLink2;
				(active_node = node_names.sel2) & (status__sel2 = invalid) : next_child__sel2;
				(active_node = node_names.success_failure_node_9) & (status__success_failure_node_9 != invalid) : node_names.sel3;
				(active_node = node_names.success_node_9) & (status__success_node_9 != invalid) : node_names.sel3;
				(active_node = node_names.sel3) & (status__sel3 != invalid) : node_names.parLink2;
				(active_node = node_names.sel3) & (status__sel3 = invalid) : next_child__sel3;
				(active_node = node_names.parLink2) & (status__parLink2 != invalid) : node_names.parLink6;
				(active_node = node_names.parLink2) & (status__parLink2 = invalid) : next_child__parLink2;
				(active_node = node_names.parLink6) & (status__parLink6 != invalid) : node_names.parLink8;
				(active_node = node_names.parLink6) & (status__parLink6 = invalid) : next_child__parLink6;
				(active_node = node_names.parLink8) & (status__parLink8 != invalid) : node_names.parLink9;
				(active_node = node_names.parLink8) & (status__parLink8 = invalid) : next_child__parLink8;
				(active_node = node_names.parLink9) & (status__parLink9 != invalid) : -1;
				(active_node = node_names.parLink9) & (status__parLink9 = invalid) : next_child__parLink9;
				TRUE : active_node;
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(randomizer) :=
			case
				(active_node = -1) & !(status__success_failure_node = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_1 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_1 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_2 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_2 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_3 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_3 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_4 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_4 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_5 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_5 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_6 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_6 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_7 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_7 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_8 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_8 = invalid) & (TRUE) : {TRUE, FALSE};
				(active_node = -1) & !(status__success_failure_node_9 = invalid) & (!(TRUE)) : randomizer;
				(active_node = -1) & !(status__success_failure_node_9 = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : randomizer;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((success_failure_node.status = failure) -> ((active_node > 0) U (success_node.status = success))));
LTLSPEC G(((success_failure_node.status = failure) -> !((active_node > 0) U (success_node.status = success))));
CTLSPEC AG(((success_failure_node.status = failure) -> (A [(active_node > 0) U (success_node.status = success)])));
CTLSPEC AG(((success_failure_node.status = failure) -> !(A [(active_node > 0) U (success_node.status = success)])));


LTLSPEC G(((success_failure_node_1.status = failure) -> ((active_node > 0) U (success_node_1.status = success))));
LTLSPEC G(((success_failure_node_1.status = failure) -> !((active_node > 0) U (success_node_1.status = success))));
CTLSPEC AG(((success_failure_node_1.status = failure) -> (A [(active_node > 0) U (success_node_1.status = success)])));
CTLSPEC AG(((success_failure_node_1.status = failure) -> !(A [(active_node > 0) U (success_node_1.status = success)])));


LTLSPEC G(((success_failure_node_2.status = failure) -> ((active_node > 0) U (success_node_2.status = success))));
LTLSPEC G(((success_failure_node_2.status = failure) -> !((active_node > 0) U (success_node_2.status = success))));
CTLSPEC AG(((success_failure_node_2.status = failure) -> (A [(active_node > 0) U (success_node_2.status = success)])));
CTLSPEC AG(((success_failure_node_2.status = failure) -> !(A [(active_node > 0) U (success_node_2.status = success)])));


LTLSPEC G(((success_failure_node_3.status = failure) -> ((active_node > 0) U (success_node_3.status = success))));
LTLSPEC G(((success_failure_node_3.status = failure) -> !((active_node > 0) U (success_node_3.status = success))));
CTLSPEC AG(((success_failure_node_3.status = failure) -> (A [(active_node > 0) U (success_node_3.status = success)])));
CTLSPEC AG(((success_failure_node_3.status = failure) -> !(A [(active_node > 0) U (success_node_3.status = success)])));


LTLSPEC G(((success_failure_node_4.status = failure) -> ((active_node > 0) U (success_node_4.status = success))));
LTLSPEC G(((success_failure_node_4.status = failure) -> !((active_node > 0) U (success_node_4.status = success))));
CTLSPEC AG(((success_failure_node_4.status = failure) -> (A [(active_node > 0) U (success_node_4.status = success)])));
CTLSPEC AG(((success_failure_node_4.status = failure) -> !(A [(active_node > 0) U (success_node_4.status = success)])));


LTLSPEC G(((success_failure_node_5.status = failure) -> ((active_node > 0) U (success_node_5.status = success))));
LTLSPEC G(((success_failure_node_5.status = failure) -> !((active_node > 0) U (success_node_5.status = success))));
CTLSPEC AG(((success_failure_node_5.status = failure) -> (A [(active_node > 0) U (success_node_5.status = success)])));
CTLSPEC AG(((success_failure_node_5.status = failure) -> !(A [(active_node > 0) U (success_node_5.status = success)])));


LTLSPEC G(((success_failure_node_6.status = failure) -> ((active_node > 0) U (success_node_6.status = success))));
LTLSPEC G(((success_failure_node_6.status = failure) -> !((active_node > 0) U (success_node_6.status = success))));
CTLSPEC AG(((success_failure_node_6.status = failure) -> (A [(active_node > 0) U (success_node_6.status = success)])));
CTLSPEC AG(((success_failure_node_6.status = failure) -> !(A [(active_node > 0) U (success_node_6.status = success)])));


LTLSPEC G(((success_failure_node_7.status = failure) -> ((active_node > 0) U (success_node_7.status = success))));
LTLSPEC G(((success_failure_node_7.status = failure) -> !((active_node > 0) U (success_node_7.status = success))));
CTLSPEC AG(((success_failure_node_7.status = failure) -> (A [(active_node > 0) U (success_node_7.status = success)])));
CTLSPEC AG(((success_failure_node_7.status = failure) -> !(A [(active_node > 0) U (success_node_7.status = success)])));


LTLSPEC G(((success_failure_node_8.status = failure) -> ((active_node > 0) U (success_node_8.status = success))));
LTLSPEC G(((success_failure_node_8.status = failure) -> !((active_node > 0) U (success_node_8.status = success))));
CTLSPEC AG(((success_failure_node_8.status = failure) -> (A [(active_node > 0) U (success_node_8.status = success)])));
CTLSPEC AG(((success_failure_node_8.status = failure) -> !(A [(active_node > 0) U (success_node_8.status = success)])));


LTLSPEC G(((success_failure_node_9.status = failure) -> ((active_node > 0) U (success_node_9.status = success))));
LTLSPEC G(((success_failure_node_9.status = failure) -> !((active_node > 0) U (success_node_9.status = success))));
CTLSPEC AG(((success_failure_node_9.status = failure) -> (A [(active_node > 0) U (success_node_9.status = success)])));
CTLSPEC AG(((success_failure_node_9.status = failure) -> !(A [(active_node > 0) U (success_node_9.status = success)])));


MODULE define_nodes
	DEFINE
		parLink9 := 0;
		parLink7 := 1;
		parLink3 := 2;
		sel4 := 3;
		success_failure_node := 4;
		success_node := 5;
		sel5 := 6;
		success_failure_node_1 := 7;
		success_node_1 := 8;
		parLink4 := 9;
		sel6 := 10;
		success_failure_node_2 := 11;
		success_node_2 := 12;
		sel7 := 13;
		success_failure_node_3 := 14;
		success_node_3 := 15;
		parLink8 := 16;
		parLink5 := 17;
		sel8 := 18;
		success_failure_node_4 := 19;
		success_node_4 := 20;
		sel9 := 21;
		success_failure_node_5 := 22;
		success_node_5 := 23;
		parLink6 := 24;
		parLink1 := 25;
		sel0 := 26;
		success_failure_node_6 := 27;
		success_node_6 := 28;
		sel1 := 29;
		success_failure_node_7 := 30;
		success_node_7 := 31;
		parLink2 := 32;
		sel2 := 33;
		success_failure_node_8 := 34;
		success_node_8 := 35;
		sel3 := 36;
		success_failure_node_9 := 37;
		success_node_9 := 38;
MODULE success_failure_node_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_1_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_2_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_3_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_4_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_5_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_6_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_7_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_8_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_9_module(randomizer)
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success,failure,invalid};
	ASSIGN
		init(status) := invalid;
		next(status) :=
			case
				reset : invalid;
				!(active) : status;
				randomizer : success;
				TRUE : failure;
			esac;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	VAR
		status : {success, invalid};
	ASSIGN
		init(status) := invalid;
		next(status) := 
			case
				reset : invalid;
				active : {success};
				TRUE : status;
			esac;
