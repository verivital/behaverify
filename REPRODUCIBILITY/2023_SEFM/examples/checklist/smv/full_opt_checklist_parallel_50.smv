MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__parLink49 := -3;
		resume_from_here_in_subtree__parLink47 := -3;
		resume_from_here_in_subtree__parLink43 := -3;
		resume_from_here_in_subtree__parLink35 := -3;
		resume_from_here_in_subtree__parLink19 := -3;
		resume_from_here_in_subtree__sel36 := -3;
		resume_from_here_in_subtree__sel37 := -3;
		resume_from_here_in_subtree__parLink20 := -3;
		resume_from_here_in_subtree__sel38 := -3;
		resume_from_here_in_subtree__sel39 := -3;
		resume_from_here_in_subtree__parLink36 := -3;
		resume_from_here_in_subtree__parLink21 := -3;
		resume_from_here_in_subtree__sel40 := -3;
		resume_from_here_in_subtree__sel41 := -3;
		resume_from_here_in_subtree__parLink22 := -3;
		resume_from_here_in_subtree__sel42 := -3;
		resume_from_here_in_subtree__sel43 := -3;
		resume_from_here_in_subtree__parLink44 := -3;
		resume_from_here_in_subtree__parLink37 := -3;
		resume_from_here_in_subtree__parLink23 := -3;
		resume_from_here_in_subtree__sel44 := -3;
		resume_from_here_in_subtree__sel45 := -3;
		resume_from_here_in_subtree__parLink24 := -3;
		resume_from_here_in_subtree__sel46 := -3;
		resume_from_here_in_subtree__sel47 := -3;
		resume_from_here_in_subtree__parLink38 := -3;
		resume_from_here_in_subtree__parLink25 := -3;
		resume_from_here_in_subtree__sel48 := -3;
		resume_from_here_in_subtree__sel49 := -3;
		resume_from_here_in_subtree__parLink26 := -3;
		resume_from_here_in_subtree__parLink1 := -3;
		resume_from_here_in_subtree__sel0 := -3;
		resume_from_here_in_subtree__sel1 := -3;
		resume_from_here_in_subtree__parLink2 := -3;
		resume_from_here_in_subtree__sel2 := -3;
		resume_from_here_in_subtree__sel3 := -3;
		resume_from_here_in_subtree__parLink48 := -3;
		resume_from_here_in_subtree__parLink45 := -3;
		resume_from_here_in_subtree__parLink39 := -3;
		resume_from_here_in_subtree__parLink27 := -3;
		resume_from_here_in_subtree__parLink3 := -3;
		resume_from_here_in_subtree__sel4 := -3;
		resume_from_here_in_subtree__sel5 := -3;
		resume_from_here_in_subtree__parLink4 := -3;
		resume_from_here_in_subtree__sel6 := -3;
		resume_from_here_in_subtree__sel7 := -3;
		resume_from_here_in_subtree__parLink28 := -3;
		resume_from_here_in_subtree__parLink5 := -3;
		resume_from_here_in_subtree__sel8 := -3;
		resume_from_here_in_subtree__sel9 := -3;
		resume_from_here_in_subtree__parLink6 := -3;
		resume_from_here_in_subtree__sel10 := -3;
		resume_from_here_in_subtree__sel11 := -3;
		resume_from_here_in_subtree__parLink40 := -3;
		resume_from_here_in_subtree__parLink29 := -3;
		resume_from_here_in_subtree__parLink7 := -3;
		resume_from_here_in_subtree__sel12 := -3;
		resume_from_here_in_subtree__sel13 := -3;
		resume_from_here_in_subtree__parLink8 := -3;
		resume_from_here_in_subtree__sel14 := -3;
		resume_from_here_in_subtree__sel15 := -3;
		resume_from_here_in_subtree__parLink30 := -3;
		resume_from_here_in_subtree__parLink9 := -3;
		resume_from_here_in_subtree__sel16 := -3;
		resume_from_here_in_subtree__sel17 := -3;
		resume_from_here_in_subtree__parLink10 := -3;
		resume_from_here_in_subtree__sel18 := -3;
		resume_from_here_in_subtree__sel19 := -3;
		resume_from_here_in_subtree__parLink46 := -3;
		resume_from_here_in_subtree__parLink41 := -3;
		resume_from_here_in_subtree__parLink31 := -3;
		resume_from_here_in_subtree__parLink11 := -3;
		resume_from_here_in_subtree__sel20 := -3;
		resume_from_here_in_subtree__sel21 := -3;
		resume_from_here_in_subtree__parLink12 := -3;
		resume_from_here_in_subtree__sel22 := -3;
		resume_from_here_in_subtree__sel23 := -3;
		resume_from_here_in_subtree__parLink32 := -3;
		resume_from_here_in_subtree__parLink13 := -3;
		resume_from_here_in_subtree__sel24 := -3;
		resume_from_here_in_subtree__sel25 := -3;
		resume_from_here_in_subtree__parLink14 := -3;
		resume_from_here_in_subtree__sel26 := -3;
		resume_from_here_in_subtree__sel27 := -3;
		resume_from_here_in_subtree__parLink42 := -3;
		resume_from_here_in_subtree__parLink33 := -3;
		resume_from_here_in_subtree__parLink15 := -3;
		resume_from_here_in_subtree__sel28 := -3;
		resume_from_here_in_subtree__sel29 := -3;
		resume_from_here_in_subtree__parLink16 := -3;
		resume_from_here_in_subtree__sel30 := -3;
		resume_from_here_in_subtree__sel31 := -3;
		resume_from_here_in_subtree__parLink34 := -3;
		resume_from_here_in_subtree__parLink17 := -3;
		resume_from_here_in_subtree__sel32 := -3;
		resume_from_here_in_subtree__sel33 := -3;
		resume_from_here_in_subtree__parLink18 := -3;
		resume_from_here_in_subtree__sel34 := -3;
		resume_from_here_in_subtree__sel35 := -3;
		parLink49.active := TRUE;
		--START OF BLACKBOARD DEFINITIONS
		randomizer_stage_0 := randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_randomizer := randomizer_stage_50;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		success_failure_node : success_failure_node_module(randomizer_stage_1);
		success_node : success_DEFAULT_module();
		sel36 : composite_selector_without_memory_2(success_failure_node, success_node);
		success_failure_node_1 : success_failure_node_1_module(randomizer_stage_2);
		success_node_1 : success_DEFAULT_module();
		sel37 : composite_selector_without_memory_2(success_failure_node_1, success_node_1);
		parLink19 : composite_parallel_success_on_all_without_memory_2(sel36, sel37);
		success_failure_node_2 : success_failure_node_2_module(randomizer_stage_3);
		success_node_2 : success_DEFAULT_module();
		sel38 : composite_selector_without_memory_2(success_failure_node_2, success_node_2);
		success_failure_node_3 : success_failure_node_3_module(randomizer_stage_4);
		success_node_3 : success_DEFAULT_module();
		sel39 : composite_selector_without_memory_2(success_failure_node_3, success_node_3);
		parLink20 : composite_parallel_success_on_all_without_memory_2(sel38, sel39);
		parLink35 : composite_parallel_success_on_all_without_memory_2(parLink19, parLink20);
		success_failure_node_4 : success_failure_node_4_module(randomizer_stage_5);
		success_node_4 : success_DEFAULT_module();
		sel40 : composite_selector_without_memory_2(success_failure_node_4, success_node_4);
		success_failure_node_5 : success_failure_node_5_module(randomizer_stage_6);
		success_node_5 : success_DEFAULT_module();
		sel41 : composite_selector_without_memory_2(success_failure_node_5, success_node_5);
		parLink21 : composite_parallel_success_on_all_without_memory_2(sel40, sel41);
		success_failure_node_6 : success_failure_node_6_module(randomizer_stage_7);
		success_node_6 : success_DEFAULT_module();
		sel42 : composite_selector_without_memory_2(success_failure_node_6, success_node_6);
		success_failure_node_7 : success_failure_node_7_module(randomizer_stage_8);
		success_node_7 : success_DEFAULT_module();
		sel43 : composite_selector_without_memory_2(success_failure_node_7, success_node_7);
		parLink22 : composite_parallel_success_on_all_without_memory_2(sel42, sel43);
		parLink36 : composite_parallel_success_on_all_without_memory_2(parLink21, parLink22);
		parLink43 : composite_parallel_success_on_all_without_memory_2(parLink35, parLink36);
		success_failure_node_8 : success_failure_node_8_module(randomizer_stage_9);
		success_node_8 : success_DEFAULT_module();
		sel44 : composite_selector_without_memory_2(success_failure_node_8, success_node_8);
		success_failure_node_9 : success_failure_node_9_module(randomizer_stage_10);
		success_node_9 : success_DEFAULT_module();
		sel45 : composite_selector_without_memory_2(success_failure_node_9, success_node_9);
		parLink23 : composite_parallel_success_on_all_without_memory_2(sel44, sel45);
		success_failure_node_10 : success_failure_node_10_module(randomizer_stage_11);
		success_node_10 : success_DEFAULT_module();
		sel46 : composite_selector_without_memory_2(success_failure_node_10, success_node_10);
		success_failure_node_11 : success_failure_node_11_module(randomizer_stage_12);
		success_node_11 : success_DEFAULT_module();
		sel47 : composite_selector_without_memory_2(success_failure_node_11, success_node_11);
		parLink24 : composite_parallel_success_on_all_without_memory_2(sel46, sel47);
		parLink37 : composite_parallel_success_on_all_without_memory_2(parLink23, parLink24);
		success_failure_node_12 : success_failure_node_12_module(randomizer_stage_13);
		success_node_12 : success_DEFAULT_module();
		sel48 : composite_selector_without_memory_2(success_failure_node_12, success_node_12);
		success_failure_node_13 : success_failure_node_13_module(randomizer_stage_14);
		success_node_13 : success_DEFAULT_module();
		sel49 : composite_selector_without_memory_2(success_failure_node_13, success_node_13);
		parLink25 : composite_parallel_success_on_all_without_memory_2(sel48, sel49);
		success_failure_node_14 : success_failure_node_14_module(randomizer_stage_15);
		success_node_14 : success_DEFAULT_module();
		sel0 : composite_selector_without_memory_2(success_failure_node_14, success_node_14);
		success_failure_node_15 : success_failure_node_15_module(randomizer_stage_16);
		success_node_15 : success_DEFAULT_module();
		sel1 : composite_selector_without_memory_2(success_failure_node_15, success_node_15);
		parLink1 : composite_parallel_success_on_all_without_memory_2(sel0, sel1);
		success_failure_node_16 : success_failure_node_16_module(randomizer_stage_17);
		success_node_16 : success_DEFAULT_module();
		sel2 : composite_selector_without_memory_2(success_failure_node_16, success_node_16);
		success_failure_node_17 : success_failure_node_17_module(randomizer_stage_18);
		success_node_17 : success_DEFAULT_module();
		sel3 : composite_selector_without_memory_2(success_failure_node_17, success_node_17);
		parLink2 : composite_parallel_success_on_all_without_memory_2(sel2, sel3);
		parLink26 : composite_parallel_success_on_all_without_memory_2(parLink1, parLink2);
		parLink38 : composite_parallel_success_on_all_without_memory_2(parLink25, parLink26);
		parLink44 : composite_parallel_success_on_all_without_memory_2(parLink37, parLink38);
		parLink47 : composite_parallel_success_on_all_without_memory_2(parLink43, parLink44);
		success_failure_node_18 : success_failure_node_18_module(randomizer_stage_19);
		success_node_18 : success_DEFAULT_module();
		sel4 : composite_selector_without_memory_2(success_failure_node_18, success_node_18);
		success_failure_node_19 : success_failure_node_19_module(randomizer_stage_20);
		success_node_19 : success_DEFAULT_module();
		sel5 : composite_selector_without_memory_2(success_failure_node_19, success_node_19);
		parLink3 : composite_parallel_success_on_all_without_memory_2(sel4, sel5);
		success_failure_node_20 : success_failure_node_20_module(randomizer_stage_21);
		success_node_20 : success_DEFAULT_module();
		sel6 : composite_selector_without_memory_2(success_failure_node_20, success_node_20);
		success_failure_node_21 : success_failure_node_21_module(randomizer_stage_22);
		success_node_21 : success_DEFAULT_module();
		sel7 : composite_selector_without_memory_2(success_failure_node_21, success_node_21);
		parLink4 : composite_parallel_success_on_all_without_memory_2(sel6, sel7);
		parLink27 : composite_parallel_success_on_all_without_memory_2(parLink3, parLink4);
		success_failure_node_22 : success_failure_node_22_module(randomizer_stage_23);
		success_node_22 : success_DEFAULT_module();
		sel8 : composite_selector_without_memory_2(success_failure_node_22, success_node_22);
		success_failure_node_23 : success_failure_node_23_module(randomizer_stage_24);
		success_node_23 : success_DEFAULT_module();
		sel9 : composite_selector_without_memory_2(success_failure_node_23, success_node_23);
		parLink5 : composite_parallel_success_on_all_without_memory_2(sel8, sel9);
		success_failure_node_24 : success_failure_node_24_module(randomizer_stage_25);
		success_node_24 : success_DEFAULT_module();
		sel10 : composite_selector_without_memory_2(success_failure_node_24, success_node_24);
		success_failure_node_25 : success_failure_node_25_module(randomizer_stage_26);
		success_node_25 : success_DEFAULT_module();
		sel11 : composite_selector_without_memory_2(success_failure_node_25, success_node_25);
		parLink6 : composite_parallel_success_on_all_without_memory_2(sel10, sel11);
		parLink28 : composite_parallel_success_on_all_without_memory_2(parLink5, parLink6);
		parLink39 : composite_parallel_success_on_all_without_memory_2(parLink27, parLink28);
		success_failure_node_26 : success_failure_node_26_module(randomizer_stage_27);
		success_node_26 : success_DEFAULT_module();
		sel12 : composite_selector_without_memory_2(success_failure_node_26, success_node_26);
		success_failure_node_27 : success_failure_node_27_module(randomizer_stage_28);
		success_node_27 : success_DEFAULT_module();
		sel13 : composite_selector_without_memory_2(success_failure_node_27, success_node_27);
		parLink7 : composite_parallel_success_on_all_without_memory_2(sel12, sel13);
		success_failure_node_28 : success_failure_node_28_module(randomizer_stage_29);
		success_node_28 : success_DEFAULT_module();
		sel14 : composite_selector_without_memory_2(success_failure_node_28, success_node_28);
		success_failure_node_29 : success_failure_node_29_module(randomizer_stage_30);
		success_node_29 : success_DEFAULT_module();
		sel15 : composite_selector_without_memory_2(success_failure_node_29, success_node_29);
		parLink8 : composite_parallel_success_on_all_without_memory_2(sel14, sel15);
		parLink29 : composite_parallel_success_on_all_without_memory_2(parLink7, parLink8);
		success_failure_node_30 : success_failure_node_30_module(randomizer_stage_31);
		success_node_30 : success_DEFAULT_module();
		sel16 : composite_selector_without_memory_2(success_failure_node_30, success_node_30);
		success_failure_node_31 : success_failure_node_31_module(randomizer_stage_32);
		success_node_31 : success_DEFAULT_module();
		sel17 : composite_selector_without_memory_2(success_failure_node_31, success_node_31);
		parLink9 : composite_parallel_success_on_all_without_memory_2(sel16, sel17);
		success_failure_node_32 : success_failure_node_32_module(randomizer_stage_33);
		success_node_32 : success_DEFAULT_module();
		sel18 : composite_selector_without_memory_2(success_failure_node_32, success_node_32);
		success_failure_node_33 : success_failure_node_33_module(randomizer_stage_34);
		success_node_33 : success_DEFAULT_module();
		sel19 : composite_selector_without_memory_2(success_failure_node_33, success_node_33);
		parLink10 : composite_parallel_success_on_all_without_memory_2(sel18, sel19);
		parLink30 : composite_parallel_success_on_all_without_memory_2(parLink9, parLink10);
		parLink40 : composite_parallel_success_on_all_without_memory_2(parLink29, parLink30);
		parLink45 : composite_parallel_success_on_all_without_memory_2(parLink39, parLink40);
		success_failure_node_34 : success_failure_node_34_module(randomizer_stage_35);
		success_node_34 : success_DEFAULT_module();
		sel20 : composite_selector_without_memory_2(success_failure_node_34, success_node_34);
		success_failure_node_35 : success_failure_node_35_module(randomizer_stage_36);
		success_node_35 : success_DEFAULT_module();
		sel21 : composite_selector_without_memory_2(success_failure_node_35, success_node_35);
		parLink11 : composite_parallel_success_on_all_without_memory_2(sel20, sel21);
		success_failure_node_36 : success_failure_node_36_module(randomizer_stage_37);
		success_node_36 : success_DEFAULT_module();
		sel22 : composite_selector_without_memory_2(success_failure_node_36, success_node_36);
		success_failure_node_37 : success_failure_node_37_module(randomizer_stage_38);
		success_node_37 : success_DEFAULT_module();
		sel23 : composite_selector_without_memory_2(success_failure_node_37, success_node_37);
		parLink12 : composite_parallel_success_on_all_without_memory_2(sel22, sel23);
		parLink31 : composite_parallel_success_on_all_without_memory_2(parLink11, parLink12);
		success_failure_node_38 : success_failure_node_38_module(randomizer_stage_39);
		success_node_38 : success_DEFAULT_module();
		sel24 : composite_selector_without_memory_2(success_failure_node_38, success_node_38);
		success_failure_node_39 : success_failure_node_39_module(randomizer_stage_40);
		success_node_39 : success_DEFAULT_module();
		sel25 : composite_selector_without_memory_2(success_failure_node_39, success_node_39);
		parLink13 : composite_parallel_success_on_all_without_memory_2(sel24, sel25);
		success_failure_node_40 : success_failure_node_40_module(randomizer_stage_41);
		success_node_40 : success_DEFAULT_module();
		sel26 : composite_selector_without_memory_2(success_failure_node_40, success_node_40);
		success_failure_node_41 : success_failure_node_41_module(randomizer_stage_42);
		success_node_41 : success_DEFAULT_module();
		sel27 : composite_selector_without_memory_2(success_failure_node_41, success_node_41);
		parLink14 : composite_parallel_success_on_all_without_memory_2(sel26, sel27);
		parLink32 : composite_parallel_success_on_all_without_memory_2(parLink13, parLink14);
		parLink41 : composite_parallel_success_on_all_without_memory_2(parLink31, parLink32);
		success_failure_node_42 : success_failure_node_42_module(randomizer_stage_43);
		success_node_42 : success_DEFAULT_module();
		sel28 : composite_selector_without_memory_2(success_failure_node_42, success_node_42);
		success_failure_node_43 : success_failure_node_43_module(randomizer_stage_44);
		success_node_43 : success_DEFAULT_module();
		sel29 : composite_selector_without_memory_2(success_failure_node_43, success_node_43);
		parLink15 : composite_parallel_success_on_all_without_memory_2(sel28, sel29);
		success_failure_node_44 : success_failure_node_44_module(randomizer_stage_45);
		success_node_44 : success_DEFAULT_module();
		sel30 : composite_selector_without_memory_2(success_failure_node_44, success_node_44);
		success_failure_node_45 : success_failure_node_45_module(randomizer_stage_46);
		success_node_45 : success_DEFAULT_module();
		sel31 : composite_selector_without_memory_2(success_failure_node_45, success_node_45);
		parLink16 : composite_parallel_success_on_all_without_memory_2(sel30, sel31);
		parLink33 : composite_parallel_success_on_all_without_memory_2(parLink15, parLink16);
		success_failure_node_46 : success_failure_node_46_module(randomizer_stage_47);
		success_node_46 : success_DEFAULT_module();
		sel32 : composite_selector_without_memory_2(success_failure_node_46, success_node_46);
		success_failure_node_47 : success_failure_node_47_module(randomizer_stage_48);
		success_node_47 : success_DEFAULT_module();
		sel33 : composite_selector_without_memory_2(success_failure_node_47, success_node_47);
		parLink17 : composite_parallel_success_on_all_without_memory_2(sel32, sel33);
		success_failure_node_48 : success_failure_node_48_module(randomizer_stage_49);
		success_node_48 : success_DEFAULT_module();
		sel34 : composite_selector_without_memory_2(success_failure_node_48, success_node_48);
		success_failure_node_49 : success_failure_node_49_module(randomizer_stage_50);
		success_node_49 : success_DEFAULT_module();
		sel35 : composite_selector_without_memory_2(success_failure_node_49, success_node_49);
		parLink18 : composite_parallel_success_on_all_without_memory_2(sel34, sel35);
		parLink34 : composite_parallel_success_on_all_without_memory_2(parLink17, parLink18);
		parLink42 : composite_parallel_success_on_all_without_memory_2(parLink33, parLink34);
		parLink46 : composite_parallel_success_on_all_without_memory_2(parLink41, parLink42);
		parLink48 : composite_parallel_success_on_all_without_memory_2(parLink45, parLink46);
		parLink49 : composite_parallel_success_on_all_without_memory_2(parLink47, parLink48);
		--START OF BLACKBOARD VARIABLES DECLARATION
		randomizer_stage_1 : boolean;
		randomizer_stage_2 : boolean;
		randomizer_stage_3 : boolean;
		randomizer_stage_4 : boolean;
		randomizer_stage_5 : boolean;
		randomizer_stage_6 : boolean;
		randomizer_stage_7 : boolean;
		randomizer_stage_8 : boolean;
		randomizer_stage_9 : boolean;
		randomizer_stage_10 : boolean;
		randomizer_stage_11 : boolean;
		randomizer_stage_12 : boolean;
		randomizer_stage_13 : boolean;
		randomizer_stage_14 : boolean;
		randomizer_stage_15 : boolean;
		randomizer_stage_16 : boolean;
		randomizer_stage_17 : boolean;
		randomizer_stage_18 : boolean;
		randomizer_stage_19 : boolean;
		randomizer_stage_20 : boolean;
		randomizer_stage_21 : boolean;
		randomizer_stage_22 : boolean;
		randomizer_stage_23 : boolean;
		randomizer_stage_24 : boolean;
		randomizer_stage_25 : boolean;
		randomizer_stage_26 : boolean;
		randomizer_stage_27 : boolean;
		randomizer_stage_28 : boolean;
		randomizer_stage_29 : boolean;
		randomizer_stage_30 : boolean;
		randomizer_stage_31 : boolean;
		randomizer_stage_32 : boolean;
		randomizer_stage_33 : boolean;
		randomizer_stage_34 : boolean;
		randomizer_stage_35 : boolean;
		randomizer_stage_36 : boolean;
		randomizer_stage_37 : boolean;
		randomizer_stage_38 : boolean;
		randomizer_stage_39 : boolean;
		randomizer_stage_40 : boolean;
		randomizer_stage_41 : boolean;
		randomizer_stage_42 : boolean;
		randomizer_stage_43 : boolean;
		randomizer_stage_44 : boolean;
		randomizer_stage_45 : boolean;
		randomizer_stage_46 : boolean;
		randomizer_stage_47 : boolean;
		randomizer_stage_48 : boolean;
		randomizer_stage_49 : boolean;
		randomizer_stage_50 : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(randomizer_stage_1) := 
			case
				!(success_failure_node.active) : LINK_TO_PREVIOUS_FINAL_randomizer;
				!(TRUE) : randomizer_stage_0;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_2 := 
			case
				!(success_failure_node_1.active) : randomizer_stage_1;
				!(TRUE) : randomizer_stage_1;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_3 := 
			case
				!(success_failure_node_2.active) : randomizer_stage_2;
				!(TRUE) : randomizer_stage_2;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_4 := 
			case
				!(success_failure_node_3.active) : randomizer_stage_3;
				!(TRUE) : randomizer_stage_3;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_5 := 
			case
				!(success_failure_node_4.active) : randomizer_stage_4;
				!(TRUE) : randomizer_stage_4;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_6 := 
			case
				!(success_failure_node_5.active) : randomizer_stage_5;
				!(TRUE) : randomizer_stage_5;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_7 := 
			case
				!(success_failure_node_6.active) : randomizer_stage_6;
				!(TRUE) : randomizer_stage_6;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_8 := 
			case
				!(success_failure_node_7.active) : randomizer_stage_7;
				!(TRUE) : randomizer_stage_7;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_9 := 
			case
				!(success_failure_node_8.active) : randomizer_stage_8;
				!(TRUE) : randomizer_stage_8;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_10 := 
			case
				!(success_failure_node_9.active) : randomizer_stage_9;
				!(TRUE) : randomizer_stage_9;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_11 := 
			case
				!(success_failure_node_10.active) : randomizer_stage_10;
				!(TRUE) : randomizer_stage_10;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_12 := 
			case
				!(success_failure_node_11.active) : randomizer_stage_11;
				!(TRUE) : randomizer_stage_11;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_13 := 
			case
				!(success_failure_node_12.active) : randomizer_stage_12;
				!(TRUE) : randomizer_stage_12;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_14 := 
			case
				!(success_failure_node_13.active) : randomizer_stage_13;
				!(TRUE) : randomizer_stage_13;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_15 := 
			case
				!(success_failure_node_14.active) : randomizer_stage_14;
				!(TRUE) : randomizer_stage_14;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_16 := 
			case
				!(success_failure_node_15.active) : randomizer_stage_15;
				!(TRUE) : randomizer_stage_15;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_17 := 
			case
				!(success_failure_node_16.active) : randomizer_stage_16;
				!(TRUE) : randomizer_stage_16;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_18 := 
			case
				!(success_failure_node_17.active) : randomizer_stage_17;
				!(TRUE) : randomizer_stage_17;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_19 := 
			case
				!(success_failure_node_18.active) : randomizer_stage_18;
				!(TRUE) : randomizer_stage_18;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_20 := 
			case
				!(success_failure_node_19.active) : randomizer_stage_19;
				!(TRUE) : randomizer_stage_19;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_21 := 
			case
				!(success_failure_node_20.active) : randomizer_stage_20;
				!(TRUE) : randomizer_stage_20;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_22 := 
			case
				!(success_failure_node_21.active) : randomizer_stage_21;
				!(TRUE) : randomizer_stage_21;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_23 := 
			case
				!(success_failure_node_22.active) : randomizer_stage_22;
				!(TRUE) : randomizer_stage_22;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_24 := 
			case
				!(success_failure_node_23.active) : randomizer_stage_23;
				!(TRUE) : randomizer_stage_23;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_25 := 
			case
				!(success_failure_node_24.active) : randomizer_stage_24;
				!(TRUE) : randomizer_stage_24;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_26 := 
			case
				!(success_failure_node_25.active) : randomizer_stage_25;
				!(TRUE) : randomizer_stage_25;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_27 := 
			case
				!(success_failure_node_26.active) : randomizer_stage_26;
				!(TRUE) : randomizer_stage_26;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_28 := 
			case
				!(success_failure_node_27.active) : randomizer_stage_27;
				!(TRUE) : randomizer_stage_27;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_29 := 
			case
				!(success_failure_node_28.active) : randomizer_stage_28;
				!(TRUE) : randomizer_stage_28;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_30 := 
			case
				!(success_failure_node_29.active) : randomizer_stage_29;
				!(TRUE) : randomizer_stage_29;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_31 := 
			case
				!(success_failure_node_30.active) : randomizer_stage_30;
				!(TRUE) : randomizer_stage_30;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_32 := 
			case
				!(success_failure_node_31.active) : randomizer_stage_31;
				!(TRUE) : randomizer_stage_31;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_33 := 
			case
				!(success_failure_node_32.active) : randomizer_stage_32;
				!(TRUE) : randomizer_stage_32;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_34 := 
			case
				!(success_failure_node_33.active) : randomizer_stage_33;
				!(TRUE) : randomizer_stage_33;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_35 := 
			case
				!(success_failure_node_34.active) : randomizer_stage_34;
				!(TRUE) : randomizer_stage_34;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_36 := 
			case
				!(success_failure_node_35.active) : randomizer_stage_35;
				!(TRUE) : randomizer_stage_35;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_37 := 
			case
				!(success_failure_node_36.active) : randomizer_stage_36;
				!(TRUE) : randomizer_stage_36;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_38 := 
			case
				!(success_failure_node_37.active) : randomizer_stage_37;
				!(TRUE) : randomizer_stage_37;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_39 := 
			case
				!(success_failure_node_38.active) : randomizer_stage_38;
				!(TRUE) : randomizer_stage_38;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_40 := 
			case
				!(success_failure_node_39.active) : randomizer_stage_39;
				!(TRUE) : randomizer_stage_39;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_41 := 
			case
				!(success_failure_node_40.active) : randomizer_stage_40;
				!(TRUE) : randomizer_stage_40;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_42 := 
			case
				!(success_failure_node_41.active) : randomizer_stage_41;
				!(TRUE) : randomizer_stage_41;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_43 := 
			case
				!(success_failure_node_42.active) : randomizer_stage_42;
				!(TRUE) : randomizer_stage_42;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_44 := 
			case
				!(success_failure_node_43.active) : randomizer_stage_43;
				!(TRUE) : randomizer_stage_43;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_45 := 
			case
				!(success_failure_node_44.active) : randomizer_stage_44;
				!(TRUE) : randomizer_stage_44;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_46 := 
			case
				!(success_failure_node_45.active) : randomizer_stage_45;
				!(TRUE) : randomizer_stage_45;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_47 := 
			case
				!(success_failure_node_46.active) : randomizer_stage_46;
				!(TRUE) : randomizer_stage_46;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_48 := 
			case
				!(success_failure_node_47.active) : randomizer_stage_47;
				!(TRUE) : randomizer_stage_47;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_49 := 
			case
				!(success_failure_node_48.active) : randomizer_stage_48;
				!(TRUE) : randomizer_stage_48;
				TRUE : {TRUE, FALSE};
			esac;
		randomizer_stage_50 := 
			case
				!(success_failure_node_49.active) : randomizer_stage_49;
				!(TRUE) : randomizer_stage_49;
				TRUE : {TRUE, FALSE};
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((success_failure_node.status = failure) -> (success_node.status = success)));
LTLSPEC G(((success_failure_node.status = failure) -> !((success_node.status = success))));
CTLSPEC AG(((success_failure_node.status = failure) -> (success_node.status = success)));
CTLSPEC AG(((success_failure_node.status = failure) -> !((success_node.status = success))));
INVARSPEC ((success_failure_node.status = failure) -> (success_node.status = success));
INVARSPEC ((success_failure_node.status = failure) -> !((success_node.status = success)));
LTLSPEC G(((success_failure_node_1.status = failure) -> (success_node_1.status = success)));
LTLSPEC G(((success_failure_node_1.status = failure) -> !((success_node_1.status = success))));
CTLSPEC AG(((success_failure_node_1.status = failure) -> (success_node_1.status = success)));
CTLSPEC AG(((success_failure_node_1.status = failure) -> !((success_node_1.status = success))));
INVARSPEC ((success_failure_node_1.status = failure) -> (success_node_1.status = success));
INVARSPEC ((success_failure_node_1.status = failure) -> !((success_node_1.status = success)));
LTLSPEC G(((success_failure_node_2.status = failure) -> (success_node_2.status = success)));
LTLSPEC G(((success_failure_node_2.status = failure) -> !((success_node_2.status = success))));
CTLSPEC AG(((success_failure_node_2.status = failure) -> (success_node_2.status = success)));
CTLSPEC AG(((success_failure_node_2.status = failure) -> !((success_node_2.status = success))));
INVARSPEC ((success_failure_node_2.status = failure) -> (success_node_2.status = success));
INVARSPEC ((success_failure_node_2.status = failure) -> !((success_node_2.status = success)));
LTLSPEC G(((success_failure_node_3.status = failure) -> (success_node_3.status = success)));
LTLSPEC G(((success_failure_node_3.status = failure) -> !((success_node_3.status = success))));
CTLSPEC AG(((success_failure_node_3.status = failure) -> (success_node_3.status = success)));
CTLSPEC AG(((success_failure_node_3.status = failure) -> !((success_node_3.status = success))));
INVARSPEC ((success_failure_node_3.status = failure) -> (success_node_3.status = success));
INVARSPEC ((success_failure_node_3.status = failure) -> !((success_node_3.status = success)));
LTLSPEC G(((success_failure_node_4.status = failure) -> (success_node_4.status = success)));
LTLSPEC G(((success_failure_node_4.status = failure) -> !((success_node_4.status = success))));
CTLSPEC AG(((success_failure_node_4.status = failure) -> (success_node_4.status = success)));
CTLSPEC AG(((success_failure_node_4.status = failure) -> !((success_node_4.status = success))));
INVARSPEC ((success_failure_node_4.status = failure) -> (success_node_4.status = success));
INVARSPEC ((success_failure_node_4.status = failure) -> !((success_node_4.status = success)));
LTLSPEC G(((success_failure_node_5.status = failure) -> (success_node_5.status = success)));
LTLSPEC G(((success_failure_node_5.status = failure) -> !((success_node_5.status = success))));
CTLSPEC AG(((success_failure_node_5.status = failure) -> (success_node_5.status = success)));
CTLSPEC AG(((success_failure_node_5.status = failure) -> !((success_node_5.status = success))));
INVARSPEC ((success_failure_node_5.status = failure) -> (success_node_5.status = success));
INVARSPEC ((success_failure_node_5.status = failure) -> !((success_node_5.status = success)));
LTLSPEC G(((success_failure_node_6.status = failure) -> (success_node_6.status = success)));
LTLSPEC G(((success_failure_node_6.status = failure) -> !((success_node_6.status = success))));
CTLSPEC AG(((success_failure_node_6.status = failure) -> (success_node_6.status = success)));
CTLSPEC AG(((success_failure_node_6.status = failure) -> !((success_node_6.status = success))));
INVARSPEC ((success_failure_node_6.status = failure) -> (success_node_6.status = success));
INVARSPEC ((success_failure_node_6.status = failure) -> !((success_node_6.status = success)));
LTLSPEC G(((success_failure_node_7.status = failure) -> (success_node_7.status = success)));
LTLSPEC G(((success_failure_node_7.status = failure) -> !((success_node_7.status = success))));
CTLSPEC AG(((success_failure_node_7.status = failure) -> (success_node_7.status = success)));
CTLSPEC AG(((success_failure_node_7.status = failure) -> !((success_node_7.status = success))));
INVARSPEC ((success_failure_node_7.status = failure) -> (success_node_7.status = success));
INVARSPEC ((success_failure_node_7.status = failure) -> !((success_node_7.status = success)));
LTLSPEC G(((success_failure_node_8.status = failure) -> (success_node_8.status = success)));
LTLSPEC G(((success_failure_node_8.status = failure) -> !((success_node_8.status = success))));
CTLSPEC AG(((success_failure_node_8.status = failure) -> (success_node_8.status = success)));
CTLSPEC AG(((success_failure_node_8.status = failure) -> !((success_node_8.status = success))));
INVARSPEC ((success_failure_node_8.status = failure) -> (success_node_8.status = success));
INVARSPEC ((success_failure_node_8.status = failure) -> !((success_node_8.status = success)));
LTLSPEC G(((success_failure_node_9.status = failure) -> (success_node_9.status = success)));
LTLSPEC G(((success_failure_node_9.status = failure) -> !((success_node_9.status = success))));
CTLSPEC AG(((success_failure_node_9.status = failure) -> (success_node_9.status = success)));
CTLSPEC AG(((success_failure_node_9.status = failure) -> !((success_node_9.status = success))));
INVARSPEC ((success_failure_node_9.status = failure) -> (success_node_9.status = success));
INVARSPEC ((success_failure_node_9.status = failure) -> !((success_node_9.status = success)));
LTLSPEC G(((success_failure_node_10.status = failure) -> (success_node_10.status = success)));
LTLSPEC G(((success_failure_node_10.status = failure) -> !((success_node_10.status = success))));
CTLSPEC AG(((success_failure_node_10.status = failure) -> (success_node_10.status = success)));
CTLSPEC AG(((success_failure_node_10.status = failure) -> !((success_node_10.status = success))));
INVARSPEC ((success_failure_node_10.status = failure) -> (success_node_10.status = success));
INVARSPEC ((success_failure_node_10.status = failure) -> !((success_node_10.status = success)));
LTLSPEC G(((success_failure_node_11.status = failure) -> (success_node_11.status = success)));
LTLSPEC G(((success_failure_node_11.status = failure) -> !((success_node_11.status = success))));
CTLSPEC AG(((success_failure_node_11.status = failure) -> (success_node_11.status = success)));
CTLSPEC AG(((success_failure_node_11.status = failure) -> !((success_node_11.status = success))));
INVARSPEC ((success_failure_node_11.status = failure) -> (success_node_11.status = success));
INVARSPEC ((success_failure_node_11.status = failure) -> !((success_node_11.status = success)));
LTLSPEC G(((success_failure_node_12.status = failure) -> (success_node_12.status = success)));
LTLSPEC G(((success_failure_node_12.status = failure) -> !((success_node_12.status = success))));
CTLSPEC AG(((success_failure_node_12.status = failure) -> (success_node_12.status = success)));
CTLSPEC AG(((success_failure_node_12.status = failure) -> !((success_node_12.status = success))));
INVARSPEC ((success_failure_node_12.status = failure) -> (success_node_12.status = success));
INVARSPEC ((success_failure_node_12.status = failure) -> !((success_node_12.status = success)));
LTLSPEC G(((success_failure_node_13.status = failure) -> (success_node_13.status = success)));
LTLSPEC G(((success_failure_node_13.status = failure) -> !((success_node_13.status = success))));
CTLSPEC AG(((success_failure_node_13.status = failure) -> (success_node_13.status = success)));
CTLSPEC AG(((success_failure_node_13.status = failure) -> !((success_node_13.status = success))));
INVARSPEC ((success_failure_node_13.status = failure) -> (success_node_13.status = success));
INVARSPEC ((success_failure_node_13.status = failure) -> !((success_node_13.status = success)));
LTLSPEC G(((success_failure_node_14.status = failure) -> (success_node_14.status = success)));
LTLSPEC G(((success_failure_node_14.status = failure) -> !((success_node_14.status = success))));
CTLSPEC AG(((success_failure_node_14.status = failure) -> (success_node_14.status = success)));
CTLSPEC AG(((success_failure_node_14.status = failure) -> !((success_node_14.status = success))));
INVARSPEC ((success_failure_node_14.status = failure) -> (success_node_14.status = success));
INVARSPEC ((success_failure_node_14.status = failure) -> !((success_node_14.status = success)));
LTLSPEC G(((success_failure_node_15.status = failure) -> (success_node_15.status = success)));
LTLSPEC G(((success_failure_node_15.status = failure) -> !((success_node_15.status = success))));
CTLSPEC AG(((success_failure_node_15.status = failure) -> (success_node_15.status = success)));
CTLSPEC AG(((success_failure_node_15.status = failure) -> !((success_node_15.status = success))));
INVARSPEC ((success_failure_node_15.status = failure) -> (success_node_15.status = success));
INVARSPEC ((success_failure_node_15.status = failure) -> !((success_node_15.status = success)));
LTLSPEC G(((success_failure_node_16.status = failure) -> (success_node_16.status = success)));
LTLSPEC G(((success_failure_node_16.status = failure) -> !((success_node_16.status = success))));
CTLSPEC AG(((success_failure_node_16.status = failure) -> (success_node_16.status = success)));
CTLSPEC AG(((success_failure_node_16.status = failure) -> !((success_node_16.status = success))));
INVARSPEC ((success_failure_node_16.status = failure) -> (success_node_16.status = success));
INVARSPEC ((success_failure_node_16.status = failure) -> !((success_node_16.status = success)));
LTLSPEC G(((success_failure_node_17.status = failure) -> (success_node_17.status = success)));
LTLSPEC G(((success_failure_node_17.status = failure) -> !((success_node_17.status = success))));
CTLSPEC AG(((success_failure_node_17.status = failure) -> (success_node_17.status = success)));
CTLSPEC AG(((success_failure_node_17.status = failure) -> !((success_node_17.status = success))));
INVARSPEC ((success_failure_node_17.status = failure) -> (success_node_17.status = success));
INVARSPEC ((success_failure_node_17.status = failure) -> !((success_node_17.status = success)));
LTLSPEC G(((success_failure_node_18.status = failure) -> (success_node_18.status = success)));
LTLSPEC G(((success_failure_node_18.status = failure) -> !((success_node_18.status = success))));
CTLSPEC AG(((success_failure_node_18.status = failure) -> (success_node_18.status = success)));
CTLSPEC AG(((success_failure_node_18.status = failure) -> !((success_node_18.status = success))));
INVARSPEC ((success_failure_node_18.status = failure) -> (success_node_18.status = success));
INVARSPEC ((success_failure_node_18.status = failure) -> !((success_node_18.status = success)));
LTLSPEC G(((success_failure_node_19.status = failure) -> (success_node_19.status = success)));
LTLSPEC G(((success_failure_node_19.status = failure) -> !((success_node_19.status = success))));
CTLSPEC AG(((success_failure_node_19.status = failure) -> (success_node_19.status = success)));
CTLSPEC AG(((success_failure_node_19.status = failure) -> !((success_node_19.status = success))));
INVARSPEC ((success_failure_node_19.status = failure) -> (success_node_19.status = success));
INVARSPEC ((success_failure_node_19.status = failure) -> !((success_node_19.status = success)));
LTLSPEC G(((success_failure_node_20.status = failure) -> (success_node_20.status = success)));
LTLSPEC G(((success_failure_node_20.status = failure) -> !((success_node_20.status = success))));
CTLSPEC AG(((success_failure_node_20.status = failure) -> (success_node_20.status = success)));
CTLSPEC AG(((success_failure_node_20.status = failure) -> !((success_node_20.status = success))));
INVARSPEC ((success_failure_node_20.status = failure) -> (success_node_20.status = success));
INVARSPEC ((success_failure_node_20.status = failure) -> !((success_node_20.status = success)));
LTLSPEC G(((success_failure_node_21.status = failure) -> (success_node_21.status = success)));
LTLSPEC G(((success_failure_node_21.status = failure) -> !((success_node_21.status = success))));
CTLSPEC AG(((success_failure_node_21.status = failure) -> (success_node_21.status = success)));
CTLSPEC AG(((success_failure_node_21.status = failure) -> !((success_node_21.status = success))));
INVARSPEC ((success_failure_node_21.status = failure) -> (success_node_21.status = success));
INVARSPEC ((success_failure_node_21.status = failure) -> !((success_node_21.status = success)));
LTLSPEC G(((success_failure_node_22.status = failure) -> (success_node_22.status = success)));
LTLSPEC G(((success_failure_node_22.status = failure) -> !((success_node_22.status = success))));
CTLSPEC AG(((success_failure_node_22.status = failure) -> (success_node_22.status = success)));
CTLSPEC AG(((success_failure_node_22.status = failure) -> !((success_node_22.status = success))));
INVARSPEC ((success_failure_node_22.status = failure) -> (success_node_22.status = success));
INVARSPEC ((success_failure_node_22.status = failure) -> !((success_node_22.status = success)));
LTLSPEC G(((success_failure_node_23.status = failure) -> (success_node_23.status = success)));
LTLSPEC G(((success_failure_node_23.status = failure) -> !((success_node_23.status = success))));
CTLSPEC AG(((success_failure_node_23.status = failure) -> (success_node_23.status = success)));
CTLSPEC AG(((success_failure_node_23.status = failure) -> !((success_node_23.status = success))));
INVARSPEC ((success_failure_node_23.status = failure) -> (success_node_23.status = success));
INVARSPEC ((success_failure_node_23.status = failure) -> !((success_node_23.status = success)));
LTLSPEC G(((success_failure_node_24.status = failure) -> (success_node_24.status = success)));
LTLSPEC G(((success_failure_node_24.status = failure) -> !((success_node_24.status = success))));
CTLSPEC AG(((success_failure_node_24.status = failure) -> (success_node_24.status = success)));
CTLSPEC AG(((success_failure_node_24.status = failure) -> !((success_node_24.status = success))));
INVARSPEC ((success_failure_node_24.status = failure) -> (success_node_24.status = success));
INVARSPEC ((success_failure_node_24.status = failure) -> !((success_node_24.status = success)));
LTLSPEC G(((success_failure_node_25.status = failure) -> (success_node_25.status = success)));
LTLSPEC G(((success_failure_node_25.status = failure) -> !((success_node_25.status = success))));
CTLSPEC AG(((success_failure_node_25.status = failure) -> (success_node_25.status = success)));
CTLSPEC AG(((success_failure_node_25.status = failure) -> !((success_node_25.status = success))));
INVARSPEC ((success_failure_node_25.status = failure) -> (success_node_25.status = success));
INVARSPEC ((success_failure_node_25.status = failure) -> !((success_node_25.status = success)));
LTLSPEC G(((success_failure_node_26.status = failure) -> (success_node_26.status = success)));
LTLSPEC G(((success_failure_node_26.status = failure) -> !((success_node_26.status = success))));
CTLSPEC AG(((success_failure_node_26.status = failure) -> (success_node_26.status = success)));
CTLSPEC AG(((success_failure_node_26.status = failure) -> !((success_node_26.status = success))));
INVARSPEC ((success_failure_node_26.status = failure) -> (success_node_26.status = success));
INVARSPEC ((success_failure_node_26.status = failure) -> !((success_node_26.status = success)));
LTLSPEC G(((success_failure_node_27.status = failure) -> (success_node_27.status = success)));
LTLSPEC G(((success_failure_node_27.status = failure) -> !((success_node_27.status = success))));
CTLSPEC AG(((success_failure_node_27.status = failure) -> (success_node_27.status = success)));
CTLSPEC AG(((success_failure_node_27.status = failure) -> !((success_node_27.status = success))));
INVARSPEC ((success_failure_node_27.status = failure) -> (success_node_27.status = success));
INVARSPEC ((success_failure_node_27.status = failure) -> !((success_node_27.status = success)));
LTLSPEC G(((success_failure_node_28.status = failure) -> (success_node_28.status = success)));
LTLSPEC G(((success_failure_node_28.status = failure) -> !((success_node_28.status = success))));
CTLSPEC AG(((success_failure_node_28.status = failure) -> (success_node_28.status = success)));
CTLSPEC AG(((success_failure_node_28.status = failure) -> !((success_node_28.status = success))));
INVARSPEC ((success_failure_node_28.status = failure) -> (success_node_28.status = success));
INVARSPEC ((success_failure_node_28.status = failure) -> !((success_node_28.status = success)));
LTLSPEC G(((success_failure_node_29.status = failure) -> (success_node_29.status = success)));
LTLSPEC G(((success_failure_node_29.status = failure) -> !((success_node_29.status = success))));
CTLSPEC AG(((success_failure_node_29.status = failure) -> (success_node_29.status = success)));
CTLSPEC AG(((success_failure_node_29.status = failure) -> !((success_node_29.status = success))));
INVARSPEC ((success_failure_node_29.status = failure) -> (success_node_29.status = success));
INVARSPEC ((success_failure_node_29.status = failure) -> !((success_node_29.status = success)));
LTLSPEC G(((success_failure_node_30.status = failure) -> (success_node_30.status = success)));
LTLSPEC G(((success_failure_node_30.status = failure) -> !((success_node_30.status = success))));
CTLSPEC AG(((success_failure_node_30.status = failure) -> (success_node_30.status = success)));
CTLSPEC AG(((success_failure_node_30.status = failure) -> !((success_node_30.status = success))));
INVARSPEC ((success_failure_node_30.status = failure) -> (success_node_30.status = success));
INVARSPEC ((success_failure_node_30.status = failure) -> !((success_node_30.status = success)));
LTLSPEC G(((success_failure_node_31.status = failure) -> (success_node_31.status = success)));
LTLSPEC G(((success_failure_node_31.status = failure) -> !((success_node_31.status = success))));
CTLSPEC AG(((success_failure_node_31.status = failure) -> (success_node_31.status = success)));
CTLSPEC AG(((success_failure_node_31.status = failure) -> !((success_node_31.status = success))));
INVARSPEC ((success_failure_node_31.status = failure) -> (success_node_31.status = success));
INVARSPEC ((success_failure_node_31.status = failure) -> !((success_node_31.status = success)));
LTLSPEC G(((success_failure_node_32.status = failure) -> (success_node_32.status = success)));
LTLSPEC G(((success_failure_node_32.status = failure) -> !((success_node_32.status = success))));
CTLSPEC AG(((success_failure_node_32.status = failure) -> (success_node_32.status = success)));
CTLSPEC AG(((success_failure_node_32.status = failure) -> !((success_node_32.status = success))));
INVARSPEC ((success_failure_node_32.status = failure) -> (success_node_32.status = success));
INVARSPEC ((success_failure_node_32.status = failure) -> !((success_node_32.status = success)));
LTLSPEC G(((success_failure_node_33.status = failure) -> (success_node_33.status = success)));
LTLSPEC G(((success_failure_node_33.status = failure) -> !((success_node_33.status = success))));
CTLSPEC AG(((success_failure_node_33.status = failure) -> (success_node_33.status = success)));
CTLSPEC AG(((success_failure_node_33.status = failure) -> !((success_node_33.status = success))));
INVARSPEC ((success_failure_node_33.status = failure) -> (success_node_33.status = success));
INVARSPEC ((success_failure_node_33.status = failure) -> !((success_node_33.status = success)));
LTLSPEC G(((success_failure_node_34.status = failure) -> (success_node_34.status = success)));
LTLSPEC G(((success_failure_node_34.status = failure) -> !((success_node_34.status = success))));
CTLSPEC AG(((success_failure_node_34.status = failure) -> (success_node_34.status = success)));
CTLSPEC AG(((success_failure_node_34.status = failure) -> !((success_node_34.status = success))));
INVARSPEC ((success_failure_node_34.status = failure) -> (success_node_34.status = success));
INVARSPEC ((success_failure_node_34.status = failure) -> !((success_node_34.status = success)));
LTLSPEC G(((success_failure_node_35.status = failure) -> (success_node_35.status = success)));
LTLSPEC G(((success_failure_node_35.status = failure) -> !((success_node_35.status = success))));
CTLSPEC AG(((success_failure_node_35.status = failure) -> (success_node_35.status = success)));
CTLSPEC AG(((success_failure_node_35.status = failure) -> !((success_node_35.status = success))));
INVARSPEC ((success_failure_node_35.status = failure) -> (success_node_35.status = success));
INVARSPEC ((success_failure_node_35.status = failure) -> !((success_node_35.status = success)));
LTLSPEC G(((success_failure_node_36.status = failure) -> (success_node_36.status = success)));
LTLSPEC G(((success_failure_node_36.status = failure) -> !((success_node_36.status = success))));
CTLSPEC AG(((success_failure_node_36.status = failure) -> (success_node_36.status = success)));
CTLSPEC AG(((success_failure_node_36.status = failure) -> !((success_node_36.status = success))));
INVARSPEC ((success_failure_node_36.status = failure) -> (success_node_36.status = success));
INVARSPEC ((success_failure_node_36.status = failure) -> !((success_node_36.status = success)));
LTLSPEC G(((success_failure_node_37.status = failure) -> (success_node_37.status = success)));
LTLSPEC G(((success_failure_node_37.status = failure) -> !((success_node_37.status = success))));
CTLSPEC AG(((success_failure_node_37.status = failure) -> (success_node_37.status = success)));
CTLSPEC AG(((success_failure_node_37.status = failure) -> !((success_node_37.status = success))));
INVARSPEC ((success_failure_node_37.status = failure) -> (success_node_37.status = success));
INVARSPEC ((success_failure_node_37.status = failure) -> !((success_node_37.status = success)));
LTLSPEC G(((success_failure_node_38.status = failure) -> (success_node_38.status = success)));
LTLSPEC G(((success_failure_node_38.status = failure) -> !((success_node_38.status = success))));
CTLSPEC AG(((success_failure_node_38.status = failure) -> (success_node_38.status = success)));
CTLSPEC AG(((success_failure_node_38.status = failure) -> !((success_node_38.status = success))));
INVARSPEC ((success_failure_node_38.status = failure) -> (success_node_38.status = success));
INVARSPEC ((success_failure_node_38.status = failure) -> !((success_node_38.status = success)));
LTLSPEC G(((success_failure_node_39.status = failure) -> (success_node_39.status = success)));
LTLSPEC G(((success_failure_node_39.status = failure) -> !((success_node_39.status = success))));
CTLSPEC AG(((success_failure_node_39.status = failure) -> (success_node_39.status = success)));
CTLSPEC AG(((success_failure_node_39.status = failure) -> !((success_node_39.status = success))));
INVARSPEC ((success_failure_node_39.status = failure) -> (success_node_39.status = success));
INVARSPEC ((success_failure_node_39.status = failure) -> !((success_node_39.status = success)));
LTLSPEC G(((success_failure_node_40.status = failure) -> (success_node_40.status = success)));
LTLSPEC G(((success_failure_node_40.status = failure) -> !((success_node_40.status = success))));
CTLSPEC AG(((success_failure_node_40.status = failure) -> (success_node_40.status = success)));
CTLSPEC AG(((success_failure_node_40.status = failure) -> !((success_node_40.status = success))));
INVARSPEC ((success_failure_node_40.status = failure) -> (success_node_40.status = success));
INVARSPEC ((success_failure_node_40.status = failure) -> !((success_node_40.status = success)));
LTLSPEC G(((success_failure_node_41.status = failure) -> (success_node_41.status = success)));
LTLSPEC G(((success_failure_node_41.status = failure) -> !((success_node_41.status = success))));
CTLSPEC AG(((success_failure_node_41.status = failure) -> (success_node_41.status = success)));
CTLSPEC AG(((success_failure_node_41.status = failure) -> !((success_node_41.status = success))));
INVARSPEC ((success_failure_node_41.status = failure) -> (success_node_41.status = success));
INVARSPEC ((success_failure_node_41.status = failure) -> !((success_node_41.status = success)));
LTLSPEC G(((success_failure_node_42.status = failure) -> (success_node_42.status = success)));
LTLSPEC G(((success_failure_node_42.status = failure) -> !((success_node_42.status = success))));
CTLSPEC AG(((success_failure_node_42.status = failure) -> (success_node_42.status = success)));
CTLSPEC AG(((success_failure_node_42.status = failure) -> !((success_node_42.status = success))));
INVARSPEC ((success_failure_node_42.status = failure) -> (success_node_42.status = success));
INVARSPEC ((success_failure_node_42.status = failure) -> !((success_node_42.status = success)));
LTLSPEC G(((success_failure_node_43.status = failure) -> (success_node_43.status = success)));
LTLSPEC G(((success_failure_node_43.status = failure) -> !((success_node_43.status = success))));
CTLSPEC AG(((success_failure_node_43.status = failure) -> (success_node_43.status = success)));
CTLSPEC AG(((success_failure_node_43.status = failure) -> !((success_node_43.status = success))));
INVARSPEC ((success_failure_node_43.status = failure) -> (success_node_43.status = success));
INVARSPEC ((success_failure_node_43.status = failure) -> !((success_node_43.status = success)));
LTLSPEC G(((success_failure_node_44.status = failure) -> (success_node_44.status = success)));
LTLSPEC G(((success_failure_node_44.status = failure) -> !((success_node_44.status = success))));
CTLSPEC AG(((success_failure_node_44.status = failure) -> (success_node_44.status = success)));
CTLSPEC AG(((success_failure_node_44.status = failure) -> !((success_node_44.status = success))));
INVARSPEC ((success_failure_node_44.status = failure) -> (success_node_44.status = success));
INVARSPEC ((success_failure_node_44.status = failure) -> !((success_node_44.status = success)));
LTLSPEC G(((success_failure_node_45.status = failure) -> (success_node_45.status = success)));
LTLSPEC G(((success_failure_node_45.status = failure) -> !((success_node_45.status = success))));
CTLSPEC AG(((success_failure_node_45.status = failure) -> (success_node_45.status = success)));
CTLSPEC AG(((success_failure_node_45.status = failure) -> !((success_node_45.status = success))));
INVARSPEC ((success_failure_node_45.status = failure) -> (success_node_45.status = success));
INVARSPEC ((success_failure_node_45.status = failure) -> !((success_node_45.status = success)));
LTLSPEC G(((success_failure_node_46.status = failure) -> (success_node_46.status = success)));
LTLSPEC G(((success_failure_node_46.status = failure) -> !((success_node_46.status = success))));
CTLSPEC AG(((success_failure_node_46.status = failure) -> (success_node_46.status = success)));
CTLSPEC AG(((success_failure_node_46.status = failure) -> !((success_node_46.status = success))));
INVARSPEC ((success_failure_node_46.status = failure) -> (success_node_46.status = success));
INVARSPEC ((success_failure_node_46.status = failure) -> !((success_node_46.status = success)));
LTLSPEC G(((success_failure_node_47.status = failure) -> (success_node_47.status = success)));
LTLSPEC G(((success_failure_node_47.status = failure) -> !((success_node_47.status = success))));
CTLSPEC AG(((success_failure_node_47.status = failure) -> (success_node_47.status = success)));
CTLSPEC AG(((success_failure_node_47.status = failure) -> !((success_node_47.status = success))));
INVARSPEC ((success_failure_node_47.status = failure) -> (success_node_47.status = success));
INVARSPEC ((success_failure_node_47.status = failure) -> !((success_node_47.status = success)));
LTLSPEC G(((success_failure_node_48.status = failure) -> (success_node_48.status = success)));
LTLSPEC G(((success_failure_node_48.status = failure) -> !((success_node_48.status = success))));
CTLSPEC AG(((success_failure_node_48.status = failure) -> (success_node_48.status = success)));
CTLSPEC AG(((success_failure_node_48.status = failure) -> !((success_node_48.status = success))));
INVARSPEC ((success_failure_node_48.status = failure) -> (success_node_48.status = success));
INVARSPEC ((success_failure_node_48.status = failure) -> !((success_node_48.status = success)));
LTLSPEC G(((success_failure_node_49.status = failure) -> (success_node_49.status = success)));
LTLSPEC G(((success_failure_node_49.status = failure) -> !((success_node_49.status = success))));
CTLSPEC AG(((success_failure_node_49.status = failure) -> (success_node_49.status = success)));
CTLSPEC AG(((success_failure_node_49.status = failure) -> !((success_node_49.status = success))));
INVARSPEC ((success_failure_node_49.status = failure) -> (success_node_49.status = success));
INVARSPEC ((success_failure_node_49.status = failure) -> !((success_node_49.status = success)));
MODULE define_nodes
	DEFINE
		parLink49 := 0;
		parLink47 := 1;
		parLink43 := 2;
		parLink35 := 3;
		parLink19 := 4;
		sel36 := 5;
		success_failure_node := 6;
		success_node := 7;
		sel37 := 8;
		success_failure_node_1 := 9;
		success_node_1 := 10;
		parLink20 := 11;
		sel38 := 12;
		success_failure_node_2 := 13;
		success_node_2 := 14;
		sel39 := 15;
		success_failure_node_3 := 16;
		success_node_3 := 17;
		parLink36 := 18;
		parLink21 := 19;
		sel40 := 20;
		success_failure_node_4 := 21;
		success_node_4 := 22;
		sel41 := 23;
		success_failure_node_5 := 24;
		success_node_5 := 25;
		parLink22 := 26;
		sel42 := 27;
		success_failure_node_6 := 28;
		success_node_6 := 29;
		sel43 := 30;
		success_failure_node_7 := 31;
		success_node_7 := 32;
		parLink44 := 33;
		parLink37 := 34;
		parLink23 := 35;
		sel44 := 36;
		success_failure_node_8 := 37;
		success_node_8 := 38;
		sel45 := 39;
		success_failure_node_9 := 40;
		success_node_9 := 41;
		parLink24 := 42;
		sel46 := 43;
		success_failure_node_10 := 44;
		success_node_10 := 45;
		sel47 := 46;
		success_failure_node_11 := 47;
		success_node_11 := 48;
		parLink38 := 49;
		parLink25 := 50;
		sel48 := 51;
		success_failure_node_12 := 52;
		success_node_12 := 53;
		sel49 := 54;
		success_failure_node_13 := 55;
		success_node_13 := 56;
		parLink26 := 57;
		parLink1 := 58;
		sel0 := 59;
		success_failure_node_14 := 60;
		success_node_14 := 61;
		sel1 := 62;
		success_failure_node_15 := 63;
		success_node_15 := 64;
		parLink2 := 65;
		sel2 := 66;
		success_failure_node_16 := 67;
		success_node_16 := 68;
		sel3 := 69;
		success_failure_node_17 := 70;
		success_node_17 := 71;
		parLink48 := 72;
		parLink45 := 73;
		parLink39 := 74;
		parLink27 := 75;
		parLink3 := 76;
		sel4 := 77;
		success_failure_node_18 := 78;
		success_node_18 := 79;
		sel5 := 80;
		success_failure_node_19 := 81;
		success_node_19 := 82;
		parLink4 := 83;
		sel6 := 84;
		success_failure_node_20 := 85;
		success_node_20 := 86;
		sel7 := 87;
		success_failure_node_21 := 88;
		success_node_21 := 89;
		parLink28 := 90;
		parLink5 := 91;
		sel8 := 92;
		success_failure_node_22 := 93;
		success_node_22 := 94;
		sel9 := 95;
		success_failure_node_23 := 96;
		success_node_23 := 97;
		parLink6 := 98;
		sel10 := 99;
		success_failure_node_24 := 100;
		success_node_24 := 101;
		sel11 := 102;
		success_failure_node_25 := 103;
		success_node_25 := 104;
		parLink40 := 105;
		parLink29 := 106;
		parLink7 := 107;
		sel12 := 108;
		success_failure_node_26 := 109;
		success_node_26 := 110;
		sel13 := 111;
		success_failure_node_27 := 112;
		success_node_27 := 113;
		parLink8 := 114;
		sel14 := 115;
		success_failure_node_28 := 116;
		success_node_28 := 117;
		sel15 := 118;
		success_failure_node_29 := 119;
		success_node_29 := 120;
		parLink30 := 121;
		parLink9 := 122;
		sel16 := 123;
		success_failure_node_30 := 124;
		success_node_30 := 125;
		sel17 := 126;
		success_failure_node_31 := 127;
		success_node_31 := 128;
		parLink10 := 129;
		sel18 := 130;
		success_failure_node_32 := 131;
		success_node_32 := 132;
		sel19 := 133;
		success_failure_node_33 := 134;
		success_node_33 := 135;
		parLink46 := 136;
		parLink41 := 137;
		parLink31 := 138;
		parLink11 := 139;
		sel20 := 140;
		success_failure_node_34 := 141;
		success_node_34 := 142;
		sel21 := 143;
		success_failure_node_35 := 144;
		success_node_35 := 145;
		parLink12 := 146;
		sel22 := 147;
		success_failure_node_36 := 148;
		success_node_36 := 149;
		sel23 := 150;
		success_failure_node_37 := 151;
		success_node_37 := 152;
		parLink32 := 153;
		parLink13 := 154;
		sel24 := 155;
		success_failure_node_38 := 156;
		success_node_38 := 157;
		sel25 := 158;
		success_failure_node_39 := 159;
		success_node_39 := 160;
		parLink14 := 161;
		sel26 := 162;
		success_failure_node_40 := 163;
		success_node_40 := 164;
		sel27 := 165;
		success_failure_node_41 := 166;
		success_node_41 := 167;
		parLink42 := 168;
		parLink33 := 169;
		parLink15 := 170;
		sel28 := 171;
		success_failure_node_42 := 172;
		success_node_42 := 173;
		sel29 := 174;
		success_failure_node_43 := 175;
		success_node_43 := 176;
		parLink16 := 177;
		sel30 := 178;
		success_failure_node_44 := 179;
		success_node_44 := 180;
		sel31 := 181;
		success_failure_node_45 := 182;
		success_node_45 := 183;
		parLink34 := 184;
		parLink17 := 185;
		sel32 := 186;
		success_failure_node_46 := 187;
		success_node_46 := 188;
		sel33 := 189;
		success_failure_node_47 := 190;
		success_node_47 := 191;
		parLink18 := 192;
		sel34 := 193;
		success_failure_node_48 := 194;
		success_node_48 := 195;
		sel35 := 196;
		success_failure_node_49 := 197;
		success_node_49 := 198;
MODULE composite_parallel_success_on_all_without_memory_2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				(child_0.internal_status = failure) : failure;
				(child_1.internal_status = failure) : failure;
				!(child_0.internal_status = success) : child_0.internal_status;
				!(child_1.internal_status = success) : child_1.internal_status;
				TRUE : success;
			esac;
		child_0.active := active;
		child_1.active := active;
MODULE composite_selector_without_memory_2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				!(child_0.internal_status = failure) : child_0.internal_status;
				!(child_1.internal_status = failure) : child_1.internal_status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
MODULE success_failure_node_module(randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_1_module(randomizer_stage_2)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_2 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_2_module(randomizer_stage_3)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_3 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_3_module(randomizer_stage_4)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_4 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_4_module(randomizer_stage_5)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_5 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_5_module(randomizer_stage_6)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_6 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_6_module(randomizer_stage_7)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_7 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_7_module(randomizer_stage_8)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_8 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_8_module(randomizer_stage_9)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_9 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_9_module(randomizer_stage_10)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_10 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_10_module(randomizer_stage_11)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_11 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_11_module(randomizer_stage_12)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_12 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_12_module(randomizer_stage_13)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_13 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_13_module(randomizer_stage_14)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_14 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_14_module(randomizer_stage_15)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_15 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_15_module(randomizer_stage_16)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_16 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_16_module(randomizer_stage_17)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_17 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_17_module(randomizer_stage_18)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_18 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_18_module(randomizer_stage_19)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_19 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_19_module(randomizer_stage_20)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_20 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_20_module(randomizer_stage_21)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_21 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_21_module(randomizer_stage_22)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_22 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_22_module(randomizer_stage_23)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_23 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_23_module(randomizer_stage_24)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_24 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_24_module(randomizer_stage_25)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_25 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_25_module(randomizer_stage_26)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_26 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_26_module(randomizer_stage_27)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_27 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_27_module(randomizer_stage_28)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_28 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_28_module(randomizer_stage_29)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_29 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_29_module(randomizer_stage_30)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_30 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_30_module(randomizer_stage_31)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_31 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_31_module(randomizer_stage_32)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_32 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_32_module(randomizer_stage_33)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_33 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_33_module(randomizer_stage_34)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_34 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_34_module(randomizer_stage_35)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_35 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_35_module(randomizer_stage_36)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_36 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_36_module(randomizer_stage_37)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_37 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_37_module(randomizer_stage_38)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_38 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_38_module(randomizer_stage_39)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_39 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_39_module(randomizer_stage_40)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_40 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_40_module(randomizer_stage_41)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_41 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_41_module(randomizer_stage_42)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_42 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_42_module(randomizer_stage_43)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_43 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_43_module(randomizer_stage_44)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_44 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_44_module(randomizer_stage_45)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_45 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_45_module(randomizer_stage_46)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_46 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_46_module(randomizer_stage_47)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_47 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_47_module(randomizer_stage_48)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_48 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_48_module(randomizer_stage_49)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_49 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_49_module(randomizer_stage_50)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				randomizer_stage_50 : success;
				TRUE : failure;
			esac;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
