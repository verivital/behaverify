MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__parLink12 := -3;
		resume_from_here_in_subtree__parLink10 := -3;
		resume_from_here_in_subtree__parLink6 := -3;
		resume_from_here_in_subtree__sel10 := -3;
		resume_from_here_in_subtree__sel11 := -3;
		resume_from_here_in_subtree__parLink7 := -3;
		resume_from_here_in_subtree__sel12 := -3;
		resume_from_here_in_subtree__parLink1 := -3;
		resume_from_here_in_subtree__sel0 := -3;
		resume_from_here_in_subtree__sel1 := -3;
		resume_from_here_in_subtree__parLink11 := -3;
		resume_from_here_in_subtree__parLink8 := -3;
		resume_from_here_in_subtree__parLink2 := -3;
		resume_from_here_in_subtree__sel2 := -3;
		resume_from_here_in_subtree__sel3 := -3;
		resume_from_here_in_subtree__parLink3 := -3;
		resume_from_here_in_subtree__sel4 := -3;
		resume_from_here_in_subtree__sel5 := -3;
		resume_from_here_in_subtree__parLink9 := -3;
		resume_from_here_in_subtree__parLink4 := -3;
		resume_from_here_in_subtree__sel6 := -3;
		resume_from_here_in_subtree__sel7 := -3;
		resume_from_here_in_subtree__parLink5 := -3;
		resume_from_here_in_subtree__sel8 := -3;
		resume_from_here_in_subtree__sel9 := -3;
		next_child__parLink1 := 
			case
				(previous_node < node_names.sel0) : node_names.sel0;
				(previous_node < node_names.sel1) : node_names.sel1;
				TRUE : -1;
			esac;
		next_child__parLink10 := 
			case
				(previous_node < node_names.parLink6) : node_names.parLink6;
				(previous_node < node_names.parLink7) : node_names.parLink7;
				TRUE : -1;
			esac;
		next_child__parLink11 := 
			case
				(previous_node < node_names.parLink8) : node_names.parLink8;
				(previous_node < node_names.parLink9) : node_names.parLink9;
				TRUE : -1;
			esac;
		next_child__parLink12 := 
			case
				(previous_node < node_names.parLink10) : node_names.parLink10;
				(previous_node < node_names.parLink11) : node_names.parLink11;
				TRUE : -1;
			esac;
		next_child__parLink2 := 
			case
				(previous_node < node_names.sel2) : node_names.sel2;
				(previous_node < node_names.sel3) : node_names.sel3;
				TRUE : -1;
			esac;
		next_child__parLink3 := 
			case
				(previous_node < node_names.sel4) : node_names.sel4;
				(previous_node < node_names.sel5) : node_names.sel5;
				TRUE : -1;
			esac;
		next_child__parLink4 := 
			case
				(previous_node < node_names.sel6) : node_names.sel6;
				(previous_node < node_names.sel7) : node_names.sel7;
				TRUE : -1;
			esac;
		next_child__parLink5 := 
			case
				(previous_node < node_names.sel8) : node_names.sel8;
				(previous_node < node_names.sel9) : node_names.sel9;
				TRUE : -1;
			esac;
		next_child__parLink6 := 
			case
				(previous_node < node_names.sel10) : node_names.sel10;
				(previous_node < node_names.sel11) : node_names.sel11;
				TRUE : -1;
			esac;
		next_child__parLink7 := 
			case
				(previous_node < node_names.sel12) : node_names.sel12;
				(previous_node < node_names.parLink1) : node_names.parLink1;
				TRUE : -1;
			esac;
		next_child__parLink8 := 
			case
				(previous_node < node_names.parLink2) : node_names.parLink2;
				(previous_node < node_names.parLink3) : node_names.parLink3;
				TRUE : -1;
			esac;
		next_child__parLink9 := 
			case
				(previous_node < node_names.parLink4) : node_names.parLink4;
				(previous_node < node_names.parLink5) : node_names.parLink5;
				TRUE : -1;
			esac;
		next_child__sel0 := 
			case
				(previous_node < node_names.success_failure_node_3) : node_names.success_failure_node_3;
				(previous_node < node_names.success_node_3) : node_names.success_node_3;
				TRUE : -1;
			esac;
		next_child__sel1 := 
			case
				(previous_node < node_names.success_failure_node_4) : node_names.success_failure_node_4;
				(previous_node < node_names.success_node_4) : node_names.success_node_4;
				TRUE : -1;
			esac;
		next_child__sel10 := 
			case
				(previous_node < node_names.success_failure_node) : node_names.success_failure_node;
				(previous_node < node_names.success_node) : node_names.success_node;
				TRUE : -1;
			esac;
		next_child__sel11 := 
			case
				(previous_node < node_names.success_failure_node_1) : node_names.success_failure_node_1;
				(previous_node < node_names.success_node_1) : node_names.success_node_1;
				TRUE : -1;
			esac;
		next_child__sel12 := 
			case
				(previous_node < node_names.success_failure_node_2) : node_names.success_failure_node_2;
				(previous_node < node_names.success_node_2) : node_names.success_node_2;
				TRUE : -1;
			esac;
		next_child__sel2 := 
			case
				(previous_node < node_names.success_failure_node_5) : node_names.success_failure_node_5;
				(previous_node < node_names.success_node_5) : node_names.success_node_5;
				TRUE : -1;
			esac;
		next_child__sel3 := 
			case
				(previous_node < node_names.success_failure_node_6) : node_names.success_failure_node_6;
				(previous_node < node_names.success_node_6) : node_names.success_node_6;
				TRUE : -1;
			esac;
		next_child__sel4 := 
			case
				(previous_node < node_names.success_failure_node_7) : node_names.success_failure_node_7;
				(previous_node < node_names.success_node_7) : node_names.success_node_7;
				TRUE : -1;
			esac;
		next_child__sel5 := 
			case
				(previous_node < node_names.success_failure_node_8) : node_names.success_failure_node_8;
				(previous_node < node_names.success_node_8) : node_names.success_node_8;
				TRUE : -1;
			esac;
		next_child__sel6 := 
			case
				(previous_node < node_names.success_failure_node_9) : node_names.success_failure_node_9;
				(previous_node < node_names.success_node_9) : node_names.success_node_9;
				TRUE : -1;
			esac;
		next_child__sel7 := 
			case
				(previous_node < node_names.success_failure_node_10) : node_names.success_failure_node_10;
				(previous_node < node_names.success_node_10) : node_names.success_node_10;
				TRUE : -1;
			esac;
		next_child__sel8 := 
			case
				(previous_node < node_names.success_failure_node_11) : node_names.success_failure_node_11;
				(previous_node < node_names.success_node_11) : node_names.success_node_11;
				TRUE : -1;
			esac;
		next_child__sel9 := 
			case
				(previous_node < node_names.success_failure_node_12) : node_names.success_failure_node_12;
				(previous_node < node_names.success_node_12) : node_names.success_node_12;
				TRUE : -1;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..51;
		previous_node : -1..51;
		current_status : {success, running, failure, invalid};
		previous_status : {success, running, failure, invalid};
		parallel_status__parLink1 : {success, running, failure};
		parallel_status__parLink10 : {success, running, failure};
		parallel_status__parLink11 : {success, running, failure};
		parallel_status__parLink12 : {success, running, failure};
		parallel_status__parLink2 : {success, running, failure};
		parallel_status__parLink3 : {success, running, failure};
		parallel_status__parLink4 : {success, running, failure};
		parallel_status__parLink5 : {success, running, failure};
		parallel_status__parLink6 : {success, running, failure};
		parallel_status__parLink7 : {success, running, failure};
		parallel_status__parLink8 : {success, running, failure};
		parallel_status__parLink9 : {success, running, failure};
		--START OF BLACKBOARD VARIABLES DECLARATION
		success_failure_node_10_DOT_randomizer : boolean;
		success_failure_node_11_DOT_randomizer : boolean;
		success_failure_node_12_DOT_randomizer : boolean;
		success_failure_node_1_DOT_randomizer : boolean;
		success_failure_node_2_DOT_randomizer : boolean;
		success_failure_node_3_DOT_randomizer : boolean;
		success_failure_node_4_DOT_randomizer : boolean;
		success_failure_node_5_DOT_randomizer : boolean;
		success_failure_node_6_DOT_randomizer : boolean;
		success_failure_node_7_DOT_randomizer : boolean;
		success_failure_node_8_DOT_randomizer : boolean;
		success_failure_node_9_DOT_randomizer : boolean;
		success_failure_node_DOT_randomizer : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		init(parallel_status__parLink1) := success;
		init(parallel_status__parLink10) := success;
		init(parallel_status__parLink11) := success;
		init(parallel_status__parLink12) := success;
		init(parallel_status__parLink2) := success;
		init(parallel_status__parLink3) := success;
		init(parallel_status__parLink4) := success;
		init(parallel_status__parLink5) := success;
		init(parallel_status__parLink6) := success;
		init(parallel_status__parLink7) := success;
		init(parallel_status__parLink8) := success;
		init(parallel_status__parLink9) := success;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(success_failure_node_10_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_11_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_12_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_1_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_2_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_3_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_4_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_5_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_6_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_7_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_8_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_9_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.parLink12;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.parLink1) & (current_status != invalid) : node_names.parLink7;
				(active_node = node_names.parLink1) & (current_status = invalid) : next_child__parLink1;
				(active_node = node_names.parLink10) & (current_status != invalid) : node_names.parLink12;
				(active_node = node_names.parLink10) & (current_status = invalid) : next_child__parLink10;
				(active_node = node_names.parLink11) & (current_status != invalid) : node_names.parLink12;
				(active_node = node_names.parLink11) & (current_status = invalid) : next_child__parLink11;
				(active_node = node_names.parLink12) & (current_status != invalid) : -1;
				(active_node = node_names.parLink12) & (current_status = invalid) : next_child__parLink12;
				(active_node = node_names.parLink2) & (current_status != invalid) : node_names.parLink8;
				(active_node = node_names.parLink2) & (current_status = invalid) : next_child__parLink2;
				(active_node = node_names.parLink3) & (current_status != invalid) : node_names.parLink8;
				(active_node = node_names.parLink3) & (current_status = invalid) : next_child__parLink3;
				(active_node = node_names.parLink4) & (current_status != invalid) : node_names.parLink9;
				(active_node = node_names.parLink4) & (current_status = invalid) : next_child__parLink4;
				(active_node = node_names.parLink5) & (current_status != invalid) : node_names.parLink9;
				(active_node = node_names.parLink5) & (current_status = invalid) : next_child__parLink5;
				(active_node = node_names.parLink6) & (current_status != invalid) : node_names.parLink10;
				(active_node = node_names.parLink6) & (current_status = invalid) : next_child__parLink6;
				(active_node = node_names.parLink7) & (current_status != invalid) : node_names.parLink10;
				(active_node = node_names.parLink7) & (current_status = invalid) : next_child__parLink7;
				(active_node = node_names.parLink8) & (current_status != invalid) : node_names.parLink11;
				(active_node = node_names.parLink8) & (current_status = invalid) : next_child__parLink8;
				(active_node = node_names.parLink9) & (current_status != invalid) : node_names.parLink11;
				(active_node = node_names.parLink9) & (current_status = invalid) : next_child__parLink9;
				(active_node = node_names.sel0) & (current_status != invalid) : node_names.parLink1;
				(active_node = node_names.sel0) & (current_status = invalid) : next_child__sel0;
				(active_node = node_names.sel1) & (current_status != invalid) : node_names.parLink1;
				(active_node = node_names.sel1) & (current_status = invalid) : next_child__sel1;
				(active_node = node_names.sel10) & (current_status != invalid) : node_names.parLink6;
				(active_node = node_names.sel10) & (current_status = invalid) : next_child__sel10;
				(active_node = node_names.sel11) & (current_status != invalid) : node_names.parLink6;
				(active_node = node_names.sel11) & (current_status = invalid) : next_child__sel11;
				(active_node = node_names.sel12) & (current_status != invalid) : node_names.parLink7;
				(active_node = node_names.sel12) & (current_status = invalid) : next_child__sel12;
				(active_node = node_names.sel2) & (current_status != invalid) : node_names.parLink2;
				(active_node = node_names.sel2) & (current_status = invalid) : next_child__sel2;
				(active_node = node_names.sel3) & (current_status != invalid) : node_names.parLink2;
				(active_node = node_names.sel3) & (current_status = invalid) : next_child__sel3;
				(active_node = node_names.sel4) & (current_status != invalid) : node_names.parLink3;
				(active_node = node_names.sel4) & (current_status = invalid) : next_child__sel4;
				(active_node = node_names.sel5) & (current_status != invalid) : node_names.parLink3;
				(active_node = node_names.sel5) & (current_status = invalid) : next_child__sel5;
				(active_node = node_names.sel6) & (current_status != invalid) : node_names.parLink4;
				(active_node = node_names.sel6) & (current_status = invalid) : next_child__sel6;
				(active_node = node_names.sel7) & (current_status != invalid) : node_names.parLink4;
				(active_node = node_names.sel7) & (current_status = invalid) : next_child__sel7;
				(active_node = node_names.sel8) & (current_status != invalid) : node_names.parLink5;
				(active_node = node_names.sel8) & (current_status = invalid) : next_child__sel8;
				(active_node = node_names.sel9) & (current_status != invalid) : node_names.parLink5;
				(active_node = node_names.sel9) & (current_status = invalid) : next_child__sel9;
				(active_node = node_names.success_failure_node) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_failure_node_1) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_failure_node_10) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_failure_node_11) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_failure_node_12) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_failure_node_2) & (current_status != invalid) : node_names.sel12;
				(active_node = node_names.success_failure_node_3) & (current_status != invalid) : node_names.sel0;
				(active_node = node_names.success_failure_node_4) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_failure_node_5) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_failure_node_6) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_failure_node_7) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_failure_node_8) & (current_status != invalid) : node_names.sel5;
				(active_node = node_names.success_failure_node_9) & (current_status != invalid) : node_names.sel6;
				(active_node = node_names.success_node) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_node_1) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_node_10) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_node_11) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_node_12) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_node_2) & (current_status != invalid) : node_names.sel12;
				(active_node = node_names.success_node_3) & (current_status != invalid) : node_names.sel0;
				(active_node = node_names.success_node_4) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_node_5) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_node_6) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_node_7) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_node_8) & (current_status != invalid) : node_names.sel5;
				(active_node = node_names.success_node_9) & (current_status != invalid) : node_names.sel6;
				TRUE : active_node;
			esac;
		next(previous_node) := active_node;
		current_status :=
			case
				(active_node = node_names.parLink1) & (next_child__parLink1 = -1) : parallel_status__parLink1;
				(active_node = node_names.parLink1) : invalid;
				(active_node = node_names.parLink10) & (next_child__parLink10 = -1) : parallel_status__parLink10;
				(active_node = node_names.parLink10) : invalid;
				(active_node = node_names.parLink11) & (next_child__parLink11 = -1) : parallel_status__parLink11;
				(active_node = node_names.parLink11) : invalid;
				(active_node = node_names.parLink12) & (next_child__parLink12 = -1) : parallel_status__parLink12;
				(active_node = node_names.parLink12) : invalid;
				(active_node = node_names.parLink2) & (next_child__parLink2 = -1) : parallel_status__parLink2;
				(active_node = node_names.parLink2) : invalid;
				(active_node = node_names.parLink3) & (next_child__parLink3 = -1) : parallel_status__parLink3;
				(active_node = node_names.parLink3) : invalid;
				(active_node = node_names.parLink4) & (next_child__parLink4 = -1) : parallel_status__parLink4;
				(active_node = node_names.parLink4) : invalid;
				(active_node = node_names.parLink5) & (next_child__parLink5 = -1) : parallel_status__parLink5;
				(active_node = node_names.parLink5) : invalid;
				(active_node = node_names.parLink6) & (next_child__parLink6 = -1) : parallel_status__parLink6;
				(active_node = node_names.parLink6) : invalid;
				(active_node = node_names.parLink7) & (next_child__parLink7 = -1) : parallel_status__parLink7;
				(active_node = node_names.parLink7) : invalid;
				(active_node = node_names.parLink8) & (next_child__parLink8 = -1) : parallel_status__parLink8;
				(active_node = node_names.parLink8) : invalid;
				(active_node = node_names.parLink9) & (next_child__parLink9 = -1) : parallel_status__parLink9;
				(active_node = node_names.parLink9) : invalid;
				(active_node = node_names.sel0) & (previous_status = running) : running;
				(active_node = node_names.sel0) & (previous_status = success) : success;
				(active_node = node_names.sel0) & (next_child__sel0 = -1) : failure;
				(active_node = node_names.sel0) : invalid;
				(active_node = node_names.sel1) & (previous_status = running) : running;
				(active_node = node_names.sel1) & (previous_status = success) : success;
				(active_node = node_names.sel1) & (next_child__sel1 = -1) : failure;
				(active_node = node_names.sel1) : invalid;
				(active_node = node_names.sel10) & (previous_status = running) : running;
				(active_node = node_names.sel10) & (previous_status = success) : success;
				(active_node = node_names.sel10) & (next_child__sel10 = -1) : failure;
				(active_node = node_names.sel10) : invalid;
				(active_node = node_names.sel11) & (previous_status = running) : running;
				(active_node = node_names.sel11) & (previous_status = success) : success;
				(active_node = node_names.sel11) & (next_child__sel11 = -1) : failure;
				(active_node = node_names.sel11) : invalid;
				(active_node = node_names.sel12) & (previous_status = running) : running;
				(active_node = node_names.sel12) & (previous_status = success) : success;
				(active_node = node_names.sel12) & (next_child__sel12 = -1) : failure;
				(active_node = node_names.sel12) : invalid;
				(active_node = node_names.sel2) & (previous_status = running) : running;
				(active_node = node_names.sel2) & (previous_status = success) : success;
				(active_node = node_names.sel2) & (next_child__sel2 = -1) : failure;
				(active_node = node_names.sel2) : invalid;
				(active_node = node_names.sel3) & (previous_status = running) : running;
				(active_node = node_names.sel3) & (previous_status = success) : success;
				(active_node = node_names.sel3) & (next_child__sel3 = -1) : failure;
				(active_node = node_names.sel3) : invalid;
				(active_node = node_names.sel4) & (previous_status = running) : running;
				(active_node = node_names.sel4) & (previous_status = success) : success;
				(active_node = node_names.sel4) & (next_child__sel4 = -1) : failure;
				(active_node = node_names.sel4) : invalid;
				(active_node = node_names.sel5) & (previous_status = running) : running;
				(active_node = node_names.sel5) & (previous_status = success) : success;
				(active_node = node_names.sel5) & (next_child__sel5 = -1) : failure;
				(active_node = node_names.sel5) : invalid;
				(active_node = node_names.sel6) & (previous_status = running) : running;
				(active_node = node_names.sel6) & (previous_status = success) : success;
				(active_node = node_names.sel6) & (next_child__sel6 = -1) : failure;
				(active_node = node_names.sel6) : invalid;
				(active_node = node_names.sel7) & (previous_status = running) : running;
				(active_node = node_names.sel7) & (previous_status = success) : success;
				(active_node = node_names.sel7) & (next_child__sel7 = -1) : failure;
				(active_node = node_names.sel7) : invalid;
				(active_node = node_names.sel8) & (previous_status = running) : running;
				(active_node = node_names.sel8) & (previous_status = success) : success;
				(active_node = node_names.sel8) & (next_child__sel8 = -1) : failure;
				(active_node = node_names.sel8) : invalid;
				(active_node = node_names.sel9) & (previous_status = running) : running;
				(active_node = node_names.sel9) & (previous_status = success) : success;
				(active_node = node_names.sel9) & (next_child__sel9 = -1) : failure;
				(active_node = node_names.sel9) : invalid;
				(active_node = node_names.success_failure_node) & success_failure_node_DOT_randomizer : success;
				(active_node = node_names.success_failure_node) & TRUE : failure;
				(active_node = node_names.success_failure_node_1) & success_failure_node_1_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_1) & TRUE : failure;
				(active_node = node_names.success_failure_node_10) & success_failure_node_10_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_10) & TRUE : failure;
				(active_node = node_names.success_failure_node_11) & success_failure_node_11_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_11) & TRUE : failure;
				(active_node = node_names.success_failure_node_12) & success_failure_node_12_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_12) & TRUE : failure;
				(active_node = node_names.success_failure_node_2) & success_failure_node_2_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_2) & TRUE : failure;
				(active_node = node_names.success_failure_node_3) & success_failure_node_3_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_3) & TRUE : failure;
				(active_node = node_names.success_failure_node_4) & success_failure_node_4_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_4) & TRUE : failure;
				(active_node = node_names.success_failure_node_5) & success_failure_node_5_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_5) & TRUE : failure;
				(active_node = node_names.success_failure_node_6) & success_failure_node_6_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_6) & TRUE : failure;
				(active_node = node_names.success_failure_node_7) & success_failure_node_7_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_7) & TRUE : failure;
				(active_node = node_names.success_failure_node_8) & success_failure_node_8_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_8) & TRUE : failure;
				(active_node = node_names.success_failure_node_9) & success_failure_node_9_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_9) & TRUE : failure;
				(active_node = node_names.success_node) : success;
				(active_node = node_names.success_node_1) : success;
				(active_node = node_names.success_node_10) : success;
				(active_node = node_names.success_node_11) : success;
				(active_node = node_names.success_node_12) : success;
				(active_node = node_names.success_node_2) : success;
				(active_node = node_names.success_node_3) : success;
				(active_node = node_names.success_node_4) : success;
				(active_node = node_names.success_node_5) : success;
				(active_node = node_names.success_node_6) : success;
				(active_node = node_names.success_node_7) : success;
				(active_node = node_names.success_node_8) : success;
				(active_node = node_names.success_node_9) : success;
				TRUE : invalid;
			esac;
		next(previous_status) := current_status;
		next(parallel_status__parLink1) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink1) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink1) & (current_status = running) : running;
				TRUE : parallel_status__parLink1;
			esac;
		next(parallel_status__parLink10) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink10) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink10) & (current_status = running) : running;
				TRUE : parallel_status__parLink10;
			esac;
		next(parallel_status__parLink11) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink11) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink11) & (current_status = running) : running;
				TRUE : parallel_status__parLink11;
			esac;
		next(parallel_status__parLink12) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink12) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink12) & (current_status = running) : running;
				TRUE : parallel_status__parLink12;
			esac;
		next(parallel_status__parLink2) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink2) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink2) & (current_status = running) : running;
				TRUE : parallel_status__parLink2;
			esac;
		next(parallel_status__parLink3) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink3) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink3) & (current_status = running) : running;
				TRUE : parallel_status__parLink3;
			esac;
		next(parallel_status__parLink4) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink4) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink4) & (current_status = running) : running;
				TRUE : parallel_status__parLink4;
			esac;
		next(parallel_status__parLink5) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink5) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink5) & (current_status = running) : running;
				TRUE : parallel_status__parLink5;
			esac;
		next(parallel_status__parLink6) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink6) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink6) & (current_status = running) : running;
				TRUE : parallel_status__parLink6;
			esac;
		next(parallel_status__parLink7) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink7) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink7) & (current_status = running) : running;
				TRUE : parallel_status__parLink7;
			esac;
		next(parallel_status__parLink8) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink8) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink8) & (current_status = running) : running;
				TRUE : parallel_status__parLink8;
			esac;
		next(parallel_status__parLink9) := 
			case
				next(active_node) = -1 : success;
				(next(active_node) = node_names.parLink9) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink9) & (current_status = running) : running;
				TRUE : parallel_status__parLink9;
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(success_failure_node_10_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_10) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_10_DOT_randomizer;
			esac;
		next(success_failure_node_11_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_11) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_11_DOT_randomizer;
			esac;
		next(success_failure_node_12_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_12) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_12_DOT_randomizer;
			esac;
		next(success_failure_node_1_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_1) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_1_DOT_randomizer;
			esac;
		next(success_failure_node_2_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_2) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_2_DOT_randomizer;
			esac;
		next(success_failure_node_3_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_3) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_3_DOT_randomizer;
			esac;
		next(success_failure_node_4_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_4) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_4_DOT_randomizer;
			esac;
		next(success_failure_node_5_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_5) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_5_DOT_randomizer;
			esac;
		next(success_failure_node_6_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_6) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_6_DOT_randomizer;
			esac;
		next(success_failure_node_7_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_7) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_7_DOT_randomizer;
			esac;
		next(success_failure_node_8_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_8) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_8_DOT_randomizer;
			esac;
		next(success_failure_node_9_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_9) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_9_DOT_randomizer;
			esac;
		next(success_failure_node_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_DOT_randomizer;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_12 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_12 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_12 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_12 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_12 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_12 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_12 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_12 & current_status = success)])));


MODULE define_nodes
	DEFINE
		parLink12 := 0;
		parLink10 := 1;
		parLink6 := 2;
		sel10 := 3;
		success_failure_node := 4;
		success_node := 5;
		sel11 := 6;
		success_failure_node_1 := 7;
		success_node_1 := 8;
		parLink7 := 9;
		sel12 := 10;
		success_failure_node_2 := 11;
		success_node_2 := 12;
		parLink1 := 13;
		sel0 := 14;
		success_failure_node_3 := 15;
		success_node_3 := 16;
		sel1 := 17;
		success_failure_node_4 := 18;
		success_node_4 := 19;
		parLink11 := 20;
		parLink8 := 21;
		parLink2 := 22;
		sel2 := 23;
		success_failure_node_5 := 24;
		success_node_5 := 25;
		sel3 := 26;
		success_failure_node_6 := 27;
		success_node_6 := 28;
		parLink3 := 29;
		sel4 := 30;
		success_failure_node_7 := 31;
		success_node_7 := 32;
		sel5 := 33;
		success_failure_node_8 := 34;
		success_node_8 := 35;
		parLink9 := 36;
		parLink4 := 37;
		sel6 := 38;
		success_failure_node_9 := 39;
		success_node_9 := 40;
		sel7 := 41;
		success_failure_node_10 := 42;
		success_node_10 := 43;
		parLink5 := 44;
		sel8 := 45;
		success_failure_node_11 := 46;
		success_node_11 := 47;
		sel9 := 48;
		success_failure_node_12 := 49;
		success_node_12 := 50;
