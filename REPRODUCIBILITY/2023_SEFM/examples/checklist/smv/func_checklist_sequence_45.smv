MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__seqLink44 := -3;
		seqLink44.active := TRUE;
		--START OF BLACKBOARD DEFINITIONS
		success_failure_node_10_DOT_randomizer := success_failure_node_10_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_10_DOT_randomizer := success_failure_node_10_DOT_randomizer_stage_1;
		success_failure_node_11_DOT_randomizer := success_failure_node_11_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_11_DOT_randomizer := success_failure_node_11_DOT_randomizer_stage_1;
		success_failure_node_12_DOT_randomizer := success_failure_node_12_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_12_DOT_randomizer := success_failure_node_12_DOT_randomizer_stage_1;
		success_failure_node_13_DOT_randomizer := success_failure_node_13_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_13_DOT_randomizer := success_failure_node_13_DOT_randomizer_stage_1;
		success_failure_node_14_DOT_randomizer := success_failure_node_14_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_14_DOT_randomizer := success_failure_node_14_DOT_randomizer_stage_1;
		success_failure_node_15_DOT_randomizer := success_failure_node_15_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_15_DOT_randomizer := success_failure_node_15_DOT_randomizer_stage_1;
		success_failure_node_16_DOT_randomizer := success_failure_node_16_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_16_DOT_randomizer := success_failure_node_16_DOT_randomizer_stage_1;
		success_failure_node_17_DOT_randomizer := success_failure_node_17_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_17_DOT_randomizer := success_failure_node_17_DOT_randomizer_stage_1;
		success_failure_node_18_DOT_randomizer := success_failure_node_18_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_18_DOT_randomizer := success_failure_node_18_DOT_randomizer_stage_1;
		success_failure_node_19_DOT_randomizer := success_failure_node_19_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_19_DOT_randomizer := success_failure_node_19_DOT_randomizer_stage_1;
		success_failure_node_1_DOT_randomizer := success_failure_node_1_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_1_DOT_randomizer := success_failure_node_1_DOT_randomizer_stage_1;
		success_failure_node_20_DOT_randomizer := success_failure_node_20_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_20_DOT_randomizer := success_failure_node_20_DOT_randomizer_stage_1;
		success_failure_node_21_DOT_randomizer := success_failure_node_21_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_21_DOT_randomizer := success_failure_node_21_DOT_randomizer_stage_1;
		success_failure_node_22_DOT_randomizer := success_failure_node_22_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_22_DOT_randomizer := success_failure_node_22_DOT_randomizer_stage_1;
		success_failure_node_23_DOT_randomizer := success_failure_node_23_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_23_DOT_randomizer := success_failure_node_23_DOT_randomizer_stage_1;
		success_failure_node_24_DOT_randomizer := success_failure_node_24_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_24_DOT_randomizer := success_failure_node_24_DOT_randomizer_stage_1;
		success_failure_node_25_DOT_randomizer := success_failure_node_25_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_25_DOT_randomizer := success_failure_node_25_DOT_randomizer_stage_1;
		success_failure_node_26_DOT_randomizer := success_failure_node_26_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_26_DOT_randomizer := success_failure_node_26_DOT_randomizer_stage_1;
		success_failure_node_27_DOT_randomizer := success_failure_node_27_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_27_DOT_randomizer := success_failure_node_27_DOT_randomizer_stage_1;
		success_failure_node_28_DOT_randomizer := success_failure_node_28_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_28_DOT_randomizer := success_failure_node_28_DOT_randomizer_stage_1;
		success_failure_node_29_DOT_randomizer := success_failure_node_29_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_29_DOT_randomizer := success_failure_node_29_DOT_randomizer_stage_1;
		success_failure_node_2_DOT_randomizer := success_failure_node_2_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_2_DOT_randomizer := success_failure_node_2_DOT_randomizer_stage_1;
		success_failure_node_30_DOT_randomizer := success_failure_node_30_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_30_DOT_randomizer := success_failure_node_30_DOT_randomizer_stage_1;
		success_failure_node_31_DOT_randomizer := success_failure_node_31_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_31_DOT_randomizer := success_failure_node_31_DOT_randomizer_stage_1;
		success_failure_node_32_DOT_randomizer := success_failure_node_32_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_32_DOT_randomizer := success_failure_node_32_DOT_randomizer_stage_1;
		success_failure_node_33_DOT_randomizer := success_failure_node_33_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_33_DOT_randomizer := success_failure_node_33_DOT_randomizer_stage_1;
		success_failure_node_34_DOT_randomizer := success_failure_node_34_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_34_DOT_randomizer := success_failure_node_34_DOT_randomizer_stage_1;
		success_failure_node_35_DOT_randomizer := success_failure_node_35_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_35_DOT_randomizer := success_failure_node_35_DOT_randomizer_stage_1;
		success_failure_node_36_DOT_randomizer := success_failure_node_36_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_36_DOT_randomizer := success_failure_node_36_DOT_randomizer_stage_1;
		success_failure_node_37_DOT_randomizer := success_failure_node_37_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_37_DOT_randomizer := success_failure_node_37_DOT_randomizer_stage_1;
		success_failure_node_38_DOT_randomizer := success_failure_node_38_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_38_DOT_randomizer := success_failure_node_38_DOT_randomizer_stage_1;
		success_failure_node_39_DOT_randomizer := success_failure_node_39_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_39_DOT_randomizer := success_failure_node_39_DOT_randomizer_stage_1;
		success_failure_node_3_DOT_randomizer := success_failure_node_3_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_3_DOT_randomizer := success_failure_node_3_DOT_randomizer_stage_1;
		success_failure_node_40_DOT_randomizer := success_failure_node_40_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_40_DOT_randomizer := success_failure_node_40_DOT_randomizer_stage_1;
		success_failure_node_41_DOT_randomizer := success_failure_node_41_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_41_DOT_randomizer := success_failure_node_41_DOT_randomizer_stage_1;
		success_failure_node_42_DOT_randomizer := success_failure_node_42_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_42_DOT_randomizer := success_failure_node_42_DOT_randomizer_stage_1;
		success_failure_node_43_DOT_randomizer := success_failure_node_43_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_43_DOT_randomizer := success_failure_node_43_DOT_randomizer_stage_1;
		success_failure_node_44_DOT_randomizer := success_failure_node_44_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_44_DOT_randomizer := success_failure_node_44_DOT_randomizer_stage_1;
		success_failure_node_4_DOT_randomizer := success_failure_node_4_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_4_DOT_randomizer := success_failure_node_4_DOT_randomizer_stage_1;
		success_failure_node_5_DOT_randomizer := success_failure_node_5_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_5_DOT_randomizer := success_failure_node_5_DOT_randomizer_stage_1;
		success_failure_node_6_DOT_randomizer := success_failure_node_6_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_6_DOT_randomizer := success_failure_node_6_DOT_randomizer_stage_1;
		success_failure_node_7_DOT_randomizer := success_failure_node_7_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_7_DOT_randomizer := success_failure_node_7_DOT_randomizer_stage_1;
		success_failure_node_8_DOT_randomizer := success_failure_node_8_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_8_DOT_randomizer := success_failure_node_8_DOT_randomizer_stage_1;
		success_failure_node_9_DOT_randomizer := success_failure_node_9_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_9_DOT_randomizer := success_failure_node_9_DOT_randomizer_stage_1;
		success_failure_node_DOT_randomizer := success_failure_node_DOT_randomizer_stage_1;
		LINK_TO_PREVIOUS_FINAL_success_failure_node_DOT_randomizer := success_failure_node_DOT_randomizer_stage_1;
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		sel0 : composite_selector_without_memory(sel0_1, success_failure_node_19);
		sel0_1 : composite_selector_without_memory(sel0_END, success_node_19);
		sel0_END : composite_selector_without_memory_END;
		sel1 : composite_selector_without_memory(sel1_1, success_failure_node_20);
		sel1_1 : composite_selector_without_memory(sel1_END, success_node_20);
		sel1_END : composite_selector_without_memory_END;
		sel10 : composite_selector_without_memory(sel10_1, success_failure_node_29);
		sel10_1 : composite_selector_without_memory(sel10_END, success_node_29);
		sel10_END : composite_selector_without_memory_END;
		sel11 : composite_selector_without_memory(sel11_1, success_failure_node_30);
		sel11_1 : composite_selector_without_memory(sel11_END, success_node_30);
		sel11_END : composite_selector_without_memory_END;
		sel12 : composite_selector_without_memory(sel12_1, success_failure_node_31);
		sel12_1 : composite_selector_without_memory(sel12_END, success_node_31);
		sel12_END : composite_selector_without_memory_END;
		sel13 : composite_selector_without_memory(sel13_1, success_failure_node_32);
		sel13_1 : composite_selector_without_memory(sel13_END, success_node_32);
		sel13_END : composite_selector_without_memory_END;
		sel14 : composite_selector_without_memory(sel14_1, success_failure_node_33);
		sel14_1 : composite_selector_without_memory(sel14_END, success_node_33);
		sel14_END : composite_selector_without_memory_END;
		sel15 : composite_selector_without_memory(sel15_1, success_failure_node_34);
		sel15_1 : composite_selector_without_memory(sel15_END, success_node_34);
		sel15_END : composite_selector_without_memory_END;
		sel16 : composite_selector_without_memory(sel16_1, success_failure_node_35);
		sel16_1 : composite_selector_without_memory(sel16_END, success_node_35);
		sel16_END : composite_selector_without_memory_END;
		sel17 : composite_selector_without_memory(sel17_1, success_failure_node_36);
		sel17_1 : composite_selector_without_memory(sel17_END, success_node_36);
		sel17_END : composite_selector_without_memory_END;
		sel18 : composite_selector_without_memory(sel18_1, success_failure_node_37);
		sel18_1 : composite_selector_without_memory(sel18_END, success_node_37);
		sel18_END : composite_selector_without_memory_END;
		sel19 : composite_selector_without_memory(sel19_1, success_failure_node_38);
		sel19_1 : composite_selector_without_memory(sel19_END, success_node_38);
		sel19_END : composite_selector_without_memory_END;
		sel2 : composite_selector_without_memory(sel2_1, success_failure_node_21);
		sel2_1 : composite_selector_without_memory(sel2_END, success_node_21);
		sel2_END : composite_selector_without_memory_END;
		sel20 : composite_selector_without_memory(sel20_1, success_failure_node_39);
		sel20_1 : composite_selector_without_memory(sel20_END, success_node_39);
		sel20_END : composite_selector_without_memory_END;
		sel21 : composite_selector_without_memory(sel21_1, success_failure_node_40);
		sel21_1 : composite_selector_without_memory(sel21_END, success_node_40);
		sel21_END : composite_selector_without_memory_END;
		sel22 : composite_selector_without_memory(sel22_1, success_failure_node_41);
		sel22_1 : composite_selector_without_memory(sel22_END, success_node_41);
		sel22_END : composite_selector_without_memory_END;
		sel23 : composite_selector_without_memory(sel23_1, success_failure_node_42);
		sel23_1 : composite_selector_without_memory(sel23_END, success_node_42);
		sel23_END : composite_selector_without_memory_END;
		sel24 : composite_selector_without_memory(sel24_1, success_failure_node_43);
		sel24_1 : composite_selector_without_memory(sel24_END, success_node_43);
		sel24_END : composite_selector_without_memory_END;
		sel25 : composite_selector_without_memory(sel25_1, success_failure_node_44);
		sel25_1 : composite_selector_without_memory(sel25_END, success_node_44);
		sel25_END : composite_selector_without_memory_END;
		sel26 : composite_selector_without_memory(sel26_1, success_failure_node);
		sel26_1 : composite_selector_without_memory(sel26_END, success_node);
		sel26_END : composite_selector_without_memory_END;
		sel27 : composite_selector_without_memory(sel27_1, success_failure_node_1);
		sel27_1 : composite_selector_without_memory(sel27_END, success_node_1);
		sel27_END : composite_selector_without_memory_END;
		sel28 : composite_selector_without_memory(sel28_1, success_failure_node_2);
		sel28_1 : composite_selector_without_memory(sel28_END, success_node_2);
		sel28_END : composite_selector_without_memory_END;
		sel29 : composite_selector_without_memory(sel29_1, success_failure_node_3);
		sel29_1 : composite_selector_without_memory(sel29_END, success_node_3);
		sel29_END : composite_selector_without_memory_END;
		sel3 : composite_selector_without_memory(sel3_1, success_failure_node_22);
		sel3_1 : composite_selector_without_memory(sel3_END, success_node_22);
		sel3_END : composite_selector_without_memory_END;
		sel30 : composite_selector_without_memory(sel30_1, success_failure_node_4);
		sel30_1 : composite_selector_without_memory(sel30_END, success_node_4);
		sel30_END : composite_selector_without_memory_END;
		sel31 : composite_selector_without_memory(sel31_1, success_failure_node_5);
		sel31_1 : composite_selector_without_memory(sel31_END, success_node_5);
		sel31_END : composite_selector_without_memory_END;
		sel32 : composite_selector_without_memory(sel32_1, success_failure_node_6);
		sel32_1 : composite_selector_without_memory(sel32_END, success_node_6);
		sel32_END : composite_selector_without_memory_END;
		sel33 : composite_selector_without_memory(sel33_1, success_failure_node_7);
		sel33_1 : composite_selector_without_memory(sel33_END, success_node_7);
		sel33_END : composite_selector_without_memory_END;
		sel34 : composite_selector_without_memory(sel34_1, success_failure_node_8);
		sel34_1 : composite_selector_without_memory(sel34_END, success_node_8);
		sel34_END : composite_selector_without_memory_END;
		sel35 : composite_selector_without_memory(sel35_1, success_failure_node_9);
		sel35_1 : composite_selector_without_memory(sel35_END, success_node_9);
		sel35_END : composite_selector_without_memory_END;
		sel36 : composite_selector_without_memory(sel36_1, success_failure_node_10);
		sel36_1 : composite_selector_without_memory(sel36_END, success_node_10);
		sel36_END : composite_selector_without_memory_END;
		sel37 : composite_selector_without_memory(sel37_1, success_failure_node_11);
		sel37_1 : composite_selector_without_memory(sel37_END, success_node_11);
		sel37_END : composite_selector_without_memory_END;
		sel38 : composite_selector_without_memory(sel38_1, success_failure_node_12);
		sel38_1 : composite_selector_without_memory(sel38_END, success_node_12);
		sel38_END : composite_selector_without_memory_END;
		sel39 : composite_selector_without_memory(sel39_1, success_failure_node_13);
		sel39_1 : composite_selector_without_memory(sel39_END, success_node_13);
		sel39_END : composite_selector_without_memory_END;
		sel4 : composite_selector_without_memory(sel4_1, success_failure_node_23);
		sel4_1 : composite_selector_without_memory(sel4_END, success_node_23);
		sel4_END : composite_selector_without_memory_END;
		sel40 : composite_selector_without_memory(sel40_1, success_failure_node_14);
		sel40_1 : composite_selector_without_memory(sel40_END, success_node_14);
		sel40_END : composite_selector_without_memory_END;
		sel41 : composite_selector_without_memory(sel41_1, success_failure_node_15);
		sel41_1 : composite_selector_without_memory(sel41_END, success_node_15);
		sel41_END : composite_selector_without_memory_END;
		sel42 : composite_selector_without_memory(sel42_1, success_failure_node_16);
		sel42_1 : composite_selector_without_memory(sel42_END, success_node_16);
		sel42_END : composite_selector_without_memory_END;
		sel43 : composite_selector_without_memory(sel43_1, success_failure_node_17);
		sel43_1 : composite_selector_without_memory(sel43_END, success_node_17);
		sel43_END : composite_selector_without_memory_END;
		sel44 : composite_selector_without_memory(sel44_1, success_failure_node_18);
		sel44_1 : composite_selector_without_memory(sel44_END, success_node_18);
		sel44_END : composite_selector_without_memory_END;
		sel5 : composite_selector_without_memory(sel5_1, success_failure_node_24);
		sel5_1 : composite_selector_without_memory(sel5_END, success_node_24);
		sel5_END : composite_selector_without_memory_END;
		sel6 : composite_selector_without_memory(sel6_1, success_failure_node_25);
		sel6_1 : composite_selector_without_memory(sel6_END, success_node_25);
		sel6_END : composite_selector_without_memory_END;
		sel7 : composite_selector_without_memory(sel7_1, success_failure_node_26);
		sel7_1 : composite_selector_without_memory(sel7_END, success_node_26);
		sel7_END : composite_selector_without_memory_END;
		sel8 : composite_selector_without_memory(sel8_1, success_failure_node_27);
		sel8_1 : composite_selector_without_memory(sel8_END, success_node_27);
		sel8_END : composite_selector_without_memory_END;
		sel9 : composite_selector_without_memory(sel9_1, success_failure_node_28);
		sel9_1 : composite_selector_without_memory(sel9_END, success_node_28);
		sel9_END : composite_selector_without_memory_END;
		seqLink1 : composite_sequence_without_memory(seqLink1_1, sel0);
		seqLink1_1 : composite_sequence_without_memory(seqLink1_END, sel1);
		seqLink1_END : composite_sequence_without_memory_END;
		seqLink10 : composite_sequence_without_memory(seqLink10_1, sel18);
		seqLink10_1 : composite_sequence_without_memory(seqLink10_END, sel19);
		seqLink10_END : composite_sequence_without_memory_END;
		seqLink11 : composite_sequence_without_memory(seqLink11_1, sel20);
		seqLink11_1 : composite_sequence_without_memory(seqLink11_END, sel21);
		seqLink11_END : composite_sequence_without_memory_END;
		seqLink12 : composite_sequence_without_memory(seqLink12_1, sel22);
		seqLink12_1 : composite_sequence_without_memory(seqLink12_END, sel23);
		seqLink12_END : composite_sequence_without_memory_END;
		seqLink13 : composite_sequence_without_memory(seqLink13_1, sel24);
		seqLink13_1 : composite_sequence_without_memory(seqLink13_END, sel25);
		seqLink13_END : composite_sequence_without_memory_END;
		seqLink14 : composite_sequence_without_memory(seqLink14_1, sel26);
		seqLink14_1 : composite_sequence_without_memory(seqLink14_END, sel27);
		seqLink14_END : composite_sequence_without_memory_END;
		seqLink15 : composite_sequence_without_memory(seqLink15_1, sel28);
		seqLink15_1 : composite_sequence_without_memory(seqLink15_END, sel29);
		seqLink15_END : composite_sequence_without_memory_END;
		seqLink16 : composite_sequence_without_memory(seqLink16_1, sel30);
		seqLink16_1 : composite_sequence_without_memory(seqLink16_END, sel31);
		seqLink16_END : composite_sequence_without_memory_END;
		seqLink17 : composite_sequence_without_memory(seqLink17_1, sel32);
		seqLink17_1 : composite_sequence_without_memory(seqLink17_END, sel33);
		seqLink17_END : composite_sequence_without_memory_END;
		seqLink18 : composite_sequence_without_memory(seqLink18_1, sel34);
		seqLink18_1 : composite_sequence_without_memory(seqLink18_END, sel35);
		seqLink18_END : composite_sequence_without_memory_END;
		seqLink19 : composite_sequence_without_memory(seqLink19_1, sel36);
		seqLink19_1 : composite_sequence_without_memory(seqLink19_END, sel37);
		seqLink19_END : composite_sequence_without_memory_END;
		seqLink2 : composite_sequence_without_memory(seqLink2_1, sel2);
		seqLink2_1 : composite_sequence_without_memory(seqLink2_END, sel3);
		seqLink2_END : composite_sequence_without_memory_END;
		seqLink20 : composite_sequence_without_memory(seqLink20_1, sel38);
		seqLink20_1 : composite_sequence_without_memory(seqLink20_END, sel39);
		seqLink20_END : composite_sequence_without_memory_END;
		seqLink21 : composite_sequence_without_memory(seqLink21_1, sel40);
		seqLink21_1 : composite_sequence_without_memory(seqLink21_END, sel41);
		seqLink21_END : composite_sequence_without_memory_END;
		seqLink22 : composite_sequence_without_memory(seqLink22_1, sel42);
		seqLink22_1 : composite_sequence_without_memory(seqLink22_END, sel43);
		seqLink22_END : composite_sequence_without_memory_END;
		seqLink23 : composite_sequence_without_memory(seqLink23_1, sel44);
		seqLink23_1 : composite_sequence_without_memory(seqLink23_END, seqLink1);
		seqLink23_END : composite_sequence_without_memory_END;
		seqLink24 : composite_sequence_without_memory(seqLink24_1, seqLink2);
		seqLink24_1 : composite_sequence_without_memory(seqLink24_END, seqLink3);
		seqLink24_END : composite_sequence_without_memory_END;
		seqLink25 : composite_sequence_without_memory(seqLink25_1, seqLink4);
		seqLink25_1 : composite_sequence_without_memory(seqLink25_END, seqLink5);
		seqLink25_END : composite_sequence_without_memory_END;
		seqLink26 : composite_sequence_without_memory(seqLink26_1, seqLink6);
		seqLink26_1 : composite_sequence_without_memory(seqLink26_END, seqLink7);
		seqLink26_END : composite_sequence_without_memory_END;
		seqLink27 : composite_sequence_without_memory(seqLink27_1, seqLink8);
		seqLink27_1 : composite_sequence_without_memory(seqLink27_END, seqLink9);
		seqLink27_END : composite_sequence_without_memory_END;
		seqLink28 : composite_sequence_without_memory(seqLink28_1, seqLink10);
		seqLink28_1 : composite_sequence_without_memory(seqLink28_END, seqLink11);
		seqLink28_END : composite_sequence_without_memory_END;
		seqLink29 : composite_sequence_without_memory(seqLink29_1, seqLink12);
		seqLink29_1 : composite_sequence_without_memory(seqLink29_END, seqLink13);
		seqLink29_END : composite_sequence_without_memory_END;
		seqLink3 : composite_sequence_without_memory(seqLink3_1, sel4);
		seqLink3_1 : composite_sequence_without_memory(seqLink3_END, sel5);
		seqLink3_END : composite_sequence_without_memory_END;
		seqLink30 : composite_sequence_without_memory(seqLink30_1, seqLink14);
		seqLink30_1 : composite_sequence_without_memory(seqLink30_END, seqLink15);
		seqLink30_END : composite_sequence_without_memory_END;
		seqLink31 : composite_sequence_without_memory(seqLink31_1, seqLink16);
		seqLink31_1 : composite_sequence_without_memory(seqLink31_END, seqLink17);
		seqLink31_END : composite_sequence_without_memory_END;
		seqLink32 : composite_sequence_without_memory(seqLink32_1, seqLink18);
		seqLink32_1 : composite_sequence_without_memory(seqLink32_END, seqLink19);
		seqLink32_END : composite_sequence_without_memory_END;
		seqLink33 : composite_sequence_without_memory(seqLink33_1, seqLink20);
		seqLink33_1 : composite_sequence_without_memory(seqLink33_END, seqLink21);
		seqLink33_END : composite_sequence_without_memory_END;
		seqLink34 : composite_sequence_without_memory(seqLink34_1, seqLink22);
		seqLink34_1 : composite_sequence_without_memory(seqLink34_END, seqLink23);
		seqLink34_END : composite_sequence_without_memory_END;
		seqLink35 : composite_sequence_without_memory(seqLink35_1, seqLink24);
		seqLink35_1 : composite_sequence_without_memory(seqLink35_END, seqLink25);
		seqLink35_END : composite_sequence_without_memory_END;
		seqLink36 : composite_sequence_without_memory(seqLink36_1, seqLink26);
		seqLink36_1 : composite_sequence_without_memory(seqLink36_END, seqLink27);
		seqLink36_END : composite_sequence_without_memory_END;
		seqLink37 : composite_sequence_without_memory(seqLink37_1, seqLink28);
		seqLink37_1 : composite_sequence_without_memory(seqLink37_END, seqLink29);
		seqLink37_END : composite_sequence_without_memory_END;
		seqLink38 : composite_sequence_without_memory(seqLink38_1, seqLink30);
		seqLink38_1 : composite_sequence_without_memory(seqLink38_END, seqLink31);
		seqLink38_END : composite_sequence_without_memory_END;
		seqLink39 : composite_sequence_without_memory(seqLink39_1, seqLink32);
		seqLink39_1 : composite_sequence_without_memory(seqLink39_END, seqLink33);
		seqLink39_END : composite_sequence_without_memory_END;
		seqLink4 : composite_sequence_without_memory(seqLink4_1, sel6);
		seqLink4_1 : composite_sequence_without_memory(seqLink4_END, sel7);
		seqLink4_END : composite_sequence_without_memory_END;
		seqLink40 : composite_sequence_without_memory(seqLink40_1, seqLink34);
		seqLink40_1 : composite_sequence_without_memory(seqLink40_END, seqLink35);
		seqLink40_END : composite_sequence_without_memory_END;
		seqLink41 : composite_sequence_without_memory(seqLink41_1, seqLink36);
		seqLink41_1 : composite_sequence_without_memory(seqLink41_END, seqLink37);
		seqLink41_END : composite_sequence_without_memory_END;
		seqLink42 : composite_sequence_without_memory(seqLink42_1, seqLink38);
		seqLink42_1 : composite_sequence_without_memory(seqLink42_END, seqLink39);
		seqLink42_END : composite_sequence_without_memory_END;
		seqLink43 : composite_sequence_without_memory(seqLink43_1, seqLink40);
		seqLink43_1 : composite_sequence_without_memory(seqLink43_END, seqLink41);
		seqLink43_END : composite_sequence_without_memory_END;
		seqLink44 : composite_sequence_without_memory(seqLink44_1, seqLink42);
		seqLink44_1 : composite_sequence_without_memory(seqLink44_END, seqLink43);
		seqLink44_END : composite_sequence_without_memory_END;
		seqLink5 : composite_sequence_without_memory(seqLink5_1, sel8);
		seqLink5_1 : composite_sequence_without_memory(seqLink5_END, sel9);
		seqLink5_END : composite_sequence_without_memory_END;
		seqLink6 : composite_sequence_without_memory(seqLink6_1, sel10);
		seqLink6_1 : composite_sequence_without_memory(seqLink6_END, sel11);
		seqLink6_END : composite_sequence_without_memory_END;
		seqLink7 : composite_sequence_without_memory(seqLink7_1, sel12);
		seqLink7_1 : composite_sequence_without_memory(seqLink7_END, sel13);
		seqLink7_END : composite_sequence_without_memory_END;
		seqLink8 : composite_sequence_without_memory(seqLink8_1, sel14);
		seqLink8_1 : composite_sequence_without_memory(seqLink8_END, sel15);
		seqLink8_END : composite_sequence_without_memory_END;
		seqLink9 : composite_sequence_without_memory(seqLink9_1, sel16);
		seqLink9_1 : composite_sequence_without_memory(seqLink9_END, sel17);
		seqLink9_END : composite_sequence_without_memory_END;
		success_failure_node : success_failure_node_module(success_failure_node_DOT_randomizer_stage_1);
		success_failure_node_1 : success_failure_node_1_module(success_failure_node_1_DOT_randomizer_stage_1);
		success_failure_node_10 : success_failure_node_10_module(success_failure_node_10_DOT_randomizer_stage_1);
		success_failure_node_11 : success_failure_node_11_module(success_failure_node_11_DOT_randomizer_stage_1);
		success_failure_node_12 : success_failure_node_12_module(success_failure_node_12_DOT_randomizer_stage_1);
		success_failure_node_13 : success_failure_node_13_module(success_failure_node_13_DOT_randomizer_stage_1);
		success_failure_node_14 : success_failure_node_14_module(success_failure_node_14_DOT_randomizer_stage_1);
		success_failure_node_15 : success_failure_node_15_module(success_failure_node_15_DOT_randomizer_stage_1);
		success_failure_node_16 : success_failure_node_16_module(success_failure_node_16_DOT_randomizer_stage_1);
		success_failure_node_17 : success_failure_node_17_module(success_failure_node_17_DOT_randomizer_stage_1);
		success_failure_node_18 : success_failure_node_18_module(success_failure_node_18_DOT_randomizer_stage_1);
		success_failure_node_19 : success_failure_node_19_module(success_failure_node_19_DOT_randomizer_stage_1);
		success_failure_node_2 : success_failure_node_2_module(success_failure_node_2_DOT_randomizer_stage_1);
		success_failure_node_20 : success_failure_node_20_module(success_failure_node_20_DOT_randomizer_stage_1);
		success_failure_node_21 : success_failure_node_21_module(success_failure_node_21_DOT_randomizer_stage_1);
		success_failure_node_22 : success_failure_node_22_module(success_failure_node_22_DOT_randomizer_stage_1);
		success_failure_node_23 : success_failure_node_23_module(success_failure_node_23_DOT_randomizer_stage_1);
		success_failure_node_24 : success_failure_node_24_module(success_failure_node_24_DOT_randomizer_stage_1);
		success_failure_node_25 : success_failure_node_25_module(success_failure_node_25_DOT_randomizer_stage_1);
		success_failure_node_26 : success_failure_node_26_module(success_failure_node_26_DOT_randomizer_stage_1);
		success_failure_node_27 : success_failure_node_27_module(success_failure_node_27_DOT_randomizer_stage_1);
		success_failure_node_28 : success_failure_node_28_module(success_failure_node_28_DOT_randomizer_stage_1);
		success_failure_node_29 : success_failure_node_29_module(success_failure_node_29_DOT_randomizer_stage_1);
		success_failure_node_3 : success_failure_node_3_module(success_failure_node_3_DOT_randomizer_stage_1);
		success_failure_node_30 : success_failure_node_30_module(success_failure_node_30_DOT_randomizer_stage_1);
		success_failure_node_31 : success_failure_node_31_module(success_failure_node_31_DOT_randomizer_stage_1);
		success_failure_node_32 : success_failure_node_32_module(success_failure_node_32_DOT_randomizer_stage_1);
		success_failure_node_33 : success_failure_node_33_module(success_failure_node_33_DOT_randomizer_stage_1);
		success_failure_node_34 : success_failure_node_34_module(success_failure_node_34_DOT_randomizer_stage_1);
		success_failure_node_35 : success_failure_node_35_module(success_failure_node_35_DOT_randomizer_stage_1);
		success_failure_node_36 : success_failure_node_36_module(success_failure_node_36_DOT_randomizer_stage_1);
		success_failure_node_37 : success_failure_node_37_module(success_failure_node_37_DOT_randomizer_stage_1);
		success_failure_node_38 : success_failure_node_38_module(success_failure_node_38_DOT_randomizer_stage_1);
		success_failure_node_39 : success_failure_node_39_module(success_failure_node_39_DOT_randomizer_stage_1);
		success_failure_node_4 : success_failure_node_4_module(success_failure_node_4_DOT_randomizer_stage_1);
		success_failure_node_40 : success_failure_node_40_module(success_failure_node_40_DOT_randomizer_stage_1);
		success_failure_node_41 : success_failure_node_41_module(success_failure_node_41_DOT_randomizer_stage_1);
		success_failure_node_42 : success_failure_node_42_module(success_failure_node_42_DOT_randomizer_stage_1);
		success_failure_node_43 : success_failure_node_43_module(success_failure_node_43_DOT_randomizer_stage_1);
		success_failure_node_44 : success_failure_node_44_module(success_failure_node_44_DOT_randomizer_stage_1);
		success_failure_node_5 : success_failure_node_5_module(success_failure_node_5_DOT_randomizer_stage_1);
		success_failure_node_6 : success_failure_node_6_module(success_failure_node_6_DOT_randomizer_stage_1);
		success_failure_node_7 : success_failure_node_7_module(success_failure_node_7_DOT_randomizer_stage_1);
		success_failure_node_8 : success_failure_node_8_module(success_failure_node_8_DOT_randomizer_stage_1);
		success_failure_node_9 : success_failure_node_9_module(success_failure_node_9_DOT_randomizer_stage_1);
		success_node : success_DEFAULT_module();
		success_node_1 : success_DEFAULT_module();
		success_node_10 : success_DEFAULT_module();
		success_node_11 : success_DEFAULT_module();
		success_node_12 : success_DEFAULT_module();
		success_node_13 : success_DEFAULT_module();
		success_node_14 : success_DEFAULT_module();
		success_node_15 : success_DEFAULT_module();
		success_node_16 : success_DEFAULT_module();
		success_node_17 : success_DEFAULT_module();
		success_node_18 : success_DEFAULT_module();
		success_node_19 : success_DEFAULT_module();
		success_node_2 : success_DEFAULT_module();
		success_node_20 : success_DEFAULT_module();
		success_node_21 : success_DEFAULT_module();
		success_node_22 : success_DEFAULT_module();
		success_node_23 : success_DEFAULT_module();
		success_node_24 : success_DEFAULT_module();
		success_node_25 : success_DEFAULT_module();
		success_node_26 : success_DEFAULT_module();
		success_node_27 : success_DEFAULT_module();
		success_node_28 : success_DEFAULT_module();
		success_node_29 : success_DEFAULT_module();
		success_node_3 : success_DEFAULT_module();
		success_node_30 : success_DEFAULT_module();
		success_node_31 : success_DEFAULT_module();
		success_node_32 : success_DEFAULT_module();
		success_node_33 : success_DEFAULT_module();
		success_node_34 : success_DEFAULT_module();
		success_node_35 : success_DEFAULT_module();
		success_node_36 : success_DEFAULT_module();
		success_node_37 : success_DEFAULT_module();
		success_node_38 : success_DEFAULT_module();
		success_node_39 : success_DEFAULT_module();
		success_node_4 : success_DEFAULT_module();
		success_node_40 : success_DEFAULT_module();
		success_node_41 : success_DEFAULT_module();
		success_node_42 : success_DEFAULT_module();
		success_node_43 : success_DEFAULT_module();
		success_node_44 : success_DEFAULT_module();
		success_node_5 : success_DEFAULT_module();
		success_node_6 : success_DEFAULT_module();
		success_node_7 : success_DEFAULT_module();
		success_node_8 : success_DEFAULT_module();
		success_node_9 : success_DEFAULT_module();
		--START OF BLACKBOARD VARIABLES DECLARATION
		success_failure_node_10_DOT_randomizer_stage_1 : boolean;
		success_failure_node_11_DOT_randomizer_stage_1 : boolean;
		success_failure_node_12_DOT_randomizer_stage_1 : boolean;
		success_failure_node_13_DOT_randomizer_stage_1 : boolean;
		success_failure_node_14_DOT_randomizer_stage_1 : boolean;
		success_failure_node_15_DOT_randomizer_stage_1 : boolean;
		success_failure_node_16_DOT_randomizer_stage_1 : boolean;
		success_failure_node_17_DOT_randomizer_stage_1 : boolean;
		success_failure_node_18_DOT_randomizer_stage_1 : boolean;
		success_failure_node_19_DOT_randomizer_stage_1 : boolean;
		success_failure_node_1_DOT_randomizer_stage_1 : boolean;
		success_failure_node_20_DOT_randomizer_stage_1 : boolean;
		success_failure_node_21_DOT_randomizer_stage_1 : boolean;
		success_failure_node_22_DOT_randomizer_stage_1 : boolean;
		success_failure_node_23_DOT_randomizer_stage_1 : boolean;
		success_failure_node_24_DOT_randomizer_stage_1 : boolean;
		success_failure_node_25_DOT_randomizer_stage_1 : boolean;
		success_failure_node_26_DOT_randomizer_stage_1 : boolean;
		success_failure_node_27_DOT_randomizer_stage_1 : boolean;
		success_failure_node_28_DOT_randomizer_stage_1 : boolean;
		success_failure_node_29_DOT_randomizer_stage_1 : boolean;
		success_failure_node_2_DOT_randomizer_stage_1 : boolean;
		success_failure_node_30_DOT_randomizer_stage_1 : boolean;
		success_failure_node_31_DOT_randomizer_stage_1 : boolean;
		success_failure_node_32_DOT_randomizer_stage_1 : boolean;
		success_failure_node_33_DOT_randomizer_stage_1 : boolean;
		success_failure_node_34_DOT_randomizer_stage_1 : boolean;
		success_failure_node_35_DOT_randomizer_stage_1 : boolean;
		success_failure_node_36_DOT_randomizer_stage_1 : boolean;
		success_failure_node_37_DOT_randomizer_stage_1 : boolean;
		success_failure_node_38_DOT_randomizer_stage_1 : boolean;
		success_failure_node_39_DOT_randomizer_stage_1 : boolean;
		success_failure_node_3_DOT_randomizer_stage_1 : boolean;
		success_failure_node_40_DOT_randomizer_stage_1 : boolean;
		success_failure_node_41_DOT_randomizer_stage_1 : boolean;
		success_failure_node_42_DOT_randomizer_stage_1 : boolean;
		success_failure_node_43_DOT_randomizer_stage_1 : boolean;
		success_failure_node_44_DOT_randomizer_stage_1 : boolean;
		success_failure_node_4_DOT_randomizer_stage_1 : boolean;
		success_failure_node_5_DOT_randomizer_stage_1 : boolean;
		success_failure_node_6_DOT_randomizer_stage_1 : boolean;
		success_failure_node_7_DOT_randomizer_stage_1 : boolean;
		success_failure_node_8_DOT_randomizer_stage_1 : boolean;
		success_failure_node_9_DOT_randomizer_stage_1 : boolean;
		success_failure_node_DOT_randomizer_stage_1 : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(success_failure_node_10_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_11_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_12_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_13_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_14_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_15_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_16_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_17_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_18_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_19_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_1_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_20_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_21_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_22_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_23_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_24_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_25_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_26_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_27_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_28_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_29_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_2_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_30_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_31_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_32_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_33_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_34_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_35_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_36_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_37_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_38_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_39_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_3_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_40_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_41_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_42_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_43_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_44_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_4_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_5_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_6_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_7_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_8_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_9_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_DOT_randomizer_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(success_failure_node_10_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_10.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_10_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_11_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_11.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_11_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_12_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_12.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_12_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_13_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_13.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_13_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_14_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_14.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_14_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_15_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_15.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_15_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_16_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_16.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_16_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_17_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_17.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_17_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_18_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_18.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_18_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_19_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_19.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_19_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_1_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_1.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_1_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_20_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_20.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_20_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_21_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_21.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_21_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_22_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_22.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_22_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_23_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_23.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_23_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_24_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_24.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_24_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_25_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_25.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_25_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_26_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_26.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_26_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_27_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_27.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_27_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_28_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_28.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_28_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_29_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_29.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_29_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_2_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_2.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_2_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_30_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_30.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_30_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_31_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_31.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_31_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_32_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_32.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_32_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_33_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_33.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_33_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_34_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_34.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_34_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_35_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_35.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_35_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_36_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_36.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_36_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_37_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_37.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_37_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_38_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_38.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_38_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_39_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_39.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_39_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_3_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_3.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_3_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_40_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_40.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_40_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_41_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_41.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_41_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_42_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_42.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_42_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_43_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_43.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_43_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_44_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_44.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_44_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_4_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_4.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_4_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_5_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_5.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_5_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_6_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_6.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_6_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_7_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_7.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_7_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_8_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_8.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_8_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_9_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node_9.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_9_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		next(success_failure_node_DOT_randomizer_stage_1) := 
			case
				next(!(success_failure_node.active)) : LINK_TO_PREVIOUS_FINAL_success_failure_node_DOT_randomizer;
				TRUE : {TRUE, FALSE};
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((success_failure_node.status = failure) -> (success_node.status = success)));
LTLSPEC G(((success_failure_node.status = failure) -> !((success_node.status = success))));
CTLSPEC AG(((success_failure_node.status = failure) -> (success_node.status = success)));
CTLSPEC AG(((success_failure_node.status = failure) -> !((success_node.status = success))));
INVARSPEC ((success_failure_node.status = failure) -> (success_node.status = success));
INVARSPEC ((success_failure_node.status = failure) -> !((success_node.status = success)));
LTLSPEC G(((success_failure_node_1.status = failure) -> (success_node_1.status = success)));
LTLSPEC G(((success_failure_node_1.status = failure) -> !((success_node_1.status = success))));
CTLSPEC AG(((success_failure_node_1.status = failure) -> (success_node_1.status = success)));
CTLSPEC AG(((success_failure_node_1.status = failure) -> !((success_node_1.status = success))));
INVARSPEC ((success_failure_node_1.status = failure) -> (success_node_1.status = success));
INVARSPEC ((success_failure_node_1.status = failure) -> !((success_node_1.status = success)));
LTLSPEC G(((success_failure_node_2.status = failure) -> (success_node_2.status = success)));
LTLSPEC G(((success_failure_node_2.status = failure) -> !((success_node_2.status = success))));
CTLSPEC AG(((success_failure_node_2.status = failure) -> (success_node_2.status = success)));
CTLSPEC AG(((success_failure_node_2.status = failure) -> !((success_node_2.status = success))));
INVARSPEC ((success_failure_node_2.status = failure) -> (success_node_2.status = success));
INVARSPEC ((success_failure_node_2.status = failure) -> !((success_node_2.status = success)));
LTLSPEC G(((success_failure_node_3.status = failure) -> (success_node_3.status = success)));
LTLSPEC G(((success_failure_node_3.status = failure) -> !((success_node_3.status = success))));
CTLSPEC AG(((success_failure_node_3.status = failure) -> (success_node_3.status = success)));
CTLSPEC AG(((success_failure_node_3.status = failure) -> !((success_node_3.status = success))));
INVARSPEC ((success_failure_node_3.status = failure) -> (success_node_3.status = success));
INVARSPEC ((success_failure_node_3.status = failure) -> !((success_node_3.status = success)));
LTLSPEC G(((success_failure_node_4.status = failure) -> (success_node_4.status = success)));
LTLSPEC G(((success_failure_node_4.status = failure) -> !((success_node_4.status = success))));
CTLSPEC AG(((success_failure_node_4.status = failure) -> (success_node_4.status = success)));
CTLSPEC AG(((success_failure_node_4.status = failure) -> !((success_node_4.status = success))));
INVARSPEC ((success_failure_node_4.status = failure) -> (success_node_4.status = success));
INVARSPEC ((success_failure_node_4.status = failure) -> !((success_node_4.status = success)));
LTLSPEC G(((success_failure_node_5.status = failure) -> (success_node_5.status = success)));
LTLSPEC G(((success_failure_node_5.status = failure) -> !((success_node_5.status = success))));
CTLSPEC AG(((success_failure_node_5.status = failure) -> (success_node_5.status = success)));
CTLSPEC AG(((success_failure_node_5.status = failure) -> !((success_node_5.status = success))));
INVARSPEC ((success_failure_node_5.status = failure) -> (success_node_5.status = success));
INVARSPEC ((success_failure_node_5.status = failure) -> !((success_node_5.status = success)));
LTLSPEC G(((success_failure_node_6.status = failure) -> (success_node_6.status = success)));
LTLSPEC G(((success_failure_node_6.status = failure) -> !((success_node_6.status = success))));
CTLSPEC AG(((success_failure_node_6.status = failure) -> (success_node_6.status = success)));
CTLSPEC AG(((success_failure_node_6.status = failure) -> !((success_node_6.status = success))));
INVARSPEC ((success_failure_node_6.status = failure) -> (success_node_6.status = success));
INVARSPEC ((success_failure_node_6.status = failure) -> !((success_node_6.status = success)));
LTLSPEC G(((success_failure_node_7.status = failure) -> (success_node_7.status = success)));
LTLSPEC G(((success_failure_node_7.status = failure) -> !((success_node_7.status = success))));
CTLSPEC AG(((success_failure_node_7.status = failure) -> (success_node_7.status = success)));
CTLSPEC AG(((success_failure_node_7.status = failure) -> !((success_node_7.status = success))));
INVARSPEC ((success_failure_node_7.status = failure) -> (success_node_7.status = success));
INVARSPEC ((success_failure_node_7.status = failure) -> !((success_node_7.status = success)));
LTLSPEC G(((success_failure_node_8.status = failure) -> (success_node_8.status = success)));
LTLSPEC G(((success_failure_node_8.status = failure) -> !((success_node_8.status = success))));
CTLSPEC AG(((success_failure_node_8.status = failure) -> (success_node_8.status = success)));
CTLSPEC AG(((success_failure_node_8.status = failure) -> !((success_node_8.status = success))));
INVARSPEC ((success_failure_node_8.status = failure) -> (success_node_8.status = success));
INVARSPEC ((success_failure_node_8.status = failure) -> !((success_node_8.status = success)));
LTLSPEC G(((success_failure_node_9.status = failure) -> (success_node_9.status = success)));
LTLSPEC G(((success_failure_node_9.status = failure) -> !((success_node_9.status = success))));
CTLSPEC AG(((success_failure_node_9.status = failure) -> (success_node_9.status = success)));
CTLSPEC AG(((success_failure_node_9.status = failure) -> !((success_node_9.status = success))));
INVARSPEC ((success_failure_node_9.status = failure) -> (success_node_9.status = success));
INVARSPEC ((success_failure_node_9.status = failure) -> !((success_node_9.status = success)));
LTLSPEC G(((success_failure_node_10.status = failure) -> (success_node_10.status = success)));
LTLSPEC G(((success_failure_node_10.status = failure) -> !((success_node_10.status = success))));
CTLSPEC AG(((success_failure_node_10.status = failure) -> (success_node_10.status = success)));
CTLSPEC AG(((success_failure_node_10.status = failure) -> !((success_node_10.status = success))));
INVARSPEC ((success_failure_node_10.status = failure) -> (success_node_10.status = success));
INVARSPEC ((success_failure_node_10.status = failure) -> !((success_node_10.status = success)));
LTLSPEC G(((success_failure_node_11.status = failure) -> (success_node_11.status = success)));
LTLSPEC G(((success_failure_node_11.status = failure) -> !((success_node_11.status = success))));
CTLSPEC AG(((success_failure_node_11.status = failure) -> (success_node_11.status = success)));
CTLSPEC AG(((success_failure_node_11.status = failure) -> !((success_node_11.status = success))));
INVARSPEC ((success_failure_node_11.status = failure) -> (success_node_11.status = success));
INVARSPEC ((success_failure_node_11.status = failure) -> !((success_node_11.status = success)));
LTLSPEC G(((success_failure_node_12.status = failure) -> (success_node_12.status = success)));
LTLSPEC G(((success_failure_node_12.status = failure) -> !((success_node_12.status = success))));
CTLSPEC AG(((success_failure_node_12.status = failure) -> (success_node_12.status = success)));
CTLSPEC AG(((success_failure_node_12.status = failure) -> !((success_node_12.status = success))));
INVARSPEC ((success_failure_node_12.status = failure) -> (success_node_12.status = success));
INVARSPEC ((success_failure_node_12.status = failure) -> !((success_node_12.status = success)));
LTLSPEC G(((success_failure_node_13.status = failure) -> (success_node_13.status = success)));
LTLSPEC G(((success_failure_node_13.status = failure) -> !((success_node_13.status = success))));
CTLSPEC AG(((success_failure_node_13.status = failure) -> (success_node_13.status = success)));
CTLSPEC AG(((success_failure_node_13.status = failure) -> !((success_node_13.status = success))));
INVARSPEC ((success_failure_node_13.status = failure) -> (success_node_13.status = success));
INVARSPEC ((success_failure_node_13.status = failure) -> !((success_node_13.status = success)));
LTLSPEC G(((success_failure_node_14.status = failure) -> (success_node_14.status = success)));
LTLSPEC G(((success_failure_node_14.status = failure) -> !((success_node_14.status = success))));
CTLSPEC AG(((success_failure_node_14.status = failure) -> (success_node_14.status = success)));
CTLSPEC AG(((success_failure_node_14.status = failure) -> !((success_node_14.status = success))));
INVARSPEC ((success_failure_node_14.status = failure) -> (success_node_14.status = success));
INVARSPEC ((success_failure_node_14.status = failure) -> !((success_node_14.status = success)));
LTLSPEC G(((success_failure_node_15.status = failure) -> (success_node_15.status = success)));
LTLSPEC G(((success_failure_node_15.status = failure) -> !((success_node_15.status = success))));
CTLSPEC AG(((success_failure_node_15.status = failure) -> (success_node_15.status = success)));
CTLSPEC AG(((success_failure_node_15.status = failure) -> !((success_node_15.status = success))));
INVARSPEC ((success_failure_node_15.status = failure) -> (success_node_15.status = success));
INVARSPEC ((success_failure_node_15.status = failure) -> !((success_node_15.status = success)));
LTLSPEC G(((success_failure_node_16.status = failure) -> (success_node_16.status = success)));
LTLSPEC G(((success_failure_node_16.status = failure) -> !((success_node_16.status = success))));
CTLSPEC AG(((success_failure_node_16.status = failure) -> (success_node_16.status = success)));
CTLSPEC AG(((success_failure_node_16.status = failure) -> !((success_node_16.status = success))));
INVARSPEC ((success_failure_node_16.status = failure) -> (success_node_16.status = success));
INVARSPEC ((success_failure_node_16.status = failure) -> !((success_node_16.status = success)));
LTLSPEC G(((success_failure_node_17.status = failure) -> (success_node_17.status = success)));
LTLSPEC G(((success_failure_node_17.status = failure) -> !((success_node_17.status = success))));
CTLSPEC AG(((success_failure_node_17.status = failure) -> (success_node_17.status = success)));
CTLSPEC AG(((success_failure_node_17.status = failure) -> !((success_node_17.status = success))));
INVARSPEC ((success_failure_node_17.status = failure) -> (success_node_17.status = success));
INVARSPEC ((success_failure_node_17.status = failure) -> !((success_node_17.status = success)));
LTLSPEC G(((success_failure_node_18.status = failure) -> (success_node_18.status = success)));
LTLSPEC G(((success_failure_node_18.status = failure) -> !((success_node_18.status = success))));
CTLSPEC AG(((success_failure_node_18.status = failure) -> (success_node_18.status = success)));
CTLSPEC AG(((success_failure_node_18.status = failure) -> !((success_node_18.status = success))));
INVARSPEC ((success_failure_node_18.status = failure) -> (success_node_18.status = success));
INVARSPEC ((success_failure_node_18.status = failure) -> !((success_node_18.status = success)));
LTLSPEC G(((success_failure_node_19.status = failure) -> (success_node_19.status = success)));
LTLSPEC G(((success_failure_node_19.status = failure) -> !((success_node_19.status = success))));
CTLSPEC AG(((success_failure_node_19.status = failure) -> (success_node_19.status = success)));
CTLSPEC AG(((success_failure_node_19.status = failure) -> !((success_node_19.status = success))));
INVARSPEC ((success_failure_node_19.status = failure) -> (success_node_19.status = success));
INVARSPEC ((success_failure_node_19.status = failure) -> !((success_node_19.status = success)));
LTLSPEC G(((success_failure_node_20.status = failure) -> (success_node_20.status = success)));
LTLSPEC G(((success_failure_node_20.status = failure) -> !((success_node_20.status = success))));
CTLSPEC AG(((success_failure_node_20.status = failure) -> (success_node_20.status = success)));
CTLSPEC AG(((success_failure_node_20.status = failure) -> !((success_node_20.status = success))));
INVARSPEC ((success_failure_node_20.status = failure) -> (success_node_20.status = success));
INVARSPEC ((success_failure_node_20.status = failure) -> !((success_node_20.status = success)));
LTLSPEC G(((success_failure_node_21.status = failure) -> (success_node_21.status = success)));
LTLSPEC G(((success_failure_node_21.status = failure) -> !((success_node_21.status = success))));
CTLSPEC AG(((success_failure_node_21.status = failure) -> (success_node_21.status = success)));
CTLSPEC AG(((success_failure_node_21.status = failure) -> !((success_node_21.status = success))));
INVARSPEC ((success_failure_node_21.status = failure) -> (success_node_21.status = success));
INVARSPEC ((success_failure_node_21.status = failure) -> !((success_node_21.status = success)));
LTLSPEC G(((success_failure_node_22.status = failure) -> (success_node_22.status = success)));
LTLSPEC G(((success_failure_node_22.status = failure) -> !((success_node_22.status = success))));
CTLSPEC AG(((success_failure_node_22.status = failure) -> (success_node_22.status = success)));
CTLSPEC AG(((success_failure_node_22.status = failure) -> !((success_node_22.status = success))));
INVARSPEC ((success_failure_node_22.status = failure) -> (success_node_22.status = success));
INVARSPEC ((success_failure_node_22.status = failure) -> !((success_node_22.status = success)));
LTLSPEC G(((success_failure_node_23.status = failure) -> (success_node_23.status = success)));
LTLSPEC G(((success_failure_node_23.status = failure) -> !((success_node_23.status = success))));
CTLSPEC AG(((success_failure_node_23.status = failure) -> (success_node_23.status = success)));
CTLSPEC AG(((success_failure_node_23.status = failure) -> !((success_node_23.status = success))));
INVARSPEC ((success_failure_node_23.status = failure) -> (success_node_23.status = success));
INVARSPEC ((success_failure_node_23.status = failure) -> !((success_node_23.status = success)));
LTLSPEC G(((success_failure_node_24.status = failure) -> (success_node_24.status = success)));
LTLSPEC G(((success_failure_node_24.status = failure) -> !((success_node_24.status = success))));
CTLSPEC AG(((success_failure_node_24.status = failure) -> (success_node_24.status = success)));
CTLSPEC AG(((success_failure_node_24.status = failure) -> !((success_node_24.status = success))));
INVARSPEC ((success_failure_node_24.status = failure) -> (success_node_24.status = success));
INVARSPEC ((success_failure_node_24.status = failure) -> !((success_node_24.status = success)));
LTLSPEC G(((success_failure_node_25.status = failure) -> (success_node_25.status = success)));
LTLSPEC G(((success_failure_node_25.status = failure) -> !((success_node_25.status = success))));
CTLSPEC AG(((success_failure_node_25.status = failure) -> (success_node_25.status = success)));
CTLSPEC AG(((success_failure_node_25.status = failure) -> !((success_node_25.status = success))));
INVARSPEC ((success_failure_node_25.status = failure) -> (success_node_25.status = success));
INVARSPEC ((success_failure_node_25.status = failure) -> !((success_node_25.status = success)));
LTLSPEC G(((success_failure_node_26.status = failure) -> (success_node_26.status = success)));
LTLSPEC G(((success_failure_node_26.status = failure) -> !((success_node_26.status = success))));
CTLSPEC AG(((success_failure_node_26.status = failure) -> (success_node_26.status = success)));
CTLSPEC AG(((success_failure_node_26.status = failure) -> !((success_node_26.status = success))));
INVARSPEC ((success_failure_node_26.status = failure) -> (success_node_26.status = success));
INVARSPEC ((success_failure_node_26.status = failure) -> !((success_node_26.status = success)));
LTLSPEC G(((success_failure_node_27.status = failure) -> (success_node_27.status = success)));
LTLSPEC G(((success_failure_node_27.status = failure) -> !((success_node_27.status = success))));
CTLSPEC AG(((success_failure_node_27.status = failure) -> (success_node_27.status = success)));
CTLSPEC AG(((success_failure_node_27.status = failure) -> !((success_node_27.status = success))));
INVARSPEC ((success_failure_node_27.status = failure) -> (success_node_27.status = success));
INVARSPEC ((success_failure_node_27.status = failure) -> !((success_node_27.status = success)));
LTLSPEC G(((success_failure_node_28.status = failure) -> (success_node_28.status = success)));
LTLSPEC G(((success_failure_node_28.status = failure) -> !((success_node_28.status = success))));
CTLSPEC AG(((success_failure_node_28.status = failure) -> (success_node_28.status = success)));
CTLSPEC AG(((success_failure_node_28.status = failure) -> !((success_node_28.status = success))));
INVARSPEC ((success_failure_node_28.status = failure) -> (success_node_28.status = success));
INVARSPEC ((success_failure_node_28.status = failure) -> !((success_node_28.status = success)));
LTLSPEC G(((success_failure_node_29.status = failure) -> (success_node_29.status = success)));
LTLSPEC G(((success_failure_node_29.status = failure) -> !((success_node_29.status = success))));
CTLSPEC AG(((success_failure_node_29.status = failure) -> (success_node_29.status = success)));
CTLSPEC AG(((success_failure_node_29.status = failure) -> !((success_node_29.status = success))));
INVARSPEC ((success_failure_node_29.status = failure) -> (success_node_29.status = success));
INVARSPEC ((success_failure_node_29.status = failure) -> !((success_node_29.status = success)));
LTLSPEC G(((success_failure_node_30.status = failure) -> (success_node_30.status = success)));
LTLSPEC G(((success_failure_node_30.status = failure) -> !((success_node_30.status = success))));
CTLSPEC AG(((success_failure_node_30.status = failure) -> (success_node_30.status = success)));
CTLSPEC AG(((success_failure_node_30.status = failure) -> !((success_node_30.status = success))));
INVARSPEC ((success_failure_node_30.status = failure) -> (success_node_30.status = success));
INVARSPEC ((success_failure_node_30.status = failure) -> !((success_node_30.status = success)));
LTLSPEC G(((success_failure_node_31.status = failure) -> (success_node_31.status = success)));
LTLSPEC G(((success_failure_node_31.status = failure) -> !((success_node_31.status = success))));
CTLSPEC AG(((success_failure_node_31.status = failure) -> (success_node_31.status = success)));
CTLSPEC AG(((success_failure_node_31.status = failure) -> !((success_node_31.status = success))));
INVARSPEC ((success_failure_node_31.status = failure) -> (success_node_31.status = success));
INVARSPEC ((success_failure_node_31.status = failure) -> !((success_node_31.status = success)));
LTLSPEC G(((success_failure_node_32.status = failure) -> (success_node_32.status = success)));
LTLSPEC G(((success_failure_node_32.status = failure) -> !((success_node_32.status = success))));
CTLSPEC AG(((success_failure_node_32.status = failure) -> (success_node_32.status = success)));
CTLSPEC AG(((success_failure_node_32.status = failure) -> !((success_node_32.status = success))));
INVARSPEC ((success_failure_node_32.status = failure) -> (success_node_32.status = success));
INVARSPEC ((success_failure_node_32.status = failure) -> !((success_node_32.status = success)));
LTLSPEC G(((success_failure_node_33.status = failure) -> (success_node_33.status = success)));
LTLSPEC G(((success_failure_node_33.status = failure) -> !((success_node_33.status = success))));
CTLSPEC AG(((success_failure_node_33.status = failure) -> (success_node_33.status = success)));
CTLSPEC AG(((success_failure_node_33.status = failure) -> !((success_node_33.status = success))));
INVARSPEC ((success_failure_node_33.status = failure) -> (success_node_33.status = success));
INVARSPEC ((success_failure_node_33.status = failure) -> !((success_node_33.status = success)));
LTLSPEC G(((success_failure_node_34.status = failure) -> (success_node_34.status = success)));
LTLSPEC G(((success_failure_node_34.status = failure) -> !((success_node_34.status = success))));
CTLSPEC AG(((success_failure_node_34.status = failure) -> (success_node_34.status = success)));
CTLSPEC AG(((success_failure_node_34.status = failure) -> !((success_node_34.status = success))));
INVARSPEC ((success_failure_node_34.status = failure) -> (success_node_34.status = success));
INVARSPEC ((success_failure_node_34.status = failure) -> !((success_node_34.status = success)));
LTLSPEC G(((success_failure_node_35.status = failure) -> (success_node_35.status = success)));
LTLSPEC G(((success_failure_node_35.status = failure) -> !((success_node_35.status = success))));
CTLSPEC AG(((success_failure_node_35.status = failure) -> (success_node_35.status = success)));
CTLSPEC AG(((success_failure_node_35.status = failure) -> !((success_node_35.status = success))));
INVARSPEC ((success_failure_node_35.status = failure) -> (success_node_35.status = success));
INVARSPEC ((success_failure_node_35.status = failure) -> !((success_node_35.status = success)));
LTLSPEC G(((success_failure_node_36.status = failure) -> (success_node_36.status = success)));
LTLSPEC G(((success_failure_node_36.status = failure) -> !((success_node_36.status = success))));
CTLSPEC AG(((success_failure_node_36.status = failure) -> (success_node_36.status = success)));
CTLSPEC AG(((success_failure_node_36.status = failure) -> !((success_node_36.status = success))));
INVARSPEC ((success_failure_node_36.status = failure) -> (success_node_36.status = success));
INVARSPEC ((success_failure_node_36.status = failure) -> !((success_node_36.status = success)));
LTLSPEC G(((success_failure_node_37.status = failure) -> (success_node_37.status = success)));
LTLSPEC G(((success_failure_node_37.status = failure) -> !((success_node_37.status = success))));
CTLSPEC AG(((success_failure_node_37.status = failure) -> (success_node_37.status = success)));
CTLSPEC AG(((success_failure_node_37.status = failure) -> !((success_node_37.status = success))));
INVARSPEC ((success_failure_node_37.status = failure) -> (success_node_37.status = success));
INVARSPEC ((success_failure_node_37.status = failure) -> !((success_node_37.status = success)));
LTLSPEC G(((success_failure_node_38.status = failure) -> (success_node_38.status = success)));
LTLSPEC G(((success_failure_node_38.status = failure) -> !((success_node_38.status = success))));
CTLSPEC AG(((success_failure_node_38.status = failure) -> (success_node_38.status = success)));
CTLSPEC AG(((success_failure_node_38.status = failure) -> !((success_node_38.status = success))));
INVARSPEC ((success_failure_node_38.status = failure) -> (success_node_38.status = success));
INVARSPEC ((success_failure_node_38.status = failure) -> !((success_node_38.status = success)));
LTLSPEC G(((success_failure_node_39.status = failure) -> (success_node_39.status = success)));
LTLSPEC G(((success_failure_node_39.status = failure) -> !((success_node_39.status = success))));
CTLSPEC AG(((success_failure_node_39.status = failure) -> (success_node_39.status = success)));
CTLSPEC AG(((success_failure_node_39.status = failure) -> !((success_node_39.status = success))));
INVARSPEC ((success_failure_node_39.status = failure) -> (success_node_39.status = success));
INVARSPEC ((success_failure_node_39.status = failure) -> !((success_node_39.status = success)));
LTLSPEC G(((success_failure_node_40.status = failure) -> (success_node_40.status = success)));
LTLSPEC G(((success_failure_node_40.status = failure) -> !((success_node_40.status = success))));
CTLSPEC AG(((success_failure_node_40.status = failure) -> (success_node_40.status = success)));
CTLSPEC AG(((success_failure_node_40.status = failure) -> !((success_node_40.status = success))));
INVARSPEC ((success_failure_node_40.status = failure) -> (success_node_40.status = success));
INVARSPEC ((success_failure_node_40.status = failure) -> !((success_node_40.status = success)));
LTLSPEC G(((success_failure_node_41.status = failure) -> (success_node_41.status = success)));
LTLSPEC G(((success_failure_node_41.status = failure) -> !((success_node_41.status = success))));
CTLSPEC AG(((success_failure_node_41.status = failure) -> (success_node_41.status = success)));
CTLSPEC AG(((success_failure_node_41.status = failure) -> !((success_node_41.status = success))));
INVARSPEC ((success_failure_node_41.status = failure) -> (success_node_41.status = success));
INVARSPEC ((success_failure_node_41.status = failure) -> !((success_node_41.status = success)));
LTLSPEC G(((success_failure_node_42.status = failure) -> (success_node_42.status = success)));
LTLSPEC G(((success_failure_node_42.status = failure) -> !((success_node_42.status = success))));
CTLSPEC AG(((success_failure_node_42.status = failure) -> (success_node_42.status = success)));
CTLSPEC AG(((success_failure_node_42.status = failure) -> !((success_node_42.status = success))));
INVARSPEC ((success_failure_node_42.status = failure) -> (success_node_42.status = success));
INVARSPEC ((success_failure_node_42.status = failure) -> !((success_node_42.status = success)));
LTLSPEC G(((success_failure_node_43.status = failure) -> (success_node_43.status = success)));
LTLSPEC G(((success_failure_node_43.status = failure) -> !((success_node_43.status = success))));
CTLSPEC AG(((success_failure_node_43.status = failure) -> (success_node_43.status = success)));
CTLSPEC AG(((success_failure_node_43.status = failure) -> !((success_node_43.status = success))));
INVARSPEC ((success_failure_node_43.status = failure) -> (success_node_43.status = success));
INVARSPEC ((success_failure_node_43.status = failure) -> !((success_node_43.status = success)));
LTLSPEC G(((success_failure_node_44.status = failure) -> (success_node_44.status = success)));
LTLSPEC G(((success_failure_node_44.status = failure) -> !((success_node_44.status = success))));
CTLSPEC AG(((success_failure_node_44.status = failure) -> (success_node_44.status = success)));
CTLSPEC AG(((success_failure_node_44.status = failure) -> !((success_node_44.status = success))));
INVARSPEC ((success_failure_node_44.status = failure) -> (success_node_44.status = success));
INVARSPEC ((success_failure_node_44.status = failure) -> !((success_node_44.status = success)));
MODULE define_nodes
	DEFINE
		seqLink44 := 0;
		seqLink42 := 1;
		seqLink38 := 2;
		seqLink30 := 3;
		seqLink14 := 4;
		sel26 := 5;
		success_failure_node := 6;
		success_node := 7;
		sel27 := 8;
		success_failure_node_1 := 9;
		success_node_1 := 10;
		seqLink15 := 11;
		sel28 := 12;
		success_failure_node_2 := 13;
		success_node_2 := 14;
		sel29 := 15;
		success_failure_node_3 := 16;
		success_node_3 := 17;
		seqLink31 := 18;
		seqLink16 := 19;
		sel30 := 20;
		success_failure_node_4 := 21;
		success_node_4 := 22;
		sel31 := 23;
		success_failure_node_5 := 24;
		success_node_5 := 25;
		seqLink17 := 26;
		sel32 := 27;
		success_failure_node_6 := 28;
		success_node_6 := 29;
		sel33 := 30;
		success_failure_node_7 := 31;
		success_node_7 := 32;
		seqLink39 := 33;
		seqLink32 := 34;
		seqLink18 := 35;
		sel34 := 36;
		success_failure_node_8 := 37;
		success_node_8 := 38;
		sel35 := 39;
		success_failure_node_9 := 40;
		success_node_9 := 41;
		seqLink19 := 42;
		sel36 := 43;
		success_failure_node_10 := 44;
		success_node_10 := 45;
		sel37 := 46;
		success_failure_node_11 := 47;
		success_node_11 := 48;
		seqLink33 := 49;
		seqLink20 := 50;
		sel38 := 51;
		success_failure_node_12 := 52;
		success_node_12 := 53;
		sel39 := 54;
		success_failure_node_13 := 55;
		success_node_13 := 56;
		seqLink21 := 57;
		sel40 := 58;
		success_failure_node_14 := 59;
		success_node_14 := 60;
		sel41 := 61;
		success_failure_node_15 := 62;
		success_node_15 := 63;
		seqLink43 := 64;
		seqLink40 := 65;
		seqLink34 := 66;
		seqLink22 := 67;
		sel42 := 68;
		success_failure_node_16 := 69;
		success_node_16 := 70;
		sel43 := 71;
		success_failure_node_17 := 72;
		success_node_17 := 73;
		seqLink23 := 74;
		sel44 := 75;
		success_failure_node_18 := 76;
		success_node_18 := 77;
		seqLink1 := 78;
		sel0 := 79;
		success_failure_node_19 := 80;
		success_node_19 := 81;
		sel1 := 82;
		success_failure_node_20 := 83;
		success_node_20 := 84;
		seqLink35 := 85;
		seqLink24 := 86;
		seqLink2 := 87;
		sel2 := 88;
		success_failure_node_21 := 89;
		success_node_21 := 90;
		sel3 := 91;
		success_failure_node_22 := 92;
		success_node_22 := 93;
		seqLink3 := 94;
		sel4 := 95;
		success_failure_node_23 := 96;
		success_node_23 := 97;
		sel5 := 98;
		success_failure_node_24 := 99;
		success_node_24 := 100;
		seqLink25 := 101;
		seqLink4 := 102;
		sel6 := 103;
		success_failure_node_25 := 104;
		success_node_25 := 105;
		sel7 := 106;
		success_failure_node_26 := 107;
		success_node_26 := 108;
		seqLink5 := 109;
		sel8 := 110;
		success_failure_node_27 := 111;
		success_node_27 := 112;
		sel9 := 113;
		success_failure_node_28 := 114;
		success_node_28 := 115;
		seqLink41 := 116;
		seqLink36 := 117;
		seqLink26 := 118;
		seqLink6 := 119;
		sel10 := 120;
		success_failure_node_29 := 121;
		success_node_29 := 122;
		sel11 := 123;
		success_failure_node_30 := 124;
		success_node_30 := 125;
		seqLink7 := 126;
		sel12 := 127;
		success_failure_node_31 := 128;
		success_node_31 := 129;
		sel13 := 130;
		success_failure_node_32 := 131;
		success_node_32 := 132;
		seqLink27 := 133;
		seqLink8 := 134;
		sel14 := 135;
		success_failure_node_33 := 136;
		success_node_33 := 137;
		sel15 := 138;
		success_failure_node_34 := 139;
		success_node_34 := 140;
		seqLink9 := 141;
		sel16 := 142;
		success_failure_node_35 := 143;
		success_node_35 := 144;
		sel17 := 145;
		success_failure_node_36 := 146;
		success_node_36 := 147;
		seqLink37 := 148;
		seqLink28 := 149;
		seqLink10 := 150;
		sel18 := 151;
		success_failure_node_37 := 152;
		success_node_37 := 153;
		sel19 := 154;
		success_failure_node_38 := 155;
		success_node_38 := 156;
		seqLink11 := 157;
		sel20 := 158;
		success_failure_node_39 := 159;
		success_node_39 := 160;
		sel21 := 161;
		success_failure_node_40 := 162;
		success_node_40 := 163;
		seqLink29 := 164;
		seqLink12 := 165;
		sel22 := 166;
		success_failure_node_41 := 167;
		success_node_41 := 168;
		sel23 := 169;
		success_failure_node_42 := 170;
		success_node_42 := 171;
		seqLink13 := 172;
		sel24 := 173;
		success_failure_node_43 := 174;
		success_node_43 := 175;
		sel25 := 176;
		success_failure_node_44 := 177;
		success_node_44 := 178;
MODULE composite_selector_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = failure : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = failure);

MODULE composite_selector_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? failure : invalid;
		internal_status := failure;
MODULE composite_sequence_without_memory(next_composite, child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child.internal_status = success : next_composite.internal_status;
				TRUE : child.internal_status;
			esac;
		child.active := active;
		next_composite.active := active & (child.internal_status = success);

MODULE composite_sequence_without_memory_END
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? success : invalid;
		internal_status := success;
MODULE success_failure_node_module(success_failure_node_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_1_module(success_failure_node_1_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_1_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_10_module(success_failure_node_10_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_10_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_11_module(success_failure_node_11_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_11_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_12_module(success_failure_node_12_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_12_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_13_module(success_failure_node_13_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_13_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_14_module(success_failure_node_14_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_14_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_15_module(success_failure_node_15_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_15_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_16_module(success_failure_node_16_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_16_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_17_module(success_failure_node_17_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_17_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_18_module(success_failure_node_18_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_18_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_19_module(success_failure_node_19_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_19_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_2_module(success_failure_node_2_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_2_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_20_module(success_failure_node_20_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_20_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_21_module(success_failure_node_21_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_21_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_22_module(success_failure_node_22_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_22_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_23_module(success_failure_node_23_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_23_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_24_module(success_failure_node_24_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_24_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_25_module(success_failure_node_25_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_25_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_26_module(success_failure_node_26_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_26_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_27_module(success_failure_node_27_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_27_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_28_module(success_failure_node_28_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_28_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_29_module(success_failure_node_29_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_29_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_3_module(success_failure_node_3_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_3_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_30_module(success_failure_node_30_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_30_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_31_module(success_failure_node_31_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_31_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_32_module(success_failure_node_32_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_32_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_33_module(success_failure_node_33_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_33_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_34_module(success_failure_node_34_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_34_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_35_module(success_failure_node_35_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_35_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_36_module(success_failure_node_36_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_36_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_37_module(success_failure_node_37_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_37_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_38_module(success_failure_node_38_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_38_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_39_module(success_failure_node_39_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_39_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_4_module(success_failure_node_4_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_4_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_40_module(success_failure_node_40_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_40_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_41_module(success_failure_node_41_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_41_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_42_module(success_failure_node_42_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_42_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_43_module(success_failure_node_43_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_43_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_44_module(success_failure_node_44_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_44_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_5_module(success_failure_node_5_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_5_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_6_module(success_failure_node_6_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_6_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_7_module(success_failure_node_7_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_7_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_8_module(success_failure_node_8_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_8_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_failure_node_9_module(success_failure_node_9_DOT_randomizer_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := 
			case
				success_failure_node_9_DOT_randomizer_stage_1 : success;
				TRUE : failure;
			esac;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
