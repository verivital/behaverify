MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__parLink22 := -3;
		resume_from_here_in_subtree__parLink20 := -3;
		resume_from_here_in_subtree__parLink16 := -3;
		resume_from_here_in_subtree__parLink8 := -3;
		resume_from_here_in_subtree__sel14 := -3;
		resume_from_here_in_subtree__sel15 := -3;
		resume_from_here_in_subtree__parLink9 := -3;
		resume_from_here_in_subtree__sel16 := -3;
		resume_from_here_in_subtree__sel17 := -3;
		resume_from_here_in_subtree__parLink17 := -3;
		resume_from_here_in_subtree__parLink10 := -3;
		resume_from_here_in_subtree__sel18 := -3;
		resume_from_here_in_subtree__sel19 := -3;
		resume_from_here_in_subtree__parLink11 := -3;
		resume_from_here_in_subtree__sel20 := -3;
		resume_from_here_in_subtree__sel21 := -3;
		resume_from_here_in_subtree__parLink21 := -3;
		resume_from_here_in_subtree__parLink18 := -3;
		resume_from_here_in_subtree__parLink12 := -3;
		resume_from_here_in_subtree__sel22 := -3;
		resume_from_here_in_subtree__parLink1 := -3;
		resume_from_here_in_subtree__sel0 := -3;
		resume_from_here_in_subtree__sel1 := -3;
		resume_from_here_in_subtree__parLink13 := -3;
		resume_from_here_in_subtree__parLink2 := -3;
		resume_from_here_in_subtree__sel2 := -3;
		resume_from_here_in_subtree__sel3 := -3;
		resume_from_here_in_subtree__parLink3 := -3;
		resume_from_here_in_subtree__sel4 := -3;
		resume_from_here_in_subtree__sel5 := -3;
		resume_from_here_in_subtree__parLink19 := -3;
		resume_from_here_in_subtree__parLink14 := -3;
		resume_from_here_in_subtree__parLink4 := -3;
		resume_from_here_in_subtree__sel6 := -3;
		resume_from_here_in_subtree__sel7 := -3;
		resume_from_here_in_subtree__parLink5 := -3;
		resume_from_here_in_subtree__sel8 := -3;
		resume_from_here_in_subtree__sel9 := -3;
		resume_from_here_in_subtree__parLink15 := -3;
		resume_from_here_in_subtree__parLink6 := -3;
		resume_from_here_in_subtree__sel10 := -3;
		resume_from_here_in_subtree__sel11 := -3;
		resume_from_here_in_subtree__parLink7 := -3;
		resume_from_here_in_subtree__sel12 := -3;
		resume_from_here_in_subtree__sel13 := -3;
		next_child__parLink1 := 
			case
				(previous_node < node_names.sel0) : node_names.sel0;
				(previous_node < node_names.sel1) : node_names.sel1;
				TRUE : -1;
			esac;
		next_child__parLink10 := 
			case
				(previous_node < node_names.sel18) : node_names.sel18;
				(previous_node < node_names.sel19) : node_names.sel19;
				TRUE : -1;
			esac;
		next_child__parLink11 := 
			case
				(previous_node < node_names.sel20) : node_names.sel20;
				(previous_node < node_names.sel21) : node_names.sel21;
				TRUE : -1;
			esac;
		next_child__parLink12 := 
			case
				(previous_node < node_names.sel22) : node_names.sel22;
				(previous_node < node_names.parLink1) : node_names.parLink1;
				TRUE : -1;
			esac;
		next_child__parLink13 := 
			case
				(previous_node < node_names.parLink2) : node_names.parLink2;
				(previous_node < node_names.parLink3) : node_names.parLink3;
				TRUE : -1;
			esac;
		next_child__parLink14 := 
			case
				(previous_node < node_names.parLink4) : node_names.parLink4;
				(previous_node < node_names.parLink5) : node_names.parLink5;
				TRUE : -1;
			esac;
		next_child__parLink15 := 
			case
				(previous_node < node_names.parLink6) : node_names.parLink6;
				(previous_node < node_names.parLink7) : node_names.parLink7;
				TRUE : -1;
			esac;
		next_child__parLink16 := 
			case
				(previous_node < node_names.parLink8) : node_names.parLink8;
				(previous_node < node_names.parLink9) : node_names.parLink9;
				TRUE : -1;
			esac;
		next_child__parLink17 := 
			case
				(previous_node < node_names.parLink10) : node_names.parLink10;
				(previous_node < node_names.parLink11) : node_names.parLink11;
				TRUE : -1;
			esac;
		next_child__parLink18 := 
			case
				(previous_node < node_names.parLink12) : node_names.parLink12;
				(previous_node < node_names.parLink13) : node_names.parLink13;
				TRUE : -1;
			esac;
		next_child__parLink19 := 
			case
				(previous_node < node_names.parLink14) : node_names.parLink14;
				(previous_node < node_names.parLink15) : node_names.parLink15;
				TRUE : -1;
			esac;
		next_child__parLink2 := 
			case
				(previous_node < node_names.sel2) : node_names.sel2;
				(previous_node < node_names.sel3) : node_names.sel3;
				TRUE : -1;
			esac;
		next_child__parLink20 := 
			case
				(previous_node < node_names.parLink16) : node_names.parLink16;
				(previous_node < node_names.parLink17) : node_names.parLink17;
				TRUE : -1;
			esac;
		next_child__parLink21 := 
			case
				(previous_node < node_names.parLink18) : node_names.parLink18;
				(previous_node < node_names.parLink19) : node_names.parLink19;
				TRUE : -1;
			esac;
		next_child__parLink22 := 
			case
				(previous_node < node_names.parLink20) : node_names.parLink20;
				(previous_node < node_names.parLink21) : node_names.parLink21;
				TRUE : -1;
			esac;
		next_child__parLink3 := 
			case
				(previous_node < node_names.sel4) : node_names.sel4;
				(previous_node < node_names.sel5) : node_names.sel5;
				TRUE : -1;
			esac;
		next_child__parLink4 := 
			case
				(previous_node < node_names.sel6) : node_names.sel6;
				(previous_node < node_names.sel7) : node_names.sel7;
				TRUE : -1;
			esac;
		next_child__parLink5 := 
			case
				(previous_node < node_names.sel8) : node_names.sel8;
				(previous_node < node_names.sel9) : node_names.sel9;
				TRUE : -1;
			esac;
		next_child__parLink6 := 
			case
				(previous_node < node_names.sel10) : node_names.sel10;
				(previous_node < node_names.sel11) : node_names.sel11;
				TRUE : -1;
			esac;
		next_child__parLink7 := 
			case
				(previous_node < node_names.sel12) : node_names.sel12;
				(previous_node < node_names.sel13) : node_names.sel13;
				TRUE : -1;
			esac;
		next_child__parLink8 := 
			case
				(previous_node < node_names.sel14) : node_names.sel14;
				(previous_node < node_names.sel15) : node_names.sel15;
				TRUE : -1;
			esac;
		next_child__parLink9 := 
			case
				(previous_node < node_names.sel16) : node_names.sel16;
				(previous_node < node_names.sel17) : node_names.sel17;
				TRUE : -1;
			esac;
		next_child__sel0 := 
			case
				(previous_node < node_names.success_failure_node_9) : node_names.success_failure_node_9;
				(previous_node < node_names.success_node_9) : node_names.success_node_9;
				TRUE : -1;
			esac;
		next_child__sel1 := 
			case
				(previous_node < node_names.success_failure_node_10) : node_names.success_failure_node_10;
				(previous_node < node_names.success_node_10) : node_names.success_node_10;
				TRUE : -1;
			esac;
		next_child__sel10 := 
			case
				(previous_node < node_names.success_failure_node_19) : node_names.success_failure_node_19;
				(previous_node < node_names.success_node_19) : node_names.success_node_19;
				TRUE : -1;
			esac;
		next_child__sel11 := 
			case
				(previous_node < node_names.success_failure_node_20) : node_names.success_failure_node_20;
				(previous_node < node_names.success_node_20) : node_names.success_node_20;
				TRUE : -1;
			esac;
		next_child__sel12 := 
			case
				(previous_node < node_names.success_failure_node_21) : node_names.success_failure_node_21;
				(previous_node < node_names.success_node_21) : node_names.success_node_21;
				TRUE : -1;
			esac;
		next_child__sel13 := 
			case
				(previous_node < node_names.success_failure_node_22) : node_names.success_failure_node_22;
				(previous_node < node_names.success_node_22) : node_names.success_node_22;
				TRUE : -1;
			esac;
		next_child__sel14 := 
			case
				(previous_node < node_names.success_failure_node) : node_names.success_failure_node;
				(previous_node < node_names.success_node) : node_names.success_node;
				TRUE : -1;
			esac;
		next_child__sel15 := 
			case
				(previous_node < node_names.success_failure_node_1) : node_names.success_failure_node_1;
				(previous_node < node_names.success_node_1) : node_names.success_node_1;
				TRUE : -1;
			esac;
		next_child__sel16 := 
			case
				(previous_node < node_names.success_failure_node_2) : node_names.success_failure_node_2;
				(previous_node < node_names.success_node_2) : node_names.success_node_2;
				TRUE : -1;
			esac;
		next_child__sel17 := 
			case
				(previous_node < node_names.success_failure_node_3) : node_names.success_failure_node_3;
				(previous_node < node_names.success_node_3) : node_names.success_node_3;
				TRUE : -1;
			esac;
		next_child__sel18 := 
			case
				(previous_node < node_names.success_failure_node_4) : node_names.success_failure_node_4;
				(previous_node < node_names.success_node_4) : node_names.success_node_4;
				TRUE : -1;
			esac;
		next_child__sel19 := 
			case
				(previous_node < node_names.success_failure_node_5) : node_names.success_failure_node_5;
				(previous_node < node_names.success_node_5) : node_names.success_node_5;
				TRUE : -1;
			esac;
		next_child__sel2 := 
			case
				(previous_node < node_names.success_failure_node_11) : node_names.success_failure_node_11;
				(previous_node < node_names.success_node_11) : node_names.success_node_11;
				TRUE : -1;
			esac;
		next_child__sel20 := 
			case
				(previous_node < node_names.success_failure_node_6) : node_names.success_failure_node_6;
				(previous_node < node_names.success_node_6) : node_names.success_node_6;
				TRUE : -1;
			esac;
		next_child__sel21 := 
			case
				(previous_node < node_names.success_failure_node_7) : node_names.success_failure_node_7;
				(previous_node < node_names.success_node_7) : node_names.success_node_7;
				TRUE : -1;
			esac;
		next_child__sel22 := 
			case
				(previous_node < node_names.success_failure_node_8) : node_names.success_failure_node_8;
				(previous_node < node_names.success_node_8) : node_names.success_node_8;
				TRUE : -1;
			esac;
		next_child__sel3 := 
			case
				(previous_node < node_names.success_failure_node_12) : node_names.success_failure_node_12;
				(previous_node < node_names.success_node_12) : node_names.success_node_12;
				TRUE : -1;
			esac;
		next_child__sel4 := 
			case
				(previous_node < node_names.success_failure_node_13) : node_names.success_failure_node_13;
				(previous_node < node_names.success_node_13) : node_names.success_node_13;
				TRUE : -1;
			esac;
		next_child__sel5 := 
			case
				(previous_node < node_names.success_failure_node_14) : node_names.success_failure_node_14;
				(previous_node < node_names.success_node_14) : node_names.success_node_14;
				TRUE : -1;
			esac;
		next_child__sel6 := 
			case
				(previous_node < node_names.success_failure_node_15) : node_names.success_failure_node_15;
				(previous_node < node_names.success_node_15) : node_names.success_node_15;
				TRUE : -1;
			esac;
		next_child__sel7 := 
			case
				(previous_node < node_names.success_failure_node_16) : node_names.success_failure_node_16;
				(previous_node < node_names.success_node_16) : node_names.success_node_16;
				TRUE : -1;
			esac;
		next_child__sel8 := 
			case
				(previous_node < node_names.success_failure_node_17) : node_names.success_failure_node_17;
				(previous_node < node_names.success_node_17) : node_names.success_node_17;
				TRUE : -1;
			esac;
		next_child__sel9 := 
			case
				(previous_node < node_names.success_failure_node_18) : node_names.success_failure_node_18;
				(previous_node < node_names.success_node_18) : node_names.success_node_18;
				TRUE : -1;
			esac;
		--START OF BLACKBOARD DEFINITIONS
		--END OF BLACKBOARD DEFINITIONS
	VAR
		node_names : define_nodes;
		active_node : -1..91;
		previous_node : -1..91;
		current_status : {success, running, failure, invalid};
		previous_status : {success, running, failure, invalid};
		parallel_status_depth__0 : {success, running, failure};
		parallel_status_depth__1 : {success, running, failure};
		parallel_status_depth__2 : {success, running, failure};
		parallel_status_depth__3 : {success, running, failure};
		parallel_status_depth__4 : {success, running, failure};
		--START OF BLACKBOARD VARIABLES DECLARATION
		success_failure_node_10_DOT_randomizer : boolean;
		success_failure_node_11_DOT_randomizer : boolean;
		success_failure_node_12_DOT_randomizer : boolean;
		success_failure_node_13_DOT_randomizer : boolean;
		success_failure_node_14_DOT_randomizer : boolean;
		success_failure_node_15_DOT_randomizer : boolean;
		success_failure_node_16_DOT_randomizer : boolean;
		success_failure_node_17_DOT_randomizer : boolean;
		success_failure_node_18_DOT_randomizer : boolean;
		success_failure_node_19_DOT_randomizer : boolean;
		success_failure_node_1_DOT_randomizer : boolean;
		success_failure_node_20_DOT_randomizer : boolean;
		success_failure_node_21_DOT_randomizer : boolean;
		success_failure_node_22_DOT_randomizer : boolean;
		success_failure_node_2_DOT_randomizer : boolean;
		success_failure_node_3_DOT_randomizer : boolean;
		success_failure_node_4_DOT_randomizer : boolean;
		success_failure_node_5_DOT_randomizer : boolean;
		success_failure_node_6_DOT_randomizer : boolean;
		success_failure_node_7_DOT_randomizer : boolean;
		success_failure_node_8_DOT_randomizer : boolean;
		success_failure_node_9_DOT_randomizer : boolean;
		success_failure_node_DOT_randomizer : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(active_node) := -1;
		init(previous_node) := -1;
		init(previous_status) := invalid;
		init(parallel_status_depth__0) := failure;
		init(parallel_status_depth__1) := failure;
		init(parallel_status_depth__2) := failure;
		init(parallel_status_depth__3) := failure;
		init(parallel_status_depth__4) := failure;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(success_failure_node_10_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_11_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_12_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_13_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_14_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_15_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_16_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_17_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_18_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_19_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_1_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_20_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_21_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_22_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_2_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_3_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_4_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_5_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_6_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_7_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_8_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_9_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		init(success_failure_node_DOT_randomizer) := 
			case
				TRUE : FALSE;
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(active_node) :=
			case
				active_node = -1 & TRUE : node_names.parLink22;
				active_node = -1 & !(TRUE) : -1;
				(active_node = node_names.parLink1) & (current_status != invalid) : node_names.parLink12;
				(active_node = node_names.parLink1) & (current_status = invalid) : next_child__parLink1;
				(active_node = node_names.parLink10) & (current_status != invalid) : node_names.parLink17;
				(active_node = node_names.parLink10) & (current_status = invalid) : next_child__parLink10;
				(active_node = node_names.parLink11) & (current_status != invalid) : node_names.parLink17;
				(active_node = node_names.parLink11) & (current_status = invalid) : next_child__parLink11;
				(active_node = node_names.parLink12) & (current_status != invalid) : node_names.parLink18;
				(active_node = node_names.parLink12) & (current_status = invalid) : next_child__parLink12;
				(active_node = node_names.parLink13) & (current_status != invalid) : node_names.parLink18;
				(active_node = node_names.parLink13) & (current_status = invalid) : next_child__parLink13;
				(active_node = node_names.parLink14) & (current_status != invalid) : node_names.parLink19;
				(active_node = node_names.parLink14) & (current_status = invalid) : next_child__parLink14;
				(active_node = node_names.parLink15) & (current_status != invalid) : node_names.parLink19;
				(active_node = node_names.parLink15) & (current_status = invalid) : next_child__parLink15;
				(active_node = node_names.parLink16) & (current_status != invalid) : node_names.parLink20;
				(active_node = node_names.parLink16) & (current_status = invalid) : next_child__parLink16;
				(active_node = node_names.parLink17) & (current_status != invalid) : node_names.parLink20;
				(active_node = node_names.parLink17) & (current_status = invalid) : next_child__parLink17;
				(active_node = node_names.parLink18) & (current_status != invalid) : node_names.parLink21;
				(active_node = node_names.parLink18) & (current_status = invalid) : next_child__parLink18;
				(active_node = node_names.parLink19) & (current_status != invalid) : node_names.parLink21;
				(active_node = node_names.parLink19) & (current_status = invalid) : next_child__parLink19;
				(active_node = node_names.parLink2) & (current_status != invalid) : node_names.parLink13;
				(active_node = node_names.parLink2) & (current_status = invalid) : next_child__parLink2;
				(active_node = node_names.parLink20) & (current_status != invalid) : node_names.parLink22;
				(active_node = node_names.parLink20) & (current_status = invalid) : next_child__parLink20;
				(active_node = node_names.parLink21) & (current_status != invalid) : node_names.parLink22;
				(active_node = node_names.parLink21) & (current_status = invalid) : next_child__parLink21;
				(active_node = node_names.parLink22) & (current_status != invalid) : -1;
				(active_node = node_names.parLink22) & (current_status = invalid) : next_child__parLink22;
				(active_node = node_names.parLink3) & (current_status != invalid) : node_names.parLink13;
				(active_node = node_names.parLink3) & (current_status = invalid) : next_child__parLink3;
				(active_node = node_names.parLink4) & (current_status != invalid) : node_names.parLink14;
				(active_node = node_names.parLink4) & (current_status = invalid) : next_child__parLink4;
				(active_node = node_names.parLink5) & (current_status != invalid) : node_names.parLink14;
				(active_node = node_names.parLink5) & (current_status = invalid) : next_child__parLink5;
				(active_node = node_names.parLink6) & (current_status != invalid) : node_names.parLink15;
				(active_node = node_names.parLink6) & (current_status = invalid) : next_child__parLink6;
				(active_node = node_names.parLink7) & (current_status != invalid) : node_names.parLink15;
				(active_node = node_names.parLink7) & (current_status = invalid) : next_child__parLink7;
				(active_node = node_names.parLink8) & (current_status != invalid) : node_names.parLink16;
				(active_node = node_names.parLink8) & (current_status = invalid) : next_child__parLink8;
				(active_node = node_names.parLink9) & (current_status != invalid) : node_names.parLink16;
				(active_node = node_names.parLink9) & (current_status = invalid) : next_child__parLink9;
				(active_node = node_names.sel0) & (current_status != invalid) : node_names.parLink1;
				(active_node = node_names.sel0) & (current_status = invalid) : next_child__sel0;
				(active_node = node_names.sel1) & (current_status != invalid) : node_names.parLink1;
				(active_node = node_names.sel1) & (current_status = invalid) : next_child__sel1;
				(active_node = node_names.sel10) & (current_status != invalid) : node_names.parLink6;
				(active_node = node_names.sel10) & (current_status = invalid) : next_child__sel10;
				(active_node = node_names.sel11) & (current_status != invalid) : node_names.parLink6;
				(active_node = node_names.sel11) & (current_status = invalid) : next_child__sel11;
				(active_node = node_names.sel12) & (current_status != invalid) : node_names.parLink7;
				(active_node = node_names.sel12) & (current_status = invalid) : next_child__sel12;
				(active_node = node_names.sel13) & (current_status != invalid) : node_names.parLink7;
				(active_node = node_names.sel13) & (current_status = invalid) : next_child__sel13;
				(active_node = node_names.sel14) & (current_status != invalid) : node_names.parLink8;
				(active_node = node_names.sel14) & (current_status = invalid) : next_child__sel14;
				(active_node = node_names.sel15) & (current_status != invalid) : node_names.parLink8;
				(active_node = node_names.sel15) & (current_status = invalid) : next_child__sel15;
				(active_node = node_names.sel16) & (current_status != invalid) : node_names.parLink9;
				(active_node = node_names.sel16) & (current_status = invalid) : next_child__sel16;
				(active_node = node_names.sel17) & (current_status != invalid) : node_names.parLink9;
				(active_node = node_names.sel17) & (current_status = invalid) : next_child__sel17;
				(active_node = node_names.sel18) & (current_status != invalid) : node_names.parLink10;
				(active_node = node_names.sel18) & (current_status = invalid) : next_child__sel18;
				(active_node = node_names.sel19) & (current_status != invalid) : node_names.parLink10;
				(active_node = node_names.sel19) & (current_status = invalid) : next_child__sel19;
				(active_node = node_names.sel2) & (current_status != invalid) : node_names.parLink2;
				(active_node = node_names.sel2) & (current_status = invalid) : next_child__sel2;
				(active_node = node_names.sel20) & (current_status != invalid) : node_names.parLink11;
				(active_node = node_names.sel20) & (current_status = invalid) : next_child__sel20;
				(active_node = node_names.sel21) & (current_status != invalid) : node_names.parLink11;
				(active_node = node_names.sel21) & (current_status = invalid) : next_child__sel21;
				(active_node = node_names.sel22) & (current_status != invalid) : node_names.parLink12;
				(active_node = node_names.sel22) & (current_status = invalid) : next_child__sel22;
				(active_node = node_names.sel3) & (current_status != invalid) : node_names.parLink2;
				(active_node = node_names.sel3) & (current_status = invalid) : next_child__sel3;
				(active_node = node_names.sel4) & (current_status != invalid) : node_names.parLink3;
				(active_node = node_names.sel4) & (current_status = invalid) : next_child__sel4;
				(active_node = node_names.sel5) & (current_status != invalid) : node_names.parLink3;
				(active_node = node_names.sel5) & (current_status = invalid) : next_child__sel5;
				(active_node = node_names.sel6) & (current_status != invalid) : node_names.parLink4;
				(active_node = node_names.sel6) & (current_status = invalid) : next_child__sel6;
				(active_node = node_names.sel7) & (current_status != invalid) : node_names.parLink4;
				(active_node = node_names.sel7) & (current_status = invalid) : next_child__sel7;
				(active_node = node_names.sel8) & (current_status != invalid) : node_names.parLink5;
				(active_node = node_names.sel8) & (current_status = invalid) : next_child__sel8;
				(active_node = node_names.sel9) & (current_status != invalid) : node_names.parLink5;
				(active_node = node_names.sel9) & (current_status = invalid) : next_child__sel9;
				(active_node = node_names.success_failure_node) & (current_status != invalid) : node_names.sel14;
				(active_node = node_names.success_failure_node_1) & (current_status != invalid) : node_names.sel15;
				(active_node = node_names.success_failure_node_10) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_failure_node_11) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_failure_node_12) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_failure_node_13) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_failure_node_14) & (current_status != invalid) : node_names.sel5;
				(active_node = node_names.success_failure_node_15) & (current_status != invalid) : node_names.sel6;
				(active_node = node_names.success_failure_node_16) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_failure_node_17) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_failure_node_18) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_failure_node_19) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_failure_node_2) & (current_status != invalid) : node_names.sel16;
				(active_node = node_names.success_failure_node_20) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_failure_node_21) & (current_status != invalid) : node_names.sel12;
				(active_node = node_names.success_failure_node_22) & (current_status != invalid) : node_names.sel13;
				(active_node = node_names.success_failure_node_3) & (current_status != invalid) : node_names.sel17;
				(active_node = node_names.success_failure_node_4) & (current_status != invalid) : node_names.sel18;
				(active_node = node_names.success_failure_node_5) & (current_status != invalid) : node_names.sel19;
				(active_node = node_names.success_failure_node_6) & (current_status != invalid) : node_names.sel20;
				(active_node = node_names.success_failure_node_7) & (current_status != invalid) : node_names.sel21;
				(active_node = node_names.success_failure_node_8) & (current_status != invalid) : node_names.sel22;
				(active_node = node_names.success_failure_node_9) & (current_status != invalid) : node_names.sel0;
				(active_node = node_names.success_node) & (current_status != invalid) : node_names.sel14;
				(active_node = node_names.success_node_1) & (current_status != invalid) : node_names.sel15;
				(active_node = node_names.success_node_10) & (current_status != invalid) : node_names.sel1;
				(active_node = node_names.success_node_11) & (current_status != invalid) : node_names.sel2;
				(active_node = node_names.success_node_12) & (current_status != invalid) : node_names.sel3;
				(active_node = node_names.success_node_13) & (current_status != invalid) : node_names.sel4;
				(active_node = node_names.success_node_14) & (current_status != invalid) : node_names.sel5;
				(active_node = node_names.success_node_15) & (current_status != invalid) : node_names.sel6;
				(active_node = node_names.success_node_16) & (current_status != invalid) : node_names.sel7;
				(active_node = node_names.success_node_17) & (current_status != invalid) : node_names.sel8;
				(active_node = node_names.success_node_18) & (current_status != invalid) : node_names.sel9;
				(active_node = node_names.success_node_19) & (current_status != invalid) : node_names.sel10;
				(active_node = node_names.success_node_2) & (current_status != invalid) : node_names.sel16;
				(active_node = node_names.success_node_20) & (current_status != invalid) : node_names.sel11;
				(active_node = node_names.success_node_21) & (current_status != invalid) : node_names.sel12;
				(active_node = node_names.success_node_22) & (current_status != invalid) : node_names.sel13;
				(active_node = node_names.success_node_3) & (current_status != invalid) : node_names.sel17;
				(active_node = node_names.success_node_4) & (current_status != invalid) : node_names.sel18;
				(active_node = node_names.success_node_5) & (current_status != invalid) : node_names.sel19;
				(active_node = node_names.success_node_6) & (current_status != invalid) : node_names.sel20;
				(active_node = node_names.success_node_7) & (current_status != invalid) : node_names.sel21;
				(active_node = node_names.success_node_8) & (current_status != invalid) : node_names.sel22;
				(active_node = node_names.success_node_9) & (current_status != invalid) : node_names.sel0;
				TRUE : active_node;
			esac;
		next(previous_node) := active_node;
		current_status :=
			case
				(active_node = node_names.parLink1) & (next_child__parLink1 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink1) : invalid;
				(active_node = node_names.parLink10) & (next_child__parLink10 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink10) : invalid;
				(active_node = node_names.parLink11) & (next_child__parLink11 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink11) : invalid;
				(active_node = node_names.parLink12) & (next_child__parLink12 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink12) : invalid;
				(active_node = node_names.parLink13) & (next_child__parLink13 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink13) : invalid;
				(active_node = node_names.parLink14) & (next_child__parLink14 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink14) : invalid;
				(active_node = node_names.parLink15) & (next_child__parLink15 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink15) : invalid;
				(active_node = node_names.parLink16) & (next_child__parLink16 = -1) : parallel_status_depth__2;
				(active_node = node_names.parLink16) : invalid;
				(active_node = node_names.parLink17) & (next_child__parLink17 = -1) : parallel_status_depth__2;
				(active_node = node_names.parLink17) : invalid;
				(active_node = node_names.parLink18) & (next_child__parLink18 = -1) : parallel_status_depth__2;
				(active_node = node_names.parLink18) : invalid;
				(active_node = node_names.parLink19) & (next_child__parLink19 = -1) : parallel_status_depth__2;
				(active_node = node_names.parLink19) : invalid;
				(active_node = node_names.parLink2) & (next_child__parLink2 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink2) : invalid;
				(active_node = node_names.parLink20) & (next_child__parLink20 = -1) : parallel_status_depth__1;
				(active_node = node_names.parLink20) : invalid;
				(active_node = node_names.parLink21) & (next_child__parLink21 = -1) : parallel_status_depth__1;
				(active_node = node_names.parLink21) : invalid;
				(active_node = node_names.parLink22) & (next_child__parLink22 = -1) : parallel_status_depth__0;
				(active_node = node_names.parLink22) : invalid;
				(active_node = node_names.parLink3) & (next_child__parLink3 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink3) : invalid;
				(active_node = node_names.parLink4) & (next_child__parLink4 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink4) : invalid;
				(active_node = node_names.parLink5) & (next_child__parLink5 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink5) : invalid;
				(active_node = node_names.parLink6) & (next_child__parLink6 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink6) : invalid;
				(active_node = node_names.parLink7) & (next_child__parLink7 = -1) : parallel_status_depth__4;
				(active_node = node_names.parLink7) : invalid;
				(active_node = node_names.parLink8) & (next_child__parLink8 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink8) : invalid;
				(active_node = node_names.parLink9) & (next_child__parLink9 = -1) : parallel_status_depth__3;
				(active_node = node_names.parLink9) : invalid;
				(active_node = node_names.sel0) & (previous_status = running) : running;
				(active_node = node_names.sel0) & (previous_status = success) : success;
				(active_node = node_names.sel0) & (next_child__sel0 = -1) : failure;
				(active_node = node_names.sel0) : invalid;
				(active_node = node_names.sel1) & (previous_status = running) : running;
				(active_node = node_names.sel1) & (previous_status = success) : success;
				(active_node = node_names.sel1) & (next_child__sel1 = -1) : failure;
				(active_node = node_names.sel1) : invalid;
				(active_node = node_names.sel10) & (previous_status = running) : running;
				(active_node = node_names.sel10) & (previous_status = success) : success;
				(active_node = node_names.sel10) & (next_child__sel10 = -1) : failure;
				(active_node = node_names.sel10) : invalid;
				(active_node = node_names.sel11) & (previous_status = running) : running;
				(active_node = node_names.sel11) & (previous_status = success) : success;
				(active_node = node_names.sel11) & (next_child__sel11 = -1) : failure;
				(active_node = node_names.sel11) : invalid;
				(active_node = node_names.sel12) & (previous_status = running) : running;
				(active_node = node_names.sel12) & (previous_status = success) : success;
				(active_node = node_names.sel12) & (next_child__sel12 = -1) : failure;
				(active_node = node_names.sel12) : invalid;
				(active_node = node_names.sel13) & (previous_status = running) : running;
				(active_node = node_names.sel13) & (previous_status = success) : success;
				(active_node = node_names.sel13) & (next_child__sel13 = -1) : failure;
				(active_node = node_names.sel13) : invalid;
				(active_node = node_names.sel14) & (previous_status = running) : running;
				(active_node = node_names.sel14) & (previous_status = success) : success;
				(active_node = node_names.sel14) & (next_child__sel14 = -1) : failure;
				(active_node = node_names.sel14) : invalid;
				(active_node = node_names.sel15) & (previous_status = running) : running;
				(active_node = node_names.sel15) & (previous_status = success) : success;
				(active_node = node_names.sel15) & (next_child__sel15 = -1) : failure;
				(active_node = node_names.sel15) : invalid;
				(active_node = node_names.sel16) & (previous_status = running) : running;
				(active_node = node_names.sel16) & (previous_status = success) : success;
				(active_node = node_names.sel16) & (next_child__sel16 = -1) : failure;
				(active_node = node_names.sel16) : invalid;
				(active_node = node_names.sel17) & (previous_status = running) : running;
				(active_node = node_names.sel17) & (previous_status = success) : success;
				(active_node = node_names.sel17) & (next_child__sel17 = -1) : failure;
				(active_node = node_names.sel17) : invalid;
				(active_node = node_names.sel18) & (previous_status = running) : running;
				(active_node = node_names.sel18) & (previous_status = success) : success;
				(active_node = node_names.sel18) & (next_child__sel18 = -1) : failure;
				(active_node = node_names.sel18) : invalid;
				(active_node = node_names.sel19) & (previous_status = running) : running;
				(active_node = node_names.sel19) & (previous_status = success) : success;
				(active_node = node_names.sel19) & (next_child__sel19 = -1) : failure;
				(active_node = node_names.sel19) : invalid;
				(active_node = node_names.sel2) & (previous_status = running) : running;
				(active_node = node_names.sel2) & (previous_status = success) : success;
				(active_node = node_names.sel2) & (next_child__sel2 = -1) : failure;
				(active_node = node_names.sel2) : invalid;
				(active_node = node_names.sel20) & (previous_status = running) : running;
				(active_node = node_names.sel20) & (previous_status = success) : success;
				(active_node = node_names.sel20) & (next_child__sel20 = -1) : failure;
				(active_node = node_names.sel20) : invalid;
				(active_node = node_names.sel21) & (previous_status = running) : running;
				(active_node = node_names.sel21) & (previous_status = success) : success;
				(active_node = node_names.sel21) & (next_child__sel21 = -1) : failure;
				(active_node = node_names.sel21) : invalid;
				(active_node = node_names.sel22) & (previous_status = running) : running;
				(active_node = node_names.sel22) & (previous_status = success) : success;
				(active_node = node_names.sel22) & (next_child__sel22 = -1) : failure;
				(active_node = node_names.sel22) : invalid;
				(active_node = node_names.sel3) & (previous_status = running) : running;
				(active_node = node_names.sel3) & (previous_status = success) : success;
				(active_node = node_names.sel3) & (next_child__sel3 = -1) : failure;
				(active_node = node_names.sel3) : invalid;
				(active_node = node_names.sel4) & (previous_status = running) : running;
				(active_node = node_names.sel4) & (previous_status = success) : success;
				(active_node = node_names.sel4) & (next_child__sel4 = -1) : failure;
				(active_node = node_names.sel4) : invalid;
				(active_node = node_names.sel5) & (previous_status = running) : running;
				(active_node = node_names.sel5) & (previous_status = success) : success;
				(active_node = node_names.sel5) & (next_child__sel5 = -1) : failure;
				(active_node = node_names.sel5) : invalid;
				(active_node = node_names.sel6) & (previous_status = running) : running;
				(active_node = node_names.sel6) & (previous_status = success) : success;
				(active_node = node_names.sel6) & (next_child__sel6 = -1) : failure;
				(active_node = node_names.sel6) : invalid;
				(active_node = node_names.sel7) & (previous_status = running) : running;
				(active_node = node_names.sel7) & (previous_status = success) : success;
				(active_node = node_names.sel7) & (next_child__sel7 = -1) : failure;
				(active_node = node_names.sel7) : invalid;
				(active_node = node_names.sel8) & (previous_status = running) : running;
				(active_node = node_names.sel8) & (previous_status = success) : success;
				(active_node = node_names.sel8) & (next_child__sel8 = -1) : failure;
				(active_node = node_names.sel8) : invalid;
				(active_node = node_names.sel9) & (previous_status = running) : running;
				(active_node = node_names.sel9) & (previous_status = success) : success;
				(active_node = node_names.sel9) & (next_child__sel9 = -1) : failure;
				(active_node = node_names.sel9) : invalid;
				(active_node = node_names.success_failure_node) & success_failure_node_DOT_randomizer : success;
				(active_node = node_names.success_failure_node) & TRUE : failure;
				(active_node = node_names.success_failure_node_1) & success_failure_node_1_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_1) & TRUE : failure;
				(active_node = node_names.success_failure_node_10) & success_failure_node_10_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_10) & TRUE : failure;
				(active_node = node_names.success_failure_node_11) & success_failure_node_11_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_11) & TRUE : failure;
				(active_node = node_names.success_failure_node_12) & success_failure_node_12_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_12) & TRUE : failure;
				(active_node = node_names.success_failure_node_13) & success_failure_node_13_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_13) & TRUE : failure;
				(active_node = node_names.success_failure_node_14) & success_failure_node_14_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_14) & TRUE : failure;
				(active_node = node_names.success_failure_node_15) & success_failure_node_15_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_15) & TRUE : failure;
				(active_node = node_names.success_failure_node_16) & success_failure_node_16_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_16) & TRUE : failure;
				(active_node = node_names.success_failure_node_17) & success_failure_node_17_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_17) & TRUE : failure;
				(active_node = node_names.success_failure_node_18) & success_failure_node_18_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_18) & TRUE : failure;
				(active_node = node_names.success_failure_node_19) & success_failure_node_19_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_19) & TRUE : failure;
				(active_node = node_names.success_failure_node_2) & success_failure_node_2_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_2) & TRUE : failure;
				(active_node = node_names.success_failure_node_20) & success_failure_node_20_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_20) & TRUE : failure;
				(active_node = node_names.success_failure_node_21) & success_failure_node_21_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_21) & TRUE : failure;
				(active_node = node_names.success_failure_node_22) & success_failure_node_22_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_22) & TRUE : failure;
				(active_node = node_names.success_failure_node_3) & success_failure_node_3_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_3) & TRUE : failure;
				(active_node = node_names.success_failure_node_4) & success_failure_node_4_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_4) & TRUE : failure;
				(active_node = node_names.success_failure_node_5) & success_failure_node_5_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_5) & TRUE : failure;
				(active_node = node_names.success_failure_node_6) & success_failure_node_6_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_6) & TRUE : failure;
				(active_node = node_names.success_failure_node_7) & success_failure_node_7_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_7) & TRUE : failure;
				(active_node = node_names.success_failure_node_8) & success_failure_node_8_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_8) & TRUE : failure;
				(active_node = node_names.success_failure_node_9) & success_failure_node_9_DOT_randomizer : success;
				(active_node = node_names.success_failure_node_9) & TRUE : failure;
				(active_node = node_names.success_node) : success;
				(active_node = node_names.success_node_1) : success;
				(active_node = node_names.success_node_10) : success;
				(active_node = node_names.success_node_11) : success;
				(active_node = node_names.success_node_12) : success;
				(active_node = node_names.success_node_13) : success;
				(active_node = node_names.success_node_14) : success;
				(active_node = node_names.success_node_15) : success;
				(active_node = node_names.success_node_16) : success;
				(active_node = node_names.success_node_17) : success;
				(active_node = node_names.success_node_18) : success;
				(active_node = node_names.success_node_19) : success;
				(active_node = node_names.success_node_2) : success;
				(active_node = node_names.success_node_20) : success;
				(active_node = node_names.success_node_21) : success;
				(active_node = node_names.success_node_22) : success;
				(active_node = node_names.success_node_3) : success;
				(active_node = node_names.success_node_4) : success;
				(active_node = node_names.success_node_5) : success;
				(active_node = node_names.success_node_6) : success;
				(active_node = node_names.success_node_7) : success;
				(active_node = node_names.success_node_8) : success;
				(active_node = node_names.success_node_9) : success;
				TRUE : invalid;
			esac;
		next(previous_status) := current_status;
		next(parallel_status_depth__4) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parLink1) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink1) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink1) & (current_status = running) : running;
				(next(active_node) = node_names.parLink2) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink2) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink2) & (current_status = running) : running;
				(next(active_node) = node_names.parLink3) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink3) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink3) & (current_status = running) : running;
				(next(active_node) = node_names.parLink4) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink4) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink4) & (current_status = running) : running;
				(next(active_node) = node_names.parLink5) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink5) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink5) & (current_status = running) : running;
				(next(active_node) = node_names.parLink6) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink6) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink6) & (current_status = running) : running;
				(next(active_node) = node_names.parLink7) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink7) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink7) & (current_status = running) : running;
				TRUE : parallel_status_depth__4;
			esac;
		next(parallel_status_depth__3) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parLink10) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink10) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink10) & (current_status = running) : running;
				(next(active_node) = node_names.parLink11) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink11) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink11) & (current_status = running) : running;
				(next(active_node) = node_names.parLink12) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink12) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink12) & (current_status = running) : running;
				(next(active_node) = node_names.parLink13) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink13) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink13) & (current_status = running) : running;
				(next(active_node) = node_names.parLink14) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink14) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink14) & (current_status = running) : running;
				(next(active_node) = node_names.parLink15) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink15) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink15) & (current_status = running) : running;
				(next(active_node) = node_names.parLink8) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink8) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink8) & (current_status = running) : running;
				(next(active_node) = node_names.parLink9) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink9) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink9) & (current_status = running) : running;
				TRUE : parallel_status_depth__3;
			esac;
		next(parallel_status_depth__2) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parLink16) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink16) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink16) & (current_status = running) : running;
				(next(active_node) = node_names.parLink17) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink17) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink17) & (current_status = running) : running;
				(next(active_node) = node_names.parLink18) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink18) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink18) & (current_status = running) : running;
				(next(active_node) = node_names.parLink19) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink19) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink19) & (current_status = running) : running;
				TRUE : parallel_status_depth__2;
			esac;
		next(parallel_status_depth__1) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parLink20) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink20) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink20) & (current_status = running) : running;
				(next(active_node) = node_names.parLink21) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink21) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink21) & (current_status = running) : running;
				TRUE : parallel_status_depth__1;
			esac;
		next(parallel_status_depth__0) := 
			case
				next(active_node) = -1 : failure;
				(next(active_node) = node_names.parLink22) & (current_status = invalid) : success;
				(next(active_node) = node_names.parLink22) & (current_status = failure) : failure;
				(next(active_node) = node_names.parLink22) & (current_status = running) : running;
				TRUE : parallel_status_depth__0;
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(success_failure_node_10_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_10) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_10_DOT_randomizer;
			esac;
		next(success_failure_node_11_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_11) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_11_DOT_randomizer;
			esac;
		next(success_failure_node_12_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_12) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_12_DOT_randomizer;
			esac;
		next(success_failure_node_13_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_13) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_13_DOT_randomizer;
			esac;
		next(success_failure_node_14_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_14) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_14_DOT_randomizer;
			esac;
		next(success_failure_node_15_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_15) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_15_DOT_randomizer;
			esac;
		next(success_failure_node_16_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_16) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_16_DOT_randomizer;
			esac;
		next(success_failure_node_17_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_17) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_17_DOT_randomizer;
			esac;
		next(success_failure_node_18_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_18) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_18_DOT_randomizer;
			esac;
		next(success_failure_node_19_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_19) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_19_DOT_randomizer;
			esac;
		next(success_failure_node_1_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_1) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_1_DOT_randomizer;
			esac;
		next(success_failure_node_20_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_20) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_20_DOT_randomizer;
			esac;
		next(success_failure_node_21_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_21) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_21_DOT_randomizer;
			esac;
		next(success_failure_node_22_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_22) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_22_DOT_randomizer;
			esac;
		next(success_failure_node_2_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_2) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_2_DOT_randomizer;
			esac;
		next(success_failure_node_3_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_3) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_3_DOT_randomizer;
			esac;
		next(success_failure_node_4_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_4) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_4_DOT_randomizer;
			esac;
		next(success_failure_node_5_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_5) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_5_DOT_randomizer;
			esac;
		next(success_failure_node_6_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_6) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_6_DOT_randomizer;
			esac;
		next(success_failure_node_7_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_7) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_7_DOT_randomizer;
			esac;
		next(success_failure_node_8_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_8) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_8_DOT_randomizer;
			esac;
		next(success_failure_node_9_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node_9) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_9_DOT_randomizer;
			esac;
		next(success_failure_node_DOT_randomizer) :=
			case
				(active_node = node_names.success_failure_node) & !(current_status = invalid) & (TRUE) : {TRUE, FALSE};
				TRUE : success_failure_node_DOT_randomizer;
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_1 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_1 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_1 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_2 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_2 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_2 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_3 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_3 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_3 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_4 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_4 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_4 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_5 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_5 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_5 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_6 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_6 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_6 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_7 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_7 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_7 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_8 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_8 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_8 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_9 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_9 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_9 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_10 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_10 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_10 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_11 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_11 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_11 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_12 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_12 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_12 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_12 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_12 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_12 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_12 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_12 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_13 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_13 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_13 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_13 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_13 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_13 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_13 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_13 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_14 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_14 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_14 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_14 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_14 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_14 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_14 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_14 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_15 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_15 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_15 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_15 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_15 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_15 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_15 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_15 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_16 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_16 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_16 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_16 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_16 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_16 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_16 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_16 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_17 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_17 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_17 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_17 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_17 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_17 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_17 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_17 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_18 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_18 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_18 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_18 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_18 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_18 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_18 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_18 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_19 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_19 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_19 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_19 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_19 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_19 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_19 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_19 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_20 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_20 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_20 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_20 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_20 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_20 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_20 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_20 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_21 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_21 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_21 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_21 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_21 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_21 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_21 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_21 & current_status = success)])));


LTLSPEC G(((active_node = node_names.success_failure_node_22 & current_status = failure) -> ((active_node > 0) U (active_node = node_names.success_node_22 & current_status = success))));
LTLSPEC G(((active_node = node_names.success_failure_node_22 & current_status = failure) -> !((active_node > 0) U (active_node = node_names.success_node_22 & current_status = success))));
CTLSPEC AG(((active_node = node_names.success_failure_node_22 & current_status = failure) -> (A [(active_node > 0) U (active_node = node_names.success_node_22 & current_status = success)])));
CTLSPEC AG(((active_node = node_names.success_failure_node_22 & current_status = failure) -> !(A [(active_node > 0) U (active_node = node_names.success_node_22 & current_status = success)])));


MODULE define_nodes
	DEFINE
		parLink22 := 0;
		parLink20 := 1;
		parLink16 := 2;
		parLink8 := 3;
		sel14 := 4;
		success_failure_node := 5;
		success_node := 6;
		sel15 := 7;
		success_failure_node_1 := 8;
		success_node_1 := 9;
		parLink9 := 10;
		sel16 := 11;
		success_failure_node_2 := 12;
		success_node_2 := 13;
		sel17 := 14;
		success_failure_node_3 := 15;
		success_node_3 := 16;
		parLink17 := 17;
		parLink10 := 18;
		sel18 := 19;
		success_failure_node_4 := 20;
		success_node_4 := 21;
		sel19 := 22;
		success_failure_node_5 := 23;
		success_node_5 := 24;
		parLink11 := 25;
		sel20 := 26;
		success_failure_node_6 := 27;
		success_node_6 := 28;
		sel21 := 29;
		success_failure_node_7 := 30;
		success_node_7 := 31;
		parLink21 := 32;
		parLink18 := 33;
		parLink12 := 34;
		sel22 := 35;
		success_failure_node_8 := 36;
		success_node_8 := 37;
		parLink1 := 38;
		sel0 := 39;
		success_failure_node_9 := 40;
		success_node_9 := 41;
		sel1 := 42;
		success_failure_node_10 := 43;
		success_node_10 := 44;
		parLink13 := 45;
		parLink2 := 46;
		sel2 := 47;
		success_failure_node_11 := 48;
		success_node_11 := 49;
		sel3 := 50;
		success_failure_node_12 := 51;
		success_node_12 := 52;
		parLink3 := 53;
		sel4 := 54;
		success_failure_node_13 := 55;
		success_node_13 := 56;
		sel5 := 57;
		success_failure_node_14 := 58;
		success_node_14 := 59;
		parLink19 := 60;
		parLink14 := 61;
		parLink4 := 62;
		sel6 := 63;
		success_failure_node_15 := 64;
		success_node_15 := 65;
		sel7 := 66;
		success_failure_node_16 := 67;
		success_node_16 := 68;
		parLink5 := 69;
		sel8 := 70;
		success_failure_node_17 := 71;
		success_node_17 := 72;
		sel9 := 73;
		success_failure_node_18 := 74;
		success_node_18 := 75;
		parLink15 := 76;
		parLink6 := 77;
		sel10 := 78;
		success_failure_node_19 := 79;
		success_node_19 := 80;
		sel11 := 81;
		success_failure_node_20 := 82;
		success_node_20 := 83;
		parLink7 := 84;
		sel12 := 85;
		success_failure_node_21 := 86;
		success_node_21 := 87;
		sel13 := 88;
		success_failure_node_22 := 89;
		success_node_22 := 90;
