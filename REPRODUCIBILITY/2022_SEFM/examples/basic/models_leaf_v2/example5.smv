MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [example_5_sel1.status, seq1.status, seq3.status, leaf_1.status, leaf_2.status, seq4.status, leaf_3.status, leaf_4.status, seq2.status, seq5.status, leaf_5.status, leaf_6.status, seq6.status, leaf_7.status, leaf_8.status];
		next_node := [ascent_from_0, ascent_from_1, ascent_from_2, ascent_from_3, ascent_from_4, ascent_from_5, ascent_from_6, ascent_from_7, ascent_from_8, ascent_from_9, ascent_from_10, ascent_from_11, ascent_from_12, ascent_from_13, ascent_from_14];
		descent_from_0 := 
			case
				(active_node <1) : descent_from_1;
				(active_node <8) : descent_from_8;
				TRUE : -2;
			esac;
		descent_from_1 := 
			case
				(active_node <2) & (resume_relevant_child_2) : descent_from_2;
				(active_node <5) & (resume_relevant_child_5) : descent_from_5;
				(active_node <2) : descent_from_2;
				(active_node <5) : descent_from_5;
				TRUE : -2;
			esac;
		descent_from_2 := 
			case
				(active_node <3) & (resume_relevant_child_3) : descent_from_3;
				(active_node <4) & (resume_relevant_child_4) : descent_from_4;
				(active_node <3) : descent_from_3;
				(active_node <4) : descent_from_4;
				TRUE : -2;
			esac;
		descent_from_3 := 3;
		descent_from_4 := 4;
		descent_from_5 := 
			case
				(active_node <6) & (resume_relevant_child_6) : descent_from_6;
				(active_node <7) & (resume_relevant_child_7) : descent_from_7;
				(active_node <6) : descent_from_6;
				(active_node <7) : descent_from_7;
				TRUE : -2;
			esac;
		descent_from_6 := 6;
		descent_from_7 := 7;
		descent_from_8 := 
			case
				(active_node <9) & (resume_relevant_child_9) : descent_from_9;
				(active_node <12) & (resume_relevant_child_12) : descent_from_12;
				(active_node <9) : descent_from_9;
				(active_node <12) : descent_from_12;
				TRUE : -2;
			esac;
		descent_from_9 := 
			case
				(active_node <10) & (resume_relevant_child_10) : descent_from_10;
				(active_node <11) & (resume_relevant_child_11) : descent_from_11;
				(active_node <10) : descent_from_10;
				(active_node <11) : descent_from_11;
				TRUE : -2;
			esac;
		descent_from_10 := 10;
		descent_from_11 := 11;
		descent_from_12 := 
			case
				(active_node <13) & (resume_relevant_child_13) : descent_from_13;
				(active_node <14) & (resume_relevant_child_14) : descent_from_14;
				(active_node <13) : descent_from_13;
				(active_node <14) : descent_from_14;
				TRUE : -2;
			esac;
		descent_from_13 := 13;
		descent_from_14 := 14;
		ascent_from_0 := 
			case
				(statuses[0] = invalid) : descent_from_0;
				TRUE : -1;
			esac;
		ascent_from_1 := 
			case
				(statuses[1] = invalid) : descent_from_1;
				TRUE : ascent_from_0;
			esac;
		ascent_from_2 := 
			case
				(statuses[2] = invalid) : descent_from_2;
				TRUE : ascent_from_1;
			esac;
		ascent_from_3 := ascent_from_2;
		ascent_from_4 := ascent_from_2;
		ascent_from_5 := 
			case
				(statuses[5] = invalid) : descent_from_5;
				TRUE : ascent_from_1;
			esac;
		ascent_from_6 := ascent_from_5;
		ascent_from_7 := ascent_from_5;
		ascent_from_8 := 
			case
				(statuses[8] = invalid) : descent_from_8;
				TRUE : ascent_from_0;
			esac;
		ascent_from_9 := 
			case
				(statuses[9] = invalid) : descent_from_9;
				TRUE : ascent_from_8;
			esac;
		ascent_from_10 := ascent_from_9;
		ascent_from_11 := ascent_from_9;
		ascent_from_12 := 
			case
				(statuses[12] = invalid) : descent_from_12;
				TRUE : ascent_from_8;
			esac;
		ascent_from_13 := ascent_from_12;
		ascent_from_14 := ascent_from_12;
		relevant_child_0 := 
			case
				 !(relevant_child_1 = -2) : 1;
				 !(relevant_child_8 = -2) : 8;
				TRUE : -2;
			esac;
		resume_relevant_child_0 := 
			case
				(resume_from_node_0 = 0) : TRUE ;
				(resume_relevant_child_1) : TRUE;
				(resume_relevant_child_8) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_0 := 
			case
				(relevant_child_0 = 1) : seq1.status;
				(relevant_child_0 = 8) : seq2.status;
				TRUE : invalid;
			esac;
		relevant_child_1 := 
			case
				 !(relevant_child_2 = -2) : 2;
				 !(relevant_child_5 = -2) : 5;
				TRUE : -2;
			esac;
		resume_relevant_child_1 := 
			case
				(resume_from_node_0 = 1) : TRUE ;
				(resume_relevant_child_2) : TRUE;
				(resume_relevant_child_5) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_1 := 
			case
				(relevant_child_1 = 2) : seq3.status;
				(relevant_child_1 = 5) : seq4.status;
				TRUE : invalid;
			esac;
		relevant_child_2 := 
			case
				 !(relevant_child_3 = -2) : 3;
				 !(relevant_child_4 = -2) : 4;
				TRUE : -2;
			esac;
		resume_relevant_child_2 := 
			case
				(resume_from_node_0 = 2) : TRUE ;
				(resume_relevant_child_3) : TRUE;
				(resume_relevant_child_4) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_2 := 
			case
				(relevant_child_2 = 3) : leaf_1.status;
				(relevant_child_2 = 4) : leaf_2.status;
				TRUE : invalid;
			esac;
		relevant_child_3 := (active_node = 3) ? -1 : -2 ;
		resume_relevant_child_3 := (resume_from_node_0 = 3) ? TRUE : FALSE ;
		relevant_child_4 := (active_node = 4) ? -1 : -2 ;
		resume_relevant_child_4 := (resume_from_node_0 = 4) ? TRUE : FALSE ;
		relevant_child_5 := 
			case
				 !(relevant_child_6 = -2) : 6;
				 !(relevant_child_7 = -2) : 7;
				TRUE : -2;
			esac;
		resume_relevant_child_5 := 
			case
				(resume_from_node_0 = 5) : TRUE ;
				(resume_relevant_child_6) : TRUE;
				(resume_relevant_child_7) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_5 := 
			case
				(relevant_child_5 = 6) : leaf_3.status;
				(relevant_child_5 = 7) : leaf_4.status;
				TRUE : invalid;
			esac;
		relevant_child_6 := (active_node = 6) ? -1 : -2 ;
		resume_relevant_child_6 := (resume_from_node_0 = 6) ? TRUE : FALSE ;
		relevant_child_7 := (active_node = 7) ? -1 : -2 ;
		resume_relevant_child_7 := (resume_from_node_0 = 7) ? TRUE : FALSE ;
		relevant_child_8 := 
			case
				 !(relevant_child_9 = -2) : 9;
				 !(relevant_child_12 = -2) : 12;
				TRUE : -2;
			esac;
		resume_relevant_child_8 := 
			case
				(resume_from_node_0 = 8) : TRUE ;
				(resume_relevant_child_9) : TRUE;
				(resume_relevant_child_12) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_8 := 
			case
				(relevant_child_8 = 9) : seq5.status;
				(relevant_child_8 = 12) : seq6.status;
				TRUE : invalid;
			esac;
		relevant_child_9 := 
			case
				 !(relevant_child_10 = -2) : 10;
				 !(relevant_child_11 = -2) : 11;
				TRUE : -2;
			esac;
		resume_relevant_child_9 := 
			case
				(resume_from_node_0 = 9) : TRUE ;
				(resume_relevant_child_10) : TRUE;
				(resume_relevant_child_11) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_9 := 
			case
				(relevant_child_9 = 10) : leaf_5.status;
				(relevant_child_9 = 11) : leaf_6.status;
				TRUE : invalid;
			esac;
		relevant_child_10 := (active_node = 10) ? -1 : -2 ;
		resume_relevant_child_10 := (resume_from_node_0 = 10) ? TRUE : FALSE ;
		relevant_child_11 := (active_node = 11) ? -1 : -2 ;
		resume_relevant_child_11 := (resume_from_node_0 = 11) ? TRUE : FALSE ;
		relevant_child_12 := 
			case
				 !(relevant_child_13 = -2) : 13;
				 !(relevant_child_14 = -2) : 14;
				TRUE : -2;
			esac;
		resume_relevant_child_12 := 
			case
				(resume_from_node_0 = 12) : TRUE ;
				(resume_relevant_child_13) : TRUE;
				(resume_relevant_child_14) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_12 := 
			case
				(relevant_child_12 = 13) : leaf_7.status;
				(relevant_child_12 = 14) : leaf_8.status;
				TRUE : invalid;
			esac;
		relevant_child_13 := (active_node = 13) ? -1 : -2 ;
		resume_relevant_child_13 := (resume_from_node_0 = 13) ? TRUE : FALSE ;
		relevant_child_14 := (active_node = 14) ? -1 : -2 ;
		resume_relevant_child_14 := (resume_from_node_0 = 14) ? TRUE : FALSE ;
		last_child_0 := 8;
		last_child_1 := 5;
		last_child_2 := 4;
		last_child_5 := 7;
		last_child_8 := 12;
		last_child_9 := 11;
		last_child_12 := 14;
	VAR
		active_node : {-2, -1,3, 4, 6, 7, 10, 11, 13, 14};
		random_status : {running, success, failure};
		node_names : define_nodes;
		resume_from_node_0 : {0, 4, 6, 7, 11, 13, 14};
		example_5_sel1 : node_selector(relevant_child_0, relevant_status_0, last_child_0);
		seq1 : node_sequence(relevant_child_1, relevant_status_1, last_child_1);
		seq3 : node_sequence(relevant_child_2, relevant_status_2, last_child_2);
		leaf_1 : node_default(active_node, 3, random_status);
		leaf_2 : node_default(active_node, 4, random_status);
		seq4 : node_sequence(relevant_child_5, relevant_status_5, last_child_5);
		leaf_3 : node_default(active_node, 6, random_status);
		leaf_4 : node_default(active_node, 7, random_status);
		seq2 : node_sequence(relevant_child_8, relevant_status_8, last_child_8);
		seq5 : node_sequence(relevant_child_9, relevant_status_9, last_child_9);
		leaf_5 : node_default(active_node, 10, random_status);
		leaf_6 : node_default(active_node, 11, random_status);
		seq6 : node_sequence(relevant_child_12, relevant_status_12, last_child_12);
		leaf_7 : node_default(active_node, 13, random_status);
		leaf_8 : node_default(active_node, 14, random_status);
	INVAR
		active_node = -1 -> random_status = running;
	ASSIGN
		init(active_node) := -1;
		init(resume_from_node_0) := 0;
		next(active_node) :=
			case
				(active_node = -2) : -2;
				(active_node = -1) : next_node[0];
				TRUE : next_node[active_node];
			esac;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				(statuses[14] = running) : 14;
				(statuses[13] = running) : 13;
				(statuses[11] = running) : 11;
				(statuses[7] = running) : 7;
				(statuses[6] = running) : 6;
				(statuses[4] = running) : 4;
				(resume_from_node_0 = 4) & !(next(relevant_child_4) = -2) : 0;
				(resume_from_node_0 = 6) & !(next(relevant_child_6) = -2) : 0;
				(resume_from_node_0 = 7) & !(next(relevant_child_7) = -2) : 0;
				(resume_from_node_0 = 11) & !(next(relevant_child_11) = -2) : 0;
				(resume_from_node_0 = 13) & !(next(relevant_child_13) = -2) : 0;
				(resume_from_node_0 = 14) & !(next(relevant_child_14) = -2) : 0;
				(statuses[max(0, resume_from_node_0)] in {success, failure}) : 0;
				TRUE : resume_from_node_0;
			esac;
MODULE node_sequence(relevant_child, relevant_status, last_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(last_child = -2) : success;
				(relevant_child <= 0) : invalid;
				(relevant_status = running) : running;
				(relevant_status = failure) : failure;
				(last_child = relevant_child) & (relevant_status = success) : success;
				TRUE : invalid;
			esac;
MODULE node_selector(relevant_child, relevant_status, last_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(last_child = -2) : failure;
				(relevant_child <= 0) : invalid;
				(relevant_status = running) : running;
				(relevant_status = success) : success;
				(last_child = relevant_child) & (relevant_status = failure) : failure;
				TRUE : invalid;
			esac;
MODULE node_default(active_node, id, random_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(active_node = id) : random_status;
				TRUE : invalid;
			esac;
MODULE define_nodes
	DEFINE
		example_5_sel1 := 0;
		seq1 := 1;
		seq3 := 2;
		leaf_1 := 3;
		leaf_2 := 4;
		seq4 := 5;
		leaf_3 := 6;
		leaf_4 := 7;
		seq2 := 8;
		seq5 := 9;
		leaf_5 := 10;
		leaf_6 := 11;
		seq6 := 12;
		leaf_7 := 13;
		leaf_8 := 14;
