MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [example_7_sel1.status, seq1.status, leaf_1.status, leaf_2.status, leaf_3.status, leaf_4.status, seq2.status, leaf_5.status, sel2.status, leaf_6.status, seq4.status, leaf_7.status, leaf_8.status, seq3.status, leaf_9.status, leaf_10.status];
		next_node := [ascent_from_0, ascent_from_1, ascent_from_2, ascent_from_3, ascent_from_4, ascent_from_5, ascent_from_6, ascent_from_7, ascent_from_8, ascent_from_9, ascent_from_10, ascent_from_11, ascent_from_12, ascent_from_13, ascent_from_14, ascent_from_15];
		descent_from_0 := 
			case
				(active_node <1) : descent_from_1;
				(active_node <6) : descent_from_6;
				TRUE : -2;
			esac;
		descent_from_1 := 
			case
				(active_node <2) & (resume_relevant_child_2) : descent_from_2;
				(active_node <3) & (resume_relevant_child_3) : descent_from_3;
				(active_node <4) & (resume_relevant_child_4) : descent_from_4;
				(active_node <5) & (resume_relevant_child_5) : descent_from_5;
				(active_node <2) : descent_from_2;
				(active_node <3) : descent_from_3;
				(active_node <4) : descent_from_4;
				(active_node <5) : descent_from_5;
				TRUE : -2;
			esac;
		descent_from_2 := 2;
		descent_from_3 := 3;
		descent_from_4 := 4;
		descent_from_5 := 5;
		descent_from_6 := 
			case
				(active_node <7) & (resume_relevant_child_7) : descent_from_7;
				(active_node <8) & (resume_relevant_child_8) : descent_from_8;
				(active_node <13) & (resume_relevant_child_13) : descent_from_13;
				(active_node <7) : descent_from_7;
				(active_node <8) : descent_from_8;
				(active_node <13) : descent_from_13;
				TRUE : -2;
			esac;
		descent_from_7 := 7;
		descent_from_8 := 
			case
				(active_node <9) : descent_from_9;
				(active_node <10) : descent_from_10;
				TRUE : -2;
			esac;
		descent_from_9 := 9;
		descent_from_10 := 
			case
				(active_node <11) & (resume_relevant_child_11) : descent_from_11;
				(active_node <12) & (resume_relevant_child_12) : descent_from_12;
				(active_node <11) : descent_from_11;
				(active_node <12) : descent_from_12;
				TRUE : -2;
			esac;
		descent_from_11 := 11;
		descent_from_12 := 12;
		descent_from_13 := 
			case
				(active_node <14) & (resume_relevant_child_14) : descent_from_14;
				(active_node <15) & (resume_relevant_child_15) : descent_from_15;
				(active_node <14) : descent_from_14;
				(active_node <15) : descent_from_15;
				TRUE : -2;
			esac;
		descent_from_14 := 14;
		descent_from_15 := 15;
		ascent_from_0 := 
			case
				(statuses[0] = invalid) : descent_from_0;
				TRUE : -1;
			esac;
		ascent_from_1 := 
			case
				(statuses[1] = invalid) : descent_from_1;
				TRUE : ascent_from_0;
			esac;
		ascent_from_2 := ascent_from_1;
		ascent_from_3 := ascent_from_1;
		ascent_from_4 := ascent_from_1;
		ascent_from_5 := ascent_from_1;
		ascent_from_6 := 
			case
				(statuses[6] = invalid) : descent_from_6;
				TRUE : ascent_from_0;
			esac;
		ascent_from_7 := ascent_from_6;
		ascent_from_8 := 
			case
				(statuses[8] = invalid) : descent_from_8;
				TRUE : ascent_from_6;
			esac;
		ascent_from_9 := ascent_from_8;
		ascent_from_10 := 
			case
				(statuses[10] = invalid) : descent_from_10;
				TRUE : ascent_from_8;
			esac;
		ascent_from_11 := ascent_from_10;
		ascent_from_12 := ascent_from_10;
		ascent_from_13 := 
			case
				(statuses[13] = invalid) : descent_from_13;
				TRUE : ascent_from_6;
			esac;
		ascent_from_14 := ascent_from_13;
		ascent_from_15 := ascent_from_13;
		relevant_child_0 := 
			case
				 !(relevant_child_1 = -2) : 1;
				 !(relevant_child_6 = -2) : 6;
				TRUE : -2;
			esac;
		resume_relevant_child_0 := 
			case
				(resume_from_node_0 = 0) : TRUE ;
				(resume_relevant_child_1) : TRUE;
				(resume_relevant_child_6) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_0 := 
			case
				(relevant_child_0 = 1) : seq1.status;
				(relevant_child_0 = 6) : seq2.status;
				TRUE : invalid;
			esac;
		relevant_child_1 := 
			case
				 !(relevant_child_2 = -2) : 2;
				 !(relevant_child_3 = -2) : 3;
				 !(relevant_child_4 = -2) : 4;
				 !(relevant_child_5 = -2) : 5;
				TRUE : -2;
			esac;
		resume_relevant_child_1 := 
			case
				(resume_from_node_0 = 1) : TRUE ;
				(resume_relevant_child_2) : TRUE;
				(resume_relevant_child_3) : TRUE;
				(resume_relevant_child_4) : TRUE;
				(resume_relevant_child_5) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_1 := 
			case
				(relevant_child_1 = 2) : leaf_1.status;
				(relevant_child_1 = 3) : leaf_2.status;
				(relevant_child_1 = 4) : leaf_3.status;
				(relevant_child_1 = 5) : leaf_4.status;
				TRUE : invalid;
			esac;
		relevant_child_2 := (active_node = 2) ? -1 : -2 ;
		resume_relevant_child_2 := (resume_from_node_0 = 2) ? TRUE : FALSE ;
		relevant_child_3 := (active_node = 3) ? -1 : -2 ;
		resume_relevant_child_3 := (resume_from_node_0 = 3) ? TRUE : FALSE ;
		relevant_child_4 := (active_node = 4) ? -1 : -2 ;
		resume_relevant_child_4 := (resume_from_node_0 = 4) ? TRUE : FALSE ;
		relevant_child_5 := (active_node = 5) ? -1 : -2 ;
		resume_relevant_child_5 := (resume_from_node_0 = 5) ? TRUE : FALSE ;
		relevant_child_6 := 
			case
				 !(relevant_child_7 = -2) : 7;
				 !(relevant_child_8 = -2) : 8;
				 !(relevant_child_13 = -2) : 13;
				TRUE : -2;
			esac;
		resume_relevant_child_6 := 
			case
				(resume_from_node_0 = 6) : TRUE ;
				(resume_relevant_child_7) : TRUE;
				(resume_relevant_child_8) : TRUE;
				(resume_relevant_child_13) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_6 := 
			case
				(relevant_child_6 = 7) : leaf_5.status;
				(relevant_child_6 = 8) : sel2.status;
				(relevant_child_6 = 13) : seq3.status;
				TRUE : invalid;
			esac;
		relevant_child_7 := (active_node = 7) ? -1 : -2 ;
		resume_relevant_child_7 := (resume_from_node_0 = 7) ? TRUE : FALSE ;
		relevant_child_8 := 
			case
				 !(relevant_child_9 = -2) : 9;
				 !(relevant_child_10 = -2) : 10;
				TRUE : -2;
			esac;
		resume_relevant_child_8 := 
			case
				(resume_from_node_0 = 8) : TRUE ;
				(resume_relevant_child_9) : TRUE;
				(resume_relevant_child_10) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_8 := 
			case
				(relevant_child_8 = 9) : leaf_6.status;
				(relevant_child_8 = 10) : seq4.status;
				TRUE : invalid;
			esac;
		relevant_child_9 := (active_node = 9) ? -1 : -2 ;
		resume_relevant_child_9 := (resume_from_node_0 = 9) ? TRUE : FALSE ;
		relevant_child_10 := 
			case
				 !(relevant_child_11 = -2) : 11;
				 !(relevant_child_12 = -2) : 12;
				TRUE : -2;
			esac;
		resume_relevant_child_10 := 
			case
				(resume_from_node_0 = 10) : TRUE ;
				(resume_relevant_child_11) : TRUE;
				(resume_relevant_child_12) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_10 := 
			case
				(relevant_child_10 = 11) : leaf_7.status;
				(relevant_child_10 = 12) : leaf_8.status;
				TRUE : invalid;
			esac;
		relevant_child_11 := (active_node = 11) ? -1 : -2 ;
		resume_relevant_child_11 := (resume_from_node_0 = 11) ? TRUE : FALSE ;
		relevant_child_12 := (active_node = 12) ? -1 : -2 ;
		resume_relevant_child_12 := (resume_from_node_0 = 12) ? TRUE : FALSE ;
		relevant_child_13 := 
			case
				 !(relevant_child_14 = -2) : 14;
				 !(relevant_child_15 = -2) : 15;
				TRUE : -2;
			esac;
		resume_relevant_child_13 := 
			case
				(resume_from_node_0 = 13) : TRUE ;
				(resume_relevant_child_14) : TRUE;
				(resume_relevant_child_15) : TRUE;
				TRUE : FALSE;
			esac;
		relevant_status_13 := 
			case
				(relevant_child_13 = 14) : leaf_9.status;
				(relevant_child_13 = 15) : leaf_10.status;
				TRUE : invalid;
			esac;
		relevant_child_14 := (active_node = 14) ? -1 : -2 ;
		resume_relevant_child_14 := (resume_from_node_0 = 14) ? TRUE : FALSE ;
		relevant_child_15 := (active_node = 15) ? -1 : -2 ;
		resume_relevant_child_15 := (resume_from_node_0 = 15) ? TRUE : FALSE ;
		last_child_0 := 6;
		last_child_8 := 10;
		last_child_1 := 5;
		last_child_10 := 12;
		last_child_13 := 15;
		last_child_6 := 13;
	VAR
		active_node : {-2, -1,2, 3, 4, 5, 7, 9, 11, 12, 14, 15};
		random_status : {running, success, failure};
		node_names : define_nodes;
		resume_from_node_0 : {0, 3, 4, 5, 8, 12, 14, 15};
		example_7_sel1 : node_selector(relevant_child_0, relevant_status_0, last_child_0);
		seq1 : node_sequence(relevant_child_1, relevant_status_1, last_child_1);
		leaf_1 : node_default(active_node, 2, random_status);
		leaf_2 : node_default(active_node, 3, random_status);
		leaf_3 : node_default(active_node, 4, random_status);
		leaf_4 : node_default(active_node, 5, random_status);
		seq2 : node_sequence(relevant_child_6, relevant_status_6, last_child_6);
		leaf_5 : node_default(active_node, 7, random_status);
		sel2 : node_selector(relevant_child_8, relevant_status_8, last_child_8);
		leaf_6 : node_default(active_node, 9, random_status);
		seq4 : node_sequence(relevant_child_10, relevant_status_10, last_child_10);
		leaf_7 : node_default(active_node, 11, random_status);
		leaf_8 : node_default(active_node, 12, random_status);
		seq3 : node_sequence(relevant_child_13, relevant_status_13, last_child_13);
		leaf_9 : node_default(active_node, 14, random_status);
		leaf_10 : node_default(active_node, 15, random_status);
	INVAR
		active_node = -1 -> random_status = running;
	ASSIGN
		init(active_node) := -1;
		init(resume_from_node_0) := 0;
		next(active_node) :=
			case
				(active_node = -2) : -2;
				(active_node = -1) : next_node[0];
				TRUE : next_node[active_node];
			esac;
		next(resume_from_node_0) := 
			case
				(statuses[0] in {success, failure}) : 0;
				(statuses[15] = running) : 15;
				(statuses[14] = running) : 14;
				(statuses[12] = running) : 12;
				(statuses[8] = running) : 8;
				(statuses[5] = running) : 5;
				(statuses[4] = running) : 4;
				(statuses[3] = running) : 3;
				(resume_from_node_0 = 3) & !(next(relevant_child_3) = -2) : 0;
				(resume_from_node_0 = 4) & !(next(relevant_child_4) = -2) : 0;
				(resume_from_node_0 = 5) & !(next(relevant_child_5) = -2) : 0;
				(resume_from_node_0 = 8) & !(next(relevant_child_8) = -2) : 0;
				(resume_from_node_0 = 12) & !(next(relevant_child_12) = -2) : 0;
				(resume_from_node_0 = 14) & !(next(relevant_child_14) = -2) : 0;
				(resume_from_node_0 = 15) & !(next(relevant_child_15) = -2) : 0;
				(statuses[max(0, resume_from_node_0)] in {success, failure}) : 0;
				TRUE : resume_from_node_0;
			esac;
MODULE node_selector(relevant_child, relevant_status, last_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(last_child = -2) : failure;
				(relevant_child <= 0) : invalid;
				(relevant_status = running) : running;
				(relevant_status = success) : success;
				(last_child = relevant_child) & (relevant_status = failure) : failure;
				TRUE : invalid;
			esac;
MODULE node_sequence(relevant_child, relevant_status, last_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(last_child = -2) : success;
				(relevant_child <= 0) : invalid;
				(relevant_status = running) : running;
				(relevant_status = failure) : failure;
				(last_child = relevant_child) & (relevant_status = success) : success;
				TRUE : invalid;
			esac;
MODULE node_default(active_node, id, random_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				(active_node = id) : random_status;
				TRUE : invalid;
			esac;
MODULE define_nodes
	DEFINE
		example_7_sel1 := 0;
		seq1 := 1;
		leaf_1 := 2;
		leaf_2 := 3;
		leaf_3 := 4;
		leaf_4 := 5;
		seq2 := 6;
		leaf_5 := 7;
		sel2 := 8;
		leaf_6 := 9;
		seq4 := 10;
		leaf_7 := 11;
		leaf_8 := 12;
		seq3 := 13;
		leaf_9 := 14;
		leaf_10 := 15;
