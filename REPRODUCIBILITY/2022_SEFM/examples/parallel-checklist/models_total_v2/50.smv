MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [linkPar48.status, linkPar46.status, linkPar42.status, linkPar34.status, linkPar18.status, sel36.status, safety_check36.status, backup36.status, sel37.status, safety_check37.status, backup37.status, linkPar19.status, sel38.status, safety_check38.status, backup38.status, sel39.status, safety_check39.status, backup39.status, linkPar35.status, linkPar20.status, sel40.status, safety_check40.status, backup40.status, sel41.status, safety_check41.status, backup41.status, linkPar21.status, sel42.status, safety_check42.status, backup42.status, sel43.status, safety_check43.status, backup43.status, linkPar43.status, linkPar36.status, linkPar22.status, sel44.status, safety_check44.status, backup44.status, sel45.status, safety_check45.status, backup45.status, linkPar23.status, sel46.status, safety_check46.status, backup46.status, sel47.status, safety_check47.status, backup47.status, linkPar37.status, linkPar24.status, sel48.status, safety_check48.status, backup48.status, sel49.status, safety_check49.status, backup49.status, linkPar25.status, linkPar0.status, sel0.status, safety_check0.status, backup0.status, sel1.status, safety_check1.status, backup1.status, linkPar1.status, sel2.status, safety_check2.status, backup2.status, sel3.status, safety_check3.status, backup3.status, linkPar47.status, linkPar44.status, linkPar38.status, linkPar26.status, linkPar2.status, sel4.status, safety_check4.status, backup4.status, sel5.status, safety_check5.status, backup5.status, linkPar3.status, sel6.status, safety_check6.status, backup6.status, sel7.status, safety_check7.status, backup7.status, linkPar27.status, linkPar4.status, sel8.status, safety_check8.status, backup8.status, sel9.status, safety_check9.status, backup9.status, linkPar5.status, sel10.status, safety_check10.status, backup10.status, sel11.status, safety_check11.status, backup11.status, linkPar39.status, linkPar28.status, linkPar6.status, sel12.status, safety_check12.status, backup12.status, sel13.status, safety_check13.status, backup13.status, linkPar7.status, sel14.status, safety_check14.status, backup14.status, sel15.status, safety_check15.status, backup15.status, linkPar29.status, linkPar8.status, sel16.status, safety_check16.status, backup16.status, sel17.status, safety_check17.status, backup17.status, linkPar9.status, sel18.status, safety_check18.status, backup18.status, sel19.status, safety_check19.status, backup19.status, linkPar45.status, linkPar40.status, linkPar30.status, linkPar10.status, sel20.status, safety_check20.status, backup20.status, sel21.status, safety_check21.status, backup21.status, linkPar11.status, sel22.status, safety_check22.status, backup22.status, sel23.status, safety_check23.status, backup23.status, linkPar31.status, linkPar12.status, sel24.status, safety_check24.status, backup24.status, sel25.status, safety_check25.status, backup25.status, linkPar13.status, sel26.status, safety_check26.status, backup26.status, sel27.status, safety_check27.status, backup27.status, linkPar41.status, linkPar32.status, linkPar14.status, sel28.status, safety_check28.status, backup28.status, sel29.status, safety_check29.status, backup29.status, linkPar15.status, sel30.status, safety_check30.status, backup30.status, sel31.status, safety_check31.status, backup31.status, linkPar33.status, linkPar16.status, sel32.status, safety_check32.status, backup32.status, sel33.status, safety_check33.status, backup33.status, linkPar17.status, sel34.status, safety_check34.status, backup34.status, sel35.status, safety_check35.status, backup35.status];
		resume_from_node_0 := -3;
		resume_from_node_1 := -3;
		resume_from_node_2 := -3;
		resume_from_node_3 := -3;
		resume_from_node_4 := -3;
		resume_from_node_5 := -3;
		resume_from_node_8 := -3;
		resume_from_node_11 := -3;
		resume_from_node_12 := -3;
		resume_from_node_15 := -3;
		resume_from_node_18 := -3;
		resume_from_node_19 := -3;
		resume_from_node_20 := -3;
		resume_from_node_23 := -3;
		resume_from_node_26 := -3;
		resume_from_node_27 := -3;
		resume_from_node_30 := -3;
		resume_from_node_33 := -3;
		resume_from_node_34 := -3;
		resume_from_node_35 := -3;
		resume_from_node_36 := -3;
		resume_from_node_39 := -3;
		resume_from_node_42 := -3;
		resume_from_node_43 := -3;
		resume_from_node_46 := -3;
		resume_from_node_49 := -3;
		resume_from_node_50 := -3;
		resume_from_node_51 := -3;
		resume_from_node_54 := -3;
		resume_from_node_57 := -3;
		resume_from_node_58 := -3;
		resume_from_node_59 := -3;
		resume_from_node_62 := -3;
		resume_from_node_65 := -3;
		resume_from_node_66 := -3;
		resume_from_node_69 := -3;
		resume_from_node_72 := -3;
		resume_from_node_73 := -3;
		resume_from_node_74 := -3;
		resume_from_node_75 := -3;
		resume_from_node_76 := -3;
		resume_from_node_77 := -3;
		resume_from_node_80 := -3;
		resume_from_node_83 := -3;
		resume_from_node_84 := -3;
		resume_from_node_87 := -3;
		resume_from_node_90 := -3;
		resume_from_node_91 := -3;
		resume_from_node_92 := -3;
		resume_from_node_95 := -3;
		resume_from_node_98 := -3;
		resume_from_node_99 := -3;
		resume_from_node_102 := -3;
		resume_from_node_105 := -3;
		resume_from_node_106 := -3;
		resume_from_node_107 := -3;
		resume_from_node_108 := -3;
		resume_from_node_111 := -3;
		resume_from_node_114 := -3;
		resume_from_node_115 := -3;
		resume_from_node_118 := -3;
		resume_from_node_121 := -3;
		resume_from_node_122 := -3;
		resume_from_node_123 := -3;
		resume_from_node_126 := -3;
		resume_from_node_129 := -3;
		resume_from_node_130 := -3;
		resume_from_node_133 := -3;
		resume_from_node_136 := -3;
		resume_from_node_137 := -3;
		resume_from_node_138 := -3;
		resume_from_node_139 := -3;
		resume_from_node_140 := -3;
		resume_from_node_143 := -3;
		resume_from_node_146 := -3;
		resume_from_node_147 := -3;
		resume_from_node_150 := -3;
		resume_from_node_153 := -3;
		resume_from_node_154 := -3;
		resume_from_node_155 := -3;
		resume_from_node_158 := -3;
		resume_from_node_161 := -3;
		resume_from_node_162 := -3;
		resume_from_node_165 := -3;
		resume_from_node_168 := -3;
		resume_from_node_169 := -3;
		resume_from_node_170 := -3;
		resume_from_node_171 := -3;
		resume_from_node_174 := -3;
		resume_from_node_177 := -3;
		resume_from_node_178 := -3;
		resume_from_node_181 := -3;
		resume_from_node_184 := -3;
		resume_from_node_185 := -3;
		resume_from_node_186 := -3;
		resume_from_node_189 := -3;
		resume_from_node_192 := -3;
		resume_from_node_193 := -3;
		resume_from_node_196 := -3;
		linkPar48.active := TRUE;
		parallel_skip_0 := [resume_from_node_1, resume_from_node_72];
		parallel_skip_1 := [resume_from_node_2, resume_from_node_33];
		parallel_skip_2 := [resume_from_node_3, resume_from_node_18];
		parallel_skip_3 := [resume_from_node_4, resume_from_node_11];
		parallel_skip_4 := [resume_from_node_5, resume_from_node_8];
		parallel_skip_11 := [resume_from_node_12, resume_from_node_15];
		parallel_skip_18 := [resume_from_node_19, resume_from_node_26];
		parallel_skip_19 := [resume_from_node_20, resume_from_node_23];
		parallel_skip_26 := [resume_from_node_27, resume_from_node_30];
		parallel_skip_33 := [resume_from_node_34, resume_from_node_49];
		parallel_skip_34 := [resume_from_node_35, resume_from_node_42];
		parallel_skip_35 := [resume_from_node_36, resume_from_node_39];
		parallel_skip_42 := [resume_from_node_43, resume_from_node_46];
		parallel_skip_49 := [resume_from_node_50, resume_from_node_57];
		parallel_skip_50 := [resume_from_node_51, resume_from_node_54];
		parallel_skip_57 := [resume_from_node_58, resume_from_node_65];
		parallel_skip_58 := [resume_from_node_59, resume_from_node_62];
		parallel_skip_65 := [resume_from_node_66, resume_from_node_69];
		parallel_skip_72 := [resume_from_node_73, resume_from_node_136];
		parallel_skip_73 := [resume_from_node_74, resume_from_node_105];
		parallel_skip_74 := [resume_from_node_75, resume_from_node_90];
		parallel_skip_75 := [resume_from_node_76, resume_from_node_83];
		parallel_skip_76 := [resume_from_node_77, resume_from_node_80];
		parallel_skip_83 := [resume_from_node_84, resume_from_node_87];
		parallel_skip_90 := [resume_from_node_91, resume_from_node_98];
		parallel_skip_91 := [resume_from_node_92, resume_from_node_95];
		parallel_skip_98 := [resume_from_node_99, resume_from_node_102];
		parallel_skip_105 := [resume_from_node_106, resume_from_node_121];
		parallel_skip_106 := [resume_from_node_107, resume_from_node_114];
		parallel_skip_107 := [resume_from_node_108, resume_from_node_111];
		parallel_skip_114 := [resume_from_node_115, resume_from_node_118];
		parallel_skip_121 := [resume_from_node_122, resume_from_node_129];
		parallel_skip_122 := [resume_from_node_123, resume_from_node_126];
		parallel_skip_129 := [resume_from_node_130, resume_from_node_133];
		parallel_skip_136 := [resume_from_node_137, resume_from_node_168];
		parallel_skip_137 := [resume_from_node_138, resume_from_node_153];
		parallel_skip_138 := [resume_from_node_139, resume_from_node_146];
		parallel_skip_139 := [resume_from_node_140, resume_from_node_143];
		parallel_skip_146 := [resume_from_node_147, resume_from_node_150];
		parallel_skip_153 := [resume_from_node_154, resume_from_node_161];
		parallel_skip_154 := [resume_from_node_155, resume_from_node_158];
		parallel_skip_161 := [resume_from_node_162, resume_from_node_165];
		parallel_skip_168 := [resume_from_node_169, resume_from_node_184];
		parallel_skip_169 := [resume_from_node_170, resume_from_node_177];
		parallel_skip_170 := [resume_from_node_171, resume_from_node_174];
		parallel_skip_177 := [resume_from_node_178, resume_from_node_181];
		parallel_skip_184 := [resume_from_node_185, resume_from_node_192];
		parallel_skip_185 := [resume_from_node_186, resume_from_node_189];
		parallel_skip_192 := [resume_from_node_193, resume_from_node_196];
	VAR
		node_names : define_nodes;
		linkPar48 : node_parallel_success_on_all2(linkPar46, linkPar47,  parallel_skip_0);
		linkPar46 : node_parallel_success_on_all2(linkPar42, linkPar43,  parallel_skip_1);
		linkPar42 : node_parallel_success_on_all2(linkPar34, linkPar35,  parallel_skip_2);
		linkPar34 : node_parallel_success_on_all2(linkPar18, linkPar19,  parallel_skip_3);
		linkPar18 : node_parallel_success_on_all2(sel36, sel37,  parallel_skip_4);
		sel36 : node_selector2(safety_check36, backup36);
		safety_check36 : node_non_blocking();
		backup36 : node_success();
		sel37 : node_selector2(safety_check37, backup37);
		safety_check37 : node_non_blocking();
		backup37 : node_success();
		linkPar19 : node_parallel_success_on_all2(sel38, sel39,  parallel_skip_11);
		sel38 : node_selector2(safety_check38, backup38);
		safety_check38 : node_non_blocking();
		backup38 : node_success();
		sel39 : node_selector2(safety_check39, backup39);
		safety_check39 : node_non_blocking();
		backup39 : node_success();
		linkPar35 : node_parallel_success_on_all2(linkPar20, linkPar21,  parallel_skip_18);
		linkPar20 : node_parallel_success_on_all2(sel40, sel41,  parallel_skip_19);
		sel40 : node_selector2(safety_check40, backup40);
		safety_check40 : node_non_blocking();
		backup40 : node_success();
		sel41 : node_selector2(safety_check41, backup41);
		safety_check41 : node_non_blocking();
		backup41 : node_success();
		linkPar21 : node_parallel_success_on_all2(sel42, sel43,  parallel_skip_26);
		sel42 : node_selector2(safety_check42, backup42);
		safety_check42 : node_non_blocking();
		backup42 : node_success();
		sel43 : node_selector2(safety_check43, backup43);
		safety_check43 : node_non_blocking();
		backup43 : node_success();
		linkPar43 : node_parallel_success_on_all2(linkPar36, linkPar37,  parallel_skip_33);
		linkPar36 : node_parallel_success_on_all2(linkPar22, linkPar23,  parallel_skip_34);
		linkPar22 : node_parallel_success_on_all2(sel44, sel45,  parallel_skip_35);
		sel44 : node_selector2(safety_check44, backup44);
		safety_check44 : node_non_blocking();
		backup44 : node_success();
		sel45 : node_selector2(safety_check45, backup45);
		safety_check45 : node_non_blocking();
		backup45 : node_success();
		linkPar23 : node_parallel_success_on_all2(sel46, sel47,  parallel_skip_42);
		sel46 : node_selector2(safety_check46, backup46);
		safety_check46 : node_non_blocking();
		backup46 : node_success();
		sel47 : node_selector2(safety_check47, backup47);
		safety_check47 : node_non_blocking();
		backup47 : node_success();
		linkPar37 : node_parallel_success_on_all2(linkPar24, linkPar25,  parallel_skip_49);
		linkPar24 : node_parallel_success_on_all2(sel48, sel49,  parallel_skip_50);
		sel48 : node_selector2(safety_check48, backup48);
		safety_check48 : node_non_blocking();
		backup48 : node_success();
		sel49 : node_selector2(safety_check49, backup49);
		safety_check49 : node_non_blocking();
		backup49 : node_success();
		linkPar25 : node_parallel_success_on_all2(linkPar0, linkPar1,  parallel_skip_57);
		linkPar0 : node_parallel_success_on_all2(sel0, sel1,  parallel_skip_58);
		sel0 : node_selector2(safety_check0, backup0);
		safety_check0 : node_non_blocking();
		backup0 : node_success();
		sel1 : node_selector2(safety_check1, backup1);
		safety_check1 : node_non_blocking();
		backup1 : node_success();
		linkPar1 : node_parallel_success_on_all2(sel2, sel3,  parallel_skip_65);
		sel2 : node_selector2(safety_check2, backup2);
		safety_check2 : node_non_blocking();
		backup2 : node_success();
		sel3 : node_selector2(safety_check3, backup3);
		safety_check3 : node_non_blocking();
		backup3 : node_success();
		linkPar47 : node_parallel_success_on_all2(linkPar44, linkPar45,  parallel_skip_72);
		linkPar44 : node_parallel_success_on_all2(linkPar38, linkPar39,  parallel_skip_73);
		linkPar38 : node_parallel_success_on_all2(linkPar26, linkPar27,  parallel_skip_74);
		linkPar26 : node_parallel_success_on_all2(linkPar2, linkPar3,  parallel_skip_75);
		linkPar2 : node_parallel_success_on_all2(sel4, sel5,  parallel_skip_76);
		sel4 : node_selector2(safety_check4, backup4);
		safety_check4 : node_non_blocking();
		backup4 : node_success();
		sel5 : node_selector2(safety_check5, backup5);
		safety_check5 : node_non_blocking();
		backup5 : node_success();
		linkPar3 : node_parallel_success_on_all2(sel6, sel7,  parallel_skip_83);
		sel6 : node_selector2(safety_check6, backup6);
		safety_check6 : node_non_blocking();
		backup6 : node_success();
		sel7 : node_selector2(safety_check7, backup7);
		safety_check7 : node_non_blocking();
		backup7 : node_success();
		linkPar27 : node_parallel_success_on_all2(linkPar4, linkPar5,  parallel_skip_90);
		linkPar4 : node_parallel_success_on_all2(sel8, sel9,  parallel_skip_91);
		sel8 : node_selector2(safety_check8, backup8);
		safety_check8 : node_non_blocking();
		backup8 : node_success();
		sel9 : node_selector2(safety_check9, backup9);
		safety_check9 : node_non_blocking();
		backup9 : node_success();
		linkPar5 : node_parallel_success_on_all2(sel10, sel11,  parallel_skip_98);
		sel10 : node_selector2(safety_check10, backup10);
		safety_check10 : node_non_blocking();
		backup10 : node_success();
		sel11 : node_selector2(safety_check11, backup11);
		safety_check11 : node_non_blocking();
		backup11 : node_success();
		linkPar39 : node_parallel_success_on_all2(linkPar28, linkPar29,  parallel_skip_105);
		linkPar28 : node_parallel_success_on_all2(linkPar6, linkPar7,  parallel_skip_106);
		linkPar6 : node_parallel_success_on_all2(sel12, sel13,  parallel_skip_107);
		sel12 : node_selector2(safety_check12, backup12);
		safety_check12 : node_non_blocking();
		backup12 : node_success();
		sel13 : node_selector2(safety_check13, backup13);
		safety_check13 : node_non_blocking();
		backup13 : node_success();
		linkPar7 : node_parallel_success_on_all2(sel14, sel15,  parallel_skip_114);
		sel14 : node_selector2(safety_check14, backup14);
		safety_check14 : node_non_blocking();
		backup14 : node_success();
		sel15 : node_selector2(safety_check15, backup15);
		safety_check15 : node_non_blocking();
		backup15 : node_success();
		linkPar29 : node_parallel_success_on_all2(linkPar8, linkPar9,  parallel_skip_121);
		linkPar8 : node_parallel_success_on_all2(sel16, sel17,  parallel_skip_122);
		sel16 : node_selector2(safety_check16, backup16);
		safety_check16 : node_non_blocking();
		backup16 : node_success();
		sel17 : node_selector2(safety_check17, backup17);
		safety_check17 : node_non_blocking();
		backup17 : node_success();
		linkPar9 : node_parallel_success_on_all2(sel18, sel19,  parallel_skip_129);
		sel18 : node_selector2(safety_check18, backup18);
		safety_check18 : node_non_blocking();
		backup18 : node_success();
		sel19 : node_selector2(safety_check19, backup19);
		safety_check19 : node_non_blocking();
		backup19 : node_success();
		linkPar45 : node_parallel_success_on_all2(linkPar40, linkPar41,  parallel_skip_136);
		linkPar40 : node_parallel_success_on_all2(linkPar30, linkPar31,  parallel_skip_137);
		linkPar30 : node_parallel_success_on_all2(linkPar10, linkPar11,  parallel_skip_138);
		linkPar10 : node_parallel_success_on_all2(sel20, sel21,  parallel_skip_139);
		sel20 : node_selector2(safety_check20, backup20);
		safety_check20 : node_non_blocking();
		backup20 : node_success();
		sel21 : node_selector2(safety_check21, backup21);
		safety_check21 : node_non_blocking();
		backup21 : node_success();
		linkPar11 : node_parallel_success_on_all2(sel22, sel23,  parallel_skip_146);
		sel22 : node_selector2(safety_check22, backup22);
		safety_check22 : node_non_blocking();
		backup22 : node_success();
		sel23 : node_selector2(safety_check23, backup23);
		safety_check23 : node_non_blocking();
		backup23 : node_success();
		linkPar31 : node_parallel_success_on_all2(linkPar12, linkPar13,  parallel_skip_153);
		linkPar12 : node_parallel_success_on_all2(sel24, sel25,  parallel_skip_154);
		sel24 : node_selector2(safety_check24, backup24);
		safety_check24 : node_non_blocking();
		backup24 : node_success();
		sel25 : node_selector2(safety_check25, backup25);
		safety_check25 : node_non_blocking();
		backup25 : node_success();
		linkPar13 : node_parallel_success_on_all2(sel26, sel27,  parallel_skip_161);
		sel26 : node_selector2(safety_check26, backup26);
		safety_check26 : node_non_blocking();
		backup26 : node_success();
		sel27 : node_selector2(safety_check27, backup27);
		safety_check27 : node_non_blocking();
		backup27 : node_success();
		linkPar41 : node_parallel_success_on_all2(linkPar32, linkPar33,  parallel_skip_168);
		linkPar32 : node_parallel_success_on_all2(linkPar14, linkPar15,  parallel_skip_169);
		linkPar14 : node_parallel_success_on_all2(sel28, sel29,  parallel_skip_170);
		sel28 : node_selector2(safety_check28, backup28);
		safety_check28 : node_non_blocking();
		backup28 : node_success();
		sel29 : node_selector2(safety_check29, backup29);
		safety_check29 : node_non_blocking();
		backup29 : node_success();
		linkPar15 : node_parallel_success_on_all2(sel30, sel31,  parallel_skip_177);
		sel30 : node_selector2(safety_check30, backup30);
		safety_check30 : node_non_blocking();
		backup30 : node_success();
		sel31 : node_selector2(safety_check31, backup31);
		safety_check31 : node_non_blocking();
		backup31 : node_success();
		linkPar33 : node_parallel_success_on_all2(linkPar16, linkPar17,  parallel_skip_184);
		linkPar16 : node_parallel_success_on_all2(sel32, sel33,  parallel_skip_185);
		sel32 : node_selector2(safety_check32, backup32);
		safety_check32 : node_non_blocking();
		backup32 : node_success();
		sel33 : node_selector2(safety_check33, backup33);
		safety_check33 : node_non_blocking();
		backup33 : node_success();
		linkPar17 : node_parallel_success_on_all2(sel34, sel35,  parallel_skip_192);
		sel34 : node_selector2(safety_check34, backup34);
		safety_check34 : node_non_blocking();
		backup34 : node_success();
		sel35 : node_selector2(safety_check35, backup35);
		safety_check35 : node_non_blocking();
		backup35 : node_success();
	ASSIGN
LTLSPEC G (safety_check0.status = failure -> backup0.status = success);
LTLSPEC G (safety_check0.status = failure -> !(backup0.status = success));
LTLSPEC G (safety_check1.status = failure -> backup1.status = success);
LTLSPEC G (safety_check1.status = failure -> !(backup1.status = success));
LTLSPEC G (safety_check2.status = failure -> backup2.status = success);
LTLSPEC G (safety_check2.status = failure -> !(backup2.status = success));
LTLSPEC G (safety_check3.status = failure -> backup3.status = success);
LTLSPEC G (safety_check3.status = failure -> !(backup3.status = success));
LTLSPEC G (safety_check4.status = failure -> backup4.status = success);
LTLSPEC G (safety_check4.status = failure -> !(backup4.status = success));
LTLSPEC G (safety_check5.status = failure -> backup5.status = success);
LTLSPEC G (safety_check5.status = failure -> !(backup5.status = success));
LTLSPEC G (safety_check6.status = failure -> backup6.status = success);
LTLSPEC G (safety_check6.status = failure -> !(backup6.status = success));
LTLSPEC G (safety_check7.status = failure -> backup7.status = success);
LTLSPEC G (safety_check7.status = failure -> !(backup7.status = success));
LTLSPEC G (safety_check8.status = failure -> backup8.status = success);
LTLSPEC G (safety_check8.status = failure -> !(backup8.status = success));
LTLSPEC G (safety_check9.status = failure -> backup9.status = success);
LTLSPEC G (safety_check9.status = failure -> !(backup9.status = success));
LTLSPEC G (safety_check10.status = failure -> backup10.status = success);
LTLSPEC G (safety_check10.status = failure -> !(backup10.status = success));
LTLSPEC G (safety_check11.status = failure -> backup11.status = success);
LTLSPEC G (safety_check11.status = failure -> !(backup11.status = success));
LTLSPEC G (safety_check12.status = failure -> backup12.status = success);
LTLSPEC G (safety_check12.status = failure -> !(backup12.status = success));
LTLSPEC G (safety_check13.status = failure -> backup13.status = success);
LTLSPEC G (safety_check13.status = failure -> !(backup13.status = success));
LTLSPEC G (safety_check14.status = failure -> backup14.status = success);
LTLSPEC G (safety_check14.status = failure -> !(backup14.status = success));
LTLSPEC G (safety_check15.status = failure -> backup15.status = success);
LTLSPEC G (safety_check15.status = failure -> !(backup15.status = success));
LTLSPEC G (safety_check16.status = failure -> backup16.status = success);
LTLSPEC G (safety_check16.status = failure -> !(backup16.status = success));
LTLSPEC G (safety_check17.status = failure -> backup17.status = success);
LTLSPEC G (safety_check17.status = failure -> !(backup17.status = success));
LTLSPEC G (safety_check18.status = failure -> backup18.status = success);
LTLSPEC G (safety_check18.status = failure -> !(backup18.status = success));
LTLSPEC G (safety_check19.status = failure -> backup19.status = success);
LTLSPEC G (safety_check19.status = failure -> !(backup19.status = success));
LTLSPEC G (safety_check20.status = failure -> backup20.status = success);
LTLSPEC G (safety_check20.status = failure -> !(backup20.status = success));
LTLSPEC G (safety_check21.status = failure -> backup21.status = success);
LTLSPEC G (safety_check21.status = failure -> !(backup21.status = success));
LTLSPEC G (safety_check22.status = failure -> backup22.status = success);
LTLSPEC G (safety_check22.status = failure -> !(backup22.status = success));
LTLSPEC G (safety_check23.status = failure -> backup23.status = success);
LTLSPEC G (safety_check23.status = failure -> !(backup23.status = success));
LTLSPEC G (safety_check24.status = failure -> backup24.status = success);
LTLSPEC G (safety_check24.status = failure -> !(backup24.status = success));
LTLSPEC G (safety_check25.status = failure -> backup25.status = success);
LTLSPEC G (safety_check25.status = failure -> !(backup25.status = success));
LTLSPEC G (safety_check26.status = failure -> backup26.status = success);
LTLSPEC G (safety_check26.status = failure -> !(backup26.status = success));
LTLSPEC G (safety_check27.status = failure -> backup27.status = success);
LTLSPEC G (safety_check27.status = failure -> !(backup27.status = success));
LTLSPEC G (safety_check28.status = failure -> backup28.status = success);
LTLSPEC G (safety_check28.status = failure -> !(backup28.status = success));
LTLSPEC G (safety_check29.status = failure -> backup29.status = success);
LTLSPEC G (safety_check29.status = failure -> !(backup29.status = success));
LTLSPEC G (safety_check30.status = failure -> backup30.status = success);
LTLSPEC G (safety_check30.status = failure -> !(backup30.status = success));
LTLSPEC G (safety_check31.status = failure -> backup31.status = success);
LTLSPEC G (safety_check31.status = failure -> !(backup31.status = success));
LTLSPEC G (safety_check32.status = failure -> backup32.status = success);
LTLSPEC G (safety_check32.status = failure -> !(backup32.status = success));
LTLSPEC G (safety_check33.status = failure -> backup33.status = success);
LTLSPEC G (safety_check33.status = failure -> !(backup33.status = success));
LTLSPEC G (safety_check34.status = failure -> backup34.status = success);
LTLSPEC G (safety_check34.status = failure -> !(backup34.status = success));
LTLSPEC G (safety_check35.status = failure -> backup35.status = success);
LTLSPEC G (safety_check35.status = failure -> !(backup35.status = success));
LTLSPEC G (safety_check36.status = failure -> backup36.status = success);
LTLSPEC G (safety_check36.status = failure -> !(backup36.status = success));
LTLSPEC G (safety_check37.status = failure -> backup37.status = success);
LTLSPEC G (safety_check37.status = failure -> !(backup37.status = success));
LTLSPEC G (safety_check38.status = failure -> backup38.status = success);
LTLSPEC G (safety_check38.status = failure -> !(backup38.status = success));
LTLSPEC G (safety_check39.status = failure -> backup39.status = success);
LTLSPEC G (safety_check39.status = failure -> !(backup39.status = success));
LTLSPEC G (safety_check40.status = failure -> backup40.status = success);
LTLSPEC G (safety_check40.status = failure -> !(backup40.status = success));
LTLSPEC G (safety_check41.status = failure -> backup41.status = success);
LTLSPEC G (safety_check41.status = failure -> !(backup41.status = success));
LTLSPEC G (safety_check42.status = failure -> backup42.status = success);
LTLSPEC G (safety_check42.status = failure -> !(backup42.status = success));
LTLSPEC G (safety_check43.status = failure -> backup43.status = success);
LTLSPEC G (safety_check43.status = failure -> !(backup43.status = success));
LTLSPEC G (safety_check44.status = failure -> backup44.status = success);
LTLSPEC G (safety_check44.status = failure -> !(backup44.status = success));
LTLSPEC G (safety_check45.status = failure -> backup45.status = success);
LTLSPEC G (safety_check45.status = failure -> !(backup45.status = success));
LTLSPEC G (safety_check46.status = failure -> backup46.status = success);
LTLSPEC G (safety_check46.status = failure -> !(backup46.status = success));
LTLSPEC G (safety_check47.status = failure -> backup47.status = success);
LTLSPEC G (safety_check47.status = failure -> !(backup47.status = success));
LTLSPEC G (safety_check48.status = failure -> backup48.status = success);
LTLSPEC G (safety_check48.status = failure -> !(backup48.status = success));
LTLSPEC G (safety_check49.status = failure -> backup49.status = success);
LTLSPEC G (safety_check49.status = failure -> !(backup49.status = success));


MODULE node_success()
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(active) : invalid;
				TRUE : success;
			esac;
MODULE node_non_blocking()
	CONSTANTS
		success, failure, running, invalid;
	VAR
		input_status : {success, failure};
	DEFINE
		status := active ? input_status : invalid;
MODULE node_selector2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(child_0.status = failure) : child_0.status;
				!(child_1.status = failure) : child_1.status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
MODULE node_parallel_success_on_all2(child_0, child_1, skip_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(child_0.status = failure) : failure;
				(child_1.status = failure) : failure;
				!(child_0.status = success) : child_0.status;
				!(child_1.status = success) : child_1.status;
				TRUE : success;
			esac;
		child_0.active := active & !(skip_child[0] = -2);
		child_1.active := active & !(skip_child[1] = -2);
MODULE define_nodes
	DEFINE
		linkPar48 := 0;
		linkPar46 := 1;
		linkPar42 := 2;
		linkPar34 := 3;
		linkPar18 := 4;
		sel36 := 5;
		safety_check36 := 6;
		backup36 := 7;
		sel37 := 8;
		safety_check37 := 9;
		backup37 := 10;
		linkPar19 := 11;
		sel38 := 12;
		safety_check38 := 13;
		backup38 := 14;
		sel39 := 15;
		safety_check39 := 16;
		backup39 := 17;
		linkPar35 := 18;
		linkPar20 := 19;
		sel40 := 20;
		safety_check40 := 21;
		backup40 := 22;
		sel41 := 23;
		safety_check41 := 24;
		backup41 := 25;
		linkPar21 := 26;
		sel42 := 27;
		safety_check42 := 28;
		backup42 := 29;
		sel43 := 30;
		safety_check43 := 31;
		backup43 := 32;
		linkPar43 := 33;
		linkPar36 := 34;
		linkPar22 := 35;
		sel44 := 36;
		safety_check44 := 37;
		backup44 := 38;
		sel45 := 39;
		safety_check45 := 40;
		backup45 := 41;
		linkPar23 := 42;
		sel46 := 43;
		safety_check46 := 44;
		backup46 := 45;
		sel47 := 46;
		safety_check47 := 47;
		backup47 := 48;
		linkPar37 := 49;
		linkPar24 := 50;
		sel48 := 51;
		safety_check48 := 52;
		backup48 := 53;
		sel49 := 54;
		safety_check49 := 55;
		backup49 := 56;
		linkPar25 := 57;
		linkPar0 := 58;
		sel0 := 59;
		safety_check0 := 60;
		backup0 := 61;
		sel1 := 62;
		safety_check1 := 63;
		backup1 := 64;
		linkPar1 := 65;
		sel2 := 66;
		safety_check2 := 67;
		backup2 := 68;
		sel3 := 69;
		safety_check3 := 70;
		backup3 := 71;
		linkPar47 := 72;
		linkPar44 := 73;
		linkPar38 := 74;
		linkPar26 := 75;
		linkPar2 := 76;
		sel4 := 77;
		safety_check4 := 78;
		backup4 := 79;
		sel5 := 80;
		safety_check5 := 81;
		backup5 := 82;
		linkPar3 := 83;
		sel6 := 84;
		safety_check6 := 85;
		backup6 := 86;
		sel7 := 87;
		safety_check7 := 88;
		backup7 := 89;
		linkPar27 := 90;
		linkPar4 := 91;
		sel8 := 92;
		safety_check8 := 93;
		backup8 := 94;
		sel9 := 95;
		safety_check9 := 96;
		backup9 := 97;
		linkPar5 := 98;
		sel10 := 99;
		safety_check10 := 100;
		backup10 := 101;
		sel11 := 102;
		safety_check11 := 103;
		backup11 := 104;
		linkPar39 := 105;
		linkPar28 := 106;
		linkPar6 := 107;
		sel12 := 108;
		safety_check12 := 109;
		backup12 := 110;
		sel13 := 111;
		safety_check13 := 112;
		backup13 := 113;
		linkPar7 := 114;
		sel14 := 115;
		safety_check14 := 116;
		backup14 := 117;
		sel15 := 118;
		safety_check15 := 119;
		backup15 := 120;
		linkPar29 := 121;
		linkPar8 := 122;
		sel16 := 123;
		safety_check16 := 124;
		backup16 := 125;
		sel17 := 126;
		safety_check17 := 127;
		backup17 := 128;
		linkPar9 := 129;
		sel18 := 130;
		safety_check18 := 131;
		backup18 := 132;
		sel19 := 133;
		safety_check19 := 134;
		backup19 := 135;
		linkPar45 := 136;
		linkPar40 := 137;
		linkPar30 := 138;
		linkPar10 := 139;
		sel20 := 140;
		safety_check20 := 141;
		backup20 := 142;
		sel21 := 143;
		safety_check21 := 144;
		backup21 := 145;
		linkPar11 := 146;
		sel22 := 147;
		safety_check22 := 148;
		backup22 := 149;
		sel23 := 150;
		safety_check23 := 151;
		backup23 := 152;
		linkPar31 := 153;
		linkPar12 := 154;
		sel24 := 155;
		safety_check24 := 156;
		backup24 := 157;
		sel25 := 158;
		safety_check25 := 159;
		backup25 := 160;
		linkPar13 := 161;
		sel26 := 162;
		safety_check26 := 163;
		backup26 := 164;
		sel27 := 165;
		safety_check27 := 166;
		backup27 := 167;
		linkPar41 := 168;
		linkPar32 := 169;
		linkPar14 := 170;
		sel28 := 171;
		safety_check28 := 172;
		backup28 := 173;
		sel29 := 174;
		safety_check29 := 175;
		backup29 := 176;
		linkPar15 := 177;
		sel30 := 178;
		safety_check30 := 179;
		backup30 := 180;
		sel31 := 181;
		safety_check31 := 182;
		backup31 := 183;
		linkPar33 := 184;
		linkPar16 := 185;
		sel32 := 186;
		safety_check32 := 187;
		backup32 := 188;
		sel33 := 189;
		safety_check33 := 190;
		backup33 := 191;
		linkPar17 := 192;
		sel34 := 193;
		safety_check34 := 194;
		backup34 := 195;
		sel35 := 196;
		safety_check35 := 197;
		backup35 := 198;
