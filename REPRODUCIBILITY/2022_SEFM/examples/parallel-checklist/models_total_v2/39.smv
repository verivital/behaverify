MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [linkPar37.status, linkPar35.status, linkPar31.status, linkPar23.status, linkPar7.status, sel14.status, safety_check14.status, backup14.status, sel15.status, safety_check15.status, backup15.status, linkPar8.status, sel16.status, safety_check16.status, backup16.status, sel17.status, safety_check17.status, backup17.status, linkPar24.status, linkPar9.status, sel18.status, safety_check18.status, backup18.status, sel19.status, safety_check19.status, backup19.status, linkPar10.status, sel20.status, safety_check20.status, backup20.status, sel21.status, safety_check21.status, backup21.status, linkPar32.status, linkPar25.status, linkPar11.status, sel22.status, safety_check22.status, backup22.status, sel23.status, safety_check23.status, backup23.status, linkPar12.status, sel24.status, safety_check24.status, backup24.status, sel25.status, safety_check25.status, backup25.status, linkPar26.status, linkPar13.status, sel26.status, safety_check26.status, backup26.status, sel27.status, safety_check27.status, backup27.status, linkPar14.status, sel28.status, safety_check28.status, backup28.status, sel29.status, safety_check29.status, backup29.status, linkPar36.status, linkPar33.status, linkPar27.status, linkPar15.status, sel30.status, safety_check30.status, backup30.status, sel31.status, safety_check31.status, backup31.status, linkPar16.status, sel32.status, safety_check32.status, backup32.status, sel33.status, safety_check33.status, backup33.status, linkPar28.status, linkPar17.status, sel34.status, safety_check34.status, backup34.status, sel35.status, safety_check35.status, backup35.status, linkPar18.status, sel36.status, safety_check36.status, backup36.status, sel37.status, safety_check37.status, backup37.status, linkPar34.status, linkPar29.status, linkPar19.status, sel38.status, safety_check38.status, backup38.status, linkPar0.status, sel0.status, safety_check0.status, backup0.status, sel1.status, safety_check1.status, backup1.status, linkPar20.status, linkPar1.status, sel2.status, safety_check2.status, backup2.status, sel3.status, safety_check3.status, backup3.status, linkPar2.status, sel4.status, safety_check4.status, backup4.status, sel5.status, safety_check5.status, backup5.status, linkPar30.status, linkPar21.status, linkPar3.status, sel6.status, safety_check6.status, backup6.status, sel7.status, safety_check7.status, backup7.status, linkPar4.status, sel8.status, safety_check8.status, backup8.status, sel9.status, safety_check9.status, backup9.status, linkPar22.status, linkPar5.status, sel10.status, safety_check10.status, backup10.status, sel11.status, safety_check11.status, backup11.status, linkPar6.status, sel12.status, safety_check12.status, backup12.status, sel13.status, safety_check13.status, backup13.status];
		resume_from_node_0 := -3;
		resume_from_node_1 := -3;
		resume_from_node_2 := -3;
		resume_from_node_3 := -3;
		resume_from_node_4 := -3;
		resume_from_node_5 := -3;
		resume_from_node_8 := -3;
		resume_from_node_11 := -3;
		resume_from_node_12 := -3;
		resume_from_node_15 := -3;
		resume_from_node_18 := -3;
		resume_from_node_19 := -3;
		resume_from_node_20 := -3;
		resume_from_node_23 := -3;
		resume_from_node_26 := -3;
		resume_from_node_27 := -3;
		resume_from_node_30 := -3;
		resume_from_node_33 := -3;
		resume_from_node_34 := -3;
		resume_from_node_35 := -3;
		resume_from_node_36 := -3;
		resume_from_node_39 := -3;
		resume_from_node_42 := -3;
		resume_from_node_43 := -3;
		resume_from_node_46 := -3;
		resume_from_node_49 := -3;
		resume_from_node_50 := -3;
		resume_from_node_51 := -3;
		resume_from_node_54 := -3;
		resume_from_node_57 := -3;
		resume_from_node_58 := -3;
		resume_from_node_61 := -3;
		resume_from_node_64 := -3;
		resume_from_node_65 := -3;
		resume_from_node_66 := -3;
		resume_from_node_67 := -3;
		resume_from_node_68 := -3;
		resume_from_node_71 := -3;
		resume_from_node_74 := -3;
		resume_from_node_75 := -3;
		resume_from_node_78 := -3;
		resume_from_node_81 := -3;
		resume_from_node_82 := -3;
		resume_from_node_83 := -3;
		resume_from_node_86 := -3;
		resume_from_node_89 := -3;
		resume_from_node_90 := -3;
		resume_from_node_93 := -3;
		resume_from_node_96 := -3;
		resume_from_node_97 := -3;
		resume_from_node_98 := -3;
		resume_from_node_99 := -3;
		resume_from_node_102 := -3;
		resume_from_node_103 := -3;
		resume_from_node_106 := -3;
		resume_from_node_109 := -3;
		resume_from_node_110 := -3;
		resume_from_node_111 := -3;
		resume_from_node_114 := -3;
		resume_from_node_117 := -3;
		resume_from_node_118 := -3;
		resume_from_node_121 := -3;
		resume_from_node_124 := -3;
		resume_from_node_125 := -3;
		resume_from_node_126 := -3;
		resume_from_node_127 := -3;
		resume_from_node_130 := -3;
		resume_from_node_133 := -3;
		resume_from_node_134 := -3;
		resume_from_node_137 := -3;
		resume_from_node_140 := -3;
		resume_from_node_141 := -3;
		resume_from_node_142 := -3;
		resume_from_node_145 := -3;
		resume_from_node_148 := -3;
		resume_from_node_149 := -3;
		resume_from_node_152 := -3;
		linkPar37.active := TRUE;
		parallel_skip_0 := [resume_from_node_1, resume_from_node_64];
		parallel_skip_1 := [resume_from_node_2, resume_from_node_33];
		parallel_skip_2 := [resume_from_node_3, resume_from_node_18];
		parallel_skip_3 := [resume_from_node_4, resume_from_node_11];
		parallel_skip_4 := [resume_from_node_5, resume_from_node_8];
		parallel_skip_11 := [resume_from_node_12, resume_from_node_15];
		parallel_skip_18 := [resume_from_node_19, resume_from_node_26];
		parallel_skip_19 := [resume_from_node_20, resume_from_node_23];
		parallel_skip_26 := [resume_from_node_27, resume_from_node_30];
		parallel_skip_33 := [resume_from_node_34, resume_from_node_49];
		parallel_skip_34 := [resume_from_node_35, resume_from_node_42];
		parallel_skip_35 := [resume_from_node_36, resume_from_node_39];
		parallel_skip_42 := [resume_from_node_43, resume_from_node_46];
		parallel_skip_49 := [resume_from_node_50, resume_from_node_57];
		parallel_skip_50 := [resume_from_node_51, resume_from_node_54];
		parallel_skip_57 := [resume_from_node_58, resume_from_node_61];
		parallel_skip_64 := [resume_from_node_65, resume_from_node_96];
		parallel_skip_65 := [resume_from_node_66, resume_from_node_81];
		parallel_skip_66 := [resume_from_node_67, resume_from_node_74];
		parallel_skip_67 := [resume_from_node_68, resume_from_node_71];
		parallel_skip_74 := [resume_from_node_75, resume_from_node_78];
		parallel_skip_81 := [resume_from_node_82, resume_from_node_89];
		parallel_skip_82 := [resume_from_node_83, resume_from_node_86];
		parallel_skip_89 := [resume_from_node_90, resume_from_node_93];
		parallel_skip_96 := [resume_from_node_97, resume_from_node_124];
		parallel_skip_97 := [resume_from_node_98, resume_from_node_109];
		parallel_skip_98 := [resume_from_node_99, resume_from_node_102];
		parallel_skip_102 := [resume_from_node_103, resume_from_node_106];
		parallel_skip_109 := [resume_from_node_110, resume_from_node_117];
		parallel_skip_110 := [resume_from_node_111, resume_from_node_114];
		parallel_skip_117 := [resume_from_node_118, resume_from_node_121];
		parallel_skip_124 := [resume_from_node_125, resume_from_node_140];
		parallel_skip_125 := [resume_from_node_126, resume_from_node_133];
		parallel_skip_126 := [resume_from_node_127, resume_from_node_130];
		parallel_skip_133 := [resume_from_node_134, resume_from_node_137];
		parallel_skip_140 := [resume_from_node_141, resume_from_node_148];
		parallel_skip_141 := [resume_from_node_142, resume_from_node_145];
		parallel_skip_148 := [resume_from_node_149, resume_from_node_152];
	VAR
		node_names : define_nodes;
		linkPar37 : node_parallel_success_on_all2(linkPar35, linkPar36,  parallel_skip_0);
		linkPar35 : node_parallel_success_on_all2(linkPar31, linkPar32,  parallel_skip_1);
		linkPar31 : node_parallel_success_on_all2(linkPar23, linkPar24,  parallel_skip_2);
		linkPar23 : node_parallel_success_on_all2(linkPar7, linkPar8,  parallel_skip_3);
		linkPar7 : node_parallel_success_on_all2(sel14, sel15,  parallel_skip_4);
		sel14 : node_selector2(safety_check14, backup14);
		safety_check14 : node_non_blocking();
		backup14 : node_success();
		sel15 : node_selector2(safety_check15, backup15);
		safety_check15 : node_non_blocking();
		backup15 : node_success();
		linkPar8 : node_parallel_success_on_all2(sel16, sel17,  parallel_skip_11);
		sel16 : node_selector2(safety_check16, backup16);
		safety_check16 : node_non_blocking();
		backup16 : node_success();
		sel17 : node_selector2(safety_check17, backup17);
		safety_check17 : node_non_blocking();
		backup17 : node_success();
		linkPar24 : node_parallel_success_on_all2(linkPar9, linkPar10,  parallel_skip_18);
		linkPar9 : node_parallel_success_on_all2(sel18, sel19,  parallel_skip_19);
		sel18 : node_selector2(safety_check18, backup18);
		safety_check18 : node_non_blocking();
		backup18 : node_success();
		sel19 : node_selector2(safety_check19, backup19);
		safety_check19 : node_non_blocking();
		backup19 : node_success();
		linkPar10 : node_parallel_success_on_all2(sel20, sel21,  parallel_skip_26);
		sel20 : node_selector2(safety_check20, backup20);
		safety_check20 : node_non_blocking();
		backup20 : node_success();
		sel21 : node_selector2(safety_check21, backup21);
		safety_check21 : node_non_blocking();
		backup21 : node_success();
		linkPar32 : node_parallel_success_on_all2(linkPar25, linkPar26,  parallel_skip_33);
		linkPar25 : node_parallel_success_on_all2(linkPar11, linkPar12,  parallel_skip_34);
		linkPar11 : node_parallel_success_on_all2(sel22, sel23,  parallel_skip_35);
		sel22 : node_selector2(safety_check22, backup22);
		safety_check22 : node_non_blocking();
		backup22 : node_success();
		sel23 : node_selector2(safety_check23, backup23);
		safety_check23 : node_non_blocking();
		backup23 : node_success();
		linkPar12 : node_parallel_success_on_all2(sel24, sel25,  parallel_skip_42);
		sel24 : node_selector2(safety_check24, backup24);
		safety_check24 : node_non_blocking();
		backup24 : node_success();
		sel25 : node_selector2(safety_check25, backup25);
		safety_check25 : node_non_blocking();
		backup25 : node_success();
		linkPar26 : node_parallel_success_on_all2(linkPar13, linkPar14,  parallel_skip_49);
		linkPar13 : node_parallel_success_on_all2(sel26, sel27,  parallel_skip_50);
		sel26 : node_selector2(safety_check26, backup26);
		safety_check26 : node_non_blocking();
		backup26 : node_success();
		sel27 : node_selector2(safety_check27, backup27);
		safety_check27 : node_non_blocking();
		backup27 : node_success();
		linkPar14 : node_parallel_success_on_all2(sel28, sel29,  parallel_skip_57);
		sel28 : node_selector2(safety_check28, backup28);
		safety_check28 : node_non_blocking();
		backup28 : node_success();
		sel29 : node_selector2(safety_check29, backup29);
		safety_check29 : node_non_blocking();
		backup29 : node_success();
		linkPar36 : node_parallel_success_on_all2(linkPar33, linkPar34,  parallel_skip_64);
		linkPar33 : node_parallel_success_on_all2(linkPar27, linkPar28,  parallel_skip_65);
		linkPar27 : node_parallel_success_on_all2(linkPar15, linkPar16,  parallel_skip_66);
		linkPar15 : node_parallel_success_on_all2(sel30, sel31,  parallel_skip_67);
		sel30 : node_selector2(safety_check30, backup30);
		safety_check30 : node_non_blocking();
		backup30 : node_success();
		sel31 : node_selector2(safety_check31, backup31);
		safety_check31 : node_non_blocking();
		backup31 : node_success();
		linkPar16 : node_parallel_success_on_all2(sel32, sel33,  parallel_skip_74);
		sel32 : node_selector2(safety_check32, backup32);
		safety_check32 : node_non_blocking();
		backup32 : node_success();
		sel33 : node_selector2(safety_check33, backup33);
		safety_check33 : node_non_blocking();
		backup33 : node_success();
		linkPar28 : node_parallel_success_on_all2(linkPar17, linkPar18,  parallel_skip_81);
		linkPar17 : node_parallel_success_on_all2(sel34, sel35,  parallel_skip_82);
		sel34 : node_selector2(safety_check34, backup34);
		safety_check34 : node_non_blocking();
		backup34 : node_success();
		sel35 : node_selector2(safety_check35, backup35);
		safety_check35 : node_non_blocking();
		backup35 : node_success();
		linkPar18 : node_parallel_success_on_all2(sel36, sel37,  parallel_skip_89);
		sel36 : node_selector2(safety_check36, backup36);
		safety_check36 : node_non_blocking();
		backup36 : node_success();
		sel37 : node_selector2(safety_check37, backup37);
		safety_check37 : node_non_blocking();
		backup37 : node_success();
		linkPar34 : node_parallel_success_on_all2(linkPar29, linkPar30,  parallel_skip_96);
		linkPar29 : node_parallel_success_on_all2(linkPar19, linkPar20,  parallel_skip_97);
		linkPar19 : node_parallel_success_on_all2(sel38, linkPar0,  parallel_skip_98);
		sel38 : node_selector2(safety_check38, backup38);
		safety_check38 : node_non_blocking();
		backup38 : node_success();
		linkPar0 : node_parallel_success_on_all2(sel0, sel1,  parallel_skip_102);
		sel0 : node_selector2(safety_check0, backup0);
		safety_check0 : node_non_blocking();
		backup0 : node_success();
		sel1 : node_selector2(safety_check1, backup1);
		safety_check1 : node_non_blocking();
		backup1 : node_success();
		linkPar20 : node_parallel_success_on_all2(linkPar1, linkPar2,  parallel_skip_109);
		linkPar1 : node_parallel_success_on_all2(sel2, sel3,  parallel_skip_110);
		sel2 : node_selector2(safety_check2, backup2);
		safety_check2 : node_non_blocking();
		backup2 : node_success();
		sel3 : node_selector2(safety_check3, backup3);
		safety_check3 : node_non_blocking();
		backup3 : node_success();
		linkPar2 : node_parallel_success_on_all2(sel4, sel5,  parallel_skip_117);
		sel4 : node_selector2(safety_check4, backup4);
		safety_check4 : node_non_blocking();
		backup4 : node_success();
		sel5 : node_selector2(safety_check5, backup5);
		safety_check5 : node_non_blocking();
		backup5 : node_success();
		linkPar30 : node_parallel_success_on_all2(linkPar21, linkPar22,  parallel_skip_124);
		linkPar21 : node_parallel_success_on_all2(linkPar3, linkPar4,  parallel_skip_125);
		linkPar3 : node_parallel_success_on_all2(sel6, sel7,  parallel_skip_126);
		sel6 : node_selector2(safety_check6, backup6);
		safety_check6 : node_non_blocking();
		backup6 : node_success();
		sel7 : node_selector2(safety_check7, backup7);
		safety_check7 : node_non_blocking();
		backup7 : node_success();
		linkPar4 : node_parallel_success_on_all2(sel8, sel9,  parallel_skip_133);
		sel8 : node_selector2(safety_check8, backup8);
		safety_check8 : node_non_blocking();
		backup8 : node_success();
		sel9 : node_selector2(safety_check9, backup9);
		safety_check9 : node_non_blocking();
		backup9 : node_success();
		linkPar22 : node_parallel_success_on_all2(linkPar5, linkPar6,  parallel_skip_140);
		linkPar5 : node_parallel_success_on_all2(sel10, sel11,  parallel_skip_141);
		sel10 : node_selector2(safety_check10, backup10);
		safety_check10 : node_non_blocking();
		backup10 : node_success();
		sel11 : node_selector2(safety_check11, backup11);
		safety_check11 : node_non_blocking();
		backup11 : node_success();
		linkPar6 : node_parallel_success_on_all2(sel12, sel13,  parallel_skip_148);
		sel12 : node_selector2(safety_check12, backup12);
		safety_check12 : node_non_blocking();
		backup12 : node_success();
		sel13 : node_selector2(safety_check13, backup13);
		safety_check13 : node_non_blocking();
		backup13 : node_success();
	ASSIGN
LTLSPEC G (safety_check0.status = failure -> backup0.status = success);
LTLSPEC G (safety_check0.status = failure -> !(backup0.status = success));
LTLSPEC G (safety_check1.status = failure -> backup1.status = success);
LTLSPEC G (safety_check1.status = failure -> !(backup1.status = success));
LTLSPEC G (safety_check2.status = failure -> backup2.status = success);
LTLSPEC G (safety_check2.status = failure -> !(backup2.status = success));
LTLSPEC G (safety_check3.status = failure -> backup3.status = success);
LTLSPEC G (safety_check3.status = failure -> !(backup3.status = success));
LTLSPEC G (safety_check4.status = failure -> backup4.status = success);
LTLSPEC G (safety_check4.status = failure -> !(backup4.status = success));
LTLSPEC G (safety_check5.status = failure -> backup5.status = success);
LTLSPEC G (safety_check5.status = failure -> !(backup5.status = success));
LTLSPEC G (safety_check6.status = failure -> backup6.status = success);
LTLSPEC G (safety_check6.status = failure -> !(backup6.status = success));
LTLSPEC G (safety_check7.status = failure -> backup7.status = success);
LTLSPEC G (safety_check7.status = failure -> !(backup7.status = success));
LTLSPEC G (safety_check8.status = failure -> backup8.status = success);
LTLSPEC G (safety_check8.status = failure -> !(backup8.status = success));
LTLSPEC G (safety_check9.status = failure -> backup9.status = success);
LTLSPEC G (safety_check9.status = failure -> !(backup9.status = success));
LTLSPEC G (safety_check10.status = failure -> backup10.status = success);
LTLSPEC G (safety_check10.status = failure -> !(backup10.status = success));
LTLSPEC G (safety_check11.status = failure -> backup11.status = success);
LTLSPEC G (safety_check11.status = failure -> !(backup11.status = success));
LTLSPEC G (safety_check12.status = failure -> backup12.status = success);
LTLSPEC G (safety_check12.status = failure -> !(backup12.status = success));
LTLSPEC G (safety_check13.status = failure -> backup13.status = success);
LTLSPEC G (safety_check13.status = failure -> !(backup13.status = success));
LTLSPEC G (safety_check14.status = failure -> backup14.status = success);
LTLSPEC G (safety_check14.status = failure -> !(backup14.status = success));
LTLSPEC G (safety_check15.status = failure -> backup15.status = success);
LTLSPEC G (safety_check15.status = failure -> !(backup15.status = success));
LTLSPEC G (safety_check16.status = failure -> backup16.status = success);
LTLSPEC G (safety_check16.status = failure -> !(backup16.status = success));
LTLSPEC G (safety_check17.status = failure -> backup17.status = success);
LTLSPEC G (safety_check17.status = failure -> !(backup17.status = success));
LTLSPEC G (safety_check18.status = failure -> backup18.status = success);
LTLSPEC G (safety_check18.status = failure -> !(backup18.status = success));
LTLSPEC G (safety_check19.status = failure -> backup19.status = success);
LTLSPEC G (safety_check19.status = failure -> !(backup19.status = success));
LTLSPEC G (safety_check20.status = failure -> backup20.status = success);
LTLSPEC G (safety_check20.status = failure -> !(backup20.status = success));
LTLSPEC G (safety_check21.status = failure -> backup21.status = success);
LTLSPEC G (safety_check21.status = failure -> !(backup21.status = success));
LTLSPEC G (safety_check22.status = failure -> backup22.status = success);
LTLSPEC G (safety_check22.status = failure -> !(backup22.status = success));
LTLSPEC G (safety_check23.status = failure -> backup23.status = success);
LTLSPEC G (safety_check23.status = failure -> !(backup23.status = success));
LTLSPEC G (safety_check24.status = failure -> backup24.status = success);
LTLSPEC G (safety_check24.status = failure -> !(backup24.status = success));
LTLSPEC G (safety_check25.status = failure -> backup25.status = success);
LTLSPEC G (safety_check25.status = failure -> !(backup25.status = success));
LTLSPEC G (safety_check26.status = failure -> backup26.status = success);
LTLSPEC G (safety_check26.status = failure -> !(backup26.status = success));
LTLSPEC G (safety_check27.status = failure -> backup27.status = success);
LTLSPEC G (safety_check27.status = failure -> !(backup27.status = success));
LTLSPEC G (safety_check28.status = failure -> backup28.status = success);
LTLSPEC G (safety_check28.status = failure -> !(backup28.status = success));
LTLSPEC G (safety_check29.status = failure -> backup29.status = success);
LTLSPEC G (safety_check29.status = failure -> !(backup29.status = success));
LTLSPEC G (safety_check30.status = failure -> backup30.status = success);
LTLSPEC G (safety_check30.status = failure -> !(backup30.status = success));
LTLSPEC G (safety_check31.status = failure -> backup31.status = success);
LTLSPEC G (safety_check31.status = failure -> !(backup31.status = success));
LTLSPEC G (safety_check32.status = failure -> backup32.status = success);
LTLSPEC G (safety_check32.status = failure -> !(backup32.status = success));
LTLSPEC G (safety_check33.status = failure -> backup33.status = success);
LTLSPEC G (safety_check33.status = failure -> !(backup33.status = success));
LTLSPEC G (safety_check34.status = failure -> backup34.status = success);
LTLSPEC G (safety_check34.status = failure -> !(backup34.status = success));
LTLSPEC G (safety_check35.status = failure -> backup35.status = success);
LTLSPEC G (safety_check35.status = failure -> !(backup35.status = success));
LTLSPEC G (safety_check36.status = failure -> backup36.status = success);
LTLSPEC G (safety_check36.status = failure -> !(backup36.status = success));
LTLSPEC G (safety_check37.status = failure -> backup37.status = success);
LTLSPEC G (safety_check37.status = failure -> !(backup37.status = success));
LTLSPEC G (safety_check38.status = failure -> backup38.status = success);
LTLSPEC G (safety_check38.status = failure -> !(backup38.status = success));


MODULE node_non_blocking()
	CONSTANTS
		success, failure, running, invalid;
	VAR
		input_status : {success, failure};
	DEFINE
		status := active ? input_status : invalid;
MODULE node_success()
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(active) : invalid;
				TRUE : success;
			esac;
MODULE node_selector2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(child_0.status = failure) : child_0.status;
				!(child_1.status = failure) : child_1.status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
MODULE node_parallel_success_on_all2(child_0, child_1, skip_child)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(active) : invalid;
				(child_0.status = failure) : failure;
				(child_1.status = failure) : failure;
				!(child_0.status = success) : child_0.status;
				!(child_1.status = success) : child_1.status;
				TRUE : success;
			esac;
		child_0.active := active & !(skip_child[0] = -2);
		child_1.active := active & !(skip_child[1] = -2);
MODULE define_nodes
	DEFINE
		linkPar37 := 0;
		linkPar35 := 1;
		linkPar31 := 2;
		linkPar23 := 3;
		linkPar7 := 4;
		sel14 := 5;
		safety_check14 := 6;
		backup14 := 7;
		sel15 := 8;
		safety_check15 := 9;
		backup15 := 10;
		linkPar8 := 11;
		sel16 := 12;
		safety_check16 := 13;
		backup16 := 14;
		sel17 := 15;
		safety_check17 := 16;
		backup17 := 17;
		linkPar24 := 18;
		linkPar9 := 19;
		sel18 := 20;
		safety_check18 := 21;
		backup18 := 22;
		sel19 := 23;
		safety_check19 := 24;
		backup19 := 25;
		linkPar10 := 26;
		sel20 := 27;
		safety_check20 := 28;
		backup20 := 29;
		sel21 := 30;
		safety_check21 := 31;
		backup21 := 32;
		linkPar32 := 33;
		linkPar25 := 34;
		linkPar11 := 35;
		sel22 := 36;
		safety_check22 := 37;
		backup22 := 38;
		sel23 := 39;
		safety_check23 := 40;
		backup23 := 41;
		linkPar12 := 42;
		sel24 := 43;
		safety_check24 := 44;
		backup24 := 45;
		sel25 := 46;
		safety_check25 := 47;
		backup25 := 48;
		linkPar26 := 49;
		linkPar13 := 50;
		sel26 := 51;
		safety_check26 := 52;
		backup26 := 53;
		sel27 := 54;
		safety_check27 := 55;
		backup27 := 56;
		linkPar14 := 57;
		sel28 := 58;
		safety_check28 := 59;
		backup28 := 60;
		sel29 := 61;
		safety_check29 := 62;
		backup29 := 63;
		linkPar36 := 64;
		linkPar33 := 65;
		linkPar27 := 66;
		linkPar15 := 67;
		sel30 := 68;
		safety_check30 := 69;
		backup30 := 70;
		sel31 := 71;
		safety_check31 := 72;
		backup31 := 73;
		linkPar16 := 74;
		sel32 := 75;
		safety_check32 := 76;
		backup32 := 77;
		sel33 := 78;
		safety_check33 := 79;
		backup33 := 80;
		linkPar28 := 81;
		linkPar17 := 82;
		sel34 := 83;
		safety_check34 := 84;
		backup34 := 85;
		sel35 := 86;
		safety_check35 := 87;
		backup35 := 88;
		linkPar18 := 89;
		sel36 := 90;
		safety_check36 := 91;
		backup36 := 92;
		sel37 := 93;
		safety_check37 := 94;
		backup37 := 95;
		linkPar34 := 96;
		linkPar29 := 97;
		linkPar19 := 98;
		sel38 := 99;
		safety_check38 := 100;
		backup38 := 101;
		linkPar0 := 102;
		sel0 := 103;
		safety_check0 := 104;
		backup0 := 105;
		sel1 := 106;
		safety_check1 := 107;
		backup1 := 108;
		linkPar20 := 109;
		linkPar1 := 110;
		sel2 := 111;
		safety_check2 := 112;
		backup2 := 113;
		sel3 := 114;
		safety_check3 := 115;
		backup3 := 116;
		linkPar2 := 117;
		sel4 := 118;
		safety_check4 := 119;
		backup4 := 120;
		sel5 := 121;
		safety_check5 := 122;
		backup5 := 123;
		linkPar30 := 124;
		linkPar21 := 125;
		linkPar3 := 126;
		sel6 := 127;
		safety_check6 := 128;
		backup6 := 129;
		sel7 := 130;
		safety_check7 := 131;
		backup7 := 132;
		linkPar4 := 133;
		sel8 := 134;
		safety_check8 := 135;
		backup8 := 136;
		sel9 := 137;
		safety_check9 := 138;
		backup9 := 139;
		linkPar22 := 140;
		linkPar5 := 141;
		sel10 := 142;
		safety_check10 := 143;
		backup10 := 144;
		sel11 := 145;
		safety_check11 := 146;
		backup11 := 147;
		linkPar6 := 148;
		sel12 := 149;
		safety_check12 := 150;
		backup12 := 151;
		sel13 := 152;
		safety_check13 := 153;
		backup13 := 154;
