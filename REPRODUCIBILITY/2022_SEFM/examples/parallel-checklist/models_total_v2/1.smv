MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		statuses := [sel0.status, safety_check0.status, backup0.status];
		resume_from_node_0 := -3;
		sel0.active := TRUE;
	VAR
		node_names : define_nodes;
		sel0 : node_selector2(safety_check0, backup0);
		safety_check0 : node_non_blocking();
		backup0 : node_success();
	ASSIGN
LTLSPEC G (safety_check0.status = failure -> backup0.status = success);
LTLSPEC G (safety_check0.status = failure -> !(backup0.status = success));


MODULE node_non_blocking()
	CONSTANTS
		success, failure, running, invalid;
	VAR
		input_status : {success, failure};
	DEFINE
		status := active ? input_status : invalid;
MODULE node_success()
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(active) : invalid;
				TRUE : success;
			esac;
MODULE node_selector2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status :=
			case
				!(child_0.status = failure) : child_0.status;
				!(child_1.status = failure) : child_1.status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
MODULE define_nodes
	DEFINE
		sel0 := 0;
		safety_check0 := 1;
		backup0 := 2;
