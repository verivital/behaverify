Behavior Trees, which originated in video games as a method for controlling NPCs but have since gained traction within the robotics community, are a framework for describing the execution of a task. BehaVerify is a tool that creates a nuXmv model when given a py\_tree. For composite nodes this process is automatic and requires no additional user input, as these nodes are provided out of the box by py\_trees. A wide variety of leaf nodes are automatically supported and require no additional user input, but customized leaf nodes will require additional user input to be correctly modeled. BehaVerify can provide a template to make this easier. BehaVerify was able to create a nuXmv model with over 100 nodes and nuXmv was able to verify various non-trivial LTL and CTL properties on this model, both directly and via counterexample. The model in question features parallel nodes, selector, and sequence nodes.