MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		resume_from_here_in_subtree__BlueROV := -3;
		resume_from_here_in_subtree__topics2bb := -3;
		resume_from_here_in_subtree__battery2bb := -3;
		resume_from_here_in_subtree__rth2bb := -3;
		resume_from_here_in_subtree__geofence2bb := -3;
		resume_from_here_in_subtree__lec2_am_r_2bb := -3;
		resume_from_here_in_subtree__lec2_am_l_2bb := -3;
		resume_from_here_in_subtree__pipe_lost2bb := -3;
		resume_from_here_in_subtree__sensor_failure2bb := -3;
		resume_from_here_in_subtree__waypoints_completed2bb := -3;
		resume_from_here_in_subtree__fls2bb := -3;
		resume_from_here_in_subtree__fls_warning2bb := -3;
		resume_from_here_in_subtree__rtreach2bb := -3;
		resume_from_here_in_subtree__rtreach_unsafe_value2bb := -3;
		resume_from_here_in_subtree__rtreach_index2bb := -3;
		resume_from_here_in_subtree__home2bb := -3;
		resume_from_here_in_subtree__dd_tasks := -3;
		resume_from_here_in_subtree__mission_end := -3;
		resume_from_here_in_subtree__mission_server := -3;
		resume_from_here_in_subtree__obstacle_avoidance := -3;
		resume_from_here_in_subtree__publish_HSD_command := -3;
		trace_running_source_surface_task := (surface_task.status = running) ? node_names.surface_task : -2;
		trace_running_source_emergency_stop_tasks := 
			case
				!(trace_running_source_surface_task = -2) : trace_running_source_surface_task;
				TRUE : -2;
			esac;
		trace_running_source_emergency_stop_check_1 := 
			case
				!(trace_running_source_emergency_stop_tasks = -2) : trace_running_source_emergency_stop_tasks;
				TRUE : -2;
			esac;
		trace_running_source_emergency_stop_check := 
			case
				!(trace_running_source_emergency_stop_check_1 = -2) : trace_running_source_emergency_stop_check_1;
				TRUE : -2;
			esac;
		trace_running_source_surface_task_1 := (surface_task_1.status = running) ? node_names.surface_task_1 : -2;
		trace_running_source_failsafe_surface := 
			case
				!(trace_running_source_surface_task_1 = -2) : trace_running_source_surface_task_1;
				TRUE : -2;
			esac;
		trace_running_source_rth_task := (rth_task.status = running) ? node_names.rth_task : -2;
		trace_running_source_rth := 
			case
				!(trace_running_source_rth_task = -2) : trace_running_source_rth_task;
				TRUE : -2;
			esac;
		trace_running_source_priorities := 
			case
				!(trace_running_source_emergency_stop_check = -2) : trace_running_source_emergency_stop_check;
				!(trace_running_source_failsafe_surface = -2) : trace_running_source_failsafe_surface;
				!(trace_running_source_rth = -2) : trace_running_source_rth;
				TRUE : -2;
			esac;
		child_index_to_resume_from__mission_end := -2;
		child_index_to_resume_from__waypoint_mission_end := -2;
		child_index_to_resume_from__pipe_tracking_misison_end := -2;
		child_index_to_resume_from__emergency_stop_tasks := 
			case
				(resume_from_here_in_subtree__priorities in {39}) : 1;
				TRUE : -2;
			esac;
		child_index_to_resume_from__failsafe_surface := 
			case
				(resume_from_here_in_subtree__priorities in {51}) : 1;
				TRUE : -2;
			esac;
		child_index_to_resume_from__rth_surface := 
			case
				TRUE : -2;
			esac;
		child_index_to_resume_from__rth := 
			case
				(resume_from_here_in_subtree__priorities in {56}) : 1;
				TRUE : -2;
			esac;
		child_index_to_resume_from__track_pipe_mission := 
			case
				TRUE : -2;
			esac;
		child_index_to_resume_from__speed_min := 
			case
				TRUE : -2;
			esac;
		child_index_to_resume_from__waypoint_mission := 
			case
				TRUE : -2;
			esac;
		BlueROV.active := !(BLUEROV_SURFACED_stage_0);
		--START OF BLACKBOARD DEFINITIONS
		battery_stage_0 := battery_stage_1;
		LINK_TO_PREVIOUS_FINAL_battery := battery_stage_1;
		battery_low_warning_stage_1 := 
			case
				!(battery2bb.active) : battery_low_warning_stage_0;
				!(battery2bb_update_success_stage_1) : battery_low_warning_stage_0;
				TRUE : (battery_stage_1 <= 0);
			esac;
		bb_fls_warning_stage_1 := 
			case
				!(fls_warning2bb.active) : bb_fls_warning_stage_0;
				!(fls_warning2bb_update_success_stage_1) : bb_fls_warning_stage_0;
				TRUE : (bb_fls_warning_stage_0 | obstacle_in_view_stage_1);
			esac;
		bb_geofence_warning_stage_1 := 
			case
				!(geofence2bb.active) : bb_geofence_warning_stage_0;
				!(geofence2bb_update_success_stage_1) : bb_geofence_warning_stage_0;
				TRUE : (bb_geofence_warning_stage_0 | bb_geofence_stage_1);
			esac;
		bb_home_dist_stage_0 := bb_home_dist_stage_1;
		LINK_TO_PREVIOUS_FINAL_bb_home_dist := bb_home_dist_stage_1;
		bb_home_reached_stage_1 := 
			case
				!(home2bb.active) : bb_home_reached_stage_0;
				!(home2bb_update_success_stage_1) : bb_home_reached_stage_0;
				TRUE : (bb_home_reached_stage_0 | (bb_home_dist_stage_1 < 15));
			esac;
		bb_pipelost_stage_0 := bb_pipelost_stage_1;
		LINK_TO_PREVIOUS_FINAL_bb_pipelost := bb_pipelost_stage_1;
		bb_pipe_lost_warning_stage_1 := 
			case
				!(pipe_lost2bb.active) : bb_pipe_lost_warning_stage_0;
				!(pipe_lost2bb_update_success_stage_1) : bb_pipe_lost_warning_stage_0;
				TRUE : (bb_pipelost_stage_1 & (bb_mission_stage_0 = pipe_following));
			esac;
		bb_rth_stage_0 := bb_rth_stage_1;
		LINK_TO_PREVIOUS_FINAL_bb_rth := bb_rth_stage_1;
		bb_rth_warning_stage_1 := 
			case
				!(rth2bb.active) : bb_rth_warning_stage_0;
				!(rth2bb_update_success_stage_1) : bb_rth_warning_stage_0;
				TRUE : (bb_rth_warning_stage_0 | bb_rth_stage_1);
			esac;
		bb_rth_warning_stage_2 := 
			case
				!(mission_server.active) : bb_rth_warning_stage_1;
				next_mission_stage_1 : finished_missions_stage_1;
				TRUE : bb_rth_warning_stage_1;
			esac;
		bb_sensor_failure_stage_0 := bb_sensor_failure_stage_1;
		LINK_TO_PREVIOUS_FINAL_bb_sensor_failure := bb_sensor_failure_stage_1;
		bb_sensor_failure_warning_stage_1 := 
			case
				!(sensor_failure2bb.active) : bb_sensor_failure_warning_stage_0;
				!(sensor_failure2bb_update_success_stage_1) : bb_sensor_failure_warning_stage_0;
				TRUE : (bb_sensor_failure_warning_stage_0 | bb_sensor_failure_stage_1);
			esac;
		bb_waypoints_completed_stage_0 := bb_waypoints_completed_stage_1;
		LINK_TO_PREVIOUS_FINAL_bb_waypoints_completed := bb_waypoints_completed_stage_1;
		cm_hsd_input_stage_1 := 
			case
				!(obstacle_avoidance.active) : cm_hsd_input_stage_0;
				bb_obstacle_warning_stage_1 : cm_obstacle_avoidance_task;
				TRUE : cm_hsd_input_stage_0;
			esac;
		cm_hsd_input_stage_2 := 
			case
				!(surface_task.active) : cm_hsd_input_stage_1;
				TRUE : cm_surface_task;
			esac;
		cm_hsd_input_stage_3 := 
			case
				!(surface_task_1.active) : cm_hsd_input_stage_2;
				TRUE : cm_surface_task;
			esac;
		cm_hsd_input_stage_4 := 
			case
				!(rth_task.active) : cm_hsd_input_stage_3;
				TRUE : cm_rth_task;
			esac;
		cm_hsd_input_stage_5 := 
			case
				!(loiter_task.active) : cm_hsd_input_stage_4;
				TRUE : cm_loiter_task;
			esac;
		cm_hsd_input_stage_6 := 
			case
				!(tracking_task.active) : cm_hsd_input_stage_5;
				TRUE : cm_tracking_task;
			esac;
		cm_hsd_input_stage_7 := 
			case
				!(waypoint_task.active) : cm_hsd_input_stage_6;
				TRUE : cm_waypoint_task;
			esac;
		cm_hsd_input_stage_8 := 
			case
				!(loiter_task_1.active) : cm_hsd_input_stage_7;
				TRUE : cm_loiter_task;
			esac;
		dd_xy_axis_degradation_stage_1 := 
			case
				!(dd_lec_task.active) : dd_xy_axis_degradation_stage_0;
				TRUE : ((dd_output_stage_1 = xy_warn) | (dd_xy_axis_degradation_stage_0 & !((dd_output_stage_1 = safe))));
			esac;
		dd_z_axis_warning_stage_1 := 
			case
				!(dd_lec_task.active) : dd_z_axis_warning_stage_0;
				TRUE : ((dd_output_stage_1 = z_warn) | (dd_z_axis_warning_stage_0 & !((dd_output_stage_1 = safe))));
			esac;
		emergency_stop_warning_stage_1 := 
			case
				!(fls_warning2bb.active) : emergency_stop_warning_stage_0;
				!(fls_warning2bb_update_success_stage_1) : emergency_stop_warning_stage_0;
				TRUE : (emergency_stop_warning_stage_0 | obstacle_in_view_stage_1);
			esac;
		emergency_stop_warning_stage_2 := 
			case
				!(mission_server.active) : emergency_stop_warning_stage_1;
				((next_mission_stage_1 & !(finished_missions_stage_1)) & (e_stop = bb_mission_stage_1)) : TRUE;
				TRUE : emergency_stop_warning_stage_1;
			esac;
		fls_range_stage_0 := fls_range_stage_1;
		LINK_TO_PREVIOUS_FINAL_fls_range := fls_range_stage_1;
		HSD_out_stage_1 := 
			case
				!(speed_min_task.active) : HSD_out_stage_0;
				TRUE : uuv_min_speed;
			esac;
		HSD_out_stage_2 := 
			case
				!(speed_max_task.active) : HSD_out_stage_1;
				TRUE : uuv_max_speed;
			esac;
		lec2_am_l_stage_0 := lec2_am_l_stage_1;
		LINK_TO_PREVIOUS_FINAL_lec2_am_l := lec2_am_l_stage_1;
		lec2_am_l_speed_warning_stage_1 := 
			case
				!(lec2_am_l_2bb.active) : lec2_am_l_speed_warning_stage_0;
				!(lec2_am_l_2bb_update_success_stage_1) : lec2_am_l_speed_warning_stage_0;
				TRUE : ((lec2_am_l_stage_1 = speed) | (lec2_am_l_stage_1 = speed_pipe));
			esac;
		lec2_am_l_pipe_warning_stage_1 := 
			case
				!(lec2_am_l_2bb.active) : lec2_am_l_pipe_warning_stage_0;
				!(lec2_am_l_2bb_update_success_stage_1) : lec2_am_l_pipe_warning_stage_0;
				TRUE : ((lec2_am_l_stage_1 = pipe) | (lec2_am_l_stage_1 = speed_pipe));
			esac;
		lec2_am_r_stage_0 := lec2_am_r_stage_1;
		LINK_TO_PREVIOUS_FINAL_lec2_am_r := lec2_am_r_stage_1;
		lec2_am_r_speed_warning_stage_1 := 
			case
				!(lec2_am_r_2bb.active) : lec2_am_r_speed_warning_stage_0;
				!(lec2_am_r_2bb_update_success_stage_1) : lec2_am_r_speed_warning_stage_0;
				TRUE : ((lec2_am_r_stage_1 = speed) | (lec2_am_r_stage_1 = speed_pipe));
			esac;
		lec2_am_r_pipe_warning_stage_1 := 
			case
				!(lec2_am_r_2bb.active) : lec2_am_r_pipe_warning_stage_0;
				!(lec2_am_r_2bb_update_success_stage_1) : lec2_am_r_pipe_warning_stage_0;
				TRUE : ((lec2_am_r_stage_1 = pipe) | (lec2_am_r_stage_1 = speed_pipe));
			esac;
		next_mission_stage_1 := 
			case
				!(next_mission.active) : next_mission_stage_0;
				TRUE : TRUE;
			esac;
		next_mission_stage_2 := 
			case
				!(mission_server.active) : next_mission_stage_1;
				TRUE : FALSE;
			esac;
		obstacle_in_view_stage_0 := obstacle_in_view_stage_1;
		LINK_TO_PREVIOUS_FINAL_obstacle_in_view := obstacle_in_view_stage_1;
		obstacle_standoff_warning_stage_1 := 
			case
				!(fls2bb.active) : obstacle_standoff_warning_stage_0;
				!(fls2bb_update_success_stage_1) : obstacle_standoff_warning_stage_0;
				TRUE : (fls_range_stage_1 = danger_zone);
			esac;
		rtreach_long_term_warning_stage_1 := 
			case
				!(rtreach2bb.active) : rtreach_long_term_warning_stage_0;
				!(rtreach2bb_update_success_stage_1) : rtreach_long_term_warning_stage_0;
				TRUE : ((rtreach_result_stage_1 = long) | (rtreach_result_stage_1 = short_long));
			esac;
		rtreach_result_stage_0 := rtreach_result_stage_1;
		LINK_TO_PREVIOUS_FINAL_rtreach_result := rtreach_result_stage_1;
		rtreach_warning_stage_1 := 
			case
				!(rtreach2bb.active) : rtreach_warning_stage_0;
				!(rtreach2bb_update_success_stage_1) : rtreach_warning_stage_0;
				TRUE : ((rtreach_result_stage_1 = short) | (rtreach_result_stage_1 = short_long));
			esac;
		finished_missions_stage_0 := finished_missions_stage_1;
		LINK_TO_PREVIOUS_FINAL_finished_missions := finished_missions_stage_1;
		dd_output_stage_0 := dd_output_stage_1;
		LINK_TO_PREVIOUS_FINAL_dd_output := dd_output_stage_1;
		BLUEROV_SURFACED_stage_1 := 
			case
				!(surface_task.active) : BLUEROV_SURFACED_stage_0;
				TRUE : TRUE;
			esac;
		BLUEROV_SURFACED_stage_2 := 
			case
				!(surface_task_1.active) : BLUEROV_SURFACED_stage_1;
				TRUE : TRUE;
			esac;
		battery2bb_update_success_stage_0 := battery2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_battery2bb_update_success := battery2bb_update_success_stage_1;
		rth2bb_update_success_stage_0 := rth2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_rth2bb_update_success := rth2bb_update_success_stage_1;
		geofence2bb_update_success_stage_0 := geofence2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_geofence2bb_update_success := geofence2bb_update_success_stage_1;
		lec2_am_r_2bb_update_success_stage_0 := lec2_am_r_2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_lec2_am_r_2bb_update_success := lec2_am_r_2bb_update_success_stage_1;
		lec2_am_l_2bb_update_success_stage_0 := lec2_am_l_2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_lec2_am_l_2bb_update_success := lec2_am_l_2bb_update_success_stage_1;
		pipe_lost2bb_update_success_stage_0 := pipe_lost2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_pipe_lost2bb_update_success := pipe_lost2bb_update_success_stage_1;
		sensor_failure2bb_update_success_stage_0 := sensor_failure2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_sensor_failure2bb_update_success := sensor_failure2bb_update_success_stage_1;
		waypoints_completed2bb_update_success_stage_0 := waypoints_completed2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_waypoints_completed2bb_update_success := waypoints_completed2bb_update_success_stage_1;
		fls2bb_update_success_stage_0 := fls2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_fls2bb_update_success := fls2bb_update_success_stage_1;
		fls_warning2bb_update_success_stage_0 := fls_warning2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_fls_warning2bb_update_success := fls_warning2bb_update_success_stage_1;
		rtreach2bb_update_success_stage_0 := rtreach2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_rtreach2bb_update_success := rtreach2bb_update_success_stage_1;
		rtreach_unsafe_value2bb_update_success_stage_0 := rtreach_unsafe_value2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_rtreach_unsafe_value2bb_update_success := rtreach_unsafe_value2bb_update_success_stage_1;
		rtreach_index2bb_update_success_stage_0 := rtreach_index2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_rtreach_index2bb_update_success := rtreach_index2bb_update_success_stage_1;
		home2bb_update_success_stage_0 := home2bb_update_success_stage_1;
		LINK_TO_PREVIOUS_FINAL_home2bb_update_success := home2bb_update_success_stage_1;
		--END OF BLACKBOARD DEFINITIONS
	FROZENVAR
		--START OF BLACKBOARD FROZENVAR
		bb_pipe_mapping_enable_stage_0 : boolean;
		lec_dd_am_stage_0 : boolean;
		lec_dd_am_warning_stage_0 : boolean;
		pipe_mapping_enable_stage_0 : boolean;
		--END OF BLACKBOARD FROZENVAR
	VAR
		node_names : define_nodes;
		resume_from_here_in_subtree__priorities : {33, 39, 51, 56};
		BlueROV : composite_parallel_success_on_all_without_memory_7(topics2bb, dd_tasks, mission_end, mission_server, obstacle_avoidance, priorities, publish_HSD_command);
		topics2bb : composite_parallel_success_on_all_without_memory_14(battery2bb, rth2bb, geofence2bb, lec2_am_r_2bb, lec2_am_l_2bb, pipe_lost2bb, sensor_failure2bb, waypoints_completed2bb, fls2bb, fls_warning2bb, rtreach2bb, rtreach_unsafe_value2bb, rtreach_index2bb, home2bb);
		battery2bb : battery2bb_module(battery2bb_update_success_stage_1);
		rth2bb : rth2bb_module(rth2bb_update_success_stage_1);
		geofence2bb : geofence2bb_module(geofence2bb_update_success_stage_1);
		lec2_am_r_2bb : lec2_am_r_2bb_module(lec2_am_r_2bb_update_success_stage_1);
		lec2_am_l_2bb : lec2_am_l_2bb_module(lec2_am_l_2bb_update_success_stage_1);
		pipe_lost2bb : pipe_lost2bb_module(pipe_lost2bb_update_success_stage_1);
		sensor_failure2bb : sensor_failure2bb_module(sensor_failure2bb_update_success_stage_1);
		waypoints_completed2bb : waypoints_completed2bb_module(waypoints_completed2bb_update_success_stage_1);
		fls2bb : fls2bb_module(fls2bb_update_success_stage_1);
		fls_warning2bb : fls_warning2bb_module(fls_warning2bb_update_success_stage_1);
		rtreach2bb : rtreach2bb_module(rtreach2bb_update_success_stage_1);
		rtreach_unsafe_value2bb : rtreach_unsafe_value2bb_module(rtreach_unsafe_value2bb_update_success_stage_1);
		rtreach_index2bb : rtreach_index2bb_module(rtreach_index2bb_update_success_stage_1);
		home2bb : home2bb_module(home2bb_update_success_stage_1);
		dd_tasks : composite_selector_without_memory_2(dd_lec_task, reallocate_check);
		dd_lec_task : failure_DEFAULT_module();
		reallocate_check : decorator_X_is_Y(reallocate_check_1, success, failure);
		reallocate_check_1 : composite_selector_without_memory_2(is_reallocation_requested, reallocate_task);
		is_reallocation_requested : is_reallocation_requested_module(dd_xy_axis_degradation_stage_1);
		reallocate_task : running_DEFAULT_module();
		mission_end : composite_sequence_with_partial_memory_2(confirm_mission_ended, next_mission, child_index_to_resume_from__mission_end);
		confirm_mission_ended : composite_selector_without_memory_2(waypoint_mission_end, pipe_tracking_misison_end);
		waypoint_mission_end : composite_sequence_with_partial_memory_2(is_waypoint_requested, check_waypoints_completed, child_index_to_resume_from__waypoint_mission_end);
		is_waypoint_requested : is_waypoint_requested_module(bb_mission_stage_0);
		check_waypoints_completed : check_waypoints_completed_module(bb_waypoints_completed_stage_1);
		pipe_tracking_misison_end : composite_sequence_with_partial_memory_2(is_track_pipe_mission_requested, failure_node, child_index_to_resume_from__pipe_tracking_misison_end);
		is_track_pipe_mission_requested : is_track_pipe_mission_requested_module(bb_mission_stage_0);
		failure_node : failure_DEFAULT_module();
		next_mission : success_DEFAULT_module();
		mission_server : running_DEFAULT_module();
		obstacle_avoidance : running_DEFAULT_module();
		priorities : composite_selector_without_memory_8(emergency_stop_check, obstacle_avoidance_required, failsafe_surface, rth, pipe_lost_selector, track_pipe_mission, waypoint_mission, loiter_task_1);
		emergency_stop_check : decorator_X_is_Y(emergency_stop_check_1, success, failure);
		emergency_stop_check_1 : composite_selector_without_memory_2(emergency_stop_fs, emergency_stop_tasks);
		emergency_stop_fs : emergency_stop_fs_module(emergency_stop_warning_stage_2);
		emergency_stop_tasks : composite_sequence_with_partial_memory_2(emergency_stop_task, surface_task, child_index_to_resume_from__emergency_stop_tasks);
		emergency_stop_task : success_DEFAULT_module();
		surface_task : running_DEFAULT_module();
		obstacle_avoidance_required : obstacle_avoidance_required_module(bb_obstacle_warning_stage_1);
		failsafe_surface : composite_sequence_with_partial_memory_2(failsafe_triggered, surface_task_1, child_index_to_resume_from__failsafe_surface);
		failsafe_triggered : composite_selector_without_memory_4(battery_low_fs, check_sensor_failure, obstacle_standoff_fs, rth_surface);
		battery_low_fs : battery_low_fs_module(battery_low_warning_stage_1);
		check_sensor_failure : check_sensor_failure_module(bb_sensor_failure_warning_stage_1);
		obstacle_standoff_fs : obstacle_standoff_fs_module(obstacle_standoff_warning_stage_1);
		rth_surface : composite_sequence_with_partial_memory_2(rth_needed, check_surface, child_index_to_resume_from__rth_surface);
		rth_needed : composite_selector_without_memory_2(check_rth, check_geofence);
		check_rth : check_rth_module(bb_rth_warning_stage_2);
		check_geofence : check_geofence_module(bb_geofence_warning_stage_1);
		check_surface : check_surface_module(bb_home_reached_stage_1);
		surface_task_1 : running_DEFAULT_module();
		rth : composite_sequence_with_partial_memory_2(rth_needed_1, rth_task, child_index_to_resume_from__rth);
		rth_needed_1 : composite_selector_without_memory_2(check_rth_1, check_geofence_1);
		check_rth_1 : check_rth_1_module(bb_rth_warning_stage_2);
		check_geofence_1 : check_geofence_1_module(bb_geofence_warning_stage_1);
		rth_task : running_DEFAULT_module();
		pipe_lost_selector : decorator_X_is_Y(pipe_lost_selector_1, success, failure);
		pipe_lost_selector_1 : composite_selector_without_memory_2(check_pipe_lost, loiter_task);
		check_pipe_lost : check_pipe_lost_module(bb_pipe_lost_warning_stage_1);
		loiter_task : running_DEFAULT_module();
		track_pipe_mission : composite_sequence_with_partial_memory_3(is_track_pipe_mission_requested_1, tracking_task, lec2am_speed_cmd, child_index_to_resume_from__track_pipe_mission);
		is_track_pipe_mission_requested_1 : is_track_pipe_mission_requested_1_module(bb_mission_stage_1);
		tracking_task : success_DEFAULT_module();
		lec2am_speed_cmd : composite_selector_without_memory_2(speed_min, speed_max_task);
		speed_min : composite_sequence_with_partial_memory_2(speed_warning, speed_min_task, child_index_to_resume_from__speed_min);
		speed_warning : composite_selector_without_memory_2(check_lec2am_ls, check_lec2am_rs);
		check_lec2am_ls : check_lec2am_ls_module(lec2_am_l_speed_warning_stage_1);
		check_lec2am_rs : check_lec2am_rs_module(lec2_am_r_speed_warning_stage_1);
		speed_min_task : success_DEFAULT_module();
		speed_max_task : success_DEFAULT_module();
		waypoint_mission : composite_sequence_with_partial_memory_2(is_waypoint_requested_1, waypoint_task, child_index_to_resume_from__waypoint_mission);
		is_waypoint_requested_1 : is_waypoint_requested_1_module(bb_mission_stage_1);
		waypoint_task : success_DEFAULT_module();
		loiter_task_1 : running_DEFAULT_module();
		publish_HSD_command : running_DEFAULT_module();
		--START OF BLACKBOARD VARIABLES DECLARATION
		battery_stage_1 : 0..1;
		battery_low_warning_stage_0 : boolean;
		bb_fls_warning_stage_0 : boolean;
		bb_geofence_stage_0 : boolean;
		bb_geofence_stage_1 : boolean;
		bb_geofence_warning_stage_0 : boolean;
		bb_home_dist_stage_1 : {10, 100};
		bb_home_reached_stage_0 : boolean;
		bb_mission_stage_0 : {waypoint_following, e_stop, pipe_following};
		bb_mission_stage_1 : {waypoint_following, e_stop, pipe_following};
		bb_obstacle_warning_stage_0 : boolean;
		bb_obstacle_warning_stage_1 : boolean;
		bb_pipelost_stage_1 : boolean;
		bb_pipe_lost_warning_stage_0 : boolean;
		bb_rth_stage_1 : boolean;
		bb_rth_warning_stage_0 : boolean;
		bb_sensor_failure_stage_1 : boolean;
		bb_sensor_failure_warning_stage_0 : boolean;
		bb_waypoints_completed_stage_1 : boolean;
		cm_hsd_input_stage_0 : {cm_surface_task, cm_rth_task, cm_loiter_task, cm_obstacle_avoidance_task, cm_tracking_task, cm_waypoint_task};
		dd_xy_axis_degradation_stage_0 : boolean;
		dd_z_axis_warning_stage_0 : boolean;
		emergency_stop_warning_stage_0 : boolean;
		fls_range_stage_1 : {danger_zone, safe};
		HSD_out_stage_0 : {uuv_min_speed, uuv_max_speed};
		lec2_am_l_stage_1 : {safe, speed, pipe, speed_pipe};
		lec2_am_l_speed_warning_stage_0 : boolean;
		lec2_am_l_pipe_warning_stage_0 : boolean;
		lec2_am_r_stage_1 : {safe, speed, pipe, speed_pipe};
		lec2_am_r_speed_warning_stage_0 : boolean;
		lec2_am_r_pipe_warning_stage_0 : boolean;
		next_mission_stage_0 : boolean;
		obstacle_in_view_stage_1 : boolean;
		obstacle_standoff_warning_stage_0 : boolean;
		rtreach_long_term_warning_stage_0 : boolean;
		rtreach_result_stage_1 : {safe, short, long, short_long};
		rtreach_warning_stage_0 : boolean;
		finished_missions_stage_1 : boolean;
		dd_output_stage_1 : {safe, xy_warn, z_warn};
		BLUEROV_SURFACED_stage_0 : boolean;
		battery2bb_update_success_stage_1 : boolean;
		rth2bb_update_success_stage_1 : boolean;
		geofence2bb_update_success_stage_1 : boolean;
		lec2_am_r_2bb_update_success_stage_1 : boolean;
		lec2_am_l_2bb_update_success_stage_1 : boolean;
		pipe_lost2bb_update_success_stage_1 : boolean;
		sensor_failure2bb_update_success_stage_1 : boolean;
		waypoints_completed2bb_update_success_stage_1 : boolean;
		fls2bb_update_success_stage_1 : boolean;
		fls_warning2bb_update_success_stage_1 : boolean;
		rtreach2bb_update_success_stage_1 : boolean;
		rtreach_unsafe_value2bb_update_success_stage_1 : boolean;
		rtreach_index2bb_update_success_stage_1 : boolean;
		home2bb_update_success_stage_1 : boolean;
		--END OF BLACKBOARD VARIABLES DECLARATION
	ASSIGN
		init(resume_from_here_in_subtree__priorities) := 33;
		--START OF BLACKBOARD VARIABLES INITIALIZATION
		init(battery_stage_1) := 
			case
				TRUE : 1;
			esac;
		init(battery_low_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_fls_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_geofence_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_geofence_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_home_dist_stage_1) := 
			case
				TRUE : 10;
			esac;
		init(bb_home_reached_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_mission_stage_0) := 
			case
				TRUE : waypoint_following;
			esac;
		init(bb_obstacle_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_pipelost_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_pipe_lost_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_pipe_mapping_enable_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_rth_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_rth_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_sensor_failure_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_sensor_failure_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(bb_waypoints_completed_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(cm_hsd_input_stage_0) := 
			case
				TRUE : {cm_surface_task, cm_rth_task, cm_loiter_task, cm_obstacle_avoidance_task, cm_tracking_task, cm_waypoint_task};
			esac;
		init(dd_xy_axis_degradation_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(dd_z_axis_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(emergency_stop_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(fls_range_stage_1) := 
			case
				TRUE : safe;
			esac;
		init(HSD_out_stage_0) := 
			case
				TRUE : {uuv_min_speed, uuv_max_speed};
			esac;
		init(lec_dd_am_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(lec_dd_am_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(lec2_am_l_stage_1) := 
			case
				TRUE : {safe, speed, pipe, speed_pipe};
			esac;
		init(lec2_am_l_speed_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(lec2_am_l_pipe_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(lec2_am_r_stage_1) := 
			case
				TRUE : {safe, speed, pipe, speed_pipe};
			esac;
		init(lec2_am_r_speed_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(lec2_am_r_pipe_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(next_mission_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(pipe_mapping_enable_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(obstacle_in_view_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(obstacle_standoff_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(rtreach_long_term_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(rtreach_result_stage_1) := 
			case
				TRUE : {safe, short, long, short_long};
			esac;
		init(rtreach_warning_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(finished_missions_stage_1) := 
			case
				TRUE : FALSE;
			esac;
		init(dd_output_stage_1) := 
			case
				TRUE : {safe, xy_warn, z_warn};
			esac;
		init(BLUEROV_SURFACED_stage_0) := 
			case
				TRUE : FALSE;
			esac;
		init(battery2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(rth2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(geofence2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(lec2_am_r_2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(lec2_am_l_2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(pipe_lost2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(sensor_failure2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(waypoints_completed2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(fls2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(fls_warning2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(rtreach2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(rtreach_unsafe_value2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(rtreach_index2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		init(home2bb_update_success_stage_1) := 
			case
				TRUE : {TRUE, FALSE};
			esac;
		--END OF BLACKBOARD VARIABLES INITIALIZATION
		next(resume_from_here_in_subtree__priorities) := 
			case
				(BlueROV.status in {success, failure}) : node_names.priorities;
				(priorities.status in {success, failure}) : node_names.priorities;
				priorities.status = invalid : resume_from_here_in_subtree__priorities;
				TRUE : max(trace_running_source_priorities, node_names.priorities);
			esac;
		--START OF BLACKBOARD VARIABLES TRANSITION
		next(battery_stage_1) := 
			case
				next(!(battery2bb.active)) : LINK_TO_PREVIOUS_FINAL_battery;
				battery2bb_update_success_stage_1 : {0, 1};
				TRUE : battery_stage_0;
			esac;
		next(battery_low_warning_stage_0) := battery_low_warning_stage_1;
		next(bb_fls_warning_stage_0) := bb_fls_warning_stage_1;
		next(bb_geofence_stage_0) := bb_geofence_stage_1;
		bb_geofence_stage_1 := 
			case
				!(geofence2bb.active) : bb_geofence_stage_0;
				geofence2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : bb_geofence_stage_0;
			esac;
		next(bb_geofence_warning_stage_0) := bb_geofence_warning_stage_1;
		next(bb_home_dist_stage_1) := 
			case
				next(!(home2bb.active)) : LINK_TO_PREVIOUS_FINAL_bb_home_dist;
				home2bb_update_success_stage_1 : {10, 100};
				TRUE : bb_home_dist_stage_0;
			esac;
		next(bb_home_reached_stage_0) := bb_home_reached_stage_1;
		next(bb_mission_stage_0) := bb_mission_stage_1;
		bb_mission_stage_1 := 
			case
				!(mission_server.active) : bb_mission_stage_0;
				(next_mission_stage_1 & !(finished_missions_stage_1)) : {waypoint_following, e_stop, pipe_following};
				TRUE : bb_mission_stage_0;
			esac;
		next(bb_obstacle_warning_stage_0) := bb_obstacle_warning_stage_1;
		bb_obstacle_warning_stage_1 := 
			case
				!(obstacle_avoidance.active) : bb_obstacle_warning_stage_0;
				TRUE : {TRUE, FALSE};
			esac;
		next(bb_pipelost_stage_1) := 
			case
				next(!(pipe_lost2bb.active)) : LINK_TO_PREVIOUS_FINAL_bb_pipelost;
				pipe_lost2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : bb_pipelost_stage_0;
			esac;
		next(bb_pipe_lost_warning_stage_0) := bb_pipe_lost_warning_stage_1;
		next(bb_rth_stage_1) := 
			case
				next(!(rth2bb.active)) : LINK_TO_PREVIOUS_FINAL_bb_rth;
				rth2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : bb_rth_stage_0;
			esac;
		next(bb_rth_warning_stage_0) := bb_rth_warning_stage_2;
		next(bb_sensor_failure_stage_1) := 
			case
				next(!(sensor_failure2bb.active)) : LINK_TO_PREVIOUS_FINAL_bb_sensor_failure;
				sensor_failure2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : bb_sensor_failure_stage_0;
			esac;
		next(bb_sensor_failure_warning_stage_0) := bb_sensor_failure_warning_stage_1;
		next(bb_waypoints_completed_stage_1) := 
			case
				next(!(waypoints_completed2bb.active)) : LINK_TO_PREVIOUS_FINAL_bb_waypoints_completed;
				waypoints_completed2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : bb_waypoints_completed_stage_0;
			esac;
		next(cm_hsd_input_stage_0) := cm_hsd_input_stage_8;
		next(dd_xy_axis_degradation_stage_0) := dd_xy_axis_degradation_stage_1;
		next(dd_z_axis_warning_stage_0) := dd_z_axis_warning_stage_1;
		next(emergency_stop_warning_stage_0) := emergency_stop_warning_stage_2;
		next(fls_range_stage_1) := 
			case
				next(!(fls2bb.active)) : LINK_TO_PREVIOUS_FINAL_fls_range;
				fls2bb_update_success_stage_1 : {danger_zone, safe};
				TRUE : fls_range_stage_0;
			esac;
		next(HSD_out_stage_0) := HSD_out_stage_2;
		next(lec2_am_l_stage_1) := 
			case
				next(!(lec2_am_l_2bb.active)) : LINK_TO_PREVIOUS_FINAL_lec2_am_l;
				lec2_am_l_2bb_update_success_stage_1 : {safe, speed, pipe, speed_pipe};
				TRUE : lec2_am_l_stage_0;
			esac;
		next(lec2_am_l_speed_warning_stage_0) := lec2_am_l_speed_warning_stage_1;
		next(lec2_am_l_pipe_warning_stage_0) := lec2_am_l_pipe_warning_stage_1;
		next(lec2_am_r_stage_1) := 
			case
				next(!(lec2_am_r_2bb.active)) : LINK_TO_PREVIOUS_FINAL_lec2_am_r;
				lec2_am_r_2bb_update_success_stage_1 : {safe, speed, pipe, speed_pipe};
				TRUE : lec2_am_r_stage_0;
			esac;
		next(lec2_am_r_speed_warning_stage_0) := lec2_am_r_speed_warning_stage_1;
		next(lec2_am_r_pipe_warning_stage_0) := lec2_am_r_pipe_warning_stage_1;
		next(next_mission_stage_0) := next_mission_stage_2;
		next(obstacle_in_view_stage_1) := 
			case
				next(!(fls_warning2bb.active)) : LINK_TO_PREVIOUS_FINAL_obstacle_in_view;
				fls_warning2bb_update_success_stage_1 : {TRUE, FALSE};
				TRUE : obstacle_in_view_stage_0;
			esac;
		next(obstacle_standoff_warning_stage_0) := obstacle_standoff_warning_stage_1;
		next(rtreach_long_term_warning_stage_0) := rtreach_long_term_warning_stage_1;
		next(rtreach_result_stage_1) := 
			case
				next(!(rtreach2bb.active)) : LINK_TO_PREVIOUS_FINAL_rtreach_result;
				rtreach2bb_update_success_stage_1 : {safe, short, long, short_long};
				TRUE : rtreach_result_stage_0;
			esac;
		next(rtreach_warning_stage_0) := rtreach_warning_stage_1;
		next(finished_missions_stage_1) := 
			case
				next(!(mission_server.active)) : LINK_TO_PREVIOUS_FINAL_finished_missions;
				(next_mission_stage_1 & finished_missions_stage_0) : {TRUE, FALSE};
				TRUE : finished_missions_stage_0;
			esac;
		next(dd_output_stage_1) := 
			case
				next(!(dd_lec_task.active)) : LINK_TO_PREVIOUS_FINAL_dd_output;
				TRUE : {safe, z_warn, xy_warn};
			esac;
		next(BLUEROV_SURFACED_stage_0) := BLUEROV_SURFACED_stage_2;
		next(battery2bb_update_success_stage_1) := 
			case
				next(!(battery2bb.active)) : LINK_TO_PREVIOUS_FINAL_battery2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(rth2bb_update_success_stage_1) := 
			case
				next(!(rth2bb.active)) : LINK_TO_PREVIOUS_FINAL_rth2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(geofence2bb_update_success_stage_1) := 
			case
				next(!(geofence2bb.active)) : LINK_TO_PREVIOUS_FINAL_geofence2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(lec2_am_r_2bb_update_success_stage_1) := 
			case
				next(!(lec2_am_r_2bb.active)) : LINK_TO_PREVIOUS_FINAL_lec2_am_r_2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(lec2_am_l_2bb_update_success_stage_1) := 
			case
				next(!(lec2_am_l_2bb.active)) : LINK_TO_PREVIOUS_FINAL_lec2_am_l_2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(pipe_lost2bb_update_success_stage_1) := 
			case
				next(!(pipe_lost2bb.active)) : LINK_TO_PREVIOUS_FINAL_pipe_lost2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(sensor_failure2bb_update_success_stage_1) := 
			case
				next(!(sensor_failure2bb.active)) : LINK_TO_PREVIOUS_FINAL_sensor_failure2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(waypoints_completed2bb_update_success_stage_1) := 
			case
				next(!(waypoints_completed2bb.active)) : LINK_TO_PREVIOUS_FINAL_waypoints_completed2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(fls2bb_update_success_stage_1) := 
			case
				next(!(fls2bb.active)) : LINK_TO_PREVIOUS_FINAL_fls2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(fls_warning2bb_update_success_stage_1) := 
			case
				next(!(fls_warning2bb.active)) : LINK_TO_PREVIOUS_FINAL_fls_warning2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(rtreach2bb_update_success_stage_1) := 
			case
				next(!(rtreach2bb.active)) : LINK_TO_PREVIOUS_FINAL_rtreach2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(rtreach_unsafe_value2bb_update_success_stage_1) := 
			case
				next(!(rtreach_unsafe_value2bb.active)) : LINK_TO_PREVIOUS_FINAL_rtreach_unsafe_value2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(rtreach_index2bb_update_success_stage_1) := 
			case
				next(!(rtreach_index2bb.active)) : LINK_TO_PREVIOUS_FINAL_rtreach_index2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		next(home2bb_update_success_stage_1) := 
			case
				next(!(home2bb.active)) : LINK_TO_PREVIOUS_FINAL_home2bb_update_success;
				TRUE : {TRUE, FALSE};
			esac;
		--END OF BLACKBOARD VARIABLES TRANSITION

INVARSPEC (bb_fls_warning_stage_1 -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_surface_task)));
INVARSPEC ((!(bb_fls_warning_stage_1) & !((bb_mission_stage_1 = e_stop)) & bb_obstacle_warning_stage_1) -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_obstacle_avoidance_task)));
INVARSPEC ((!(bb_obstacle_warning_stage_1) & (emergency_stop_warning_stage_2 | battery_low_warning_stage_1 | bb_sensor_failure_warning_stage_1 | obstacle_standoff_warning_stage_1)) -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_surface_task)));
INVARSPEC ((!(bb_obstacle_warning_stage_1) & ((bb_rth_warning_stage_2 | bb_geofence_stage_1) & bb_home_reached_stage_1)) -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_surface_task)));
INVARSPEC ((!(bb_obstacle_warning_stage_1) & ((bb_rth_warning_stage_2 | bb_geofence_stage_1) & !((cm_hsd_input_stage_8 = cm_surface_task)))) -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_rth_task)));
INVARSPEC (!(((cm_hsd_input_stage_8 = cm_surface_task) | (cm_hsd_input_stage_8 = cm_rth_task) | (cm_hsd_input_stage_8 = cm_obstacle_avoidance_task))) -> (BLUEROV_SURFACED_stage_0 | (cm_hsd_input_stage_8 = cm_loiter_task) | (cm_hsd_input_stage_8 = cm_tracking_task) | (cm_hsd_input_stage_8 = cm_waypoint_task)));
INVARSPEC (!(((cm_hsd_input_stage_8 = cm_surface_task) | (cm_hsd_input_stage_8 = cm_rth_task) | (cm_hsd_input_stage_8 = cm_obstacle_avoidance_task))) -> ((cm_hsd_input_stage_8 = cm_loiter_task) | (cm_hsd_input_stage_8 = cm_tracking_task) | (cm_hsd_input_stage_8 = cm_waypoint_task)));
INVARSPEC (!(((cm_hsd_input_stage_8 = cm_surface_task) | (cm_hsd_input_stage_8 = cm_rth_task) | (cm_hsd_input_stage_8 = cm_obstacle_avoidance_task))) -> (BLUEROV_SURFACED_stage_0 | ((bb_mission_stage_1 = pipe_following) & bb_pipe_lost_warning_stage_1 & (cm_hsd_input_stage_8 = cm_loiter_task)) | ((bb_mission_stage_1 = pipe_following) & !(bb_pipe_lost_warning_stage_1) & (cm_hsd_input_stage_8 = cm_tracking_task)) | ((bb_mission_stage_1 = waypoint_following) & (cm_hsd_input_stage_8 = cm_waypoint_task))));
INVARSPEC ((speed_min_task.active) -> !((speed_max_task.active)));
INVARSPEC ((speed_max_task.active) -> !((speed_min_task.active)));
INVARSPEC !((loiter_task_1.active));
INVARSPEC (!(BLUEROV_SURFACED_stage_0) -> ((count((surface_task.active), (surface_task_1.active), (rth_task.active), (loiter_task.active), (tracking_task.active), (waypoint_task.active)) = 1) | (cm_hsd_input_stage_8 = cm_obstacle_avoidance_task)));
INVARSPEC !(next_mission_stage_2);
MODULE define_nodes
	DEFINE
		BlueROV := 0;
		topics2bb := 1;
		battery2bb := 2;
		rth2bb := 3;
		geofence2bb := 4;
		lec2_am_r_2bb := 5;
		lec2_am_l_2bb := 6;
		pipe_lost2bb := 7;
		sensor_failure2bb := 8;
		waypoints_completed2bb := 9;
		fls2bb := 10;
		fls_warning2bb := 11;
		rtreach2bb := 12;
		rtreach_unsafe_value2bb := 13;
		rtreach_index2bb := 14;
		home2bb := 15;
		dd_tasks := 16;
		dd_lec_task := 17;
		reallocate_check := 18;
		reallocate_check_1 := 19;
		is_reallocation_requested := 20;
		reallocate_task := 21;
		mission_end := 22;
		confirm_mission_ended := 23;
		waypoint_mission_end := 24;
		is_waypoint_requested := 25;
		check_waypoints_completed := 26;
		pipe_tracking_misison_end := 27;
		is_track_pipe_mission_requested := 28;
		failure_node := 29;
		next_mission := 30;
		mission_server := 31;
		obstacle_avoidance := 32;
		priorities := 33;
		emergency_stop_check := 34;
		emergency_stop_check_1 := 35;
		emergency_stop_fs := 36;
		emergency_stop_tasks := 37;
		emergency_stop_task := 38;
		surface_task := 39;
		obstacle_avoidance_required := 40;
		failsafe_surface := 41;
		failsafe_triggered := 42;
		battery_low_fs := 43;
		check_sensor_failure := 44;
		obstacle_standoff_fs := 45;
		rth_surface := 46;
		rth_needed := 47;
		check_rth := 48;
		check_geofence := 49;
		check_surface := 50;
		surface_task_1 := 51;
		rth := 52;
		rth_needed_1 := 53;
		check_rth_1 := 54;
		check_geofence_1 := 55;
		rth_task := 56;
		pipe_lost_selector := 57;
		pipe_lost_selector_1 := 58;
		check_pipe_lost := 59;
		loiter_task := 60;
		track_pipe_mission := 61;
		is_track_pipe_mission_requested_1 := 62;
		tracking_task := 63;
		lec2am_speed_cmd := 64;
		speed_min := 65;
		speed_warning := 66;
		check_lec2am_ls := 67;
		check_lec2am_rs := 68;
		speed_min_task := 69;
		speed_max_task := 70;
		waypoint_mission := 71;
		is_waypoint_requested_1 := 72;
		waypoint_task := 73;
		loiter_task_1 := 74;
		publish_HSD_command := 75;
MODULE composite_selector_without_memory_4(child_0, child_1, child_2, child_3)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				!(child_0.internal_status = failure) : child_0.internal_status;
				!(child_1.internal_status = failure) : child_1.internal_status;
				!(child_2.internal_status = failure) : child_2.internal_status;
				!(child_3.internal_status = failure) : child_3.internal_status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
		child_2.active := child_1.status = failure;
		child_3.active := child_2.status = failure;
MODULE composite_selector_without_memory_8(child_0, child_1, child_2, child_3, child_4, child_5, child_6, child_7)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				!(child_0.internal_status = failure) : child_0.internal_status;
				!(child_1.internal_status = failure) : child_1.internal_status;
				!(child_2.internal_status = failure) : child_2.internal_status;
				!(child_3.internal_status = failure) : child_3.internal_status;
				!(child_4.internal_status = failure) : child_4.internal_status;
				!(child_5.internal_status = failure) : child_5.internal_status;
				!(child_6.internal_status = failure) : child_6.internal_status;
				!(child_7.internal_status = failure) : child_7.internal_status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
		child_2.active := child_1.status = failure;
		child_3.active := child_2.status = failure;
		child_4.active := child_3.status = failure;
		child_5.active := child_4.status = failure;
		child_6.active := child_5.status = failure;
		child_7.active := child_6.status = failure;
MODULE composite_sequence_with_partial_memory_3(child_0, child_1, child_2, resume_point)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				(0 >= resume_point) & !(child_0.internal_status = success) : child_0.internal_status;
				(1 >= resume_point) & !(child_1.internal_status = success) : child_1.internal_status;
				(2 >= resume_point) & !(child_2.internal_status = success) : child_2.internal_status;
				TRUE : success;
			esac;
		child_0.active := active & (0 >= resume_point);
		child_1.active := active & ((1 >= resume_point) & ((1 = resume_point) | (child_0.status = success)));
		child_2.active := active & ((2 >= resume_point) & ((2 = resume_point) | (child_1.status = success)));
MODULE composite_sequence_with_partial_memory_2(child_0, child_1, resume_point)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				(0 >= resume_point) & !(child_0.internal_status = success) : child_0.internal_status;
				(1 >= resume_point) & !(child_1.internal_status = success) : child_1.internal_status;
				TRUE : success;
			esac;
		child_0.active := active & (0 >= resume_point);
		child_1.active := active & ((1 >= resume_point) & ((1 = resume_point) | (child_0.status = success)));
MODULE composite_parallel_success_on_all_without_memory_7(child_0, child_1, child_2, child_3, child_4, child_5, child_6)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				(child_0.internal_status = failure) : failure;
				(child_1.internal_status = failure) : failure;
				(child_2.internal_status = failure) : failure;
				(child_3.internal_status = failure) : failure;
				(child_4.internal_status = failure) : failure;
				(child_5.internal_status = failure) : failure;
				(child_6.internal_status = failure) : failure;
				!(child_0.internal_status = success) : child_0.internal_status;
				!(child_1.internal_status = success) : child_1.internal_status;
				!(child_2.internal_status = success) : child_2.internal_status;
				!(child_3.internal_status = success) : child_3.internal_status;
				!(child_4.internal_status = success) : child_4.internal_status;
				!(child_5.internal_status = success) : child_5.internal_status;
				!(child_6.internal_status = success) : child_6.internal_status;
				TRUE : success;
			esac;
		child_0.active := active;
		child_1.active := active;
		child_2.active := active;
		child_3.active := active;
		child_4.active := active;
		child_5.active := active;
		child_6.active := active;
MODULE composite_parallel_success_on_all_without_memory_14(child_0, child_1, child_2, child_3, child_4, child_5, child_6, child_7, child_8, child_9, child_10, child_11, child_12, child_13)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				(child_0.internal_status = failure) : failure;
				(child_1.internal_status = failure) : failure;
				(child_2.internal_status = failure) : failure;
				(child_3.internal_status = failure) : failure;
				(child_4.internal_status = failure) : failure;
				(child_5.internal_status = failure) : failure;
				(child_6.internal_status = failure) : failure;
				(child_7.internal_status = failure) : failure;
				(child_8.internal_status = failure) : failure;
				(child_9.internal_status = failure) : failure;
				(child_10.internal_status = failure) : failure;
				(child_11.internal_status = failure) : failure;
				(child_12.internal_status = failure) : failure;
				(child_13.internal_status = failure) : failure;
				!(child_0.internal_status = success) : child_0.internal_status;
				!(child_1.internal_status = success) : child_1.internal_status;
				!(child_2.internal_status = success) : child_2.internal_status;
				!(child_3.internal_status = success) : child_3.internal_status;
				!(child_4.internal_status = success) : child_4.internal_status;
				!(child_5.internal_status = success) : child_5.internal_status;
				!(child_6.internal_status = success) : child_6.internal_status;
				!(child_7.internal_status = success) : child_7.internal_status;
				!(child_8.internal_status = success) : child_8.internal_status;
				!(child_9.internal_status = success) : child_9.internal_status;
				!(child_10.internal_status = success) : child_10.internal_status;
				!(child_11.internal_status = success) : child_11.internal_status;
				!(child_12.internal_status = success) : child_12.internal_status;
				!(child_13.internal_status = success) : child_13.internal_status;
				TRUE : success;
			esac;
		child_0.active := active;
		child_1.active := active;
		child_2.active := active;
		child_3.active := active;
		child_4.active := active;
		child_5.active := active;
		child_6.active := active;
		child_7.active := active;
		child_8.active := active;
		child_9.active := active;
		child_10.active := active;
		child_11.active := active;
		child_12.active := active;
		child_13.active := active;
MODULE decorator_X_is_Y(child_0, incoming_status, outgoing_status)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				child_0.internal_status = incoming_status : outgoing_status;
				TRUE : child_0.internal_status;
			esac;
		child_0.active :=
			case
				!(active) : FALSE;
				TRUE : TRUE;
			esac;
MODULE composite_selector_without_memory_2(child_0, child_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				!(child_0.internal_status = failure) : child_0.internal_status;
				!(child_1.internal_status = failure) : child_1.internal_status;
				TRUE : failure;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = failure;
MODULE battery2bb_module(battery2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := battery2bb_update_success_stage_1 ? success : running;
MODULE rth2bb_module(rth2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := rth2bb_update_success_stage_1 ? success : running;
MODULE geofence2bb_module(geofence2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := geofence2bb_update_success_stage_1 ? success : running;
MODULE lec2_am_r_2bb_module(lec2_am_r_2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := lec2_am_r_2bb_update_success_stage_1 ? success : running;
MODULE lec2_am_l_2bb_module(lec2_am_l_2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := lec2_am_l_2bb_update_success_stage_1 ? success : running;
MODULE pipe_lost2bb_module(pipe_lost2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := pipe_lost2bb_update_success_stage_1 ? success : running;
MODULE sensor_failure2bb_module(sensor_failure2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := sensor_failure2bb_update_success_stage_1 ? success : running;
MODULE waypoints_completed2bb_module(waypoints_completed2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := waypoints_completed2bb_update_success_stage_1 ? success : running;
MODULE fls2bb_module(fls2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := fls2bb_update_success_stage_1 ? success : running;
MODULE fls_warning2bb_module(fls_warning2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := fls_warning2bb_update_success_stage_1 ? success : running;
MODULE rtreach2bb_module(rtreach2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := rtreach2bb_update_success_stage_1 ? success : running;
MODULE rtreach_unsafe_value2bb_module(rtreach_unsafe_value2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := rtreach_unsafe_value2bb_update_success_stage_1 ? success : running;
MODULE rtreach_index2bb_module(rtreach_index2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := rtreach_index2bb_update_success_stage_1 ? success : running;
MODULE home2bb_module(home2bb_update_success_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := home2bb_update_success_stage_1 ? success : running;
MODULE is_reallocation_requested_module(dd_xy_axis_degradation_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (dd_xy_axis_degradation_stage_1 = FALSE) ? success : failure;
MODULE is_waypoint_requested_module(bb_mission_stage_0)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_mission_stage_0 = waypoint_following) ? success : failure;
MODULE check_waypoints_completed_module(bb_waypoints_completed_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_waypoints_completed_stage_1 = TRUE) ? success : failure;
MODULE is_track_pipe_mission_requested_module(bb_mission_stage_0)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_mission_stage_0 = pipe_following) ? success : failure;
MODULE emergency_stop_fs_module(emergency_stop_warning_stage_2)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (emergency_stop_warning_stage_2 = FALSE) ? success : failure;
MODULE obstacle_avoidance_required_module(bb_obstacle_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_obstacle_warning_stage_1 = TRUE) ? success : failure;
MODULE battery_low_fs_module(battery_low_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (battery_low_warning_stage_1 = TRUE) ? success : failure;
MODULE check_sensor_failure_module(bb_sensor_failure_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_sensor_failure_warning_stage_1 = TRUE) ? success : failure;
MODULE obstacle_standoff_fs_module(obstacle_standoff_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (obstacle_standoff_warning_stage_1 = TRUE) ? success : failure;
MODULE check_rth_module(bb_rth_warning_stage_2)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_rth_warning_stage_2 = TRUE) ? success : failure;
MODULE check_geofence_module(bb_geofence_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_geofence_warning_stage_1 = TRUE) ? success : failure;
MODULE check_surface_module(bb_home_reached_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_home_reached_stage_1 = TRUE) ? success : failure;
MODULE check_rth_1_module(bb_rth_warning_stage_2)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_rth_warning_stage_2 = TRUE) ? success : failure;
MODULE check_geofence_1_module(bb_geofence_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_geofence_warning_stage_1 = TRUE) ? success : failure;
MODULE check_pipe_lost_module(bb_pipe_lost_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_pipe_lost_warning_stage_1 = FALSE) ? success : failure;
MODULE is_track_pipe_mission_requested_1_module(bb_mission_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_mission_stage_1 = pipe_following) ? success : failure;
MODULE check_lec2am_ls_module(lec2_am_l_speed_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (lec2_am_l_speed_warning_stage_1 = TRUE) ? success : failure;
MODULE check_lec2am_rs_module(lec2_am_r_speed_warning_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (lec2_am_r_speed_warning_stage_1 = TRUE) ? success : failure;
MODULE is_waypoint_requested_1_module(bb_mission_stage_1)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := (bb_mission_stage_1 = waypoint_following) ? success : failure;
MODULE failure_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
MODULE running_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := running;
