MODULE main
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		active := [node1.active, return_success.active, return_success_failure.active, return_failure.active];
		resume_from_here_in_subtree__node1 := -3;
		node1.active := TRUE;
	VAR
		node_names : define_nodes;
		blackboard : blackboard_module(node_names, active);
		node1 : composite_sequence_without_memory_3(return_success, return_success_failure, return_failure);
		return_failure : failure_DEFAULT_module();
		return_success : success_DEFAULT_module();
		return_success_failure : success_failure_DEFAULT_module();
	ASSIGN
MODULE define_nodes
	DEFINE
		node1 := 0;
		return_success := 1;
		return_success_failure := 2;
		return_failure := 3;
MODULE leaf_module(internal_status_module)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status_module.internal_status : invalid;
MODULE composite_sequence_without_memory_3(child_0, child_1, child_2)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status :=
			case
				!(child_0.internal_status = success) : child_0.internal_status;
				!(child_1.internal_status = success) : child_1.internal_status;
				!(child_2.internal_status = success) : child_2.internal_status;
				TRUE : success;
			esac;
		child_0.active := active;
		child_1.active := child_0.status = success;
		child_2.active := child_1.status = success;
MODULE success_failure_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
	VAR
		internal_status : {success, failure};
MODULE failure_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := failure;
MODULE success_DEFAULT_module
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
		status := active ? internal_status : invalid;
		internal_status := success;
MODULE blackboard_module(node_names, active)
	CONSTANTS
		success, failure, running, invalid;
	DEFINE
	FROZENVAR
	VAR
	ASSIGN

